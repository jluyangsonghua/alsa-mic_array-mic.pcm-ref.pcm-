!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACCESS	./src/pcm/pcm.c	1472;"	d	file:
ACTION	./include/search.h	/^ACTION;$/;"	t	typeref:enum:__anon43
AES32	./include/sound/hdspm.h	/^	AES32,$/;"	e	enum:hdspm_io_type
AIO	./include/sound/hdspm.h	/^	AIO,$/;"	e	enum:hdspm_io_type
ALISP_FLOAT	./src/alisp/alisp_local.h	/^	ALISP_FLOAT,$/;"	e	enum:alisp_tokens
ALISP_FLOATE	./src/alisp/alisp_local.h	/^	ALISP_FLOATE,$/;"	e	enum:alisp_tokens
ALISP_FREE_OBJ_POOL	./src/alisp/alisp_local.h	122;"	d
ALISP_IDENTIFIER	./src/alisp/alisp_local.h	/^	ALISP_IDENTIFIER,$/;"	e	enum:alisp_tokens
ALISP_INTEGER	./src/alisp/alisp_local.h	/^	ALISP_INTEGER,$/;"	e	enum:alisp_tokens
ALISP_LEX_BUF_MAX	./src/alisp/alisp_local.h	118;"	d
ALISP_MAX_REFS	./src/alisp/alisp_local.h	52;"	d
ALISP_MAX_REFS_LIMIT	./src/alisp/alisp_local.h	53;"	d
ALISP_OBJ_CONS	./src/alisp/alisp_local.h	/^	ALISP_OBJ_CONS,$/;"	e	enum:alisp_objects
ALISP_OBJ_FLOAT	./src/alisp/alisp_local.h	/^	ALISP_OBJ_FLOAT,$/;"	e	enum:alisp_objects
ALISP_OBJ_IDENTIFIER	./src/alisp/alisp_local.h	/^	ALISP_OBJ_IDENTIFIER,$/;"	e	enum:alisp_objects
ALISP_OBJ_INTEGER	./src/alisp/alisp_local.h	/^	ALISP_OBJ_INTEGER,$/;"	e	enum:alisp_objects
ALISP_OBJ_LAST_SEARCH	./src/alisp/alisp_local.h	/^	ALISP_OBJ_LAST_SEARCH = ALISP_OBJ_CONS,$/;"	e	enum:alisp_objects
ALISP_OBJ_NIL	./src/alisp/alisp_local.h	/^	ALISP_OBJ_NIL,$/;"	e	enum:alisp_objects
ALISP_OBJ_PAIR_HASH_MASK	./src/alisp/alisp_local.h	121;"	d
ALISP_OBJ_PAIR_HASH_SHIFT	./src/alisp/alisp_local.h	119;"	d
ALISP_OBJ_PAIR_HASH_SIZE	./src/alisp/alisp_local.h	120;"	d
ALISP_OBJ_POINTER	./src/alisp/alisp_local.h	/^	ALISP_OBJ_POINTER,$/;"	e	enum:alisp_objects
ALISP_OBJ_STRING	./src/alisp/alisp_local.h	/^	ALISP_OBJ_STRING,$/;"	e	enum:alisp_objects
ALISP_OBJ_T	./src/alisp/alisp_local.h	/^	ALISP_OBJ_T,$/;"	e	enum:alisp_objects
ALISP_REFS_MASK	./src/alisp/alisp_local.h	50;"	d
ALISP_REFS_SHIFT	./src/alisp/alisp_local.h	51;"	d
ALISP_STRING	./src/alisp/alisp_local.h	/^	ALISP_STRING$/;"	e	enum:alisp_tokens
ALISP_TYPE_MASK	./src/alisp/alisp_local.h	48;"	d
ALISP_TYPE_SHIFT	./src/alisp/alisp_local.h	49;"	d
ALOAD_DEVICE_DIRECTORY	./include/config.h	6;"	d
ALSA_CHECK	./test/lsb/test.h	17;"	d
ALSA_CONFIG_DIR	./include/config.h	11;"	d
ALSA_CONFIG_PATH_DEFAULT	./src/conf.c	3202;"	d	file:
ALSA_CONFIG_PATH_VAR	./src/conf.c	3199;"	d	file:
ALSA_CONFIG_UCM_VAR	./src/ucm/parser.c	37;"	d	file:
ALSA_DEVICE_DIRECTORY	./include/config.h	19;"	d
ALSA_LIBRARY_BUILD	./include/local.h	103;"	d
ALSA_PCM_OLD_HW_PARAMS_API	./test/oldapi.c	29;"	d	file:
ALSA_PCM_OLD_SW_PARAMS_API	./test/oldapi.c	30;"	d	file:
ALSA_PLUGIN_DIR	./include/config.h	24;"	d
ALSA_USE_CASE_DIR	./src/ucm/ucm_local.h	44;"	d
ARCH_ADD	./src/pcm/pcm_dmix_generic.c	44;"	d	file:
ARCH_CMPXCHG	./src/pcm/pcm_dmix_generic.c	45;"	d	file:
ASM_NAME	./include/local.h	194;"	d
ATOMIC_INIT	./include/iatomic.h	1017;"	d
ATOMIC_INIT	./include/iatomic.h	1088;"	d
ATOMIC_INIT	./include/iatomic.h	1113;"	d
ATOMIC_INIT	./include/iatomic.h	20;"	d
ATOMIC_INIT	./include/iatomic.h	233;"	d
ATOMIC_INIT	./include/iatomic.h	395;"	d
ATOMIC_INIT	./include/iatomic.h	501;"	d
ATOMIC_INIT	./include/iatomic.h	689;"	d
ATOMIC_INIT	./include/iatomic.h	929;"	d
ATOMIC_SMP_LOCK	./include/iatomic.h	11;"	d
ATOMIC_SMP_LOCK	./include/iatomic.h	219;"	d
ATTRIBUTE_UNUSED	./include/global.h	51;"	d
A_C_00000000	./include/sound/emu10k1.h	197;"	d
A_C_00000001	./include/sound/emu10k1.h	198;"	d
A_C_00000002	./include/sound/emu10k1.h	199;"	d
A_C_00000003	./include/sound/emu10k1.h	200;"	d
A_C_00000004	./include/sound/emu10k1.h	201;"	d
A_C_00000008	./include/sound/emu10k1.h	202;"	d
A_C_00000010	./include/sound/emu10k1.h	203;"	d
A_C_00000020	./include/sound/emu10k1.h	204;"	d
A_C_00000100	./include/sound/emu10k1.h	205;"	d
A_C_00000800	./include/sound/emu10k1.h	207;"	d
A_C_00010000	./include/sound/emu10k1.h	206;"	d
A_C_00100000	./include/sound/emu10k1.h	218;"	d
A_C_10000000	./include/sound/emu10k1.h	208;"	d
A_C_20000000	./include/sound/emu10k1.h	209;"	d
A_C_40000000	./include/sound/emu10k1.h	210;"	d
A_C_4f1bbcdc	./include/sound/emu10k1.h	216;"	d
A_C_5a7ef9db	./include/sound/emu10k1.h	217;"	d
A_C_7fffffff	./include/sound/emu10k1.h	212;"	d
A_C_80000000	./include/sound/emu10k1.h	211;"	d
A_C_c0000000	./include/sound/emu10k1.h	215;"	d
A_C_fffffffe	./include/sound/emu10k1.h	214;"	d
A_C_ffffffff	./include/sound/emu10k1.h	213;"	d
A_EXTIN	./include/sound/emu10k1.h	94;"	d
A_EXTIN_AC97_L	./include/sound/emu10k1.h	160;"	d
A_EXTIN_AC97_R	./include/sound/emu10k1.h	161;"	d
A_EXTIN_ADC_L	./include/sound/emu10k1.h	168;"	d
A_EXTIN_ADC_R	./include/sound/emu10k1.h	169;"	d
A_EXTIN_AUX2_L	./include/sound/emu10k1.h	170;"	d
A_EXTIN_AUX2_R	./include/sound/emu10k1.h	171;"	d
A_EXTIN_LINE2_L	./include/sound/emu10k1.h	166;"	d
A_EXTIN_LINE2_R	./include/sound/emu10k1.h	167;"	d
A_EXTIN_OPT_SPDIF_L	./include/sound/emu10k1.h	164;"	d
A_EXTIN_OPT_SPDIF_R	./include/sound/emu10k1.h	165;"	d
A_EXTIN_SPDIF_CD_L	./include/sound/emu10k1.h	162;"	d
A_EXTIN_SPDIF_CD_R	./include/sound/emu10k1.h	163;"	d
A_EXTOUT	./include/sound/emu10k1.h	95;"	d
A_EXTOUT_AC97_L	./include/sound/emu10k1.h	190;"	d
A_EXTOUT_AC97_R	./include/sound/emu10k1.h	191;"	d
A_EXTOUT_ACENTER	./include/sound/emu10k1.h	184;"	d
A_EXTOUT_ADC_CAP_L	./include/sound/emu10k1.h	192;"	d
A_EXTOUT_ADC_CAP_R	./include/sound/emu10k1.h	193;"	d
A_EXTOUT_AFRONT_L	./include/sound/emu10k1.h	182;"	d
A_EXTOUT_AFRONT_R	./include/sound/emu10k1.h	183;"	d
A_EXTOUT_ALFE	./include/sound/emu10k1.h	185;"	d
A_EXTOUT_AREAR_L	./include/sound/emu10k1.h	188;"	d
A_EXTOUT_AREAR_R	./include/sound/emu10k1.h	189;"	d
A_EXTOUT_ASIDE_L	./include/sound/emu10k1.h	186;"	d
A_EXTOUT_ASIDE_R	./include/sound/emu10k1.h	187;"	d
A_EXTOUT_CENTER	./include/sound/emu10k1.h	176;"	d
A_EXTOUT_FRONT_L	./include/sound/emu10k1.h	174;"	d
A_EXTOUT_FRONT_R	./include/sound/emu10k1.h	175;"	d
A_EXTOUT_HEADPHONE_L	./include/sound/emu10k1.h	178;"	d
A_EXTOUT_HEADPHONE_R	./include/sound/emu10k1.h	179;"	d
A_EXTOUT_LFE	./include/sound/emu10k1.h	177;"	d
A_EXTOUT_MIC_CAP	./include/sound/emu10k1.h	194;"	d
A_EXTOUT_REAR_L	./include/sound/emu10k1.h	180;"	d
A_EXTOUT_REAR_R	./include/sound/emu10k1.h	181;"	d
A_FXBUS	./include/sound/emu10k1.h	93;"	d
A_GPR	./include/sound/emu10k1.h	96;"	d
A_GPR_ACCU	./include/sound/emu10k1.h	219;"	d
A_GPR_COND	./include/sound/emu10k1.h	220;"	d
A_GPR_DBAC	./include/sound/emu10k1.h	224;"	d
A_GPR_DBACE	./include/sound/emu10k1.h	225;"	d
A_GPR_IRQ	./include/sound/emu10k1.h	223;"	d
A_GPR_NOISE0	./include/sound/emu10k1.h	221;"	d
A_GPR_NOISE1	./include/sound/emu10k1.h	222;"	d
BAR_WIDTH	./src/pcm/scopes/level.c	25;"	d	file:
BUF_MATCHES	./test/lsb/midi_event.c	45;"	d	file:
BUF_SIZE	./src/control/namehint.c	208;"	d	file:
BUGGY_GCC	./src/pcm/pcm_lfloat.c	41;"	d	file:
BUILD_HWDEP	./include/config.h	28;"	d
BUILD_MIXER	./include/config.h	31;"	d
BUILD_PCM	./include/config.h	34;"	d
BUILD_PCM_NONLINEAR	./src/pcm/pcm_plug.c	175;"	d	file:
BUILD_PCM_PLUGIN_ADPCM	./include/config.h	37;"	d
BUILD_PCM_PLUGIN_ALAW	./include/config.h	40;"	d
BUILD_PCM_PLUGIN_LFLOAT	./include/config.h	43;"	d
BUILD_PCM_PLUGIN_MMAP_EMUL	./include/config.h	46;"	d
BUILD_PCM_PLUGIN_MULAW	./include/config.h	49;"	d
BUILD_PCM_PLUGIN_RATE	./include/config.h	52;"	d
BUILD_PCM_PLUGIN_ROUTE	./include/config.h	55;"	d
BW	./test/latency.c	/^float lfo,dlfo,fs,fc,BW,C,D,a0,a1,a2,b1,b2,*x[3],*y[3];$/;"	v
BWIDTH_KEY	./src/pcm/pcm_file.c	47;"	d	file:
Big_Briar	./test/midifile.h	112;"	d
C	./test/latency.c	/^float lfo,dlfo,fs,fc,BW,C,D,a0,a1,a2,b1,b2,*x[3],*y[3];$/;"	v
CC_REG_BORROW	./include/sound/emu10k1.h	100;"	d
CC_REG_MINUS	./include/sound/emu10k1.h	101;"	d
CC_REG_NONZERO	./include/sound/emu10k1.h	104;"	d
CC_REG_NORMALIZED	./include/sound/emu10k1.h	99;"	d
CC_REG_SATURATE	./include/sound/emu10k1.h	103;"	d
CC_REG_ZERO	./include/sound/emu10k1.h	102;"	d
CHANNELS_KEY	./src/pcm/pcm_file.c	46;"	d	file:
CHECK_BASIC	./src/mixer/simple.c	83;"	d	file:
CHECK_DIR	./src/mixer/simple.c	89;"	d	file:
CHECK_DIR_CHN	./src/mixer/simple.c	96;"	d	file:
CHECK_ENUM	./src/mixer/simple.c	105;"	d	file:
CHECK_SANITY	./include/local.h	173;"	d
CHECK_SANITY	./include/local.h	178;"	d
COND_CAPS	./src/mixer/simple.c	109;"	d	file:
CONV24_END	./src/pcm/pcm_linear.c	237;"	d	file:
CONV24_END	./src/pcm/pcm_linear.c	239;"	d	file:
CONV24_END	./src/pcm/pcm_route.c	216;"	d	file:
CONV24_END	./src/pcm/pcm_route.c	218;"	d	file:
CONV24_LABELS	./src/pcm/pcm_linear.c	216;"	d	file:
CONV24_LABELS	./src/pcm/pcm_linear.c	218;"	d	file:
CONV24_LABELS	./src/pcm/pcm_route.c	182;"	d	file:
CONV24_LABELS	./src/pcm/pcm_route.c	184;"	d	file:
CONVERT_AREA	./src/pcm/pcm_softvol.c	180;"	d	file:
CONVERT_AREA_S24_3LE	./src/pcm/pcm_softvol.c	213;"	d	file:
CONV_END	./src/pcm/pcm_linear.c	201;"	d	file:
CONV_END	./src/pcm/pcm_linear.c	203;"	d	file:
CONV_END	./src/pcm/pcm_route.c	164;"	d	file:
CONV_END	./src/pcm/pcm_route.c	166;"	d	file:
CONV_LABELS	./src/pcm/pcm_linear.c	182;"	d	file:
CONV_LABELS	./src/pcm/pcm_linear.c	184;"	d	file:
CONV_LABELS	./src/pcm/pcm_route.c	132;"	d	file:
CONV_LABELS	./src/pcm/pcm_route.c	134;"	d	file:
COPY_SLAVE	./src/pcm/pcm_direct.c	1174;"	d	file:
COPY_SLAVE	./src/pcm/pcm_direct.c	1210;"	d	file:
COPY_SLAVE	./src/pcm/pcm_direct.c	809;"	d	file:
COPY_SLAVE	./src/pcm/pcm_direct.c	844;"	d	file:
CTL_CAPTURE_ENUM	./src/mixer/simple_none.c	/^	CTL_CAPTURE_ENUM,$/;"	e	enum:_selem_ctl_type	file:
CTL_CAPTURE_ROUTE	./src/mixer/simple_none.c	/^	CTL_CAPTURE_ROUTE,$/;"	e	enum:_selem_ctl_type	file:
CTL_CAPTURE_SOURCE	./src/mixer/simple_none.c	/^	CTL_CAPTURE_SOURCE,$/;"	e	enum:_selem_ctl_type	file:
CTL_CAPTURE_SWITCH	./src/mixer/simple_none.c	/^	CTL_CAPTURE_SWITCH,$/;"	e	enum:_selem_ctl_type	file:
CTL_CAPTURE_VOLUME	./src/mixer/simple_none.c	/^	CTL_CAPTURE_VOLUME,$/;"	e	enum:_selem_ctl_type	file:
CTL_GLOBAL_ENUM	./src/mixer/simple_none.c	/^	CTL_GLOBAL_ENUM,$/;"	e	enum:_selem_ctl_type	file:
CTL_GLOBAL_ROUTE	./src/mixer/simple_none.c	/^	CTL_GLOBAL_ROUTE,$/;"	e	enum:_selem_ctl_type	file:
CTL_GLOBAL_SWITCH	./src/mixer/simple_none.c	/^	CTL_GLOBAL_SWITCH,$/;"	e	enum:_selem_ctl_type	file:
CTL_GLOBAL_VOLUME	./src/mixer/simple_none.c	/^	CTL_GLOBAL_VOLUME,$/;"	e	enum:_selem_ctl_type	file:
CTL_LAST	./src/mixer/simple_none.c	/^	CTL_LAST = CTL_CAPTURE_SOURCE,$/;"	e	enum:_selem_ctl_type	file:
CTL_PLAYBACK_ENUM	./src/mixer/simple_none.c	/^	CTL_PLAYBACK_ENUM,$/;"	e	enum:_selem_ctl_type	file:
CTL_PLAYBACK_ROUTE	./src/mixer/simple_none.c	/^	CTL_PLAYBACK_ROUTE,$/;"	e	enum:_selem_ctl_type	file:
CTL_PLAYBACK_SWITCH	./src/mixer/simple_none.c	/^	CTL_PLAYBACK_SWITCH,$/;"	e	enum:_selem_ctl_type	file:
CTL_PLAYBACK_VOLUME	./src/mixer/simple_none.c	/^	CTL_PLAYBACK_VOLUME,$/;"	e	enum:_selem_ctl_type	file:
CTL_SHM_DATA_MAXLEN	./include/aserver.h	145;"	d
CTL_SHM_SIZE	./include/aserver.h	144;"	d
CTL_SINGLE	./src/mixer/simple_none.c	/^	CTL_SINGLE,$/;"	e	enum:_selem_ctl_type	file:
C_00000000	./include/sound/emu10k1.h	59;"	d
C_00000001	./include/sound/emu10k1.h	60;"	d
C_00000002	./include/sound/emu10k1.h	61;"	d
C_00000003	./include/sound/emu10k1.h	62;"	d
C_00000004	./include/sound/emu10k1.h	63;"	d
C_00000008	./include/sound/emu10k1.h	64;"	d
C_00000010	./include/sound/emu10k1.h	65;"	d
C_00000020	./include/sound/emu10k1.h	66;"	d
C_00000100	./include/sound/emu10k1.h	67;"	d
C_00010000	./include/sound/emu10k1.h	68;"	d
C_00080000	./include/sound/emu10k1.h	69;"	d
C_00100000	./include/sound/emu10k1.h	80;"	d
C_10000000	./include/sound/emu10k1.h	70;"	d
C_20000000	./include/sound/emu10k1.h	71;"	d
C_40000000	./include/sound/emu10k1.h	72;"	d
C_4f1bbcdc	./include/sound/emu10k1.h	78;"	d
C_5a7ef9db	./include/sound/emu10k1.h	79;"	d
C_7fffffff	./include/sound/emu10k1.h	74;"	d
C_80000000	./include/sound/emu10k1.h	73;"	d
C_c0000000	./include/sound/emu10k1.h	77;"	d
C_fffffffe	./include/sound/emu10k1.h	76;"	d
C_ffffffff	./include/sound/emu10k1.h	75;"	d
Copyright	./src/pcm/ladspa.h	/^  const char * Copyright;$/;"	m	struct:_LADSPA_Descriptor
D	./test/latency.c	/^float lfo,dlfo,fs,fc,BW,C,D,a0,a1,a2,b1,b2,*x[3],*y[3];$/;"	v
DECAY_MS	./src/pcm/scopes/level.c	27;"	d	file:
DECODE	./test/lsb/midi_event.c	44;"	d	file:
DECODES_TO	./test/lsb/midi_event.c	46;"	d	file:
DEFAULT_TMPBUF_SIZE	./src/seq/seq_local.h	33;"	d
DEST_CLIENT_NUMBER	./test/playmidi1.c	58;"	d	file:
DEST_PORT_NUMBER	./test/playmidi1.c	59;"	d	file:
DIRECT_IPC_SEMS	./src/pcm/pcm_direct.h	24;"	d
DIRECT_IPC_SEM_CLIENT	./src/pcm/pcm_direct.h	25;"	d
Digiface	./include/sound/hdsp.h	/^	Digiface,$/;"	e	enum:__anon14
EMU10K1_CARD_CREATIVE	./include/sound/emu10k1.h	32;"	d
EMU10K1_CARD_EMUAPS	./include/sound/emu10k1.h	33;"	d
EMU10K1_CTL_ELEM_IFACE_MIXER	./include/sound/emu10k1.h	/^	EMU10K1_CTL_ELEM_IFACE_MIXER = 2,	\/* virtual mixer device *\/$/;"	e	enum:emu10k1_ctl_elem_iface
EMU10K1_CTL_ELEM_IFACE_PCM	./include/sound/emu10k1.h	/^	EMU10K1_CTL_ELEM_IFACE_PCM = 3,		\/* PCM device *\/$/;"	e	enum:emu10k1_ctl_elem_iface
EMU10K1_DBG_CONDITION_CODE	./include/sound/emu10k1.h	233;"	d
EMU10K1_DBG_SATURATION_ADDR	./include/sound/emu10k1.h	230;"	d
EMU10K1_DBG_SATURATION_OCCURED	./include/sound/emu10k1.h	229;"	d
EMU10K1_DBG_SINGLE_STEP	./include/sound/emu10k1.h	231;"	d
EMU10K1_DBG_SINGLE_STEP_ADDR	./include/sound/emu10k1.h	234;"	d
EMU10K1_DBG_STEP	./include/sound/emu10k1.h	232;"	d
EMU10K1_DBG_ZC	./include/sound/emu10k1.h	228;"	d
EMU10K1_FX8010_PCM_COUNT	./include/sound/emu10k1.h	35;"	d
EMU10K1_GPR_TRANSLATION_BASS	./include/sound/emu10k1.h	256;"	d
EMU10K1_GPR_TRANSLATION_NONE	./include/sound/emu10k1.h	254;"	d
EMU10K1_GPR_TRANSLATION_ONOFF	./include/sound/emu10k1.h	258;"	d
EMU10K1_GPR_TRANSLATION_TABLE100	./include/sound/emu10k1.h	255;"	d
EMU10K1_GPR_TRANSLATION_TREBLE	./include/sound/emu10k1.h	257;"	d
ENCODE	./test/lsb/midi_event.c	184;"	d	file:
ENCODE_BYTE	./test/lsb/midi_event.c	341;"	d	file:
ENTER	./include/search.h	/^    ENTER$/;"	e	enum:__anon43
ENTRY	./include/search.h	/^ENTRY;$/;"	t	typeref:struct:entry
ERROR	./aserver/aserver.c	41;"	d	file:
ERROR	./aserver/aserver.c	47;"	d	file:
ETRAM_ADDR	./include/sound/emu10k1.h	91;"	d
ETRAM_DATA	./include/sound/emu10k1.h	89;"	d
EVENT	./src/control/control.c	926;"	d	file:
EXTIN	./include/sound/emu10k1.h	57;"	d
EXTIN_AC97_L	./include/sound/emu10k1.h	125;"	d
EXTIN_AC97_R	./include/sound/emu10k1.h	126;"	d
EXTIN_COAX_SPDIF_L	./include/sound/emu10k1.h	135;"	d
EXTIN_COAX_SPDIF_R	./include/sound/emu10k1.h	136;"	d
EXTIN_LINE1_L	./include/sound/emu10k1.h	133;"	d
EXTIN_LINE1_R	./include/sound/emu10k1.h	134;"	d
EXTIN_LINE2_L	./include/sound/emu10k1.h	137;"	d
EXTIN_LINE2_R	./include/sound/emu10k1.h	138;"	d
EXTIN_SPDIF_CD_L	./include/sound/emu10k1.h	127;"	d
EXTIN_SPDIF_CD_R	./include/sound/emu10k1.h	128;"	d
EXTIN_TOSLINK_L	./include/sound/emu10k1.h	131;"	d
EXTIN_TOSLINK_R	./include/sound/emu10k1.h	132;"	d
EXTIN_ZOOM_L	./include/sound/emu10k1.h	129;"	d
EXTIN_ZOOM_R	./include/sound/emu10k1.h	130;"	d
EXTOUT	./include/sound/emu10k1.h	58;"	d
EXTOUT_AC97_CENTER	./include/sound/emu10k1.h	145;"	d
EXTOUT_AC97_L	./include/sound/emu10k1.h	141;"	d
EXTOUT_AC97_LFE	./include/sound/emu10k1.h	146;"	d
EXTOUT_AC97_R	./include/sound/emu10k1.h	142;"	d
EXTOUT_AC97_REAR_L	./include/sound/emu10k1.h	154;"	d
EXTOUT_AC97_REAR_R	./include/sound/emu10k1.h	155;"	d
EXTOUT_ACENTER	./include/sound/emu10k1.h	156;"	d
EXTOUT_ADC_CAP_L	./include/sound/emu10k1.h	151;"	d
EXTOUT_ADC_CAP_R	./include/sound/emu10k1.h	152;"	d
EXTOUT_ALFE	./include/sound/emu10k1.h	157;"	d
EXTOUT_HEADPHONE_L	./include/sound/emu10k1.h	147;"	d
EXTOUT_HEADPHONE_R	./include/sound/emu10k1.h	148;"	d
EXTOUT_MIC_CAP	./include/sound/emu10k1.h	153;"	d
EXTOUT_REAR_L	./include/sound/emu10k1.h	149;"	d
EXTOUT_REAR_R	./include/sound/emu10k1.h	150;"	d
EXTOUT_TOSLINK_L	./include/sound/emu10k1.h	143;"	d
EXTOUT_TOSLINK_R	./include/sound/emu10k1.h	144;"	d
F	./test/playmidi1.c	/^static FILE *F;$/;"	v	file:
FAST_PCM_STATE	./src/pcm/pcm_hw.c	114;"	d	file:
FAST_PCM_TSTAMP	./src/pcm/pcm_hw.c	116;"	d	file:
FA_card_info	./src/alisp/alisp_snd.c	/^static struct alisp_object * FA_card_info(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_hctl_elem_info	./src/alisp/alisp_snd.c	/^static struct alisp_object * FA_hctl_elem_info(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_hctl_elem_read	./src/alisp/alisp_snd.c	/^static struct alisp_object * FA_hctl_elem_read(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_hctl_elem_write	./src/alisp/alisp_snd.c	/^static struct alisp_object * FA_hctl_elem_write(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_hctl_find_elem	./src/alisp/alisp_snd.c	/^static struct alisp_object * FA_hctl_find_elem(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_int_int_strp	./src/alisp/alisp_snd.c	/^static struct alisp_object * FA_int_int_strp(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_int_intp	./src/alisp/alisp_snd.c	/^static struct alisp_object * FA_int_intp(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_int_p	./src/alisp/alisp_snd.c	/^static struct alisp_object * FA_int_p(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_int_pp_p	./src/alisp/alisp_snd.c	/^static struct alisp_object * FA_int_pp_p(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_int_pp_strp_int	./src/alisp/alisp_snd.c	/^static struct alisp_object * FA_int_pp_strp_int(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_int_str	./src/alisp/alisp_snd.c	/^static struct alisp_object * FA_int_str(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_p_p	./src/alisp/alisp_snd.c	/^static struct alisp_object * FA_p_p(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_pcm_info	./src/alisp/alisp_snd.c	/^static struct alisp_object * FA_pcm_info(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FA_str_p	./src/alisp/alisp_snd.c	/^static struct alisp_object * FA_str_p(struct alisp_instance * instance, struct acall_table * item, struct alisp_object * args)$/;"	f	file:
FILTERSWEEP_LFO_CENTER	./test/latency.c	381;"	d	file:
FILTERSWEEP_LFO_DEPTH	./test/latency.c	382;"	d	file:
FILTERSWEEP_LFO_FREQ	./test/latency.c	383;"	d	file:
FILTER_BANDWIDTH	./test/latency.c	384;"	d	file:
FIND	./include/search.h	/^    FIND,$/;"	e	enum:__anon43
FIXED_EV	./src/seq/seq_event.c	11;"	d	file:
FLOAT	./src/pcm/pcm_route.c	/^	enum {UINT32=0, UINT64=1, FLOAT=2} sum_idx;$/;"	e	enum:__anon141::__anon142	file:
FM_KEY_2OP	./include/sound/asound_fm.h	122;"	d
FM_KEY_4OP	./include/sound/asound_fm.h	123;"	d
FM_KEY_SBI	./include/sound/asound_fm.h	121;"	d
FORMAT	./src/pcm/pcm.c	1476;"	d	file:
FORMATD	./src/pcm/pcm.c	1479;"	d	file:
FORMAT_KEY	./src/pcm/pcm_file.c	48;"	d	file:
FREQUENCY	./src/pcm/pcm_meter.c	44;"	d	file:
FXBUS	./include/sound/emu10k1.h	56;"	d
FXBUS_MIDI_CHORUS	./include/sound/emu10k1.h	118;"	d
FXBUS_MIDI_LEFT	./include/sound/emu10k1.h	111;"	d
FXBUS_MIDI_REVERB	./include/sound/emu10k1.h	117;"	d
FXBUS_MIDI_RIGHT	./include/sound/emu10k1.h	112;"	d
FXBUS_PCM_CENTER	./include/sound/emu10k1.h	113;"	d
FXBUS_PCM_LEFT	./include/sound/emu10k1.h	107;"	d
FXBUS_PCM_LEFT_FRONT	./include/sound/emu10k1.h	115;"	d
FXBUS_PCM_LEFT_REAR	./include/sound/emu10k1.h	109;"	d
FXBUS_PCM_LEFT_SIDE	./include/sound/emu10k1.h	119;"	d
FXBUS_PCM_LFE	./include/sound/emu10k1.h	114;"	d
FXBUS_PCM_RIGHT	./include/sound/emu10k1.h	108;"	d
FXBUS_PCM_RIGHT_FRONT	./include/sound/emu10k1.h	116;"	d
FXBUS_PCM_RIGHT_REAR	./include/sound/emu10k1.h	110;"	d
FXBUS_PCM_RIGHT_SIDE	./include/sound/emu10k1.h	120;"	d
FXBUS_PT_LEFT	./include/sound/emu10k1.h	121;"	d
FXBUS_PT_RIGHT	./include/sound/emu10k1.h	122;"	d
F_SETSIG	./src/control/control_hw.c	38;"	d	file:
F_SETSIG	./src/pcm/pcm_hw.c	54;"	d	file:
F_acall	./src/alisp/alisp_snd.c	/^static struct alisp_object * F_acall(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_add	./src/alisp/alisp.c	/^static struct alisp_object * F_add(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_aerror	./src/alisp/alisp_snd.c	/^static struct alisp_object * F_aerror(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_ahandle	./src/alisp/alisp_snd.c	/^static struct alisp_object * F_ahandle(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_and	./src/alisp/alisp.c	/^static struct alisp_object * F_and(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_assoc	./src/alisp/alisp.c	/^struct alisp_object * F_assoc(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_assq	./src/alisp/alisp.c	/^struct alisp_object * F_assq(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_atom	./src/alisp/alisp.c	/^static struct alisp_object * F_atom(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_car	./src/alisp/alisp.c	/^static struct alisp_object * F_car(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_cdr	./src/alisp/alisp.c	/^static struct alisp_object * F_cdr(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_check_memory	./src/alisp/alisp.c	/^static struct alisp_object * F_check_memory(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_compare_strings	./src/alisp/alisp.c	/^struct alisp_object * F_compare_strings(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_concat	./src/alisp/alisp.c	/^static struct alisp_object * F_concat(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_cond	./src/alisp/alisp.c	/^static struct alisp_object * F_cond(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_cons	./src/alisp/alisp.c	/^static struct alisp_object * F_cons(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_defun	./src/alisp/alisp.c	/^static struct alisp_object * F_defun(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_div	./src/alisp/alisp.c	/^static struct alisp_object * F_div(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_dump_memory	./src/alisp/alisp.c	/^static struct alisp_object * F_dump_memory(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_dump_objects	./src/alisp/alisp.c	/^static struct alisp_object * F_dump_objects(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_eq	./src/alisp/alisp.c	/^static struct alisp_object * F_eq(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_equal	./src/alisp/alisp.c	/^static struct alisp_object * F_equal(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_eval	./src/alisp/alisp.c	/^static struct alisp_object * F_eval(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_exfun	./src/alisp/alisp.c	/^static struct alisp_object * F_exfun(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_format	./src/alisp/alisp.c	/^struct alisp_object * F_format(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_funcall	./src/alisp/alisp.c	/^static struct alisp_object * F_funcall(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_gc	./src/alisp/alisp.c	/^struct alisp_object * F_gc(struct alisp_instance *instance ATTRIBUTE_UNUSED, struct alisp_object * args ATTRIBUTE_UNUSED)$/;"	f
F_ge	./src/alisp/alisp.c	/^static struct alisp_object * F_ge(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_gt	./src/alisp/alisp.c	/^static struct alisp_object * F_gt(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_if	./src/alisp/alisp.c	/^static struct alisp_object * F_if(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_include	./src/alisp/alisp.c	/^struct alisp_object * F_include(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_le	./src/alisp/alisp.c	/^static struct alisp_object * F_le(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_list	./src/alisp/alisp.c	/^static struct alisp_object * F_list(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_lt	./src/alisp/alisp.c	/^static struct alisp_object * F_lt(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_mod	./src/alisp/alisp.c	/^static struct alisp_object * F_mod(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_mul	./src/alisp/alisp.c	/^static struct alisp_object * F_mul(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_not	./src/alisp/alisp.c	/^static struct alisp_object * F_not(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_nth	./src/alisp/alisp.c	/^struct alisp_object * F_nth(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_numeq	./src/alisp/alisp.c	/^static struct alisp_object * F_numeq(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_numneq	./src/alisp/alisp.c	/^static struct alisp_object * F_numneq(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_or	./src/alisp/alisp.c	/^static struct alisp_object * F_or(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_path	./src/alisp/alisp.c	/^struct alisp_object * F_path(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_princ	./src/alisp/alisp.c	/^static struct alisp_object * F_princ(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_prog1	./src/alisp/alisp.c	/^static struct alisp_object * F_prog1(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_prog2	./src/alisp/alisp.c	/^static struct alisp_object * F_prog2(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_progn	./src/alisp/alisp.c	/^static struct alisp_object * F_progn(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_quote	./src/alisp/alisp.c	/^static struct alisp_object * F_quote(struct alisp_instance *instance ATTRIBUTE_UNUSED, struct alisp_object * args)$/;"	f	file:
F_rassoc	./src/alisp/alisp.c	/^struct alisp_object * F_rassoc(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_rassq	./src/alisp/alisp.c	/^struct alisp_object * F_rassq(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_set	./src/alisp/alisp.c	/^static struct alisp_object * F_set(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_setq	./src/alisp/alisp.c	/^static struct alisp_object * F_setq(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_snderr	./src/alisp/alisp_snd.c	/^static struct alisp_object * F_snderr(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_stat_memory	./src/alisp/alisp.c	/^static struct alisp_object * F_stat_memory(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_string_to_float	./src/alisp/alisp.c	/^struct alisp_object * F_string_to_float(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_string_to_integer	./src/alisp/alisp.c	/^struct alisp_object * F_string_to_integer(struct alisp_instance *instance, struct alisp_object * args)$/;"	f
F_sub	./src/alisp/alisp.c	/^static struct alisp_object * F_sub(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_syserr	./src/alisp/alisp_snd.c	/^static struct alisp_object * F_syserr(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_unless	./src/alisp/alisp.c	/^static struct alisp_object * F_unless(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_unset	./src/alisp/alisp.c	/^static struct alisp_object * F_unset(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_unsetq	./src/alisp/alisp.c	/^static struct alisp_object * F_unsetq(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_when	./src/alisp/alisp.c	/^static struct alisp_object * F_when(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
F_while	./src/alisp/alisp.c	/^static struct alisp_object * F_while(struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
GET16_END	./src/pcm/pcm_adpcm.c	302;"	d	file:
GET16_END	./src/pcm/pcm_adpcm.c	304;"	d	file:
GET16_END	./src/pcm/pcm_alaw.c	208;"	d	file:
GET16_END	./src/pcm/pcm_alaw.c	210;"	d	file:
GET16_END	./src/pcm/pcm_mulaw.c	225;"	d	file:
GET16_END	./src/pcm/pcm_mulaw.c	227;"	d	file:
GET16_END	./src/pcm/pcm_rate.c	458;"	d	file:
GET16_END	./src/pcm/pcm_rate.c	460;"	d	file:
GET16_END	./src/pcm/pcm_rate_linear.c	111;"	d	file:
GET16_END	./src/pcm/pcm_rate_linear.c	113;"	d	file:
GET16_END	./src/pcm/pcm_rate_linear.c	229;"	d	file:
GET16_END	./src/pcm/pcm_rate_linear.c	231;"	d	file:
GET16_LABELS	./src/pcm/pcm_adpcm.c	277;"	d	file:
GET16_LABELS	./src/pcm/pcm_adpcm.c	279;"	d	file:
GET16_LABELS	./src/pcm/pcm_alaw.c	188;"	d	file:
GET16_LABELS	./src/pcm/pcm_alaw.c	190;"	d	file:
GET16_LABELS	./src/pcm/pcm_mulaw.c	205;"	d	file:
GET16_LABELS	./src/pcm/pcm_mulaw.c	207;"	d	file:
GET16_LABELS	./src/pcm/pcm_rate.c	437;"	d	file:
GET16_LABELS	./src/pcm/pcm_rate.c	439;"	d	file:
GET16_LABELS	./src/pcm/pcm_rate_linear.c	196;"	d	file:
GET16_LABELS	./src/pcm/pcm_rate_linear.c	199;"	d	file:
GET16_LABELS	./src/pcm/pcm_rate_linear.c	74;"	d	file:
GET16_LABELS	./src/pcm/pcm_rate_linear.c	77;"	d	file:
GET32F_END	./src/pcm/pcm_lfloat.c	171;"	d	file:
GET32F_END	./src/pcm/pcm_lfloat.c	173;"	d	file:
GET32F_LABELS	./src/pcm/pcm_lfloat.c	147;"	d	file:
GET32F_LABELS	./src/pcm/pcm_lfloat.c	149;"	d	file:
GET32_END	./src/pcm/pcm_iec958.c	210;"	d	file:
GET32_END	./src/pcm/pcm_iec958.c	212;"	d	file:
GET32_END	./src/pcm/pcm_lfloat.c	126;"	d	file:
GET32_END	./src/pcm/pcm_lfloat.c	128;"	d	file:
GET32_END	./src/pcm/plugin_ops.h	515;"	d
GET32_END	./src/pcm/plugin_ops.h	626;"	d
GET32_LABELS	./src/pcm/pcm_iec958.c	188;"	d	file:
GET32_LABELS	./src/pcm/pcm_iec958.c	190;"	d	file:
GET32_LABELS	./src/pcm/pcm_lfloat.c	101;"	d	file:
GET32_LABELS	./src/pcm/pcm_lfloat.c	105;"	d	file:
GET32_LABELS	./src/pcm/plugin_ops.h	475;"	d
GET32_LABELS	./src/pcm/plugin_ops.h	590;"	d
GETS_END	./src/pcm/pcm_route.c	354;"	d	file:
GETS_END	./src/pcm/pcm_route.c	356;"	d	file:
GETS_LABELS	./src/pcm/pcm_route.c	234;"	d	file:
GETS_LABELS	./src/pcm/pcm_route.c	237;"	d	file:
GET_VOL_SCALE	./src/pcm/pcm_softvol.c	255;"	d	file:
GET_VOL_SCALE	./src/pcm/pcm_softvol.c	326;"	d	file:
GET_VOL_SCALE	./src/pcm/pcm_softvol.c	327;"	d	file:
GPR	./include/sound/emu10k1.h	87;"	d
GPR_ACCU	./include/sound/emu10k1.h	81;"	d
GPR_COND	./include/sound/emu10k1.h	82;"	d
GPR_DBAC	./include/sound/emu10k1.h	86;"	d
GPR_IRQ	./include/sound/emu10k1.h	85;"	d
GPR_NOISE0	./include/sound/emu10k1.h	83;"	d
GPR_NOISE1	./include/sound/emu10k1.h	84;"	d
H9632	./include/sound/hdsp.h	/^	H9632,$/;"	e	enum:__anon14
H9652	./include/sound/hdsp.h	/^	H9652,$/;"	e	enum:__anon14
HAVE_ASM_PREVIOUS_DIRECTIVE	./include/local.h	187;"	d
HAVE_DLFCN_H	./include/config.h	67;"	d
HAVE_ELF	./include/local.h	186;"	d
HAVE_GNU_LD	./include/local.h	185;"	d
HAVE_INTTYPES_H	./include/config.h	70;"	d
HAVE_LIBDL	./include/config.h	73;"	d
HAVE_LIBPTHREAD	./include/config.h	76;"	d
HAVE_MEMORY_H	./include/config.h	85;"	d
HAVE_SOFT_FLOAT	./include/config.h	88;"	d
HAVE_STDINT_H	./include/config.h	91;"	d
HAVE_STDLIB_H	./include/config.h	94;"	d
HAVE_STRINGS_H	./include/config.h	97;"	d
HAVE_STRING_H	./include/config.h	100;"	d
HAVE_SYS_STAT_H	./include/config.h	103;"	d
HAVE_SYS_TYPES_H	./include/config.h	106;"	d
HAVE_UNISTD_H	./include/config.h	109;"	d
HDSPM_ADDON_TCO	./include/sound/hdspm.h	178;"	d
HDSPM_MAX_CHANNELS	./include/sound/hdspm.h	24;"	d
HDSPM_MIXER_CHANNELS	./include/sound/hdspm.h	203;"	d
HDSP_IO_Type	./include/sound/hdsp.h	/^} HDSP_IO_Type;$/;"	t	typeref:enum:__anon14
HDSP_MATRIX_MIXER_SIZE	./include/sound/hdsp.h	24;"	d
HELPID_DEBUG	./test/seq.c	15;"	d	file:
HELPID_HELP	./test/seq.c	14;"	d	file:
HELPID_VERBOSE	./test/seq.c	16;"	d	file:
HELPID_VERSION	./test/seq.c	17;"	d	file:
HW_PARAM	./src/pcm/pcm.c	1474;"	d	file:
HW_PARAM	./src/pcm/pcm_params.c	1259;"	d	file:
HintDescriptor	./src/pcm/ladspa.h	/^  LADSPA_PortRangeHintDescriptor HintDescriptor;$/;"	m	struct:_LADSPA_PortRangeHint
IA64_FETCHADD	./include/iatomic.h	279;"	d
IATOMIC_DEFINED	./include/iatomic.h	1009;"	d
IATOMIC_DEFINED	./include/iatomic.h	1078;"	d
IATOMIC_DEFINED	./include/iatomic.h	1101;"	d
IATOMIC_DEFINED	./include/iatomic.h	1126;"	d
IATOMIC_DEFINED	./include/iatomic.h	221;"	d
IATOMIC_DEFINED	./include/iatomic.h	373;"	d
IATOMIC_DEFINED	./include/iatomic.h	493;"	d
IATOMIC_DEFINED	./include/iatomic.h	681;"	d
IATOMIC_DEFINED	./include/iatomic.h	889;"	d
IEC958_AES0_CON_EMPHASIS	./include/asoundef.h	55;"	d
IEC958_AES0_CON_EMPHASIS	./include/sound/asoundef.h	46;"	d
IEC958_AES0_CON_EMPHASIS_5015	./include/asoundef.h	57;"	d
IEC958_AES0_CON_EMPHASIS_5015	./include/sound/asoundef.h	48;"	d
IEC958_AES0_CON_EMPHASIS_NONE	./include/asoundef.h	56;"	d
IEC958_AES0_CON_EMPHASIS_NONE	./include/sound/asoundef.h	47;"	d
IEC958_AES0_CON_MODE	./include/asoundef.h	58;"	d
IEC958_AES0_CON_MODE	./include/sound/asoundef.h	49;"	d
IEC958_AES0_CON_NOT_COPYRIGHT	./include/asoundef.h	54;"	d
IEC958_AES0_CON_NOT_COPYRIGHT	./include/sound/asoundef.h	45;"	d
IEC958_AES0_NONAUDIO	./include/asoundef.h	42;"	d
IEC958_AES0_NONAUDIO	./include/sound/asoundef.h	33;"	d
IEC958_AES0_PROFESSIONAL	./include/asoundef.h	41;"	d
IEC958_AES0_PROFESSIONAL	./include/sound/asoundef.h	32;"	d
IEC958_AES0_PRO_EMPHASIS	./include/asoundef.h	43;"	d
IEC958_AES0_PRO_EMPHASIS	./include/sound/asoundef.h	34;"	d
IEC958_AES0_PRO_EMPHASIS_5015	./include/asoundef.h	46;"	d
IEC958_AES0_PRO_EMPHASIS_5015	./include/sound/asoundef.h	37;"	d
IEC958_AES0_PRO_EMPHASIS_CCITT	./include/asoundef.h	47;"	d
IEC958_AES0_PRO_EMPHASIS_CCITT	./include/sound/asoundef.h	38;"	d
IEC958_AES0_PRO_EMPHASIS_NONE	./include/asoundef.h	45;"	d
IEC958_AES0_PRO_EMPHASIS_NONE	./include/sound/asoundef.h	36;"	d
IEC958_AES0_PRO_EMPHASIS_NOTID	./include/asoundef.h	44;"	d
IEC958_AES0_PRO_EMPHASIS_NOTID	./include/sound/asoundef.h	35;"	d
IEC958_AES0_PRO_FREQ_UNLOCKED	./include/asoundef.h	48;"	d
IEC958_AES0_PRO_FREQ_UNLOCKED	./include/sound/asoundef.h	39;"	d
IEC958_AES0_PRO_FS	./include/asoundef.h	49;"	d
IEC958_AES0_PRO_FS	./include/sound/asoundef.h	40;"	d
IEC958_AES0_PRO_FS_32000	./include/asoundef.h	53;"	d
IEC958_AES0_PRO_FS_32000	./include/sound/asoundef.h	44;"	d
IEC958_AES0_PRO_FS_44100	./include/asoundef.h	51;"	d
IEC958_AES0_PRO_FS_44100	./include/sound/asoundef.h	42;"	d
IEC958_AES0_PRO_FS_48000	./include/asoundef.h	52;"	d
IEC958_AES0_PRO_FS_48000	./include/sound/asoundef.h	43;"	d
IEC958_AES0_PRO_FS_NOTID	./include/asoundef.h	50;"	d
IEC958_AES0_PRO_FS_NOTID	./include/sound/asoundef.h	41;"	d
IEC958_AES1_CON_ADC	./include/asoundef.h	111;"	d
IEC958_AES1_CON_ADC_COPYRIGHT	./include/asoundef.h	115;"	d
IEC958_AES1_CON_ADC_COPYRIGHT_ID	./include/asoundef.h	114;"	d
IEC958_AES1_CON_ADC_COPYRIGHT_ID	./include/sound/asoundef.h	71;"	d
IEC958_AES1_CON_ADC_COPYRIGHT_MASK	./include/asoundef.h	113;"	d
IEC958_AES1_CON_ADC_COPYRIGHT_MASK	./include/sound/asoundef.h	70;"	d
IEC958_AES1_CON_ADC_COPYRIGHT_OTHER	./include/asoundef.h	116;"	d
IEC958_AES1_CON_ADC_ID	./include/asoundef.h	110;"	d
IEC958_AES1_CON_ADC_ID	./include/sound/asoundef.h	73;"	d
IEC958_AES1_CON_ADC_MASK	./include/asoundef.h	109;"	d
IEC958_AES1_CON_ADC_MASK	./include/sound/asoundef.h	72;"	d
IEC958_AES1_CON_ADC_OTHER	./include/asoundef.h	112;"	d
IEC958_AES1_CON_BROADCAST1_ID	./include/asoundef.h	95;"	d
IEC958_AES1_CON_BROADCAST1_ID	./include/sound/asoundef.h	67;"	d
IEC958_AES1_CON_BROADCAST1_MASK	./include/asoundef.h	94;"	d
IEC958_AES1_CON_BROADCAST1_MASK	./include/sound/asoundef.h	66;"	d
IEC958_AES1_CON_BROADCAST1_OTHER	./include/asoundef.h	101;"	d
IEC958_AES1_CON_BROADCAST2_ID	./include/asoundef.h	103;"	d
IEC958_AES1_CON_BROADCAST2_ID	./include/sound/asoundef.h	75;"	d
IEC958_AES1_CON_BROADCAST2_MASK	./include/asoundef.h	102;"	d
IEC958_AES1_CON_BROADCAST2_MASK	./include/sound/asoundef.h	74;"	d
IEC958_AES1_CON_CATEGORY	./include/asoundef.h	70;"	d
IEC958_AES1_CON_CATEGORY	./include/sound/asoundef.h	61;"	d
IEC958_AES1_CON_DAB_EUROPE	./include/asoundef.h	97;"	d
IEC958_AES1_CON_DAB_JAPAN	./include/asoundef.h	96;"	d
IEC958_AES1_CON_DAB_USA	./include/asoundef.h	98;"	d
IEC958_AES1_CON_DAT	./include/asoundef.h	89;"	d
IEC958_AES1_CON_DAT	./include/sound/asoundef.h	90;"	d
IEC958_AES1_CON_DCC	./include/asoundef.h	91;"	d
IEC958_AES1_CON_DIGDIGCONV_ID	./include/asoundef.h	80;"	d
IEC958_AES1_CON_DIGDIGCONV_ID	./include/sound/asoundef.h	69;"	d
IEC958_AES1_CON_DIGDIGCONV_MASK	./include/asoundef.h	79;"	d
IEC958_AES1_CON_DIGDIGCONV_MASK	./include/sound/asoundef.h	68;"	d
IEC958_AES1_CON_DIGDIGCONV_OTHER	./include/asoundef.h	86;"	d
IEC958_AES1_CON_DSP	./include/asoundef.h	85;"	d
IEC958_AES1_CON_DVD	./include/asoundef.h	77;"	d
IEC958_AES1_CON_EXPERIMENTAL	./include/asoundef.h	121;"	d
IEC958_AES1_CON_EXPERIMENTAL	./include/sound/asoundef.h	63;"	d
IEC958_AES1_CON_GENERAL	./include/asoundef.h	71;"	d
IEC958_AES1_CON_GENERAL	./include/sound/asoundef.h	62;"	d
IEC958_AES1_CON_IEC62105	./include/asoundef.h	100;"	d
IEC958_AES1_CON_IEC908_CD	./include/asoundef.h	74;"	d
IEC958_AES1_CON_IEC908_CD	./include/sound/asoundef.h	82;"	d
IEC958_AES1_CON_LASEROPT_ID	./include/asoundef.h	73;"	d
IEC958_AES1_CON_LASEROPT_ID	./include/sound/asoundef.h	77;"	d
IEC958_AES1_CON_LASEROPT_MASK	./include/asoundef.h	72;"	d
IEC958_AES1_CON_LASEROPT_MASK	./include/sound/asoundef.h	76;"	d
IEC958_AES1_CON_LASTEROPT_OTHER	./include/asoundef.h	78;"	d
IEC958_AES1_CON_MAGNETIC_DISC	./include/asoundef.h	92;"	d
IEC958_AES1_CON_MAGNETIC_ID	./include/asoundef.h	88;"	d
IEC958_AES1_CON_MAGNETIC_ID	./include/sound/asoundef.h	81;"	d
IEC958_AES1_CON_MAGNETIC_MASK	./include/asoundef.h	87;"	d
IEC958_AES1_CON_MAGNETIC_MASK	./include/sound/asoundef.h	80;"	d
IEC958_AES1_CON_MAGNETIC_OTHER	./include/asoundef.h	93;"	d
IEC958_AES1_CON_MICROPHONE	./include/asoundef.h	107;"	d
IEC958_AES1_CON_MICROPHONE	./include/sound/asoundef.h	89;"	d
IEC958_AES1_CON_MINI_DISC	./include/asoundef.h	76;"	d
IEC958_AES1_CON_MIXER	./include/asoundef.h	82;"	d
IEC958_AES1_CON_MIXER	./include/sound/asoundef.h	86;"	d
IEC958_AES1_CON_MUSICAL_ID	./include/asoundef.h	105;"	d
IEC958_AES1_CON_MUSICAL_ID	./include/sound/asoundef.h	79;"	d
IEC958_AES1_CON_MUSICAL_MASK	./include/asoundef.h	104;"	d
IEC958_AES1_CON_MUSICAL_MASK	./include/sound/asoundef.h	78;"	d
IEC958_AES1_CON_MUSICAL_OTHER	./include/asoundef.h	108;"	d
IEC958_AES1_CON_NON_IEC908_CD	./include/asoundef.h	75;"	d
IEC958_AES1_CON_NON_IEC908_CD	./include/sound/asoundef.h	83;"	d
IEC958_AES1_CON_ORIGINAL	./include/asoundef.h	122;"	d
IEC958_AES1_CON_ORIGINAL	./include/sound/asoundef.h	92;"	d
IEC958_AES1_CON_PCM_CODER	./include/asoundef.h	81;"	d
IEC958_AES1_CON_PCM_CODER	./include/sound/asoundef.h	84;"	d
IEC958_AES1_CON_RATE_CONVERTER	./include/asoundef.h	83;"	d
IEC958_AES1_CON_RATE_CONVERTER	./include/sound/asoundef.h	87;"	d
IEC958_AES1_CON_SAMPLER	./include/asoundef.h	84;"	d
IEC958_AES1_CON_SAMPLER	./include/sound/asoundef.h	85;"	d
IEC958_AES1_CON_SOFTWARE	./include/asoundef.h	99;"	d
IEC958_AES1_CON_SOLIDMEM_DIGITAL_RECORDER_PLAYER	./include/asoundef.h	119;"	d
IEC958_AES1_CON_SOLIDMEM_ID	./include/asoundef.h	118;"	d
IEC958_AES1_CON_SOLIDMEM_ID	./include/sound/asoundef.h	65;"	d
IEC958_AES1_CON_SOLIDMEM_MASK	./include/asoundef.h	117;"	d
IEC958_AES1_CON_SOLIDMEM_MASK	./include/sound/asoundef.h	64;"	d
IEC958_AES1_CON_SOLIDMEM_OTHER	./include/asoundef.h	120;"	d
IEC958_AES1_CON_SYNTHESIZER	./include/asoundef.h	106;"	d
IEC958_AES1_CON_SYNTHESIZER	./include/sound/asoundef.h	88;"	d
IEC958_AES1_CON_VCR	./include/asoundef.h	90;"	d
IEC958_AES1_CON_VCR	./include/sound/asoundef.h	91;"	d
IEC958_AES1_PRO_MODE	./include/asoundef.h	59;"	d
IEC958_AES1_PRO_MODE	./include/sound/asoundef.h	50;"	d
IEC958_AES1_PRO_MODE_BYTE3	./include/asoundef.h	65;"	d
IEC958_AES1_PRO_MODE_BYTE3	./include/sound/asoundef.h	56;"	d
IEC958_AES1_PRO_MODE_NOTID	./include/asoundef.h	60;"	d
IEC958_AES1_PRO_MODE_NOTID	./include/sound/asoundef.h	51;"	d
IEC958_AES1_PRO_MODE_PRIMARY	./include/asoundef.h	64;"	d
IEC958_AES1_PRO_MODE_PRIMARY	./include/sound/asoundef.h	55;"	d
IEC958_AES1_PRO_MODE_SINGLE	./include/asoundef.h	62;"	d
IEC958_AES1_PRO_MODE_SINGLE	./include/sound/asoundef.h	53;"	d
IEC958_AES1_PRO_MODE_STEREOPHONIC	./include/asoundef.h	61;"	d
IEC958_AES1_PRO_MODE_STEREOPHONIC	./include/sound/asoundef.h	52;"	d
IEC958_AES1_PRO_MODE_TWO	./include/asoundef.h	63;"	d
IEC958_AES1_PRO_MODE_TWO	./include/sound/asoundef.h	54;"	d
IEC958_AES1_PRO_USERBITS	./include/asoundef.h	66;"	d
IEC958_AES1_PRO_USERBITS	./include/sound/asoundef.h	57;"	d
IEC958_AES1_PRO_USERBITS_192	./include/asoundef.h	68;"	d
IEC958_AES1_PRO_USERBITS_192	./include/sound/asoundef.h	59;"	d
IEC958_AES1_PRO_USERBITS_NOTID	./include/asoundef.h	67;"	d
IEC958_AES1_PRO_USERBITS_NOTID	./include/sound/asoundef.h	58;"	d
IEC958_AES1_PRO_USERBITS_UDEF	./include/asoundef.h	69;"	d
IEC958_AES1_PRO_USERBITS_UDEF	./include/sound/asoundef.h	60;"	d
IEC958_AES2_CON_CHANNEL	./include/asoundef.h	135;"	d
IEC958_AES2_CON_CHANNEL	./include/sound/asoundef.h	105;"	d
IEC958_AES2_CON_CHANNEL_UNSPEC	./include/asoundef.h	136;"	d
IEC958_AES2_CON_CHANNEL_UNSPEC	./include/sound/asoundef.h	106;"	d
IEC958_AES2_CON_SOURCE	./include/asoundef.h	133;"	d
IEC958_AES2_CON_SOURCE	./include/sound/asoundef.h	103;"	d
IEC958_AES2_CON_SOURCE_UNSPEC	./include/asoundef.h	134;"	d
IEC958_AES2_CON_SOURCE_UNSPEC	./include/sound/asoundef.h	104;"	d
IEC958_AES2_PRO_SBITS	./include/asoundef.h	123;"	d
IEC958_AES2_PRO_SBITS	./include/sound/asoundef.h	93;"	d
IEC958_AES2_PRO_SBITS_20	./include/asoundef.h	124;"	d
IEC958_AES2_PRO_SBITS_20	./include/sound/asoundef.h	94;"	d
IEC958_AES2_PRO_SBITS_24	./include/asoundef.h	125;"	d
IEC958_AES2_PRO_SBITS_24	./include/sound/asoundef.h	95;"	d
IEC958_AES2_PRO_SBITS_UDEF	./include/asoundef.h	126;"	d
IEC958_AES2_PRO_SBITS_UDEF	./include/sound/asoundef.h	96;"	d
IEC958_AES2_PRO_WORDLEN	./include/asoundef.h	127;"	d
IEC958_AES2_PRO_WORDLEN	./include/sound/asoundef.h	97;"	d
IEC958_AES2_PRO_WORDLEN_20_16	./include/asoundef.h	132;"	d
IEC958_AES2_PRO_WORDLEN_20_16	./include/sound/asoundef.h	102;"	d
IEC958_AES2_PRO_WORDLEN_22_18	./include/asoundef.h	129;"	d
IEC958_AES2_PRO_WORDLEN_22_18	./include/sound/asoundef.h	99;"	d
IEC958_AES2_PRO_WORDLEN_23_19	./include/asoundef.h	130;"	d
IEC958_AES2_PRO_WORDLEN_23_19	./include/sound/asoundef.h	100;"	d
IEC958_AES2_PRO_WORDLEN_24_20	./include/asoundef.h	131;"	d
IEC958_AES2_PRO_WORDLEN_24_20	./include/sound/asoundef.h	101;"	d
IEC958_AES2_PRO_WORDLEN_NOTID	./include/asoundef.h	128;"	d
IEC958_AES2_PRO_WORDLEN_NOTID	./include/sound/asoundef.h	98;"	d
IEC958_AES3_CON_CLOCK	./include/asoundef.h	149;"	d
IEC958_AES3_CON_CLOCK	./include/sound/asoundef.h	111;"	d
IEC958_AES3_CON_CLOCK_1000PPM	./include/asoundef.h	150;"	d
IEC958_AES3_CON_CLOCK_1000PPM	./include/sound/asoundef.h	112;"	d
IEC958_AES3_CON_CLOCK_50PPM	./include/asoundef.h	151;"	d
IEC958_AES3_CON_CLOCK_50PPM	./include/sound/asoundef.h	113;"	d
IEC958_AES3_CON_CLOCK_VARIABLE	./include/asoundef.h	152;"	d
IEC958_AES3_CON_CLOCK_VARIABLE	./include/sound/asoundef.h	114;"	d
IEC958_AES3_CON_FS	./include/asoundef.h	137;"	d
IEC958_AES3_CON_FS	./include/sound/asoundef.h	107;"	d
IEC958_AES3_CON_FS_176400	./include/asoundef.h	147;"	d
IEC958_AES3_CON_FS_192000	./include/asoundef.h	148;"	d
IEC958_AES3_CON_FS_22050	./include/asoundef.h	142;"	d
IEC958_AES3_CON_FS_24000	./include/asoundef.h	143;"	d
IEC958_AES3_CON_FS_32000	./include/asoundef.h	141;"	d
IEC958_AES3_CON_FS_32000	./include/sound/asoundef.h	110;"	d
IEC958_AES3_CON_FS_44100	./include/asoundef.h	138;"	d
IEC958_AES3_CON_FS_44100	./include/sound/asoundef.h	108;"	d
IEC958_AES3_CON_FS_48000	./include/asoundef.h	140;"	d
IEC958_AES3_CON_FS_48000	./include/sound/asoundef.h	109;"	d
IEC958_AES3_CON_FS_768000	./include/asoundef.h	145;"	d
IEC958_AES3_CON_FS_88200	./include/asoundef.h	144;"	d
IEC958_AES3_CON_FS_96000	./include/asoundef.h	146;"	d
IEC958_AES3_CON_FS_NOTID	./include/asoundef.h	139;"	d
IEC958_AES4_CON_MAX_WORDLEN_24	./include/asoundef.h	153;"	d
IEC958_AES4_CON_ORIGFS	./include/asoundef.h	161;"	d
IEC958_AES4_CON_ORIGFS_11025	./include/asoundef.h	171;"	d
IEC958_AES4_CON_ORIGFS_12000	./include/asoundef.h	164;"	d
IEC958_AES4_CON_ORIGFS_16000	./include/asoundef.h	169;"	d
IEC958_AES4_CON_ORIGFS_176400	./include/asoundef.h	165;"	d
IEC958_AES4_CON_ORIGFS_192000	./include/asoundef.h	163;"	d
IEC958_AES4_CON_ORIGFS_22050	./include/asoundef.h	172;"	d
IEC958_AES4_CON_ORIGFS_24000	./include/asoundef.h	170;"	d
IEC958_AES4_CON_ORIGFS_32000	./include/asoundef.h	173;"	d
IEC958_AES4_CON_ORIGFS_44100	./include/asoundef.h	175;"	d
IEC958_AES4_CON_ORIGFS_48000	./include/asoundef.h	174;"	d
IEC958_AES4_CON_ORIGFS_8000	./include/asoundef.h	167;"	d
IEC958_AES4_CON_ORIGFS_88200	./include/asoundef.h	168;"	d
IEC958_AES4_CON_ORIGFS_96000	./include/asoundef.h	166;"	d
IEC958_AES4_CON_ORIGFS_NOTID	./include/asoundef.h	162;"	d
IEC958_AES4_CON_WORDLEN	./include/asoundef.h	154;"	d
IEC958_AES4_CON_WORDLEN_20_16	./include/asoundef.h	156;"	d
IEC958_AES4_CON_WORDLEN_21_17	./include/asoundef.h	160;"	d
IEC958_AES4_CON_WORDLEN_22_18	./include/asoundef.h	157;"	d
IEC958_AES4_CON_WORDLEN_23_19	./include/asoundef.h	158;"	d
IEC958_AES4_CON_WORDLEN_24_20	./include/asoundef.h	159;"	d
IEC958_AES4_CON_WORDLEN_NOTID	./include/asoundef.h	155;"	d
IEC958_AES5_CON_CGMSA	./include/asoundef.h	176;"	d
IEC958_AES5_CON_CGMSA_COPYFREELY	./include/asoundef.h	177;"	d
IEC958_AES5_CON_CGMSA_COPYNEVER	./include/asoundef.h	180;"	d
IEC958_AES5_CON_CGMSA_COPYNOMORE	./include/asoundef.h	179;"	d
IEC958_AES5_CON_CGMSA_COPYONCE	./include/asoundef.h	178;"	d
IFACE	./src/control/control.c	924;"	d	file:
IFACE	./src/control/namehint.c	394;"	d	file:
IFACE1	./src/control/control.c	925;"	d	file:
INIT_LIST_HEAD	./include/list.h	29;"	d
INTERNAL	./include/alsa-symbols.h	30;"	d
INTERNAL_CONCAT2_2	./include/alsa-symbols.h	29;"	d
INTERVAL_INLINE	./src/pcm/interval_inline.h	22;"	d
IS_CONCURRENT	./src/pcm/pcm_dmix_generic.c	47;"	d	file:
ITRAM_ADDR	./include/sound/emu10k1.h	90;"	d
ITRAM_DATA	./include/sound/emu10k1.h	88;"	d
ImplementationData	./src/pcm/ladspa.h	/^  void * ImplementationData;$/;"	m	struct:_LADSPA_Descriptor
IndexAdjust	./src/pcm/pcm_adpcm.c	/^static const char IndexAdjust[8] = { -1, -1, -1, -1, 2, 4, 6, 8 };$/;"	v	file:
KERNEL_CLIENT	./include/sound/asequencer.h	/^	KERNEL_CLIENT   = 2$/;"	e	enum:sndrv_seq_client_type
Kawai	./test/midifile.h	119;"	d
Korg	./test/midifile.h	121;"	d
LADSPA_Data	./src/pcm/ladspa.h	/^typedef float LADSPA_Data;$/;"	t
LADSPA_Descriptor	./src/pcm/ladspa.h	/^} LADSPA_Descriptor;$/;"	t	typeref:struct:_LADSPA_Descriptor
LADSPA_Descriptor_Function	./src/pcm/ladspa.h	/^(*LADSPA_Descriptor_Function)(unsigned long Index);$/;"	t
LADSPA_HINT_BOUNDED_ABOVE	./src/pcm/ladspa.h	216;"	d
LADSPA_HINT_BOUNDED_BELOW	./src/pcm/ladspa.h	208;"	d
LADSPA_HINT_DEFAULT_0	./src/pcm/ladspa.h	295;"	d
LADSPA_HINT_DEFAULT_1	./src/pcm/ladspa.h	300;"	d
LADSPA_HINT_DEFAULT_100	./src/pcm/ladspa.h	303;"	d
LADSPA_HINT_DEFAULT_440	./src/pcm/ladspa.h	308;"	d
LADSPA_HINT_DEFAULT_HIGH	./src/pcm/ladspa.h	286;"	d
LADSPA_HINT_DEFAULT_LOW	./src/pcm/ladspa.h	272;"	d
LADSPA_HINT_DEFAULT_MASK	./src/pcm/ladspa.h	258;"	d
LADSPA_HINT_DEFAULT_MAXIMUM	./src/pcm/ladspa.h	290;"	d
LADSPA_HINT_DEFAULT_MIDDLE	./src/pcm/ladspa.h	279;"	d
LADSPA_HINT_DEFAULT_MINIMUM	./src/pcm/ladspa.h	265;"	d
LADSPA_HINT_DEFAULT_NONE	./src/pcm/ladspa.h	261;"	d
LADSPA_HINT_INTEGER	./src/pcm/ladspa.h	245;"	d
LADSPA_HINT_LOGARITHMIC	./src/pcm/ladspa.h	237;"	d
LADSPA_HINT_SAMPLE_RATE	./src/pcm/ladspa.h	232;"	d
LADSPA_HINT_TOGGLED	./src/pcm/ladspa.h	224;"	d
LADSPA_Handle	./src/pcm/ladspa.h	/^typedef void * LADSPA_Handle;$/;"	t
LADSPA_INCLUDED	./src/pcm/ladspa.h	23;"	d
LADSPA_IS_HARD_RT_CAPABLE	./src/pcm/ladspa.h	136;"	d
LADSPA_IS_HINT_BOUNDED_ABOVE	./src/pcm/ladspa.h	311;"	d
LADSPA_IS_HINT_BOUNDED_BELOW	./src/pcm/ladspa.h	310;"	d
LADSPA_IS_HINT_DEFAULT_0	./src/pcm/ladspa.h	328;"	d
LADSPA_IS_HINT_DEFAULT_1	./src/pcm/ladspa.h	330;"	d
LADSPA_IS_HINT_DEFAULT_100	./src/pcm/ladspa.h	332;"	d
LADSPA_IS_HINT_DEFAULT_440	./src/pcm/ladspa.h	334;"	d
LADSPA_IS_HINT_DEFAULT_HIGH	./src/pcm/ladspa.h	324;"	d
LADSPA_IS_HINT_DEFAULT_LOW	./src/pcm/ladspa.h	320;"	d
LADSPA_IS_HINT_DEFAULT_MAXIMUM	./src/pcm/ladspa.h	326;"	d
LADSPA_IS_HINT_DEFAULT_MIDDLE	./src/pcm/ladspa.h	322;"	d
LADSPA_IS_HINT_DEFAULT_MINIMUM	./src/pcm/ladspa.h	318;"	d
LADSPA_IS_HINT_HAS_DEFAULT	./src/pcm/ladspa.h	317;"	d
LADSPA_IS_HINT_INTEGER	./src/pcm/ladspa.h	315;"	d
LADSPA_IS_HINT_LOGARITHMIC	./src/pcm/ladspa.h	314;"	d
LADSPA_IS_HINT_SAMPLE_RATE	./src/pcm/ladspa.h	313;"	d
LADSPA_IS_HINT_TOGGLED	./src/pcm/ladspa.h	312;"	d
LADSPA_IS_INPLACE_BROKEN	./src/pcm/ladspa.h	135;"	d
LADSPA_IS_PORT_AUDIO	./src/pcm/ladspa.h	171;"	d
LADSPA_IS_PORT_CONTROL	./src/pcm/ladspa.h	170;"	d
LADSPA_IS_PORT_INPUT	./src/pcm/ladspa.h	168;"	d
LADSPA_IS_PORT_OUTPUT	./src/pcm/ladspa.h	169;"	d
LADSPA_IS_REALTIME	./src/pcm/ladspa.h	134;"	d
LADSPA_PORT_AUDIO	./src/pcm/ladspa.h	166;"	d
LADSPA_PORT_CONTROL	./src/pcm/ladspa.h	162;"	d
LADSPA_PORT_INPUT	./src/pcm/ladspa.h	155;"	d
LADSPA_PORT_OUTPUT	./src/pcm/ladspa.h	158;"	d
LADSPA_PROPERTY_HARD_RT_CAPABLE	./src/pcm/ladspa.h	132;"	d
LADSPA_PROPERTY_INPLACE_BROKEN	./src/pcm/ladspa.h	106;"	d
LADSPA_PROPERTY_REALTIME	./src/pcm/ladspa.h	99;"	d
LADSPA_PortDescriptor	./src/pcm/ladspa.h	/^typedef int LADSPA_PortDescriptor;$/;"	t
LADSPA_PortRangeHint	./src/pcm/ladspa.h	/^} LADSPA_PortRangeHint;$/;"	t	typeref:struct:_LADSPA_PortRangeHint
LADSPA_PortRangeHintDescriptor	./src/pcm/ladspa.h	/^typedef int LADSPA_PortRangeHintDescriptor;$/;"	t
LADSPA_Properties	./src/pcm/ladspa.h	/^typedef int LADSPA_Properties;$/;"	t
LADSPA_VERSION	./src/pcm/ladspa.h	25;"	d
LADSPA_VERSION_MAJOR	./src/pcm/ladspa.h	26;"	d
LADSPA_VERSION_MINOR	./src/pcm/ladspa.h	27;"	d
LEADING_KEY	./src/pcm/pcm_file.c	44;"	d	file:
LINEAR_DIV	./src/pcm/pcm_rate_linear.c	34;"	d	file:
LINEAR_DIV_SHIFT	./src/pcm/pcm_rate_linear.c	33;"	d	file:
LIST_HEAD	./include/list.h	26;"	d
LIST_HEAD_INIT	./include/list.h	24;"	d
LOCAL_ALSA_CONF_DIR	./Android.mk	/^LOCAL_ALSA_CONF_DIR  := $(LOCAL_PATH)\/src\/conf$/;"	m
LOCAL_CFLAGS	./Android.mk	/^LOCAL_CFLAGS := \\$/;"	m
LOCAL_C_INCLUDES	./Android.mk	/^LOCAL_C_INCLUDES := $(LOCAL_PATH)\/include$/;"	m
LOCAL_ERROR	./src/conf.c	459;"	d	file:
LOCAL_EXPORT_C_INCLUDE_DIRS	./Android.mk	/^LOCAL_EXPORT_C_INCLUDE_DIRS := $(LOCAL_C_INCLUDES)$/;"	m
LOCAL_MODULE	./Android.mk	/^LOCAL_MODULE := libasound$/;"	m
LOCAL_MODULE_TAGS	./Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_PATH	./Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_SHARED_LIBRARIES	./Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SRC_FILES	./Android.mk	/^LOCAL_SRC_FILES := $(filter-out src\/alisp\/alisp_snd.c, $(LOCAL_SRC_FILES))$/;"	m
LOCAL_SRC_FILES	./Android.mk	/^LOCAL_SRC_FILES := $(filter-out src\/compat\/hsearch_r.c, $(LOCAL_SRC_FILES))$/;"	m
LOCAL_SRC_FILES	./Android.mk	/^LOCAL_SRC_FILES := $(filter-out src\/control\/control_shm.c, $(LOCAL_SRC_FILES))$/;"	m
LOCAL_SRC_FILES	./Android.mk	/^LOCAL_SRC_FILES := $(filter-out src\/pcm\/pcm_d%.c, $(LOCAL_SRC_FILES))$/;"	m
LOCAL_SRC_FILES	./Android.mk	/^LOCAL_SRC_FILES := $(filter-out src\/pcm\/pcm_ladspa.c, $(LOCAL_SRC_FILES))$/;"	m
LOCAL_SRC_FILES	./Android.mk	/^LOCAL_SRC_FILES := $(filter-out src\/pcm\/pcm_shm.c, $(LOCAL_SRC_FILES))$/;"	m
LOCAL_SRC_FILES	./Android.mk	/^LOCAL_SRC_FILES := $(filter-out src\/pcm\/scopes\/level.c, $(LOCAL_SRC_FILES))$/;"	m
LOCAL_SRC_FILES	./Android.mk	/^LOCAL_SRC_FILES := $(filter-out src\/shmarea.c, $(LOCAL_SRC_FILES))$/;"	m
LOCAL_SRC_FILES	./Android.mk	/^LOCAL_SRC_FILES := $(sort $(call all-c-files-under, src))$/;"	m
LOCAL_STR_BUFSIZE	./src/conf.c	721;"	d	file:
LOCAL_UNEXPECTED_CHAR	./src/conf.c	463;"	d	file:
LOCAL_UNEXPECTED_EOF	./src/conf.c	464;"	d	file:
LOCAL_UNTERMINATED_QUOTE	./src/conf.c	462;"	d	file:
LOCAL_UNTERMINATED_STRING	./src/conf.c	461;"	d	file:
LOCK_PREFIX	./src/pcm/pcm_dmix_i386.c	10;"	d	file:
LOCK_PREFIX	./src/pcm/pcm_dmix_i386.c	19;"	d	file:
LOCK_PREFIX	./src/pcm/pcm_dmix_i386.c	28;"	d	file:
LOCK_PREFIX	./src/pcm/pcm_dmix_i386.c	37;"	d	file:
LOCK_PREFIX	./src/pcm/pcm_dmix_i386.c	46;"	d	file:
LOCK_PREFIX	./src/pcm/pcm_dmix_i386.c	55;"	d	file:
LOCK_PREFIX	./src/pcm/pcm_dmix_i386.c	64;"	d	file:
LOCK_PREFIX	./src/pcm/pcm_dmix_i386.c	73;"	d	file:
LOCK_PREFIX	./src/pcm/pcm_dmix_x86_64.c	15;"	d	file:
LOCK_PREFIX	./src/pcm/pcm_dmix_x86_64.c	22;"	d	file:
LOCK_PREFIX	./src/pcm/pcm_dmix_x86_64.c	29;"	d	file:
LOCK_PREFIX	./src/pcm/pcm_dmix_x86_64.c	36;"	d	file:
LOCK_PREFIX	./src/pcm/pcm_dmix_x86_64.c	43;"	d	file:
LOCK_PREFIX	./src/pcm/pcm_dmix_x86_64.c	50;"	d	file:
LOCK_PREFIX	./src/pcm/pcm_dmix_x86_64.c	57;"	d	file:
LOCK_PREFIX	./src/pcm/pcm_dmix_x86_64.c	8;"	d	file:
Label	./src/pcm/ladspa.h	/^  const char * Label;$/;"	m	struct:_LADSPA_Descriptor
Lexicon	./test/midifile.h	116;"	d
LowerBound	./src/pcm/ladspa.h	/^  LADSPA_Data LowerBound;$/;"	m	struct:_LADSPA_PortRangeHint
MADI	./include/sound/hdspm.h	/^	MADI,$/;"	e	enum:hdspm_io_type
MADIface	./include/sound/hdspm.h	/^	MADIface,$/;"	e	enum:hdspm_io_type
MASK_BIT	./src/pcm/mask_inline.h	31;"	d
MASK_INLINE	./src/pcm/mask_inline.h	25;"	d
MASK_MAX	./src/pcm/mask_inline.h	27;"	d
MASK_OFS	./src/pcm/mask_inline.h	30;"	d
MASK_SIZE	./src/pcm/mask_inline.h	28;"	d
MAX_CHANNEL	./modules/mixer/simple/sbase.h	26;"	d
MAX_DB_UPPER_LIMIT	./src/pcm/pcm_softvol.c	62;"	d	file:
MAX_FILE	./src/ucm/ucm_local.h	43;"	d
MAX_HISTORY	./test/midifile.c	126;"	d	file:
MAX_SPIN_COUNT	./include/iatomic.h	1139;"	d
MAX_TLV_RANGE_SIZE	./src/control/tlv.c	42;"	d	file:
MIDI_CHANNELS	./include/asoundef.h	190;"	d
MIDI_CHANNELS	./include/sound/asoundef.h	122;"	d
MIDI_CMD_BENDER	./include/asoundef.h	205;"	d
MIDI_CMD_BENDER	./include/sound/asoundef.h	135;"	d
MIDI_CMD_CHANNEL_PRESSURE	./include/asoundef.h	204;"	d
MIDI_CMD_CHANNEL_PRESSURE	./include/sound/asoundef.h	134;"	d
MIDI_CMD_COMMON_CLOCK	./include/asoundef.h	213;"	d
MIDI_CMD_COMMON_CLOCK	./include/sound/asoundef.h	143;"	d
MIDI_CMD_COMMON_CONTINUE	./include/asoundef.h	215;"	d
MIDI_CMD_COMMON_CONTINUE	./include/sound/asoundef.h	145;"	d
MIDI_CMD_COMMON_MTC_QUARTER	./include/asoundef.h	208;"	d
MIDI_CMD_COMMON_MTC_QUARTER	./include/sound/asoundef.h	138;"	d
MIDI_CMD_COMMON_RESET	./include/asoundef.h	218;"	d
MIDI_CMD_COMMON_RESET	./include/sound/asoundef.h	148;"	d
MIDI_CMD_COMMON_SENSING	./include/asoundef.h	217;"	d
MIDI_CMD_COMMON_SENSING	./include/sound/asoundef.h	147;"	d
MIDI_CMD_COMMON_SONG_POS	./include/asoundef.h	209;"	d
MIDI_CMD_COMMON_SONG_POS	./include/sound/asoundef.h	139;"	d
MIDI_CMD_COMMON_SONG_SELECT	./include/asoundef.h	210;"	d
MIDI_CMD_COMMON_SONG_SELECT	./include/sound/asoundef.h	140;"	d
MIDI_CMD_COMMON_START	./include/asoundef.h	214;"	d
MIDI_CMD_COMMON_START	./include/sound/asoundef.h	144;"	d
MIDI_CMD_COMMON_STOP	./include/asoundef.h	216;"	d
MIDI_CMD_COMMON_STOP	./include/sound/asoundef.h	146;"	d
MIDI_CMD_COMMON_SYSEX	./include/asoundef.h	207;"	d
MIDI_CMD_COMMON_SYSEX	./include/sound/asoundef.h	137;"	d
MIDI_CMD_COMMON_SYSEX_END	./include/asoundef.h	212;"	d
MIDI_CMD_COMMON_SYSEX_END	./include/sound/asoundef.h	142;"	d
MIDI_CMD_COMMON_TUNE_REQUEST	./include/asoundef.h	211;"	d
MIDI_CMD_COMMON_TUNE_REQUEST	./include/sound/asoundef.h	141;"	d
MIDI_CMD_CONTROL	./include/asoundef.h	202;"	d
MIDI_CMD_CONTROL	./include/sound/asoundef.h	132;"	d
MIDI_CMD_NOTE_OFF	./include/asoundef.h	199;"	d
MIDI_CMD_NOTE_OFF	./include/sound/asoundef.h	129;"	d
MIDI_CMD_NOTE_ON	./include/asoundef.h	200;"	d
MIDI_CMD_NOTE_ON	./include/sound/asoundef.h	130;"	d
MIDI_CMD_NOTE_PRESSURE	./include/asoundef.h	201;"	d
MIDI_CMD_NOTE_PRESSURE	./include/sound/asoundef.h	131;"	d
MIDI_CMD_PGM_CHANGE	./include/asoundef.h	203;"	d
MIDI_CMD_PGM_CHANGE	./include/sound/asoundef.h	133;"	d
MIDI_CTL_ALL_NOTES_OFF	./include/asoundef.h	296;"	d
MIDI_CTL_ALL_NOTES_OFF	./include/sound/asoundef.h	221;"	d
MIDI_CTL_ALL_SOUNDS_OFF	./include/asoundef.h	293;"	d
MIDI_CTL_ALL_SOUNDS_OFF	./include/sound/asoundef.h	218;"	d
MIDI_CTL_DATA_DECREMENT	./include/asoundef.h	288;"	d
MIDI_CTL_DATA_DECREMENT	./include/sound/asoundef.h	213;"	d
MIDI_CTL_DATA_INCREMENT	./include/asoundef.h	287;"	d
MIDI_CTL_DATA_INCREMENT	./include/sound/asoundef.h	212;"	d
MIDI_CTL_E1_REVERB_DEPTH	./include/asoundef.h	282;"	d
MIDI_CTL_E1_REVERB_DEPTH	./include/sound/asoundef.h	207;"	d
MIDI_CTL_E2_TREMOLO_DEPTH	./include/asoundef.h	283;"	d
MIDI_CTL_E2_TREMOLO_DEPTH	./include/sound/asoundef.h	208;"	d
MIDI_CTL_E3_CHORUS_DEPTH	./include/asoundef.h	284;"	d
MIDI_CTL_E3_CHORUS_DEPTH	./include/sound/asoundef.h	209;"	d
MIDI_CTL_E4_DETUNE_DEPTH	./include/asoundef.h	285;"	d
MIDI_CTL_E4_DETUNE_DEPTH	./include/sound/asoundef.h	210;"	d
MIDI_CTL_E5_PHASER_DEPTH	./include/asoundef.h	286;"	d
MIDI_CTL_E5_PHASER_DEPTH	./include/sound/asoundef.h	211;"	d
MIDI_CTL_GENERAL_PURPOSE5	./include/asoundef.h	277;"	d
MIDI_CTL_GENERAL_PURPOSE5	./include/sound/asoundef.h	202;"	d
MIDI_CTL_GENERAL_PURPOSE6	./include/asoundef.h	278;"	d
MIDI_CTL_GENERAL_PURPOSE6	./include/sound/asoundef.h	203;"	d
MIDI_CTL_GENERAL_PURPOSE7	./include/asoundef.h	279;"	d
MIDI_CTL_GENERAL_PURPOSE7	./include/sound/asoundef.h	204;"	d
MIDI_CTL_GENERAL_PURPOSE8	./include/asoundef.h	280;"	d
MIDI_CTL_GENERAL_PURPOSE8	./include/sound/asoundef.h	205;"	d
MIDI_CTL_HOLD2	./include/asoundef.h	266;"	d
MIDI_CTL_HOLD2	./include/sound/asoundef.h	191;"	d
MIDI_CTL_LEGATO_FOOTSWITCH	./include/asoundef.h	265;"	d
MIDI_CTL_LEGATO_FOOTSWITCH	./include/sound/asoundef.h	190;"	d
MIDI_CTL_LOCAL_CONTROL_SWITCH	./include/asoundef.h	295;"	d
MIDI_CTL_LOCAL_CONTROL_SWITCH	./include/sound/asoundef.h	220;"	d
MIDI_CTL_LSB_BALANCE	./include/asoundef.h	251;"	d
MIDI_CTL_LSB_BALANCE	./include/sound/asoundef.h	177;"	d
MIDI_CTL_LSB_BANK	./include/asoundef.h	244;"	d
MIDI_CTL_LSB_BANK	./include/sound/asoundef.h	170;"	d
MIDI_CTL_LSB_BREATH	./include/asoundef.h	246;"	d
MIDI_CTL_LSB_BREATH	./include/sound/asoundef.h	172;"	d
MIDI_CTL_LSB_DATA_ENTRY	./include/asoundef.h	249;"	d
MIDI_CTL_LSB_DATA_ENTRY	./include/sound/asoundef.h	175;"	d
MIDI_CTL_LSB_EFFECT1	./include/asoundef.h	254;"	d
MIDI_CTL_LSB_EFFECT1	./include/sound/asoundef.h	180;"	d
MIDI_CTL_LSB_EFFECT2	./include/asoundef.h	255;"	d
MIDI_CTL_LSB_EFFECT2	./include/sound/asoundef.h	181;"	d
MIDI_CTL_LSB_EXPRESSION	./include/asoundef.h	253;"	d
MIDI_CTL_LSB_EXPRESSION	./include/sound/asoundef.h	179;"	d
MIDI_CTL_LSB_FOOT	./include/asoundef.h	247;"	d
MIDI_CTL_LSB_FOOT	./include/sound/asoundef.h	173;"	d
MIDI_CTL_LSB_GENERAL_PURPOSE1	./include/asoundef.h	256;"	d
MIDI_CTL_LSB_GENERAL_PURPOSE1	./include/sound/asoundef.h	182;"	d
MIDI_CTL_LSB_GENERAL_PURPOSE2	./include/asoundef.h	257;"	d
MIDI_CTL_LSB_GENERAL_PURPOSE2	./include/sound/asoundef.h	183;"	d
MIDI_CTL_LSB_GENERAL_PURPOSE3	./include/asoundef.h	258;"	d
MIDI_CTL_LSB_GENERAL_PURPOSE3	./include/sound/asoundef.h	184;"	d
MIDI_CTL_LSB_GENERAL_PURPOSE4	./include/asoundef.h	259;"	d
MIDI_CTL_LSB_GENERAL_PURPOSE4	./include/sound/asoundef.h	185;"	d
MIDI_CTL_LSB_MAIN_VOLUME	./include/asoundef.h	250;"	d
MIDI_CTL_LSB_MAIN_VOLUME	./include/sound/asoundef.h	176;"	d
MIDI_CTL_LSB_MODWHEEL	./include/asoundef.h	245;"	d
MIDI_CTL_LSB_MODWHEEL	./include/sound/asoundef.h	171;"	d
MIDI_CTL_LSB_PAN	./include/asoundef.h	252;"	d
MIDI_CTL_LSB_PAN	./include/sound/asoundef.h	178;"	d
MIDI_CTL_LSB_PORTAMENTO_TIME	./include/asoundef.h	248;"	d
MIDI_CTL_LSB_PORTAMENTO_TIME	./include/sound/asoundef.h	174;"	d
MIDI_CTL_MONO1	./include/asoundef.h	299;"	d
MIDI_CTL_MONO1	./include/sound/asoundef.h	224;"	d
MIDI_CTL_MONO2	./include/asoundef.h	300;"	d
MIDI_CTL_MONO2	./include/sound/asoundef.h	225;"	d
MIDI_CTL_MSB_BALANCE	./include/asoundef.h	235;"	d
MIDI_CTL_MSB_BALANCE	./include/sound/asoundef.h	161;"	d
MIDI_CTL_MSB_BANK	./include/asoundef.h	228;"	d
MIDI_CTL_MSB_BANK	./include/sound/asoundef.h	154;"	d
MIDI_CTL_MSB_BREATH	./include/asoundef.h	230;"	d
MIDI_CTL_MSB_BREATH	./include/sound/asoundef.h	156;"	d
MIDI_CTL_MSB_DATA_ENTRY	./include/asoundef.h	233;"	d
MIDI_CTL_MSB_DATA_ENTRY	./include/sound/asoundef.h	159;"	d
MIDI_CTL_MSB_EFFECT1	./include/asoundef.h	238;"	d
MIDI_CTL_MSB_EFFECT1	./include/sound/asoundef.h	164;"	d
MIDI_CTL_MSB_EFFECT2	./include/asoundef.h	239;"	d
MIDI_CTL_MSB_EFFECT2	./include/sound/asoundef.h	165;"	d
MIDI_CTL_MSB_EXPRESSION	./include/asoundef.h	237;"	d
MIDI_CTL_MSB_EXPRESSION	./include/sound/asoundef.h	163;"	d
MIDI_CTL_MSB_FOOT	./include/asoundef.h	231;"	d
MIDI_CTL_MSB_FOOT	./include/sound/asoundef.h	157;"	d
MIDI_CTL_MSB_GENERAL_PURPOSE1	./include/asoundef.h	240;"	d
MIDI_CTL_MSB_GENERAL_PURPOSE1	./include/sound/asoundef.h	166;"	d
MIDI_CTL_MSB_GENERAL_PURPOSE2	./include/asoundef.h	241;"	d
MIDI_CTL_MSB_GENERAL_PURPOSE2	./include/sound/asoundef.h	167;"	d
MIDI_CTL_MSB_GENERAL_PURPOSE3	./include/asoundef.h	242;"	d
MIDI_CTL_MSB_GENERAL_PURPOSE3	./include/sound/asoundef.h	168;"	d
MIDI_CTL_MSB_GENERAL_PURPOSE4	./include/asoundef.h	243;"	d
MIDI_CTL_MSB_GENERAL_PURPOSE4	./include/sound/asoundef.h	169;"	d
MIDI_CTL_MSB_MAIN_VOLUME	./include/asoundef.h	234;"	d
MIDI_CTL_MSB_MAIN_VOLUME	./include/sound/asoundef.h	160;"	d
MIDI_CTL_MSB_MODWHEEL	./include/asoundef.h	229;"	d
MIDI_CTL_MSB_MODWHEEL	./include/sound/asoundef.h	155;"	d
MIDI_CTL_MSB_PAN	./include/asoundef.h	236;"	d
MIDI_CTL_MSB_PAN	./include/sound/asoundef.h	162;"	d
MIDI_CTL_MSB_PORTAMENTO_TIME	./include/asoundef.h	232;"	d
MIDI_CTL_MSB_PORTAMENTO_TIME	./include/sound/asoundef.h	158;"	d
MIDI_CTL_NONREG_PARM_NUM_LSB	./include/asoundef.h	289;"	d
MIDI_CTL_NONREG_PARM_NUM_LSB	./include/sound/asoundef.h	214;"	d
MIDI_CTL_NONREG_PARM_NUM_MSB	./include/asoundef.h	290;"	d
MIDI_CTL_NONREG_PARM_NUM_MSB	./include/sound/asoundef.h	215;"	d
MIDI_CTL_OMNI_OFF	./include/asoundef.h	297;"	d
MIDI_CTL_OMNI_OFF	./include/sound/asoundef.h	222;"	d
MIDI_CTL_OMNI_ON	./include/asoundef.h	298;"	d
MIDI_CTL_OMNI_ON	./include/sound/asoundef.h	223;"	d
MIDI_CTL_PORTAMENTO	./include/asoundef.h	261;"	d
MIDI_CTL_PORTAMENTO	./include/sound/asoundef.h	187;"	d
MIDI_CTL_PORTAMENTO_CONTROL	./include/asoundef.h	281;"	d
MIDI_CTL_PORTAMENTO_CONTROL	./include/sound/asoundef.h	206;"	d
MIDI_CTL_REGIST_PARM_NUM_LSB	./include/asoundef.h	291;"	d
MIDI_CTL_REGIST_PARM_NUM_LSB	./include/sound/asoundef.h	216;"	d
MIDI_CTL_REGIST_PARM_NUM_MSB	./include/asoundef.h	292;"	d
MIDI_CTL_REGIST_PARM_NUM_MSB	./include/sound/asoundef.h	217;"	d
MIDI_CTL_RESET_CONTROLLERS	./include/asoundef.h	294;"	d
MIDI_CTL_RESET_CONTROLLERS	./include/sound/asoundef.h	219;"	d
MIDI_CTL_SC10	./include/asoundef.h	276;"	d
MIDI_CTL_SC10	./include/sound/asoundef.h	201;"	d
MIDI_CTL_SC1_SOUND_VARIATION	./include/asoundef.h	267;"	d
MIDI_CTL_SC1_SOUND_VARIATION	./include/sound/asoundef.h	192;"	d
MIDI_CTL_SC2_TIMBRE	./include/asoundef.h	268;"	d
MIDI_CTL_SC2_TIMBRE	./include/sound/asoundef.h	193;"	d
MIDI_CTL_SC3_RELEASE_TIME	./include/asoundef.h	269;"	d
MIDI_CTL_SC3_RELEASE_TIME	./include/sound/asoundef.h	194;"	d
MIDI_CTL_SC4_ATTACK_TIME	./include/asoundef.h	270;"	d
MIDI_CTL_SC4_ATTACK_TIME	./include/sound/asoundef.h	195;"	d
MIDI_CTL_SC5_BRIGHTNESS	./include/asoundef.h	271;"	d
MIDI_CTL_SC5_BRIGHTNESS	./include/sound/asoundef.h	196;"	d
MIDI_CTL_SC6	./include/asoundef.h	272;"	d
MIDI_CTL_SC6	./include/sound/asoundef.h	197;"	d
MIDI_CTL_SC7	./include/asoundef.h	273;"	d
MIDI_CTL_SC7	./include/sound/asoundef.h	198;"	d
MIDI_CTL_SC8	./include/asoundef.h	274;"	d
MIDI_CTL_SC8	./include/sound/asoundef.h	199;"	d
MIDI_CTL_SC9	./include/asoundef.h	275;"	d
MIDI_CTL_SC9	./include/sound/asoundef.h	200;"	d
MIDI_CTL_SOFT_PEDAL	./include/asoundef.h	264;"	d
MIDI_CTL_SOFT_PEDAL	./include/sound/asoundef.h	189;"	d
MIDI_CTL_SOSTENUTO	./include/asoundef.h	262;"	d
MIDI_CTL_SUSTAIN	./include/asoundef.h	260;"	d
MIDI_CTL_SUSTAIN	./include/sound/asoundef.h	186;"	d
MIDI_CTL_SUSTENUTO	./include/asoundef.h	263;"	d
MIDI_CTL_SUSTENUTO	./include/sound/asoundef.h	188;"	d
MIDI_GM_DRUM_CHANNEL	./include/asoundef.h	191;"	d
MIDI_GM_DRUM_CHANNEL	./include/sound/asoundef.h	123;"	d
MIXER_COMPARE_WEIGHT_NEXT_BASE	./src/mixer/simple_none.c	48;"	d	file:
MIXER_COMPARE_WEIGHT_NOT_FOUND	./src/mixer/simple_none.c	49;"	d	file:
MIXER_COMPARE_WEIGHT_SIMPLE_BASE	./src/mixer/simple_none.c	47;"	d	file:
MIX_AREAS_16	./src/pcm/pcm_dmix_i386.c	14;"	d	file:
MIX_AREAS_16	./src/pcm/pcm_dmix_i386.c	23;"	d	file:
MIX_AREAS_16	./src/pcm/pcm_dmix_i386.c	32;"	d	file:
MIX_AREAS_16	./src/pcm/pcm_dmix_i386.c	41;"	d	file:
MIX_AREAS_16	./src/pcm/pcm_dmix_i386.c	50;"	d	file:
MIX_AREAS_16	./src/pcm/pcm_dmix_i386.c	59;"	d	file:
MIX_AREAS_16	./src/pcm/pcm_dmix_i386.c	5;"	d	file:
MIX_AREAS_16	./src/pcm/pcm_dmix_i386.c	68;"	d	file:
MIX_AREAS_16	./src/pcm/pcm_dmix_i386.h	/^static void MIX_AREAS_16(unsigned int size,$/;"	f
MIX_AREAS_16	./src/pcm/pcm_dmix_x86_64.c	12;"	d	file:
MIX_AREAS_16	./src/pcm/pcm_dmix_x86_64.c	19;"	d	file:
MIX_AREAS_16	./src/pcm/pcm_dmix_x86_64.c	26;"	d	file:
MIX_AREAS_16	./src/pcm/pcm_dmix_x86_64.c	33;"	d	file:
MIX_AREAS_16	./src/pcm/pcm_dmix_x86_64.c	40;"	d	file:
MIX_AREAS_16	./src/pcm/pcm_dmix_x86_64.c	47;"	d	file:
MIX_AREAS_16	./src/pcm/pcm_dmix_x86_64.c	54;"	d	file:
MIX_AREAS_16	./src/pcm/pcm_dmix_x86_64.c	5;"	d	file:
MIX_AREAS_16	./src/pcm/pcm_dmix_x86_64.h	/^static void MIX_AREAS_16(unsigned int size,$/;"	f
MIX_AREAS_16_MMX	./src/pcm/pcm_dmix_i386.c	15;"	d	file:
MIX_AREAS_16_MMX	./src/pcm/pcm_dmix_i386.c	24;"	d	file:
MIX_AREAS_16_MMX	./src/pcm/pcm_dmix_i386.c	33;"	d	file:
MIX_AREAS_16_MMX	./src/pcm/pcm_dmix_i386.c	42;"	d	file:
MIX_AREAS_16_MMX	./src/pcm/pcm_dmix_i386.c	51;"	d	file:
MIX_AREAS_16_MMX	./src/pcm/pcm_dmix_i386.c	60;"	d	file:
MIX_AREAS_16_MMX	./src/pcm/pcm_dmix_i386.c	69;"	d	file:
MIX_AREAS_16_MMX	./src/pcm/pcm_dmix_i386.c	6;"	d	file:
MIX_AREAS_16_MMX	./src/pcm/pcm_dmix_i386.h	/^static void MIX_AREAS_16_MMX(unsigned int size,$/;"	f
MIX_AREAS_24	./src/pcm/pcm_dmix_i386.c	17;"	d	file:
MIX_AREAS_24	./src/pcm/pcm_dmix_i386.c	26;"	d	file:
MIX_AREAS_24	./src/pcm/pcm_dmix_i386.c	35;"	d	file:
MIX_AREAS_24	./src/pcm/pcm_dmix_i386.c	44;"	d	file:
MIX_AREAS_24	./src/pcm/pcm_dmix_i386.c	53;"	d	file:
MIX_AREAS_24	./src/pcm/pcm_dmix_i386.c	62;"	d	file:
MIX_AREAS_24	./src/pcm/pcm_dmix_i386.c	71;"	d	file:
MIX_AREAS_24	./src/pcm/pcm_dmix_i386.c	8;"	d	file:
MIX_AREAS_24	./src/pcm/pcm_dmix_i386.h	/^static void MIX_AREAS_24(unsigned int size,$/;"	f
MIX_AREAS_24	./src/pcm/pcm_dmix_x86_64.c	14;"	d	file:
MIX_AREAS_24	./src/pcm/pcm_dmix_x86_64.c	21;"	d	file:
MIX_AREAS_24	./src/pcm/pcm_dmix_x86_64.c	28;"	d	file:
MIX_AREAS_24	./src/pcm/pcm_dmix_x86_64.c	35;"	d	file:
MIX_AREAS_24	./src/pcm/pcm_dmix_x86_64.c	42;"	d	file:
MIX_AREAS_24	./src/pcm/pcm_dmix_x86_64.c	49;"	d	file:
MIX_AREAS_24	./src/pcm/pcm_dmix_x86_64.c	56;"	d	file:
MIX_AREAS_24	./src/pcm/pcm_dmix_x86_64.c	7;"	d	file:
MIX_AREAS_24	./src/pcm/pcm_dmix_x86_64.h	/^static void MIX_AREAS_24(unsigned int size,$/;"	f
MIX_AREAS_24_CMOV	./src/pcm/pcm_dmix_i386.c	18;"	d	file:
MIX_AREAS_24_CMOV	./src/pcm/pcm_dmix_i386.c	27;"	d	file:
MIX_AREAS_24_CMOV	./src/pcm/pcm_dmix_i386.c	36;"	d	file:
MIX_AREAS_24_CMOV	./src/pcm/pcm_dmix_i386.c	45;"	d	file:
MIX_AREAS_24_CMOV	./src/pcm/pcm_dmix_i386.c	54;"	d	file:
MIX_AREAS_24_CMOV	./src/pcm/pcm_dmix_i386.c	63;"	d	file:
MIX_AREAS_24_CMOV	./src/pcm/pcm_dmix_i386.c	72;"	d	file:
MIX_AREAS_24_CMOV	./src/pcm/pcm_dmix_i386.c	9;"	d	file:
MIX_AREAS_24_CMOV	./src/pcm/pcm_dmix_i386.h	/^static void MIX_AREAS_24_CMOV(unsigned int size,$/;"	f
MIX_AREAS_32	./src/pcm/pcm_dmix_i386.c	16;"	d	file:
MIX_AREAS_32	./src/pcm/pcm_dmix_i386.c	25;"	d	file:
MIX_AREAS_32	./src/pcm/pcm_dmix_i386.c	34;"	d	file:
MIX_AREAS_32	./src/pcm/pcm_dmix_i386.c	43;"	d	file:
MIX_AREAS_32	./src/pcm/pcm_dmix_i386.c	52;"	d	file:
MIX_AREAS_32	./src/pcm/pcm_dmix_i386.c	61;"	d	file:
MIX_AREAS_32	./src/pcm/pcm_dmix_i386.c	70;"	d	file:
MIX_AREAS_32	./src/pcm/pcm_dmix_i386.c	7;"	d	file:
MIX_AREAS_32	./src/pcm/pcm_dmix_i386.h	/^static void MIX_AREAS_32(unsigned int size,$/;"	f
MIX_AREAS_32	./src/pcm/pcm_dmix_x86_64.c	13;"	d	file:
MIX_AREAS_32	./src/pcm/pcm_dmix_x86_64.c	20;"	d	file:
MIX_AREAS_32	./src/pcm/pcm_dmix_x86_64.c	27;"	d	file:
MIX_AREAS_32	./src/pcm/pcm_dmix_x86_64.c	34;"	d	file:
MIX_AREAS_32	./src/pcm/pcm_dmix_x86_64.c	41;"	d	file:
MIX_AREAS_32	./src/pcm/pcm_dmix_x86_64.c	48;"	d	file:
MIX_AREAS_32	./src/pcm/pcm_dmix_x86_64.c	55;"	d	file:
MIX_AREAS_32	./src/pcm/pcm_dmix_x86_64.c	6;"	d	file:
MIX_AREAS_32	./src/pcm/pcm_dmix_x86_64.h	/^static void MIX_AREAS_32(unsigned int size,$/;"	f
MSGINCREMENT	./test/midifile.c	712;"	d	file:
MThd	./test/midifile.h	126;"	d
MTrk	./test/midifile.h	127;"	d
MULTI_DIV_24	./src/pcm/pcm_softvol.c	/^static inline int MULTI_DIV_24(int a, unsigned int b)$/;"	f	file:
MULTI_DIV_32x16	./src/pcm/pcm_softvol.c	/^static inline int MULTI_DIV_32x16(int a, unsigned short b)$/;"	f	file:
MULTI_DIV_int	./src/pcm/pcm_softvol.c	/^static inline int MULTI_DIV_int(int a, unsigned int b, int swap)$/;"	f	file:
MULTI_DIV_short	./src/pcm/pcm_softvol.c	/^static inline short MULTI_DIV_short(short a, unsigned int b, int swap)$/;"	f	file:
Maker	./src/pcm/ladspa.h	/^  const char * Maker;$/;"	m	struct:_LADSPA_Descriptor
Mf_arbitrary	./test/midifile.c	/^void (*Mf_arbitrary) () = NULLFUNC;$/;"	v
Mf_chanpressure	./test/midifile.c	/^void (*Mf_chanpressure) () = NULLFUNC;$/;"	v
Mf_currtempo	./test/midifile.c	/^unsigned long Mf_currtempo = 500000;$/;"	v
Mf_currtime	./test/midifile.c	/^unsigned long Mf_currtime = 0L;	\/* current time in delta-time units *\/$/;"	v
Mf_division	./test/midifile.c	/^int Mf_division = 96;$/;"	v
Mf_eot	./test/midifile.c	/^void (*Mf_eot) () = NULLFUNC;$/;"	v
Mf_error	./test/midifile.c	/^void (*Mf_error) () = NULLFUNC;$/;"	v
Mf_f_realtime	./test/midifile.c	/^static double Mf_f_realtime = 0;\/* as above, floating *\/$/;"	v	file:
Mf_getc	./test/midifile.c	/^int (*Mf_getc) () = NULLFUNC;$/;"	v
Mf_header	./test/midifile.c	/^void (*Mf_header) () = NULLFUNC;$/;"	v
Mf_interactive	./test/midifile.c	/^int Mf_interactive = 0;		\/* 1 => file and track headers are not required *\/$/;"	v
Mf_keysig	./test/midifile.c	/^void (*Mf_keysig) () = NULLFUNC;$/;"	v
Mf_metamisc	./test/midifile.c	/^void (*Mf_metamisc) () = NULLFUNC;$/;"	v
Mf_nomerge	./test/midifile.c	/^int Mf_nomerge = 0;		\/* 1 => continue'ed system exclusives are *\/$/;"	v
Mf_noteoff	./test/midifile.c	/^void (*Mf_noteoff) () = NULLFUNC;$/;"	v
Mf_noteon	./test/midifile.c	/^void (*Mf_noteon) () = NULLFUNC;$/;"	v
Mf_numbyteswritten	./test/midifile.c	/^static long Mf_numbyteswritten = 0L;$/;"	v	file:
Mf_parameter	./test/midifile.c	/^void (*Mf_parameter) () = NULLFUNC;$/;"	v
Mf_pitchbend	./test/midifile.c	/^void (*Mf_pitchbend) () = NULLFUNC;$/;"	v
Mf_pressure	./test/midifile.c	/^void (*Mf_pressure) () = NULLFUNC;$/;"	v
Mf_program	./test/midifile.c	/^void (*Mf_program) () = NULLFUNC;$/;"	v
Mf_putc	./test/midifile.c	/^int (*Mf_putc) () = NULLFUNC;$/;"	v
Mf_realtime	./test/midifile.c	/^unsigned long Mf_realtime = 0L;	\/* current time in 1\/16 centisecond-time units *\/$/;"	v
Mf_seqnum	./test/midifile.c	/^void (*Mf_seqnum) () = NULLFUNC;$/;"	v
Mf_seqspecific	./test/midifile.c	/^void (*Mf_seqspecific) () = NULLFUNC;$/;"	v
Mf_smpte	./test/midifile.c	/^void (*Mf_smpte) () = NULLFUNC;$/;"	v
Mf_sysex	./test/midifile.c	/^void (*Mf_sysex) () = NULLFUNC;$/;"	v
Mf_tempo	./test/midifile.c	/^void (*Mf_tempo) () = NULLFUNC;$/;"	v
Mf_text	./test/midifile.c	/^void (*Mf_text) () = NULLFUNC;$/;"	v
Mf_timesig	./test/midifile.c	/^void (*Mf_timesig) () = NULLFUNC;$/;"	v
Mf_toberead	./test/midifile.c	/^static long Mf_toberead = 0L;$/;"	v	file:
Mf_trackend	./test/midifile.c	/^void (*Mf_trackend) () = NULLFUNC;$/;"	v
Mf_trackstart	./test/midifile.c	/^void (*Mf_trackstart) () = NULLFUNC;$/;"	v
Mf_writetempotrack	./test/midifile.c	/^int (*Mf_writetempotrack) () = NULLFUNC;$/;"	v
Mf_writetrack	./test/midifile.c	/^int (*Mf_writetrack) () = NULLFUNC;$/;"	v
Moog	./test/midifile.h	114;"	d
Msgbuff	./test/midifile.c	/^static char *Msgbuff = NULL;	\/* message buffer *\/$/;"	v	file:
Msgindex	./test/midifile.c	/^static int Msgindex = 0;	\/* index of next available location in Msg *\/$/;"	v	file:
Msgsize	./test/midifile.c	/^static int Msgsize = 0;		\/* Size of currently allocated Msg *\/$/;"	v	file:
Multiface	./include/sound/hdsp.h	/^	Multiface,$/;"	e	enum:__anon14
NDEBUG	./include/config.h	116;"	d
NOT_FOUND	./src/control/hcontrol.c	57;"	d	file:
NO_ASSIGN	./src/pcm/pcm_ladspa.c	50;"	d	file:
NO_CLIENT	./include/sound/asequencer.h	/^	NO_CLIENT       = 0,$/;"	e	enum:sndrv_seq_client_type
NO_CONCURRENT_ACCESS	./src/pcm/pcm_dmix_generic.c	46;"	d	file:
NO_LC_DEFINES	./test/midifile.c	52;"	d	file:
NULLFUNC	./test/midifile.c	62;"	d	file:
Name	./src/pcm/ladspa.h	/^  const char * Name;$/;"	m	struct:_LADSPA_Descriptor
OBSOLETE1	./src/pcm/pcm.c	7044;"	d	file:
OBSOLETE1	./src/pcm/pcm.c	7050;"	d	file:
Octave	./test/midifile.h	113;"	d
PACKAGE	./include/config.h	120;"	d
PACKAGE_BUGREPORT	./include/config.h	123;"	d
PACKAGE_NAME	./include/config.h	126;"	d
PACKAGE_STRING	./include/config.h	129;"	d
PACKAGE_TARNAME	./include/config.h	132;"	d
PACKAGE_VERSION	./include/config.h	135;"	d
PCMTYPE	./src/pcm/pcm.c	1465;"	d	file:
PCM_SHM_SIZE	./include/aserver.h	109;"	d
PEAK_MS	./src/pcm/scopes/level.c	29;"	d	file:
PLUG_ROUTE_POLICY_AVERAGE	./src/pcm/pcm_plug.c	/^	PLUG_ROUTE_POLICY_AVERAGE,$/;"	e	enum:snd_pcm_plug_route_policy	file:
PLUG_ROUTE_POLICY_COPY	./src/pcm/pcm_plug.c	/^	PLUG_ROUTE_POLICY_COPY,$/;"	e	enum:snd_pcm_plug_route_policy	file:
PLUG_ROUTE_POLICY_DEFAULT	./src/pcm/pcm_plug.c	/^	PLUG_ROUTE_POLICY_DEFAULT,$/;"	e	enum:snd_pcm_plug_route_policy	file:
PLUG_ROUTE_POLICY_DUP	./src/pcm/pcm_plug.c	/^	PLUG_ROUTE_POLICY_DUP,$/;"	e	enum:snd_pcm_plug_route_policy	file:
PLUG_ROUTE_POLICY_NONE	./src/pcm/pcm_plug.c	/^	PLUG_ROUTE_POLICY_NONE,$/;"	e	enum:snd_pcm_plug_route_policy	file:
PREAMBLE_X	./src/pcm/pcm_iec958.c	/^enum { PREAMBLE_Z, PREAMBLE_X, PREAMBLE_Y };$/;"	e	enum:__anon120	file:
PREAMBLE_Y	./src/pcm/pcm_iec958.c	/^enum { PREAMBLE_Z, PREAMBLE_X, PREAMBLE_Y };$/;"	e	enum:__anon120	file:
PREAMBLE_Z	./src/pcm/pcm_iec958.c	/^enum { PREAMBLE_Z, PREAMBLE_X, PREAMBLE_Y };$/;"	e	enum:__anon120	file:
PRESET_MIN_DB	./src/pcm/pcm_softvol.c	60;"	d	file:
PRESET_RESOLUTION	./src/pcm/pcm_softvol.c	59;"	d	file:
PURPOSE_ENUMLIST	./modules/mixer/simple/sbase.h	45;"	d
PURPOSE_SWITCH	./modules/mixer/simple/sbase.h	44;"	d
PURPOSE_VOLUME	./modules/mixer/simple/sbase.h	43;"	d
PUT16_END	./src/pcm/pcm_adpcm.c	254;"	d	file:
PUT16_END	./src/pcm/pcm_adpcm.c	256;"	d	file:
PUT16_END	./src/pcm/pcm_alaw.c	171;"	d	file:
PUT16_END	./src/pcm/pcm_alaw.c	173;"	d	file:
PUT16_END	./src/pcm/pcm_mulaw.c	188;"	d	file:
PUT16_END	./src/pcm/pcm_mulaw.c	190;"	d	file:
PUT16_END	./src/pcm/pcm_rate.c	497;"	d	file:
PUT16_END	./src/pcm/pcm_rate.c	499;"	d	file:
PUT16_END	./src/pcm/pcm_rate_linear.c	122;"	d	file:
PUT16_END	./src/pcm/pcm_rate_linear.c	124;"	d	file:
PUT16_END	./src/pcm/pcm_rate_linear.c	243;"	d	file:
PUT16_END	./src/pcm/pcm_rate_linear.c	245;"	d	file:
PUT16_LABELS	./src/pcm/pcm_adpcm.c	224;"	d	file:
PUT16_LABELS	./src/pcm/pcm_adpcm.c	226;"	d	file:
PUT16_LABELS	./src/pcm/pcm_alaw.c	151;"	d	file:
PUT16_LABELS	./src/pcm/pcm_alaw.c	153;"	d	file:
PUT16_LABELS	./src/pcm/pcm_mulaw.c	168;"	d	file:
PUT16_LABELS	./src/pcm/pcm_mulaw.c	170;"	d	file:
PUT16_LABELS	./src/pcm/pcm_rate.c	475;"	d	file:
PUT16_LABELS	./src/pcm/pcm_rate.c	477;"	d	file:
PUT16_LABELS	./src/pcm/pcm_rate_linear.c	197;"	d	file:
PUT16_LABELS	./src/pcm/pcm_rate_linear.c	200;"	d	file:
PUT16_LABELS	./src/pcm/pcm_rate_linear.c	75;"	d	file:
PUT16_LABELS	./src/pcm/pcm_rate_linear.c	78;"	d	file:
PUT32F_END	./src/pcm/pcm_lfloat.c	131;"	d	file:
PUT32F_END	./src/pcm/pcm_lfloat.c	133;"	d	file:
PUT32F_LABELS	./src/pcm/pcm_lfloat.c	102;"	d	file:
PUT32F_LABELS	./src/pcm/pcm_lfloat.c	104;"	d	file:
PUT32_END	./src/pcm/pcm_iec958.c	171;"	d	file:
PUT32_END	./src/pcm/pcm_iec958.c	173;"	d	file:
PUT32_END	./src/pcm/pcm_lfloat.c	176;"	d	file:
PUT32_END	./src/pcm/pcm_lfloat.c	178;"	d	file:
PUT32_END	./src/pcm/pcm_route.c	466;"	d	file:
PUT32_END	./src/pcm/pcm_route.c	468;"	d	file:
PUT32_END	./src/pcm/plugin_ops.h	551;"	d
PUT32_END	./src/pcm/plugin_ops.h	627;"	d
PUT32_LABELS	./src/pcm/pcm_iec958.c	151;"	d	file:
PUT32_LABELS	./src/pcm/pcm_iec958.c	153;"	d	file:
PUT32_LABELS	./src/pcm/pcm_lfloat.c	146;"	d	file:
PUT32_LABELS	./src/pcm/pcm_lfloat.c	150;"	d	file:
PUT32_LABELS	./src/pcm/pcm_route.c	235;"	d	file:
PUT32_LABELS	./src/pcm/pcm_route.c	238;"	d	file:
PUT32_LABELS	./src/pcm/plugin_ops.h	476;"	d
PUT32_LABELS	./src/pcm/plugin_ops.h	591;"	d
Passport	./test/midifile.h	115;"	d
PortCount	./src/pcm/ladspa.h	/^  unsigned long PortCount;$/;"	m	struct:_LADSPA_Descriptor
PortDescriptors	./src/pcm/ladspa.h	/^  const LADSPA_PortDescriptor * PortDescriptors;$/;"	m	struct:_LADSPA_Descriptor
PortNames	./src/pcm/ladspa.h	/^  const char * const * PortNames;$/;"	m	struct:_LADSPA_Descriptor
PortRangeHints	./src/pcm/ladspa.h	/^  const LADSPA_PortRangeHint * PortRangeHints;$/;"	m	struct:_LADSPA_Descriptor
Properties	./src/pcm/ladspa.h	/^  LADSPA_Properties Properties;$/;"	m	struct:_LADSPA_Descriptor
Pthread_mutex_lock	./src/pcm/pcm_share.c	52;"	d	file:
Pthread_mutex_unlock	./src/pcm/pcm_share.c	64;"	d	file:
RATE_KEY	./src/pcm/pcm_file.c	45;"	d	file:
READY	./src/pcm/pcm.c	1468;"	d	file:
READ_POOL_SIZE	./test/playmidi1.c	64;"	d	file:
REFINE_DEBUG	./src/pcm/pcm_direct.c	656;"	d	file:
RTLD_NOW	./include/local.h	43;"	d
RULES	./src/pcm/pcm_params.c	1938;"	d	file:
RayDAT	./include/sound/hdspm.h	/^	RayDAT$/;"	e	enum:hdspm_io_type
Roland	./test/midifile.h	120;"	d
SCONF_MANDATORY	./src/pcm/pcm_local.h	847;"	d
SCONF_UNCHANGED	./src/pcm/pcm_local.h	848;"	d
SCRIPT	./modules/mixer/simple/python.c	35;"	d	file:
SELECTORS	./modules/mixer/simple/ac97.c	46;"	d	file:
SELECTORS	./modules/mixer/simple/hda.c	47;"	d	file:
SEQUENCE_ELEMENT_TYPE_CDEV	./src/ucm/ucm_local.h	46;"	d
SEQUENCE_ELEMENT_TYPE_CSET	./src/ucm/ucm_local.h	47;"	d
SEQUENCE_ELEMENT_TYPE_EXEC	./src/ucm/ucm_local.h	49;"	d
SEQUENCE_ELEMENT_TYPE_SLEEP	./src/ucm/ucm_local.h	48;"	d
SEQ_VERSION	./test/seq.c	12;"	d	file:
SERVER_JOB_DEBUG	./src/pcm/pcm_direct.c	246;"	d	file:
SID_CD	./modules/mixer/simple/sbase.h	32;"	d
SID_FRONT	./modules/mixer/simple/sbase.h	30;"	d
SID_HEADPHONE	./modules/mixer/simple/sbase.h	29;"	d
SID_MASTER	./modules/mixer/simple/sbase.h	28;"	d
SID_PCM	./modules/mixer/simple/sbase.h	31;"	d
SILENCE	./src/pcm/pcm.c	1470;"	d	file:
SMP_ISYNC	./include/iatomic.h	509;"	d
SM_CAPT	./include/mixer_abst.h	40;"	d
SM_CAP_CENUM	./include/mixer_abst.h	54;"	d
SM_CAP_CSWITCH	./include/mixer_abst.h	50;"	d
SM_CAP_CSWITCH_EXCL	./include/mixer_abst.h	52;"	d
SM_CAP_CSWITCH_JOIN	./include/mixer_abst.h	51;"	d
SM_CAP_CVOLUME	./include/mixer_abst.h	48;"	d
SM_CAP_CVOLUME_JOIN	./include/mixer_abst.h	49;"	d
SM_CAP_GSWITCH	./include/mixer_abst.h	43;"	d
SM_CAP_GVOLUME	./include/mixer_abst.h	42;"	d
SM_CAP_PENUM	./include/mixer_abst.h	53;"	d
SM_CAP_PSWITCH	./include/mixer_abst.h	46;"	d
SM_CAP_PSWITCH_JOIN	./include/mixer_abst.h	47;"	d
SM_CAP_PVOLUME	./include/mixer_abst.h	44;"	d
SM_CAP_PVOLUME_JOIN	./include/mixer_abst.h	45;"	d
SM_OPS_IS_ACTIVE	./include/mixer_abst.h	57;"	d
SM_OPS_IS_CHANNEL	./include/mixer_abst.h	59;"	d
SM_OPS_IS_ENUMCNT	./include/mixer_abst.h	61;"	d
SM_OPS_IS_ENUMERATED	./include/mixer_abst.h	60;"	d
SM_OPS_IS_MONO	./include/mixer_abst.h	58;"	d
SM_PLAY	./include/mixer_abst.h	39;"	d
SNDERR	./include/error.h	64;"	d
SNDERR	./include/error.h	67;"	d
SNDMSG	./include/local.h	175;"	d
SNDMSG	./include/local.h	179;"	d
SNDRV_BIG_ENDIAN	./include/sound/asound.h	39;"	d
SNDRV_BIG_ENDIAN	./include/sound/asound.h	50;"	d
SNDRV_CTL_ELEM_ACCESS_INACTIVE	./include/sound/asound.h	776;"	d
SNDRV_CTL_ELEM_ACCESS_LOCK	./include/sound/asound.h	777;"	d
SNDRV_CTL_ELEM_ACCESS_OWNER	./include/sound/asound.h	778;"	d
SNDRV_CTL_ELEM_ACCESS_READ	./include/sound/asound.h	767;"	d
SNDRV_CTL_ELEM_ACCESS_READWRITE	./include/sound/asound.h	769;"	d
SNDRV_CTL_ELEM_ACCESS_TIMESTAMP	./include/sound/asound.h	771;"	d
SNDRV_CTL_ELEM_ACCESS_TLV_CALLBACK	./include/sound/asound.h	779;"	d
SNDRV_CTL_ELEM_ACCESS_TLV_COMMAND	./include/sound/asound.h	775;"	d
SNDRV_CTL_ELEM_ACCESS_TLV_READ	./include/sound/asound.h	772;"	d
SNDRV_CTL_ELEM_ACCESS_TLV_READWRITE	./include/sound/asound.h	774;"	d
SNDRV_CTL_ELEM_ACCESS_TLV_WRITE	./include/sound/asound.h	773;"	d
SNDRV_CTL_ELEM_ACCESS_USER	./include/sound/asound.h	780;"	d
SNDRV_CTL_ELEM_ACCESS_VOLATILE	./include/sound/asound.h	770;"	d
SNDRV_CTL_ELEM_ACCESS_WRITE	./include/sound/asound.h	768;"	d
SNDRV_CTL_ELEM_IFACE_CARD	./include/sound/asound.h	/^	SNDRV_CTL_ELEM_IFACE_CARD = 0,		\/* global control *\/$/;"	e	enum:sndrv_ctl_elem_iface
SNDRV_CTL_ELEM_IFACE_HWDEP	./include/sound/asound.h	/^	SNDRV_CTL_ELEM_IFACE_HWDEP,		\/* hardware dependent device *\/$/;"	e	enum:sndrv_ctl_elem_iface
SNDRV_CTL_ELEM_IFACE_LAST	./include/sound/asound.h	/^	SNDRV_CTL_ELEM_IFACE_LAST = SNDRV_CTL_ELEM_IFACE_SEQUENCER,$/;"	e	enum:sndrv_ctl_elem_iface
SNDRV_CTL_ELEM_IFACE_MIXER	./include/sound/asound.h	/^	SNDRV_CTL_ELEM_IFACE_MIXER,		\/* virtual mixer device *\/$/;"	e	enum:sndrv_ctl_elem_iface
SNDRV_CTL_ELEM_IFACE_PCM	./include/sound/asound.h	/^	SNDRV_CTL_ELEM_IFACE_PCM,		\/* PCM device *\/$/;"	e	enum:sndrv_ctl_elem_iface
SNDRV_CTL_ELEM_IFACE_RAWMIDI	./include/sound/asound.h	/^	SNDRV_CTL_ELEM_IFACE_RAWMIDI,		\/* RawMidi device *\/$/;"	e	enum:sndrv_ctl_elem_iface
SNDRV_CTL_ELEM_IFACE_SEQUENCER	./include/sound/asound.h	/^	SNDRV_CTL_ELEM_IFACE_SEQUENCER,		\/* sequencer client *\/$/;"	e	enum:sndrv_ctl_elem_iface
SNDRV_CTL_ELEM_IFACE_TIMER	./include/sound/asound.h	/^	SNDRV_CTL_ELEM_IFACE_TIMER,		\/* timer device *\/$/;"	e	enum:sndrv_ctl_elem_iface
SNDRV_CTL_ELEM_TYPE_BOOLEAN	./include/sound/asound.h	/^	SNDRV_CTL_ELEM_TYPE_BOOLEAN,		\/* boolean type *\/$/;"	e	enum:sndrv_ctl_elem_type
SNDRV_CTL_ELEM_TYPE_BYTES	./include/sound/asound.h	/^	SNDRV_CTL_ELEM_TYPE_BYTES,		\/* byte array *\/$/;"	e	enum:sndrv_ctl_elem_type
SNDRV_CTL_ELEM_TYPE_ENUMERATED	./include/sound/asound.h	/^	SNDRV_CTL_ELEM_TYPE_ENUMERATED,		\/* enumerated type *\/$/;"	e	enum:sndrv_ctl_elem_type
SNDRV_CTL_ELEM_TYPE_IEC958	./include/sound/asound.h	/^	SNDRV_CTL_ELEM_TYPE_IEC958,		\/* IEC958 (S\/PDIF) setup *\/$/;"	e	enum:sndrv_ctl_elem_type
SNDRV_CTL_ELEM_TYPE_INTEGER	./include/sound/asound.h	/^	SNDRV_CTL_ELEM_TYPE_INTEGER,		\/* integer type *\/$/;"	e	enum:sndrv_ctl_elem_type
SNDRV_CTL_ELEM_TYPE_INTEGER64	./include/sound/asound.h	/^	SNDRV_CTL_ELEM_TYPE_INTEGER64,		\/* 64-bit integer type *\/$/;"	e	enum:sndrv_ctl_elem_type
SNDRV_CTL_ELEM_TYPE_LAST	./include/sound/asound.h	/^	SNDRV_CTL_ELEM_TYPE_LAST = SNDRV_CTL_ELEM_TYPE_INTEGER64,$/;"	e	enum:sndrv_ctl_elem_type
SNDRV_CTL_ELEM_TYPE_NONE	./include/sound/asound.h	/^	SNDRV_CTL_ELEM_TYPE_NONE = 0,		\/* invalid *\/$/;"	e	enum:sndrv_ctl_elem_type
SNDRV_CTL_EVENT_ELEM	./include/sound/asound.h	/^	SNDRV_CTL_EVENT_ELEM = 0,$/;"	e	enum:sndrv_ctl_event_type
SNDRV_CTL_EVENT_LAST	./include/sound/asound.h	/^	SNDRV_CTL_EVENT_LAST = SNDRV_CTL_EVENT_ELEM,$/;"	e	enum:sndrv_ctl_event_type
SNDRV_CTL_EVENT_MASK_ADD	./include/sound/asound.h	911;"	d
SNDRV_CTL_EVENT_MASK_INFO	./include/sound/asound.h	910;"	d
SNDRV_CTL_EVENT_MASK_REMOVE	./include/sound/asound.h	912;"	d
SNDRV_CTL_EVENT_MASK_VALUE	./include/sound/asound.h	909;"	d
SNDRV_CTL_IOCTL_CARD_INFO	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_CARD_INFO = _IOR('U', 0x01, struct sndrv_ctl_card_info),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_ELEM_ADD	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_ELEM_ADD = _IOWR('U', 0x17, struct sndrv_ctl_elem_info),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_ELEM_INFO	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_ELEM_INFO = _IOWR('U', 0x11, struct sndrv_ctl_elem_info),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_ELEM_LIST	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_ELEM_LIST = _IOWR('U', 0x10, struct sndrv_ctl_elem_list),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_ELEM_LOCK	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_ELEM_LOCK = _IOW('U', 0x14, struct sndrv_ctl_elem_id),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_ELEM_READ	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_ELEM_READ = _IOWR('U', 0x12, struct sndrv_ctl_elem_value),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_ELEM_REMOVE	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_ELEM_REMOVE = _IOWR('U', 0x19, struct sndrv_ctl_elem_id),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_ELEM_REPLACE	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_ELEM_REPLACE = _IOWR('U', 0x18, struct sndrv_ctl_elem_info),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_ELEM_UNLOCK	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_ELEM_UNLOCK = _IOW('U', 0x15, struct sndrv_ctl_elem_id),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_ELEM_WRITE	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_ELEM_WRITE = _IOWR('U', 0x13, struct sndrv_ctl_elem_value),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_HWDEP_INFO	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_HWDEP_INFO = _IOR('U', 0x21, struct sndrv_hwdep_info),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_HWDEP_NEXT_DEVICE	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_HWDEP_NEXT_DEVICE = _IOWR('U', 0x20, int),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_PCM_INFO	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_PCM_INFO = _IOWR('U', 0x31, struct sndrv_pcm_info),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_PCM_NEXT_DEVICE	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_PCM_NEXT_DEVICE = _IOR('U', 0x30, int),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_PCM_PREFER_SUBDEVICE	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_PCM_PREFER_SUBDEVICE = _IOW('U', 0x32, int),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_POWER	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_POWER = _IOWR('U', 0xd0, int),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_POWER_STATE	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_POWER_STATE = _IOR('U', 0xd1, int),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_PVERSION	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_PVERSION = _IOR('U', 0x00, int),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_RAWMIDI_INFO	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_RAWMIDI_INFO = _IOWR('U', 0x41, struct sndrv_rawmidi_info),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_RAWMIDI_NEXT_DEVICE	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_RAWMIDI_NEXT_DEVICE = _IOWR('U', 0x40, int),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_RAWMIDI_PREFER_SUBDEVICE	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_RAWMIDI_PREFER_SUBDEVICE = _IOW('U', 0x42, int),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_SUBSCRIBE_EVENTS	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_SUBSCRIBE_EVENTS = _IOWR('U', 0x16, int),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_TLV_COMMAND	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_TLV_COMMAND = _IOWR('U', 0x1c, struct sndrv_ctl_tlv),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_TLV_READ	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_TLV_READ = _IOWR('U', 0x1a, struct sndrv_ctl_tlv),$/;"	e	enum:__anon39
SNDRV_CTL_IOCTL_TLV_WRITE	./include/sound/asound.h	/^	SNDRV_CTL_IOCTL_TLV_WRITE = _IOWR('U', 0x1b, struct sndrv_ctl_tlv),$/;"	e	enum:__anon39
SNDRV_CTL_NAME_CAPTURE	./include/sound/asound.h	931;"	d
SNDRV_CTL_NAME_IEC958	./include/sound/asound.h	941;"	d
SNDRV_CTL_NAME_IEC958_CON_MASK	./include/sound/asound.h	938;"	d
SNDRV_CTL_NAME_IEC958_DEFAULT	./include/sound/asound.h	936;"	d
SNDRV_CTL_NAME_IEC958_MASK	./include/sound/asound.h	937;"	d
SNDRV_CTL_NAME_IEC958_NONE	./include/sound/asound.h	933;"	d
SNDRV_CTL_NAME_IEC958_PCM_STREAM	./include/sound/asound.h	940;"	d
SNDRV_CTL_NAME_IEC958_PRO_MASK	./include/sound/asound.h	939;"	d
SNDRV_CTL_NAME_IEC958_SWITCH	./include/sound/asound.h	934;"	d
SNDRV_CTL_NAME_IEC958_VOLUME	./include/sound/asound.h	935;"	d
SNDRV_CTL_NAME_NONE	./include/sound/asound.h	929;"	d
SNDRV_CTL_NAME_PLAYBACK	./include/sound/asound.h	930;"	d
SNDRV_CTL_POWER_D0	./include/sound/asound.h	784;"	d
SNDRV_CTL_POWER_D1	./include/sound/asound.h	785;"	d
SNDRV_CTL_POWER_D2	./include/sound/asound.h	786;"	d
SNDRV_CTL_POWER_D3	./include/sound/asound.h	787;"	d
SNDRV_CTL_POWER_D3cold	./include/sound/asound.h	789;"	d
SNDRV_CTL_POWER_D3hot	./include/sound/asound.h	788;"	d
SNDRV_CTL_VERSION	./include/sound/asound.h	731;"	d
SNDRV_CTL_VERSION_MAX	./src/control/control_hw.c	43;"	d	file:
SNDRV_DM_FM_IOCTL_CLEAR_PATCHES	./include/sound/asound_fm.h	108;"	d
SNDRV_DM_FM_IOCTL_INFO	./include/sound/asound_fm.h	99;"	d
SNDRV_DM_FM_IOCTL_PLAY_NOTE	./include/sound/asound_fm.h	101;"	d
SNDRV_DM_FM_IOCTL_RESET	./include/sound/asound_fm.h	100;"	d
SNDRV_DM_FM_IOCTL_SET_CONNECTION	./include/sound/asound_fm.h	106;"	d
SNDRV_DM_FM_IOCTL_SET_MODE	./include/sound/asound_fm.h	104;"	d
SNDRV_DM_FM_IOCTL_SET_PARAMS	./include/sound/asound_fm.h	103;"	d
SNDRV_DM_FM_IOCTL_SET_VOICE	./include/sound/asound_fm.h	102;"	d
SNDRV_DM_FM_MODE_OPL2	./include/sound/asound_fm.h	29;"	d
SNDRV_DM_FM_MODE_OPL3	./include/sound/asound_fm.h	30;"	d
SNDRV_DM_FM_OSS_IOCTL_PLAY_NOTE	./include/sound/asound_fm.h	111;"	d
SNDRV_DM_FM_OSS_IOCTL_RESET	./include/sound/asound_fm.h	110;"	d
SNDRV_DM_FM_OSS_IOCTL_SET_MODE	./include/sound/asound_fm.h	114;"	d
SNDRV_DM_FM_OSS_IOCTL_SET_OPL	./include/sound/asound_fm.h	115;"	d
SNDRV_DM_FM_OSS_IOCTL_SET_PARAMS	./include/sound/asound_fm.h	113;"	d
SNDRV_DM_FM_OSS_IOCTL_SET_VOICE	./include/sound/asound_fm.h	112;"	d
SNDRV_EMU10K1_IOCTL_CODE_PEEK	./include/sound/emu10k1.h	336;"	d
SNDRV_EMU10K1_IOCTL_CODE_POKE	./include/sound/emu10k1.h	335;"	d
SNDRV_EMU10K1_IOCTL_CONTINUE	./include/sound/emu10k1.h	344;"	d
SNDRV_EMU10K1_IOCTL_DBG_READ	./include/sound/emu10k1.h	347;"	d
SNDRV_EMU10K1_IOCTL_INFO	./include/sound/emu10k1.h	334;"	d
SNDRV_EMU10K1_IOCTL_PCM_PEEK	./include/sound/emu10k1.h	341;"	d
SNDRV_EMU10K1_IOCTL_PCM_POKE	./include/sound/emu10k1.h	340;"	d
SNDRV_EMU10K1_IOCTL_PVERSION	./include/sound/emu10k1.h	342;"	d
SNDRV_EMU10K1_IOCTL_SINGLE_STEP	./include/sound/emu10k1.h	346;"	d
SNDRV_EMU10K1_IOCTL_STOP	./include/sound/emu10k1.h	343;"	d
SNDRV_EMU10K1_IOCTL_TRAM_PEEK	./include/sound/emu10k1.h	339;"	d
SNDRV_EMU10K1_IOCTL_TRAM_POKE	./include/sound/emu10k1.h	338;"	d
SNDRV_EMU10K1_IOCTL_TRAM_SETUP	./include/sound/emu10k1.h	337;"	d
SNDRV_EMU10K1_IOCTL_ZERO_TRAM_COUNTER	./include/sound/emu10k1.h	345;"	d
SNDRV_FILE_ALOADSEQ	./src/seq/seq_hw.c	34;"	d	file:
SNDRV_FILE_CONTROL	./src/control/control_hw.c	42;"	d	file:
SNDRV_FILE_HWDEP	./src/hwdep/hwdep_hw.c	35;"	d	file:
SNDRV_FILE_PCM_STREAM_CAPTURE	./src/pcm/pcm_hw.c	110;"	d	file:
SNDRV_FILE_PCM_STREAM_PLAYBACK	./src/pcm/pcm_hw.c	109;"	d	file:
SNDRV_FILE_RAWMIDI	./src/rawmidi/rawmidi_hw.c	37;"	d	file:
SNDRV_FILE_SEQ	./src/seq/seq_hw.c	33;"	d	file:
SNDRV_FILE_TIMER	./src/timer/timer_hw.c	35;"	d	file:
SNDRV_FILE_TIMER	./src/timer/timer_query_hw.c	35;"	d	file:
SNDRV_HDSPM_IOCTL_GET_CONFIG	./include/sound/hdspm.h	74;"	d
SNDRV_HDSPM_IOCTL_GET_LTC	./include/sound/hdspm.h	114;"	d
SNDRV_HDSPM_IOCTL_GET_MIXER	./include/sound/hdspm.h	219;"	d
SNDRV_HDSPM_IOCTL_GET_PEAK_RMS	./include/sound/hdspm.h	55;"	d
SNDRV_HDSPM_IOCTL_GET_STATUS	./include/sound/hdspm.h	171;"	d
SNDRV_HDSPM_IOCTL_GET_VERSION	./include/sound/hdspm.h	188;"	d
SNDRV_HDSP_IOCTL_GET_9632_AEB	./include/sound/hdsp.h	110;"	d
SNDRV_HDSP_IOCTL_GET_CONFIG_INFO	./include/sound/hdsp.h	76;"	d
SNDRV_HDSP_IOCTL_GET_MIXER	./include/sound/hdsp.h	101;"	d
SNDRV_HDSP_IOCTL_GET_PEAK_RMS	./include/sound/hdsp.h	46;"	d
SNDRV_HDSP_IOCTL_GET_VERSION	./include/sound/hdsp.h	93;"	d
SNDRV_HDSP_IOCTL_UPLOAD_FIRMWARE	./include/sound/hdsp.h	84;"	d
SNDRV_HWDEP_IFACE_BLUETOOTH	./include/sound/asound.h	/^	SNDRV_HWDEP_IFACE_BLUETOOTH,	\/* Bluetooth audio *\/$/;"	e	enum:sndrv_hwdep_iface
SNDRV_HWDEP_IFACE_EMU10K1	./include/sound/asound.h	/^	SNDRV_HWDEP_IFACE_EMU10K1,	\/* FX8010 processor in EMU10K1 chip *\/$/;"	e	enum:sndrv_hwdep_iface
SNDRV_HWDEP_IFACE_EMUX_WAVETABLE	./include/sound/asound.h	/^	SNDRV_HWDEP_IFACE_EMUX_WAVETABLE, \/* EmuX wavetable *\/	$/;"	e	enum:sndrv_hwdep_iface
SNDRV_HWDEP_IFACE_ICS2115	./include/sound/asound.h	/^	SNDRV_HWDEP_IFACE_ICS2115,	\/* Wavetable synth *\/$/;"	e	enum:sndrv_hwdep_iface
SNDRV_HWDEP_IFACE_LAST	./include/sound/asound.h	/^	SNDRV_HWDEP_IFACE_LAST = SNDRV_HWDEP_IFACE_SB_RC$/;"	e	enum:sndrv_hwdep_iface
SNDRV_HWDEP_IFACE_MIXART	./include/sound/asound.h	/^	SNDRV_HWDEP_IFACE_MIXART,	\/* Digigram miXart cards *\/$/;"	e	enum:sndrv_hwdep_iface
SNDRV_HWDEP_IFACE_OPL2	./include/sound/asound.h	/^	SNDRV_HWDEP_IFACE_OPL2 = 0,$/;"	e	enum:sndrv_hwdep_iface
SNDRV_HWDEP_IFACE_OPL3	./include/sound/asound.h	/^	SNDRV_HWDEP_IFACE_OPL3,$/;"	e	enum:sndrv_hwdep_iface
SNDRV_HWDEP_IFACE_OPL4	./include/sound/asound.h	/^	SNDRV_HWDEP_IFACE_OPL4,$/;"	e	enum:sndrv_hwdep_iface
SNDRV_HWDEP_IFACE_PCXHR	./include/sound/asound.h	/^	SNDRV_HWDEP_IFACE_PCXHR,	\/* Digigram PCXHR *\/$/;"	e	enum:sndrv_hwdep_iface
SNDRV_HWDEP_IFACE_SB16CSP	./include/sound/asound.h	/^	SNDRV_HWDEP_IFACE_SB16CSP,	\/* Creative Signal Processor *\/$/;"	e	enum:sndrv_hwdep_iface
SNDRV_HWDEP_IFACE_SB_RC	./include/sound/asound.h	/^	SNDRV_HWDEP_IFACE_SB_RC,	\/* SB Extigy\/Audigy2NX remote control *\/$/;"	e	enum:sndrv_hwdep_iface
SNDRV_HWDEP_IFACE_SSCAPE	./include/sound/asound.h	/^	SNDRV_HWDEP_IFACE_SSCAPE,	\/* Ensoniq SoundScape ISA card (MC68EC000) *\/$/;"	e	enum:sndrv_hwdep_iface
SNDRV_HWDEP_IFACE_USX2Y	./include/sound/asound.h	/^	SNDRV_HWDEP_IFACE_USX2Y,	\/* Tascam US122, US224 & US428 usb *\/$/;"	e	enum:sndrv_hwdep_iface
SNDRV_HWDEP_IFACE_USX2Y_PCM	./include/sound/asound.h	/^	SNDRV_HWDEP_IFACE_USX2Y_PCM,	\/* Tascam US122, US224 & US428 rawusb pcm *\/$/;"	e	enum:sndrv_hwdep_iface
SNDRV_HWDEP_IFACE_VX	./include/sound/asound.h	/^	SNDRV_HWDEP_IFACE_VX,		\/* Digigram VX cards *\/$/;"	e	enum:sndrv_hwdep_iface
SNDRV_HWDEP_IFACE_YSS225	./include/sound/asound.h	/^	SNDRV_HWDEP_IFACE_YSS225,	\/* Yamaha FX processor *\/$/;"	e	enum:sndrv_hwdep_iface
SNDRV_HWDEP_IOCTL_DSP_LOAD	./include/sound/asound.h	/^	SNDRV_HWDEP_IOCTL_DSP_LOAD   = _IOW('H', 0x03, struct sndrv_hwdep_dsp_image)$/;"	e	enum:__anon21
SNDRV_HWDEP_IOCTL_DSP_STATUS	./include/sound/asound.h	/^	SNDRV_HWDEP_IOCTL_DSP_STATUS = _IOR('H', 0x02, struct sndrv_hwdep_dsp_status),$/;"	e	enum:__anon21
SNDRV_HWDEP_IOCTL_INFO	./include/sound/asound.h	/^	SNDRV_HWDEP_IOCTL_INFO = _IOR ('H', 0x01, struct sndrv_hwdep_info),$/;"	e	enum:__anon21
SNDRV_HWDEP_IOCTL_PVERSION	./include/sound/asound.h	/^	SNDRV_HWDEP_IOCTL_PVERSION = _IOR ('H', 0x00, int),$/;"	e	enum:__anon21
SNDRV_HWDEP_VERSION	./include/sound/asound.h	97;"	d
SNDRV_HWDEP_VERSION_MAX	./src/hwdep/hwdep_hw.c	36;"	d	file:
SNDRV_IOCTL_READV	./include/sound/asound.h	/^	SNDRV_IOCTL_READV = _IOW('K', 0x00, struct sndrv_xferv),$/;"	e	enum:__anon42
SNDRV_IOCTL_WRITEV	./include/sound/asound.h	/^	SNDRV_IOCTL_WRITEV = _IOW('K', 0x01, struct sndrv_xferv),$/;"	e	enum:__anon42
SNDRV_LITTLE_ENDIAN	./include/sound/asound.h	37;"	d
SNDRV_LITTLE_ENDIAN	./include/sound/asound.h	48;"	d
SNDRV_MASK_MAX	./include/sound/asound.h	360;"	d
SNDRV_PCM_ACCESS_LAST	./include/sound/asound.h	/^	SNDRV_PCM_ACCESS_LAST = SNDRV_PCM_ACCESS_RW_NONINTERLEAVED,$/;"	e	enum:sndrv_pcm_access
SNDRV_PCM_ACCESS_MMAP_COMPLEX	./include/sound/asound.h	/^	SNDRV_PCM_ACCESS_MMAP_COMPLEX,		\/* complex mmap *\/$/;"	e	enum:sndrv_pcm_access
SNDRV_PCM_ACCESS_MMAP_INTERLEAVED	./include/sound/asound.h	/^	SNDRV_PCM_ACCESS_MMAP_INTERLEAVED = 0,	\/* interleaved mmap *\/$/;"	e	enum:sndrv_pcm_access
SNDRV_PCM_ACCESS_MMAP_NONINTERLEAVED	./include/sound/asound.h	/^	SNDRV_PCM_ACCESS_MMAP_NONINTERLEAVED, 	\/* noninterleaved mmap *\/$/;"	e	enum:sndrv_pcm_access
SNDRV_PCM_ACCESS_RW_INTERLEAVED	./include/sound/asound.h	/^	SNDRV_PCM_ACCESS_RW_INTERLEAVED,	\/* readi\/writei *\/$/;"	e	enum:sndrv_pcm_access
SNDRV_PCM_ACCESS_RW_NONINTERLEAVED	./include/sound/asound.h	/^	SNDRV_PCM_ACCESS_RW_NONINTERLEAVED,	\/* readn\/writen *\/$/;"	e	enum:sndrv_pcm_access
SNDRV_PCM_CLASS_DIGITIZER	./include/sound/asound.h	/^	SNDRV_PCM_CLASS_DIGITIZER,	\/* digitizer class *\/$/;"	e	enum:sndrv_pcm_class
SNDRV_PCM_CLASS_GENERIC	./include/sound/asound.h	/^	SNDRV_PCM_CLASS_GENERIC = 0,	\/* standard mono or stereo device *\/$/;"	e	enum:sndrv_pcm_class
SNDRV_PCM_CLASS_LAST	./include/sound/asound.h	/^	SNDRV_PCM_CLASS_LAST = SNDRV_PCM_CLASS_DIGITIZER,$/;"	e	enum:sndrv_pcm_class
SNDRV_PCM_CLASS_MODEM	./include/sound/asound.h	/^	SNDRV_PCM_CLASS_MODEM,		\/* software modem class *\/$/;"	e	enum:sndrv_pcm_class
SNDRV_PCM_CLASS_MULTI	./include/sound/asound.h	/^	SNDRV_PCM_CLASS_MULTI,		\/* multichannel device *\/$/;"	e	enum:sndrv_pcm_class
SNDRV_PCM_FORMAT_A_LAW	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_A_LAW,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_FLOAT	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_FLOAT = SNDRV_PCM_FORMAT_FLOAT_BE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_FLOAT	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_FLOAT = SNDRV_PCM_FORMAT_FLOAT_LE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_FLOAT64	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_FLOAT64 = SNDRV_PCM_FORMAT_FLOAT64_BE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_FLOAT64	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_FLOAT64 = SNDRV_PCM_FORMAT_FLOAT64_LE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_FLOAT64_BE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_FLOAT64_BE,	\/* 8-byte float, IEEE-754 64-bit, range -1.0 to 1.0 *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_FLOAT64_LE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_FLOAT64_LE,	\/* 8-byte float, IEEE-754 64-bit, range -1.0 to 1.0 *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_FLOAT_BE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_FLOAT_BE,	\/* 4-byte float, IEEE-754 32-bit, range -1.0 to 1.0 *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_FLOAT_LE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_FLOAT_LE,	\/* 4-byte float, IEEE-754 32-bit, range -1.0 to 1.0 *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_GSM	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_GSM,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_IEC958_SUBFRAME	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_IEC958_SUBFRAME = SNDRV_PCM_FORMAT_IEC958_SUBFRAME_BE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_IEC958_SUBFRAME	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_IEC958_SUBFRAME = SNDRV_PCM_FORMAT_IEC958_SUBFRAME_LE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_IEC958_SUBFRAME_BE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_IEC958_SUBFRAME_BE,	\/* IEC-958 subframe, Big Endian *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_IEC958_SUBFRAME_LE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_IEC958_SUBFRAME_LE,	\/* IEC-958 subframe, Little Endian *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_IMA_ADPCM	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_IMA_ADPCM,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_LAST	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_LAST = SNDRV_PCM_FORMAT_U18_3BE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_MPEG	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_MPEG,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_MU_LAW	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_MU_LAW,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_S16	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_S16 = SNDRV_PCM_FORMAT_S16_BE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_S16	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_S16 = SNDRV_PCM_FORMAT_S16_LE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_S16_BE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_S16_BE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_S16_LE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_S16_LE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_S18_3BE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_S18_3BE,	\/* in three bytes *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_S18_3LE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_S18_3LE,	\/* in three bytes *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_S20_3BE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_S20_3BE,	\/* in three bytes *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_S20_3LE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_S20_3LE,	\/* in three bytes *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_S24	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_S24 = SNDRV_PCM_FORMAT_S24_BE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_S24	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_S24 = SNDRV_PCM_FORMAT_S24_LE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_S24_3BE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_S24_3BE,	\/* in three bytes *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_S24_3LE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_S24_3LE = 32,	\/* in three bytes *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_S24_BE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_S24_BE,	\/* low three bytes *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_S24_LE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_S24_LE,	\/* low three bytes *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_S32	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_S32 = SNDRV_PCM_FORMAT_S32_BE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_S32	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_S32 = SNDRV_PCM_FORMAT_S32_LE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_S32_BE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_S32_BE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_S32_LE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_S32_LE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_S8	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_S8 = 0,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_SPECIAL	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_SPECIAL = 31,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_U16	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_U16 = SNDRV_PCM_FORMAT_U16_BE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_U16	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_U16 = SNDRV_PCM_FORMAT_U16_LE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_U16_BE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_U16_BE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_U16_LE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_U16_LE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_U18_3BE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_U18_3BE,	\/* in three bytes *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_U18_3LE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_U18_3LE,	\/* in three bytes *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_U20_3BE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_U20_3BE,	\/* in three bytes *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_U20_3LE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_U20_3LE,	\/* in three bytes *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_U24	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_U24 = SNDRV_PCM_FORMAT_U24_BE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_U24	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_U24 = SNDRV_PCM_FORMAT_U24_LE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_U24_3BE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_U24_3BE,	\/* in three bytes *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_U24_3LE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_U24_3LE,	\/* in three bytes *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_U24_BE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_U24_BE,	\/* low three bytes *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_U24_LE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_U24_LE,	\/* low three bytes *\/$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_U32	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_U32 = SNDRV_PCM_FORMAT_U32_BE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_U32	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_U32 = SNDRV_PCM_FORMAT_U32_LE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_U32_BE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_U32_BE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_U32_LE	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_U32_LE,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_FORMAT_U8	./include/sound/asound.h	/^	SNDRV_PCM_FORMAT_U8,$/;"	e	enum:sndrv_pcm_format
SNDRV_PCM_HW_PARAMS_EXPORT_BUFFER	./include/sound/asound.h	349;"	d
SNDRV_PCM_HW_PARAMS_NORESAMPLE	./include/sound/asound.h	348;"	d
SNDRV_PCM_HW_PARAMS_NO_PERIOD_WAKEUP	./include/sound/asound.h	350;"	d
SNDRV_PCM_HW_PARAM_ACCESS	./include/sound/asound.h	/^	SNDRV_PCM_HW_PARAM_ACCESS = 0,	\/* Access type *\/$/;"	e	enum:sndrv_pcm_hw_param
SNDRV_PCM_HW_PARAM_BUFFER_BYTES	./include/sound/asound.h	/^	SNDRV_PCM_HW_PARAM_BUFFER_BYTES, \/* Size of buffer in bytes *\/$/;"	e	enum:sndrv_pcm_hw_param
SNDRV_PCM_HW_PARAM_BUFFER_SIZE	./include/sound/asound.h	/^	SNDRV_PCM_HW_PARAM_BUFFER_SIZE,	\/* Size of buffer in frames *\/$/;"	e	enum:sndrv_pcm_hw_param
SNDRV_PCM_HW_PARAM_BUFFER_TIME	./include/sound/asound.h	/^	SNDRV_PCM_HW_PARAM_BUFFER_TIME,	\/* Approx duration of buffer in us *\/$/;"	e	enum:sndrv_pcm_hw_param
SNDRV_PCM_HW_PARAM_CHANNELS	./include/sound/asound.h	/^	SNDRV_PCM_HW_PARAM_CHANNELS,	\/* Channels *\/$/;"	e	enum:sndrv_pcm_hw_param
SNDRV_PCM_HW_PARAM_FIRST_INTERVAL	./include/sound/asound.h	/^	SNDRV_PCM_HW_PARAM_FIRST_INTERVAL = SNDRV_PCM_HW_PARAM_SAMPLE_BITS,$/;"	e	enum:sndrv_pcm_hw_param
SNDRV_PCM_HW_PARAM_FIRST_MASK	./include/sound/asound.h	/^	SNDRV_PCM_HW_PARAM_FIRST_MASK = SNDRV_PCM_HW_PARAM_ACCESS,$/;"	e	enum:sndrv_pcm_hw_param
SNDRV_PCM_HW_PARAM_FORMAT	./include/sound/asound.h	/^	SNDRV_PCM_HW_PARAM_FORMAT,	\/* Format *\/$/;"	e	enum:sndrv_pcm_hw_param
SNDRV_PCM_HW_PARAM_FRAME_BITS	./include/sound/asound.h	/^	SNDRV_PCM_HW_PARAM_FRAME_BITS,	\/* Bits per frame *\/$/;"	e	enum:sndrv_pcm_hw_param
SNDRV_PCM_HW_PARAM_LAST_INTERVAL	./include/sound/asound.h	/^	SNDRV_PCM_HW_PARAM_LAST_INTERVAL = SNDRV_PCM_HW_PARAM_TICK_TIME$/;"	e	enum:sndrv_pcm_hw_param
SNDRV_PCM_HW_PARAM_LAST_MASK	./include/sound/asound.h	/^	SNDRV_PCM_HW_PARAM_LAST_MASK = SNDRV_PCM_HW_PARAM_SUBFORMAT,$/;"	e	enum:sndrv_pcm_hw_param
SNDRV_PCM_HW_PARAM_PERIODS	./include/sound/asound.h	/^	SNDRV_PCM_HW_PARAM_PERIODS,	\/* Approx interrupts per buffer *\/$/;"	e	enum:sndrv_pcm_hw_param
SNDRV_PCM_HW_PARAM_PERIOD_BYTES	./include/sound/asound.h	/^	SNDRV_PCM_HW_PARAM_PERIOD_BYTES, \/* Approx bytes between interrupts *\/$/;"	e	enum:sndrv_pcm_hw_param
SNDRV_PCM_HW_PARAM_PERIOD_SIZE	./include/sound/asound.h	/^	SNDRV_PCM_HW_PARAM_PERIOD_SIZE,	\/* Approx frames between interrupts *\/$/;"	e	enum:sndrv_pcm_hw_param
SNDRV_PCM_HW_PARAM_PERIOD_TIME	./include/sound/asound.h	/^	SNDRV_PCM_HW_PARAM_PERIOD_TIME,	\/* Approx distance between interrupts$/;"	e	enum:sndrv_pcm_hw_param
SNDRV_PCM_HW_PARAM_RATE	./include/sound/asound.h	/^	SNDRV_PCM_HW_PARAM_RATE,	\/* Approx rate *\/$/;"	e	enum:sndrv_pcm_hw_param
SNDRV_PCM_HW_PARAM_SAMPLE_BITS	./include/sound/asound.h	/^	SNDRV_PCM_HW_PARAM_SAMPLE_BITS = 8, \/* Bits per sample *\/$/;"	e	enum:sndrv_pcm_hw_param
SNDRV_PCM_HW_PARAM_SUBFORMAT	./include/sound/asound.h	/^	SNDRV_PCM_HW_PARAM_SUBFORMAT,	\/* Subformat *\/$/;"	e	enum:sndrv_pcm_hw_param
SNDRV_PCM_HW_PARAM_TICK_TIME	./include/sound/asound.h	/^	SNDRV_PCM_HW_PARAM_TICK_TIME,	\/* Approx tick duration in us *\/$/;"	e	enum:sndrv_pcm_hw_param
SNDRV_PCM_INFO_BATCH	./include/sound/asound.h	270;"	d
SNDRV_PCM_INFO_BLOCK_TRANSFER	./include/sound/asound.h	274;"	d
SNDRV_PCM_INFO_COMPLEX	./include/sound/asound.h	273;"	d
SNDRV_PCM_INFO_DOUBLE	./include/sound/asound.h	269;"	d
SNDRV_PCM_INFO_HALF_DUPLEX	./include/sound/asound.h	278;"	d
SNDRV_PCM_INFO_INTERLEAVED	./include/sound/asound.h	271;"	d
SNDRV_PCM_INFO_JOINT_DUPLEX	./include/sound/asound.h	279;"	d
SNDRV_PCM_INFO_MMAP	./include/sound/asound.h	267;"	d
SNDRV_PCM_INFO_MMAP_VALID	./include/sound/asound.h	268;"	d
SNDRV_PCM_INFO_NONINTERLEAVED	./include/sound/asound.h	272;"	d
SNDRV_PCM_INFO_NO_PERIOD_WAKEUP	./include/sound/asound.h	281;"	d
SNDRV_PCM_INFO_OVERRANGE	./include/sound/asound.h	275;"	d
SNDRV_PCM_INFO_PAUSE	./include/sound/asound.h	277;"	d
SNDRV_PCM_INFO_RESUME	./include/sound/asound.h	276;"	d
SNDRV_PCM_INFO_SYNC_START	./include/sound/asound.h	280;"	d
SNDRV_PCM_IOCTL_CHANNEL_INFO	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_CHANNEL_INFO = _IOR('A', 0x32, struct sndrv_pcm_channel_info),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_DELAY	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_DELAY = _IOR('A', 0x21, sndrv_pcm_sframes_t),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_DRAIN	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_DRAIN = _IO('A', 0x44),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_DROP	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_DROP = _IO('A', 0x43),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_FORWARD	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_FORWARD = _IOW('A', 0x49, sndrv_pcm_uframes_t),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_HWSYNC	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_HWSYNC = _IO('A', 0x22),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_HW_FREE	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_HW_FREE = _IO('A', 0x12),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_HW_PARAMS	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_HW_PARAMS = _IOWR('A', 0x11, struct sndrv_pcm_hw_params),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_HW_REFINE	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_HW_REFINE = _IOWR('A', 0x10, struct sndrv_pcm_hw_params),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_INFO	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_INFO = _IOR('A', 0x01, struct sndrv_pcm_info),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_LINK	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_LINK = _IOW('A', 0x60, int),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_PAUSE	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_PAUSE = _IOW('A', 0x45, int),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_PREPARE	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_PREPARE = _IO('A', 0x40),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_PVERSION	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_PVERSION = _IOR('A', 0x00, int),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_READI_FRAMES	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_READI_FRAMES = _IOR('A', 0x51, struct sndrv_xferi),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_READN_FRAMES	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_READN_FRAMES = _IOR('A', 0x53, struct sndrv_xfern),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_RESET	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_RESET = _IO('A', 0x41),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_RESUME	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_RESUME = _IO('A', 0x47),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_REWIND	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_REWIND = _IOW('A', 0x46, sndrv_pcm_uframes_t),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_REWIND	./include/sound/asound.h	507;"	d
SNDRV_PCM_IOCTL_START	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_START = _IO('A', 0x42),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_STATUS	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_STATUS = _IOR('A', 0x20, struct sndrv_pcm_status),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_SW_PARAMS	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_SW_PARAMS = _IOWR('A', 0x13, struct sndrv_pcm_sw_params),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_SYNC_PTR	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_SYNC_PTR = _IOWR('A', 0x23, struct sndrv_pcm_sync_ptr),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_TSTAMP	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_TSTAMP = _IOW('A', 0x02, int),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_TTSTAMP	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_TTSTAMP = _IOW('A', 0x03, int),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_UNLINK	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_UNLINK = _IO('A', 0x61),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_WRITEI_FRAMES	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_WRITEI_FRAMES = _IOW('A', 0x50, struct sndrv_xferi),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_WRITEN_FRAMES	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_WRITEN_FRAMES = _IOW('A', 0x52, struct sndrv_xfern),$/;"	e	enum:__anon26
SNDRV_PCM_IOCTL_XRUN	./include/sound/asound.h	/^	SNDRV_PCM_IOCTL_XRUN = _IO('A', 0x48),$/;"	e	enum:__anon26
SNDRV_PCM_MMAP_OFFSET_CONTROL	./include/sound/asound.h	/^	SNDRV_PCM_MMAP_OFFSET_CONTROL = 0x81000000,$/;"	e	enum:__anon22
SNDRV_PCM_MMAP_OFFSET_DATA	./include/sound/asound.h	/^	SNDRV_PCM_MMAP_OFFSET_DATA = 0x00000000,$/;"	e	enum:__anon22
SNDRV_PCM_MMAP_OFFSET_STATUS	./include/sound/asound.h	/^	SNDRV_PCM_MMAP_OFFSET_STATUS = 0x80000000,$/;"	e	enum:__anon22
SNDRV_PCM_STATE_DISCONNECTED	./include/sound/asound.h	/^	SNDRV_PCM_STATE_DISCONNECTED,	\/* hardware is disconnected *\/$/;"	e	enum:sndrv_pcm_state
SNDRV_PCM_STATE_DRAINING	./include/sound/asound.h	/^	SNDRV_PCM_STATE_DRAINING,	\/* stream is draining *\/$/;"	e	enum:sndrv_pcm_state
SNDRV_PCM_STATE_LAST	./include/sound/asound.h	/^	SNDRV_PCM_STATE_LAST = SNDRV_PCM_STATE_DISCONNECTED,$/;"	e	enum:sndrv_pcm_state
SNDRV_PCM_STATE_OPEN	./include/sound/asound.h	/^	SNDRV_PCM_STATE_OPEN = 0,	\/* stream is open *\/$/;"	e	enum:sndrv_pcm_state
SNDRV_PCM_STATE_PAUSED	./include/sound/asound.h	/^	SNDRV_PCM_STATE_PAUSED,		\/* stream is paused *\/$/;"	e	enum:sndrv_pcm_state
SNDRV_PCM_STATE_PREPARED	./include/sound/asound.h	/^	SNDRV_PCM_STATE_PREPARED,	\/* stream is ready to start *\/$/;"	e	enum:sndrv_pcm_state
SNDRV_PCM_STATE_RUNNING	./include/sound/asound.h	/^	SNDRV_PCM_STATE_RUNNING,	\/* stream is running *\/$/;"	e	enum:sndrv_pcm_state
SNDRV_PCM_STATE_SETUP	./include/sound/asound.h	/^	SNDRV_PCM_STATE_SETUP,		\/* stream has a setup *\/$/;"	e	enum:sndrv_pcm_state
SNDRV_PCM_STATE_SUSPENDED	./include/sound/asound.h	/^	SNDRV_PCM_STATE_SUSPENDED,	\/* hardware is suspended *\/$/;"	e	enum:sndrv_pcm_state
SNDRV_PCM_STATE_XRUN	./include/sound/asound.h	/^	SNDRV_PCM_STATE_XRUN,		\/* stream reached an xrun *\/$/;"	e	enum:sndrv_pcm_state
SNDRV_PCM_STREAM_CAPTURE	./include/sound/asound.h	/^	SNDRV_PCM_STREAM_CAPTURE,$/;"	e	enum:sndrv_pcm_stream
SNDRV_PCM_STREAM_LAST	./include/sound/asound.h	/^	SNDRV_PCM_STREAM_LAST = SNDRV_PCM_STREAM_CAPTURE,$/;"	e	enum:sndrv_pcm_stream
SNDRV_PCM_STREAM_PLAYBACK	./include/sound/asound.h	/^	SNDRV_PCM_STREAM_PLAYBACK = 0,$/;"	e	enum:sndrv_pcm_stream
SNDRV_PCM_SUBCLASS_GENERIC_MIX	./include/sound/asound.h	/^	SNDRV_PCM_SUBCLASS_GENERIC_MIX = 0, \/* mono or stereo subdevices are mixed together *\/$/;"	e	enum:sndrv_pcm_subclass
SNDRV_PCM_SUBCLASS_LAST	./include/sound/asound.h	/^	SNDRV_PCM_SUBCLASS_LAST = SNDRV_PCM_SUBCLASS_MULTI_MIX,$/;"	e	enum:sndrv_pcm_subclass
SNDRV_PCM_SUBCLASS_MULTI_MIX	./include/sound/asound.h	/^	SNDRV_PCM_SUBCLASS_MULTI_MIX,	\/* multichannel subdevices are mixed together *\/$/;"	e	enum:sndrv_pcm_subclass
SNDRV_PCM_SUBFORMAT_LAST	./include/sound/asound.h	/^	SNDRV_PCM_SUBFORMAT_LAST = SNDRV_PCM_SUBFORMAT_STD,$/;"	e	enum:sndrv_pcm_subformat
SNDRV_PCM_SUBFORMAT_STD	./include/sound/asound.h	/^	SNDRV_PCM_SUBFORMAT_STD = 0,$/;"	e	enum:sndrv_pcm_subformat
SNDRV_PCM_SYNC_PTR_APPL	./include/sound/asound.h	440;"	d
SNDRV_PCM_SYNC_PTR_AVAIL_MIN	./include/sound/asound.h	441;"	d
SNDRV_PCM_SYNC_PTR_HWSYNC	./include/sound/asound.h	439;"	d
SNDRV_PCM_TSTAMP_ENABLE	./include/sound/asound.h	/^	SNDRV_PCM_TSTAMP_ENABLE,$/;"	e	enum:sndrv_pcm_tstamp
SNDRV_PCM_TSTAMP_LAST	./include/sound/asound.h	/^	SNDRV_PCM_TSTAMP_LAST = SNDRV_PCM_TSTAMP_ENABLE,$/;"	e	enum:sndrv_pcm_tstamp
SNDRV_PCM_TSTAMP_NONE	./include/sound/asound.h	/^	SNDRV_PCM_TSTAMP_NONE = 0,$/;"	e	enum:sndrv_pcm_tstamp
SNDRV_PCM_TSTAMP_TYPE_GETTIMEOFDAY	./include/sound/asound.h	/^        SNDRV_PCM_TSTAMP_TYPE_GETTIMEOFDAY = 0, \/* gettimeofday equivalent *\/$/;"	e	enum:__anon25
SNDRV_PCM_TSTAMP_TYPE_LAST	./include/sound/asound.h	/^        SNDRV_PCM_TSTAMP_TYPE_LAST = SNDRV_PCM_TSTAMP_TYPE_MONOTONIC,$/;"	e	enum:__anon25
SNDRV_PCM_TSTAMP_TYPE_MONOTONIC	./include/sound/asound.h	/^        SNDRV_PCM_TSTAMP_TYPE_MONOTONIC,        \/* posix_clock_monotonic equivalent *\/$/;"	e	enum:__anon25
SNDRV_PCM_VERSION	./include/sound/asound.h	161;"	d
SNDRV_PCM_VERSION_MAX	./src/pcm/pcm_hw.c	111;"	d	file:
SNDRV_PROTOCOL_INCOMPATIBLE	./include/sound/asound.h	73;"	d
SNDRV_PROTOCOL_MAJOR	./include/sound/asound.h	70;"	d
SNDRV_PROTOCOL_MICRO	./include/sound/asound.h	72;"	d
SNDRV_PROTOCOL_MINOR	./include/sound/asound.h	71;"	d
SNDRV_PROTOCOL_VERSION	./include/sound/asound.h	69;"	d
SNDRV_RAWMIDI_INFO_DUPLEX	./include/sound/asound.h	529;"	d
SNDRV_RAWMIDI_INFO_INPUT	./include/sound/asound.h	528;"	d
SNDRV_RAWMIDI_INFO_OUTPUT	./include/sound/asound.h	527;"	d
SNDRV_RAWMIDI_IOCTL_DRAIN	./include/sound/asound.h	/^	SNDRV_RAWMIDI_IOCTL_DRAIN = _IOW('W', 0x31, int),$/;"	e	enum:__anon27
SNDRV_RAWMIDI_IOCTL_DROP	./include/sound/asound.h	/^	SNDRV_RAWMIDI_IOCTL_DROP = _IOW('W', 0x30, int),$/;"	e	enum:__anon27
SNDRV_RAWMIDI_IOCTL_INFO	./include/sound/asound.h	/^	SNDRV_RAWMIDI_IOCTL_INFO = _IOR('W', 0x01, struct sndrv_rawmidi_info),$/;"	e	enum:__anon27
SNDRV_RAWMIDI_IOCTL_PARAMS	./include/sound/asound.h	/^	SNDRV_RAWMIDI_IOCTL_PARAMS = _IOWR('W', 0x10, struct sndrv_rawmidi_params),$/;"	e	enum:__anon27
SNDRV_RAWMIDI_IOCTL_PVERSION	./include/sound/asound.h	/^	SNDRV_RAWMIDI_IOCTL_PVERSION = _IOR('W', 0x00, int),$/;"	e	enum:__anon27
SNDRV_RAWMIDI_IOCTL_STATUS	./include/sound/asound.h	/^	SNDRV_RAWMIDI_IOCTL_STATUS = _IOWR('W', 0x20, struct sndrv_rawmidi_status),$/;"	e	enum:__anon27
SNDRV_RAWMIDI_STREAM_INPUT	./include/sound/asound.h	/^	SNDRV_RAWMIDI_STREAM_INPUT,$/;"	e	enum:sndrv_rawmidi_stream
SNDRV_RAWMIDI_STREAM_LAST	./include/sound/asound.h	/^	SNDRV_RAWMIDI_STREAM_LAST = SNDRV_RAWMIDI_STREAM_INPUT,$/;"	e	enum:sndrv_rawmidi_stream
SNDRV_RAWMIDI_STREAM_OUTPUT	./include/sound/asound.h	/^	SNDRV_RAWMIDI_STREAM_OUTPUT = 0,$/;"	e	enum:sndrv_rawmidi_stream
SNDRV_RAWMIDI_VERSION	./include/sound/asound.h	519;"	d
SNDRV_RAWMIDI_VERSION_MAX	./src/rawmidi/rawmidi_hw.c	38;"	d	file:
SNDRV_SB_CSP_IOCTL_INFO	./include/sound/sb16_csp.h	100;"	d
SNDRV_SB_CSP_IOCTL_LOAD_CODE	./include/sound/sb16_csp.h	102;"	d
SNDRV_SB_CSP_IOCTL_PAUSE	./include/sound/sb16_csp.h	110;"	d
SNDRV_SB_CSP_IOCTL_RESTART	./include/sound/sb16_csp.h	112;"	d
SNDRV_SB_CSP_IOCTL_START	./include/sound/sb16_csp.h	106;"	d
SNDRV_SB_CSP_IOCTL_STOP	./include/sound/sb16_csp.h	108;"	d
SNDRV_SB_CSP_IOCTL_UNLOAD_CODE	./include/sound/sb16_csp.h	104;"	d
SNDRV_SB_CSP_LOAD_FROMUSER	./include/sound/sb16_csp.h	33;"	d
SNDRV_SB_CSP_LOAD_INITBLOCK	./include/sound/sb16_csp.h	34;"	d
SNDRV_SB_CSP_MAX_MICROCODE_FILE_SIZE	./include/sound/sb16_csp.h	63;"	d
SNDRV_SB_CSP_MODE_DSP_READ	./include/sound/sb16_csp.h	28;"	d
SNDRV_SB_CSP_MODE_DSP_WRITE	./include/sound/sb16_csp.h	29;"	d
SNDRV_SB_CSP_MODE_NONE	./include/sound/sb16_csp.h	27;"	d
SNDRV_SB_CSP_MODE_QSOUND	./include/sound/sb16_csp.h	30;"	d
SNDRV_SB_CSP_MONO	./include/sound/sb16_csp.h	41;"	d
SNDRV_SB_CSP_QSOUND_MAX_RIGHT	./include/sound/sb16_csp.h	60;"	d
SNDRV_SB_CSP_RATE_11025	./include/sound/sb16_csp.h	46;"	d
SNDRV_SB_CSP_RATE_22050	./include/sound/sb16_csp.h	47;"	d
SNDRV_SB_CSP_RATE_44100	./include/sound/sb16_csp.h	48;"	d
SNDRV_SB_CSP_RATE_8000	./include/sound/sb16_csp.h	45;"	d
SNDRV_SB_CSP_RATE_ALL	./include/sound/sb16_csp.h	49;"	d
SNDRV_SB_CSP_SAMPLE_16BIT	./include/sound/sb16_csp.h	38;"	d
SNDRV_SB_CSP_SAMPLE_8BIT	./include/sound/sb16_csp.h	37;"	d
SNDRV_SB_CSP_STEREO	./include/sound/sb16_csp.h	42;"	d
SNDRV_SB_CSP_ST_AUTO	./include/sound/sb16_csp.h	56;"	d
SNDRV_SB_CSP_ST_IDLE	./include/sound/sb16_csp.h	52;"	d
SNDRV_SB_CSP_ST_LOADED	./include/sound/sb16_csp.h	53;"	d
SNDRV_SB_CSP_ST_PAUSED	./include/sound/sb16_csp.h	55;"	d
SNDRV_SB_CSP_ST_QSOUND	./include/sound/sb16_csp.h	57;"	d
SNDRV_SB_CSP_ST_RUNNING	./include/sound/sb16_csp.h	54;"	d
SNDRV_SEQ_ADDRESS_BROADCAST	./include/sound/asequencer.h	176;"	d
SNDRV_SEQ_ADDRESS_SUBSCRIBERS	./include/sound/asequencer.h	175;"	d
SNDRV_SEQ_ADDRESS_UNKNOWN	./include/sound/asequencer.h	174;"	d
SNDRV_SEQ_CLIENT_DUMMY	./include/sound/asequencer.h	397;"	d
SNDRV_SEQ_CLIENT_OSS	./include/sound/asequencer.h	398;"	d
SNDRV_SEQ_CLIENT_SYSTEM	./include/sound/asequencer.h	395;"	d
SNDRV_SEQ_EVENT_BOUNCE	./include/sound/asequencer.h	139;"	d
SNDRV_SEQ_EVENT_CHANPRESS	./include/sound/asequencer.h	58;"	d
SNDRV_SEQ_EVENT_CLIENT_CHANGE	./include/sound/asequencer.h	104;"	d
SNDRV_SEQ_EVENT_CLIENT_EXIT	./include/sound/asequencer.h	103;"	d
SNDRV_SEQ_EVENT_CLIENT_START	./include/sound/asequencer.h	102;"	d
SNDRV_SEQ_EVENT_CLOCK	./include/sound/asequencer.h	82;"	d
SNDRV_SEQ_EVENT_CONTINUE	./include/sound/asequencer.h	77;"	d
SNDRV_SEQ_EVENT_CONTROL14	./include/sound/asequencer.h	60;"	d
SNDRV_SEQ_EVENT_CONTROLLER	./include/sound/asequencer.h	56;"	d
SNDRV_SEQ_EVENT_ECHO	./include/sound/asequencer.h	96;"	d
SNDRV_SEQ_EVENT_KERNEL_ERROR	./include/sound/asequencer.h	148;"	d
SNDRV_SEQ_EVENT_KERNEL_QUOTE	./include/sound/asequencer.h	149;"	d
SNDRV_SEQ_EVENT_KEYPRESS	./include/sound/asequencer.h	51;"	d
SNDRV_SEQ_EVENT_KEYSIGN	./include/sound/asequencer.h	71;"	d
SNDRV_SEQ_EVENT_LENGTH_FIXED	./include/sound/asequencer.h	188;"	d
SNDRV_SEQ_EVENT_LENGTH_MASK	./include/sound/asequencer.h	191;"	d
SNDRV_SEQ_EVENT_LENGTH_VARIABLE	./include/sound/asequencer.h	189;"	d
SNDRV_SEQ_EVENT_LENGTH_VARUSR	./include/sound/asequencer.h	190;"	d
SNDRV_SEQ_EVENT_NONE	./include/sound/asequencer.h	156;"	d
SNDRV_SEQ_EVENT_NONREGPARAM	./include/sound/asequencer.h	61;"	d
SNDRV_SEQ_EVENT_NOTE	./include/sound/asequencer.h	48;"	d
SNDRV_SEQ_EVENT_NOTEOFF	./include/sound/asequencer.h	50;"	d
SNDRV_SEQ_EVENT_NOTEON	./include/sound/asequencer.h	49;"	d
SNDRV_SEQ_EVENT_OSS	./include/sound/asequencer.h	97;"	d
SNDRV_SEQ_EVENT_PGMCHANGE	./include/sound/asequencer.h	57;"	d
SNDRV_SEQ_EVENT_PITCHBEND	./include/sound/asequencer.h	59;"	d
SNDRV_SEQ_EVENT_PORT_CHANGE	./include/sound/asequencer.h	107;"	d
SNDRV_SEQ_EVENT_PORT_EXIT	./include/sound/asequencer.h	106;"	d
SNDRV_SEQ_EVENT_PORT_START	./include/sound/asequencer.h	105;"	d
SNDRV_SEQ_EVENT_PORT_SUBSCRIBED	./include/sound/asequencer.h	112;"	d
SNDRV_SEQ_EVENT_PORT_UNSUBSCRIBED	./include/sound/asequencer.h	113;"	d
SNDRV_SEQ_EVENT_QFRAME	./include/sound/asequencer.h	69;"	d
SNDRV_SEQ_EVENT_QUEUE_SKEW	./include/sound/asequencer.h	84;"	d
SNDRV_SEQ_EVENT_REGPARAM	./include/sound/asequencer.h	62;"	d
SNDRV_SEQ_EVENT_RESET	./include/sound/asequencer.h	90;"	d
SNDRV_SEQ_EVENT_RESULT	./include/sound/asequencer.h	43;"	d
SNDRV_SEQ_EVENT_SENSING	./include/sound/asequencer.h	91;"	d
SNDRV_SEQ_EVENT_SETPOS_TICK	./include/sound/asequencer.h	79;"	d
SNDRV_SEQ_EVENT_SETPOS_TIME	./include/sound/asequencer.h	80;"	d
SNDRV_SEQ_EVENT_SONGPOS	./include/sound/asequencer.h	67;"	d
SNDRV_SEQ_EVENT_SONGSEL	./include/sound/asequencer.h	68;"	d
SNDRV_SEQ_EVENT_START	./include/sound/asequencer.h	76;"	d
SNDRV_SEQ_EVENT_STOP	./include/sound/asequencer.h	78;"	d
SNDRV_SEQ_EVENT_SYSEX	./include/sound/asequencer.h	138;"	d
SNDRV_SEQ_EVENT_SYSTEM	./include/sound/asequencer.h	42;"	d
SNDRV_SEQ_EVENT_TEMPO	./include/sound/asequencer.h	81;"	d
SNDRV_SEQ_EVENT_TICK	./include/sound/asequencer.h	83;"	d
SNDRV_SEQ_EVENT_TIMESIGN	./include/sound/asequencer.h	70;"	d
SNDRV_SEQ_EVENT_TUNE_REQUEST	./include/sound/asequencer.h	89;"	d
SNDRV_SEQ_EVENT_USR0	./include/sound/asequencer.h	120;"	d
SNDRV_SEQ_EVENT_USR1	./include/sound/asequencer.h	121;"	d
SNDRV_SEQ_EVENT_USR2	./include/sound/asequencer.h	122;"	d
SNDRV_SEQ_EVENT_USR3	./include/sound/asequencer.h	123;"	d
SNDRV_SEQ_EVENT_USR4	./include/sound/asequencer.h	124;"	d
SNDRV_SEQ_EVENT_USR5	./include/sound/asequencer.h	125;"	d
SNDRV_SEQ_EVENT_USR6	./include/sound/asequencer.h	126;"	d
SNDRV_SEQ_EVENT_USR7	./include/sound/asequencer.h	127;"	d
SNDRV_SEQ_EVENT_USR8	./include/sound/asequencer.h	128;"	d
SNDRV_SEQ_EVENT_USR9	./include/sound/asequencer.h	129;"	d
SNDRV_SEQ_EVENT_USR_VAR0	./include/sound/asequencer.h	141;"	d
SNDRV_SEQ_EVENT_USR_VAR1	./include/sound/asequencer.h	142;"	d
SNDRV_SEQ_EVENT_USR_VAR2	./include/sound/asequencer.h	143;"	d
SNDRV_SEQ_EVENT_USR_VAR3	./include/sound/asequencer.h	144;"	d
SNDRV_SEQ_EVENT_USR_VAR4	./include/sound/asequencer.h	145;"	d
SNDRV_SEQ_FILTER_BOUNCE	./include/sound/asequencer.h	411;"	d
SNDRV_SEQ_FILTER_BROADCAST	./include/sound/asequencer.h	409;"	d
SNDRV_SEQ_FILTER_MULTICAST	./include/sound/asequencer.h	410;"	d
SNDRV_SEQ_FILTER_USE_EVENT	./include/sound/asequencer.h	412;"	d
SNDRV_SEQ_IOCTL_CLIENT_ID	./include/sound/asequencer.h	637;"	d
SNDRV_SEQ_IOCTL_CREATE_PORT	./include/sound/asequencer.h	644;"	d
SNDRV_SEQ_IOCTL_CREATE_QUEUE	./include/sound/asequencer.h	652;"	d
SNDRV_SEQ_IOCTL_DELETE_PORT	./include/sound/asequencer.h	645;"	d
SNDRV_SEQ_IOCTL_DELETE_QUEUE	./include/sound/asequencer.h	653;"	d
SNDRV_SEQ_IOCTL_GET_CLIENT_INFO	./include/sound/asequencer.h	641;"	d
SNDRV_SEQ_IOCTL_GET_CLIENT_POOL	./include/sound/asequencer.h	670;"	d
SNDRV_SEQ_IOCTL_GET_NAMED_QUEUE	./include/sound/asequencer.h	656;"	d
SNDRV_SEQ_IOCTL_GET_PORT_INFO	./include/sound/asequencer.h	646;"	d
SNDRV_SEQ_IOCTL_GET_QUEUE_CLIENT	./include/sound/asequencer.h	668;"	d
SNDRV_SEQ_IOCTL_GET_QUEUE_INFO	./include/sound/asequencer.h	654;"	d
SNDRV_SEQ_IOCTL_GET_QUEUE_OWNER	./include/sound/asequencer.h	660;"	d
SNDRV_SEQ_IOCTL_GET_QUEUE_STATUS	./include/sound/asequencer.h	657;"	d
SNDRV_SEQ_IOCTL_GET_QUEUE_TEMPO	./include/sound/asequencer.h	658;"	d
SNDRV_SEQ_IOCTL_GET_QUEUE_TIMER	./include/sound/asequencer.h	662;"	d
SNDRV_SEQ_IOCTL_GET_SUBSCRIPTION	./include/sound/asequencer.h	674;"	d
SNDRV_SEQ_IOCTL_PVERSION	./include/sound/asequencer.h	636;"	d
SNDRV_SEQ_IOCTL_QUERY_NEXT_CLIENT	./include/sound/asequencer.h	675;"	d
SNDRV_SEQ_IOCTL_QUERY_NEXT_PORT	./include/sound/asequencer.h	676;"	d
SNDRV_SEQ_IOCTL_QUERY_SUBS	./include/sound/asequencer.h	673;"	d
SNDRV_SEQ_IOCTL_REMOVE_EVENTS	./include/sound/asequencer.h	672;"	d
SNDRV_SEQ_IOCTL_RUNNING_MODE	./include/sound/asequencer.h	639;"	d
SNDRV_SEQ_IOCTL_SET_CLIENT_INFO	./include/sound/asequencer.h	642;"	d
SNDRV_SEQ_IOCTL_SET_CLIENT_POOL	./include/sound/asequencer.h	671;"	d
SNDRV_SEQ_IOCTL_SET_PORT_INFO	./include/sound/asequencer.h	647;"	d
SNDRV_SEQ_IOCTL_SET_QUEUE_CLIENT	./include/sound/asequencer.h	669;"	d
SNDRV_SEQ_IOCTL_SET_QUEUE_INFO	./include/sound/asequencer.h	655;"	d
SNDRV_SEQ_IOCTL_SET_QUEUE_OWNER	./include/sound/asequencer.h	661;"	d
SNDRV_SEQ_IOCTL_SET_QUEUE_TEMPO	./include/sound/asequencer.h	659;"	d
SNDRV_SEQ_IOCTL_SET_QUEUE_TIMER	./include/sound/asequencer.h	663;"	d
SNDRV_SEQ_IOCTL_SUBSCRIBE_PORT	./include/sound/asequencer.h	649;"	d
SNDRV_SEQ_IOCTL_SYSTEM_INFO	./include/sound/asequencer.h	638;"	d
SNDRV_SEQ_IOCTL_UNSUBSCRIBE_PORT	./include/sound/asequencer.h	650;"	d
SNDRV_SEQ_PORT_CAP_DUPLEX	./include/sound/asequencer.h	480;"	d
SNDRV_SEQ_PORT_CAP_NO_EXPORT	./include/sound/asequencer.h	484;"	d
SNDRV_SEQ_PORT_CAP_READ	./include/sound/asequencer.h	474;"	d
SNDRV_SEQ_PORT_CAP_SUBS_READ	./include/sound/asequencer.h	482;"	d
SNDRV_SEQ_PORT_CAP_SUBS_WRITE	./include/sound/asequencer.h	483;"	d
SNDRV_SEQ_PORT_CAP_SYNC_READ	./include/sound/asequencer.h	477;"	d
SNDRV_SEQ_PORT_CAP_SYNC_WRITE	./include/sound/asequencer.h	478;"	d
SNDRV_SEQ_PORT_CAP_WRITE	./include/sound/asequencer.h	475;"	d
SNDRV_SEQ_PORT_FLG_GIVEN_PORT	./include/sound/asequencer.h	507;"	d
SNDRV_SEQ_PORT_FLG_TIMESTAMP	./include/sound/asequencer.h	508;"	d
SNDRV_SEQ_PORT_FLG_TIME_REAL	./include/sound/asequencer.h	509;"	d
SNDRV_SEQ_PORT_SUBS_EXCLUSIVE	./include/sound/asequencer.h	602;"	d
SNDRV_SEQ_PORT_SUBS_TIMESTAMP	./include/sound/asequencer.h	603;"	d
SNDRV_SEQ_PORT_SUBS_TIME_REAL	./include/sound/asequencer.h	604;"	d
SNDRV_SEQ_PORT_SYSTEM_ANNOUNCE	./include/sound/asequencer.h	471;"	d
SNDRV_SEQ_PORT_SYSTEM_TIMER	./include/sound/asequencer.h	470;"	d
SNDRV_SEQ_PORT_TYPE_APPLICATION	./include/sound/asequencer.h	504;"	d
SNDRV_SEQ_PORT_TYPE_DIRECT_SAMPLE	./include/sound/asequencer.h	497;"	d
SNDRV_SEQ_PORT_TYPE_HARDWARE	./include/sound/asequencer.h	500;"	d
SNDRV_SEQ_PORT_TYPE_MIDI_GENERIC	./include/sound/asequencer.h	488;"	d
SNDRV_SEQ_PORT_TYPE_MIDI_GM	./include/sound/asequencer.h	489;"	d
SNDRV_SEQ_PORT_TYPE_MIDI_GM2	./include/sound/asequencer.h	493;"	d
SNDRV_SEQ_PORT_TYPE_MIDI_GS	./include/sound/asequencer.h	490;"	d
SNDRV_SEQ_PORT_TYPE_MIDI_MT32	./include/sound/asequencer.h	492;"	d
SNDRV_SEQ_PORT_TYPE_MIDI_XG	./include/sound/asequencer.h	491;"	d
SNDRV_SEQ_PORT_TYPE_PORT	./include/sound/asequencer.h	503;"	d
SNDRV_SEQ_PORT_TYPE_SAMPLE	./include/sound/asequencer.h	498;"	d
SNDRV_SEQ_PORT_TYPE_SOFTWARE	./include/sound/asequencer.h	501;"	d
SNDRV_SEQ_PORT_TYPE_SPECIFIC	./include/sound/asequencer.h	487;"	d
SNDRV_SEQ_PORT_TYPE_SYNTH	./include/sound/asequencer.h	496;"	d
SNDRV_SEQ_PORT_TYPE_SYNTHESIZER	./include/sound/asequencer.h	502;"	d
SNDRV_SEQ_PRIORITY_HIGH	./include/sound/asequencer.h	194;"	d
SNDRV_SEQ_PRIORITY_MASK	./include/sound/asequencer.h	195;"	d
SNDRV_SEQ_PRIORITY_NORMAL	./include/sound/asequencer.h	193;"	d
SNDRV_SEQ_QUERY_SUBS_READ	./include/sound/asequencer.h	617;"	d
SNDRV_SEQ_QUERY_SUBS_WRITE	./include/sound/asequencer.h	618;"	d
SNDRV_SEQ_QUEUE_DIRECT	./include/sound/asequencer.h	177;"	d
SNDRV_SEQ_QUEUE_FLG_SYNC	./include/sound/asequencer.h	532;"	d
SNDRV_SEQ_REMOVE_DEST	./include/sound/asequencer.h	443;"	d
SNDRV_SEQ_REMOVE_DEST_CHANNEL	./include/sound/asequencer.h	444;"	d
SNDRV_SEQ_REMOVE_EVENT_TYPE	./include/sound/asequencer.h	448;"	d
SNDRV_SEQ_REMOVE_IGNORE_OFF	./include/sound/asequencer.h	449;"	d
SNDRV_SEQ_REMOVE_INPUT	./include/sound/asequencer.h	441;"	d
SNDRV_SEQ_REMOVE_OUTPUT	./include/sound/asequencer.h	442;"	d
SNDRV_SEQ_REMOVE_TAG_MATCH	./include/sound/asequencer.h	450;"	d
SNDRV_SEQ_REMOVE_TIME_AFTER	./include/sound/asequencer.h	446;"	d
SNDRV_SEQ_REMOVE_TIME_BEFORE	./include/sound/asequencer.h	445;"	d
SNDRV_SEQ_REMOVE_TIME_TICK	./include/sound/asequencer.h	447;"	d
SNDRV_SEQ_TIMER_ALSA	./include/sound/asequencer.h	574;"	d
SNDRV_SEQ_TIMER_MIDI_CLOCK	./include/sound/asequencer.h	575;"	d
SNDRV_SEQ_TIMER_MIDI_TICK	./include/sound/asequencer.h	576;"	d
SNDRV_SEQ_TIME_MODE_ABS	./include/sound/asequencer.h	184;"	d
SNDRV_SEQ_TIME_MODE_MASK	./include/sound/asequencer.h	186;"	d
SNDRV_SEQ_TIME_MODE_REL	./include/sound/asequencer.h	185;"	d
SNDRV_SEQ_TIME_STAMP_MASK	./include/sound/asequencer.h	182;"	d
SNDRV_SEQ_TIME_STAMP_REAL	./include/sound/asequencer.h	181;"	d
SNDRV_SEQ_TIME_STAMP_TICK	./include/sound/asequencer.h	180;"	d
SNDRV_SEQ_VERSION	./include/sound/asequencer.h	32;"	d
SNDRV_SEQ_VERSION_MAX	./src/seq/seq_hw.c	35;"	d	file:
SNDRV_TIMER_CLASS_CARD	./include/sound/asound.h	/^	SNDRV_TIMER_CLASS_CARD,$/;"	e	enum:sndrv_timer_class
SNDRV_TIMER_CLASS_GLOBAL	./include/sound/asound.h	/^	SNDRV_TIMER_CLASS_GLOBAL,$/;"	e	enum:sndrv_timer_class
SNDRV_TIMER_CLASS_LAST	./include/sound/asound.h	/^	SNDRV_TIMER_CLASS_LAST = SNDRV_TIMER_CLASS_PCM,$/;"	e	enum:sndrv_timer_class
SNDRV_TIMER_CLASS_NONE	./include/sound/asound.h	/^	SNDRV_TIMER_CLASS_NONE = -1,$/;"	e	enum:sndrv_timer_class
SNDRV_TIMER_CLASS_PCM	./include/sound/asound.h	/^	SNDRV_TIMER_CLASS_PCM,$/;"	e	enum:sndrv_timer_class
SNDRV_TIMER_CLASS_SLAVE	./include/sound/asound.h	/^	SNDRV_TIMER_CLASS_SLAVE = 0,$/;"	e	enum:sndrv_timer_class
SNDRV_TIMER_EVENT_CONTINUE	./include/sound/asound.h	/^	SNDRV_TIMER_EVENT_CONTINUE,		\/* val = resolution in ns *\/$/;"	e	enum:sndrv_timer_event
SNDRV_TIMER_EVENT_EARLY	./include/sound/asound.h	/^	SNDRV_TIMER_EVENT_EARLY,		\/* val = 0, early event *\/$/;"	e	enum:sndrv_timer_event
SNDRV_TIMER_EVENT_MCONTINUE	./include/sound/asound.h	/^	SNDRV_TIMER_EVENT_MCONTINUE = SNDRV_TIMER_EVENT_CONTINUE + 10,$/;"	e	enum:sndrv_timer_event
SNDRV_TIMER_EVENT_MPAUSE	./include/sound/asound.h	/^	SNDRV_TIMER_EVENT_MPAUSE = SNDRV_TIMER_EVENT_PAUSE + 10,$/;"	e	enum:sndrv_timer_event
SNDRV_TIMER_EVENT_MRESUME	./include/sound/asound.h	/^	SNDRV_TIMER_EVENT_MRESUME = SNDRV_TIMER_EVENT_RESUME + 10,$/;"	e	enum:sndrv_timer_event
SNDRV_TIMER_EVENT_MSTART	./include/sound/asound.h	/^	SNDRV_TIMER_EVENT_MSTART = SNDRV_TIMER_EVENT_START + 10,$/;"	e	enum:sndrv_timer_event
SNDRV_TIMER_EVENT_MSTOP	./include/sound/asound.h	/^	SNDRV_TIMER_EVENT_MSTOP = SNDRV_TIMER_EVENT_STOP + 10,$/;"	e	enum:sndrv_timer_event
SNDRV_TIMER_EVENT_MSUSPEND	./include/sound/asound.h	/^	SNDRV_TIMER_EVENT_MSUSPEND = SNDRV_TIMER_EVENT_SUSPEND + 10,$/;"	e	enum:sndrv_timer_event
SNDRV_TIMER_EVENT_PAUSE	./include/sound/asound.h	/^	SNDRV_TIMER_EVENT_PAUSE,		\/* val = 0 *\/$/;"	e	enum:sndrv_timer_event
SNDRV_TIMER_EVENT_RESOLUTION	./include/sound/asound.h	/^	SNDRV_TIMER_EVENT_RESOLUTION = 0,	\/* val = resolution in ns *\/$/;"	e	enum:sndrv_timer_event
SNDRV_TIMER_EVENT_RESUME	./include/sound/asound.h	/^	SNDRV_TIMER_EVENT_RESUME,		\/* val = resolution in ns *\/$/;"	e	enum:sndrv_timer_event
SNDRV_TIMER_EVENT_START	./include/sound/asound.h	/^	SNDRV_TIMER_EVENT_START,		\/* val = resolution in ns *\/$/;"	e	enum:sndrv_timer_event
SNDRV_TIMER_EVENT_STOP	./include/sound/asound.h	/^	SNDRV_TIMER_EVENT_STOP,			\/* val = 0 *\/$/;"	e	enum:sndrv_timer_event
SNDRV_TIMER_EVENT_SUSPEND	./include/sound/asound.h	/^	SNDRV_TIMER_EVENT_SUSPEND,		\/* val = 0 *\/$/;"	e	enum:sndrv_timer_event
SNDRV_TIMER_EVENT_TICK	./include/sound/asound.h	/^	SNDRV_TIMER_EVENT_TICK,			\/* val = ticks *\/$/;"	e	enum:sndrv_timer_event
SNDRV_TIMER_FLG_SLAVE	./include/sound/asound.h	601;"	d
SNDRV_TIMER_GLOBAL_HPET	./include/sound/asound.h	597;"	d
SNDRV_TIMER_GLOBAL_HRTIMER	./include/sound/asound.h	598;"	d
SNDRV_TIMER_GLOBAL_RTC	./include/sound/asound.h	596;"	d
SNDRV_TIMER_GLOBAL_SYSTEM	./include/sound/asound.h	595;"	d
SNDRV_TIMER_IOCTL_CONTINUE	./include/sound/asound.h	/^	SNDRV_TIMER_IOCTL_CONTINUE = _IO('T', 0xa2),$/;"	e	enum:__anon28
SNDRV_TIMER_IOCTL_CONTINUE_OLD	./src/timer/timer_hw.c	/^	SNDRV_TIMER_IOCTL_CONTINUE_OLD = _IO('T', 0x22),$/;"	e	enum:__anon90	file:
SNDRV_TIMER_IOCTL_GINFO	./include/sound/asound.h	/^	SNDRV_TIMER_IOCTL_GINFO = _IOWR('T', 0x03, struct sndrv_timer_ginfo),$/;"	e	enum:__anon28
SNDRV_TIMER_IOCTL_GPARAMS	./include/sound/asound.h	/^	SNDRV_TIMER_IOCTL_GPARAMS = _IOW('T', 0x04, struct sndrv_timer_gparams),$/;"	e	enum:__anon28
SNDRV_TIMER_IOCTL_GSTATUS	./include/sound/asound.h	/^	SNDRV_TIMER_IOCTL_GSTATUS = _IOWR('T', 0x05, struct sndrv_timer_gstatus),$/;"	e	enum:__anon28
SNDRV_TIMER_IOCTL_INFO	./include/sound/asound.h	/^	SNDRV_TIMER_IOCTL_INFO = _IOR('T', 0x11, struct sndrv_timer_info),$/;"	e	enum:__anon28
SNDRV_TIMER_IOCTL_NEXT_DEVICE	./include/sound/asound.h	/^	SNDRV_TIMER_IOCTL_NEXT_DEVICE = _IOWR('T', 0x01, struct sndrv_timer_id),$/;"	e	enum:__anon28
SNDRV_TIMER_IOCTL_PARAMS	./include/sound/asound.h	/^	SNDRV_TIMER_IOCTL_PARAMS = _IOW('T', 0x12, struct sndrv_timer_params),$/;"	e	enum:__anon28
SNDRV_TIMER_IOCTL_PAUSE	./include/sound/asound.h	/^	SNDRV_TIMER_IOCTL_PAUSE = _IO('T', 0xa3),$/;"	e	enum:__anon28
SNDRV_TIMER_IOCTL_PAUSE_OLD	./src/timer/timer_hw.c	/^	SNDRV_TIMER_IOCTL_PAUSE_OLD = _IO('T', 0x23),$/;"	e	enum:__anon90	file:
SNDRV_TIMER_IOCTL_PVERSION	./include/sound/asound.h	/^	SNDRV_TIMER_IOCTL_PVERSION = _IOR('T', 0x00, int),$/;"	e	enum:__anon28
SNDRV_TIMER_IOCTL_SELECT	./include/sound/asound.h	/^	SNDRV_TIMER_IOCTL_SELECT = _IOW('T', 0x10, struct sndrv_timer_select),$/;"	e	enum:__anon28
SNDRV_TIMER_IOCTL_START	./include/sound/asound.h	/^	SNDRV_TIMER_IOCTL_START = _IO('T', 0xa0),$/;"	e	enum:__anon28
SNDRV_TIMER_IOCTL_START_OLD	./src/timer/timer_hw.c	/^	SNDRV_TIMER_IOCTL_START_OLD = _IO('T', 0x20),$/;"	e	enum:__anon90	file:
SNDRV_TIMER_IOCTL_STATUS	./include/sound/asound.h	/^	SNDRV_TIMER_IOCTL_STATUS = _IOR('T', 0x14, struct sndrv_timer_status),$/;"	e	enum:__anon28
SNDRV_TIMER_IOCTL_STATUS_OLD	./src/timer/timer_hw.c	38;"	d	file:
SNDRV_TIMER_IOCTL_STOP	./include/sound/asound.h	/^	SNDRV_TIMER_IOCTL_STOP = _IO('T', 0xa1),$/;"	e	enum:__anon28
SNDRV_TIMER_IOCTL_STOP_OLD	./src/timer/timer_hw.c	/^	SNDRV_TIMER_IOCTL_STOP_OLD = _IO('T', 0x21),$/;"	e	enum:__anon90	file:
SNDRV_TIMER_IOCTL_TREAD	./include/sound/asound.h	/^	SNDRV_TIMER_IOCTL_TREAD = _IOW('T', 0x02, int),$/;"	e	enum:__anon28
SNDRV_TIMER_PSFLG_AUTO	./include/sound/asound.h	655;"	d
SNDRV_TIMER_PSFLG_EARLY_EVENT	./include/sound/asound.h	657;"	d
SNDRV_TIMER_PSFLG_EXCLUSIVE	./include/sound/asound.h	656;"	d
SNDRV_TIMER_SCLASS_APPLICATION	./include/sound/asound.h	/^	SNDRV_TIMER_SCLASS_APPLICATION,$/;"	e	enum:sndrv_timer_slave_class
SNDRV_TIMER_SCLASS_LAST	./include/sound/asound.h	/^	SNDRV_TIMER_SCLASS_LAST = SNDRV_TIMER_SCLASS_OSS_SEQUENCER,$/;"	e	enum:sndrv_timer_slave_class
SNDRV_TIMER_SCLASS_NONE	./include/sound/asound.h	/^	SNDRV_TIMER_SCLASS_NONE = 0,$/;"	e	enum:sndrv_timer_slave_class
SNDRV_TIMER_SCLASS_OSS_SEQUENCER	./include/sound/asound.h	/^	SNDRV_TIMER_SCLASS_OSS_SEQUENCER,	\/* alias *\/$/;"	e	enum:sndrv_timer_slave_class
SNDRV_TIMER_SCLASS_SEQUENCER	./include/sound/asound.h	/^	SNDRV_TIMER_SCLASS_SEQUENCER,		\/* alias *\/$/;"	e	enum:sndrv_timer_slave_class
SNDRV_TIMER_VERSION	./include/sound/asound.h	574;"	d
SNDRV_TIMER_VERSION_MAX	./src/timer/timer_hw.c	36;"	d	file:
SNDRV_TIMER_VERSION_MAX	./src/timer/timer_query_hw.c	36;"	d	file:
SND_ASYNC_HANDLER_CTL	./include/local.h	/^		SND_ASYNC_HANDLER_CTL,$/;"	e	enum:_snd_async_handler::__anon81
SND_ASYNC_HANDLER_GENERIC	./include/local.h	/^		SND_ASYNC_HANDLER_GENERIC,$/;"	e	enum:_snd_async_handler::__anon81
SND_ASYNC_HANDLER_PCM	./include/local.h	/^		SND_ASYNC_HANDLER_PCM,$/;"	e	enum:_snd_async_handler::__anon81
SND_ASYNC_HANDLER_TIMER	./include/local.h	/^		SND_ASYNC_HANDLER_TIMER,$/;"	e	enum:_snd_async_handler::__anon81
SND_BIG_ENDIAN	./include/local.h	132;"	d
SND_CHANGE	./include/local.h	/^	SND_CHANGE,$/;"	e	enum:_snd_set_mode
SND_CONFIG_DLSYM_VERSION_EVALUATE	./include/conf.h	43;"	d
SND_CONFIG_DLSYM_VERSION_HOOK	./include/conf.h	45;"	d
SND_CONFIG_SEARCH	./src/conf.c	2728;"	d	file:
SND_CONFIG_SEARCHA	./src/conf.c	2750;"	d	file:
SND_CONFIG_SEARCHV	./src/conf.c	2777;"	d	file:
SND_CONFIG_SEARCHVA	./src/conf.c	2799;"	d	file:
SND_CONFIG_SEARCH_ALIAS	./src/conf.c	2821;"	d	file:
SND_CONFIG_TYPE_COMPOUND	./include/conf.h	/^	SND_CONFIG_TYPE_COMPOUND = 1024$/;"	e	enum:_snd_config_type
SND_CONFIG_TYPE_INTEGER	./include/conf.h	/^        SND_CONFIG_TYPE_INTEGER,$/;"	e	enum:_snd_config_type
SND_CONFIG_TYPE_INTEGER64	./include/conf.h	/^        SND_CONFIG_TYPE_INTEGER64,$/;"	e	enum:_snd_config_type
SND_CONFIG_TYPE_POINTER	./include/conf.h	/^        SND_CONFIG_TYPE_POINTER,$/;"	e	enum:_snd_config_type
SND_CONFIG_TYPE_REAL	./include/conf.h	/^        SND_CONFIG_TYPE_REAL,$/;"	e	enum:_snd_config_type
SND_CONFIG_TYPE_STRING	./include/conf.h	/^        SND_CONFIG_TYPE_STRING,$/;"	e	enum:_snd_config_type
SND_CONFIG_WALK_PASS_LEAF	./src/conf.c	/^	SND_CONFIG_WALK_PASS_LEAF,$/;"	e	enum:_snd_config_walk_pass	file:
SND_CONFIG_WALK_PASS_POST	./src/conf.c	/^	SND_CONFIG_WALK_PASS_POST,$/;"	e	enum:_snd_config_walk_pass	file:
SND_CONFIG_WALK_PASS_PRE	./src/conf.c	/^	SND_CONFIG_WALK_PASS_PRE,$/;"	e	enum:_snd_config_walk_pass	file:
SND_CONF_MAX_HOPS	./include/local.h	278;"	d
SND_CONTROL_DLSYM_VERSION	./include/control.h	43;"	d
SND_CTL_ASYNC	./include/control.h	201;"	d
SND_CTL_ELEM_IFACE_CARD	./include/control.h	/^	SND_CTL_ELEM_IFACE_CARD = 0,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_HWDEP	./include/control.h	/^	SND_CTL_ELEM_IFACE_HWDEP,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_LAST	./include/control.h	/^	SND_CTL_ELEM_IFACE_LAST = SND_CTL_ELEM_IFACE_SEQUENCER$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_MIXER	./include/control.h	/^	SND_CTL_ELEM_IFACE_MIXER,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_PCM	./include/control.h	/^	SND_CTL_ELEM_IFACE_PCM,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_RAWMIDI	./include/control.h	/^	SND_CTL_ELEM_IFACE_RAWMIDI,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_SEQUENCER	./include/control.h	/^	SND_CTL_ELEM_IFACE_SEQUENCER,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_TIMER	./include/control.h	/^	SND_CTL_ELEM_IFACE_TIMER,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_TYPE_BOOLEAN	./include/control.h	/^	SND_CTL_ELEM_TYPE_BOOLEAN,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_BYTES	./include/control.h	/^	SND_CTL_ELEM_TYPE_BYTES,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_ENUMERATED	./include/control.h	/^	SND_CTL_ELEM_TYPE_ENUMERATED,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_IEC958	./include/control.h	/^	SND_CTL_ELEM_TYPE_IEC958,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_INTEGER	./include/control.h	/^	SND_CTL_ELEM_TYPE_INTEGER,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_INTEGER64	./include/control.h	/^	SND_CTL_ELEM_TYPE_INTEGER64,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_LAST	./include/control.h	/^	SND_CTL_ELEM_TYPE_LAST = SND_CTL_ELEM_TYPE_INTEGER64$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_NONE	./include/control.h	/^	SND_CTL_ELEM_TYPE_NONE = 0,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_EVENT_ELEM	./include/control.h	/^	SND_CTL_EVENT_ELEM = 0,$/;"	e	enum:_snd_ctl_event_type
SND_CTL_EVENT_LAST	./include/control.h	/^	SND_CTL_EVENT_LAST = SND_CTL_EVENT_ELEM$/;"	e	enum:_snd_ctl_event_type
SND_CTL_EVENT_MASK_ADD	./include/control.h	124;"	d
SND_CTL_EVENT_MASK_INFO	./include/control.h	122;"	d
SND_CTL_EVENT_MASK_REMOVE	./include/control.h	118;"	d
SND_CTL_EVENT_MASK_TLV	./include/control.h	126;"	d
SND_CTL_EVENT_MASK_VALUE	./include/control.h	120;"	d
SND_CTL_EXT_ACCESS_INACTIVE	./include/control_external.h	/^	SND_CTL_EXT_ACCESS_INACTIVE = (1<<8),$/;"	e	enum:snd_ctl_ext_access
SND_CTL_EXT_ACCESS_READ	./include/control_external.h	/^	SND_CTL_EXT_ACCESS_READ = (1<<0),$/;"	e	enum:snd_ctl_ext_access
SND_CTL_EXT_ACCESS_READWRITE	./include/control_external.h	/^	SND_CTL_EXT_ACCESS_READWRITE = (3<<0),$/;"	e	enum:snd_ctl_ext_access
SND_CTL_EXT_ACCESS_VOLATILE	./include/control_external.h	/^	SND_CTL_EXT_ACCESS_VOLATILE = (1<<2),$/;"	e	enum:snd_ctl_ext_access
SND_CTL_EXT_ACCESS_WRITE	./include/control_external.h	/^	SND_CTL_EXT_ACCESS_WRITE = (1<<1),$/;"	e	enum:snd_ctl_ext_access
SND_CTL_EXT_KEY_NOT_FOUND	./include/control_external.h	254;"	d
SND_CTL_EXT_VERSION	./include/control_external.h	73;"	d
SND_CTL_EXT_VERSION_MAJOR	./include/control_external.h	67;"	d
SND_CTL_EXT_VERSION_MINOR	./include/control_external.h	68;"	d
SND_CTL_EXT_VERSION_TINY	./include/control_external.h	69;"	d
SND_CTL_IOCTL_ASYNC	./include/aserver.h	114;"	d
SND_CTL_IOCTL_CLOSE	./include/aserver.h	112;"	d
SND_CTL_IOCTL_POLL_DESCRIPTOR	./include/aserver.h	113;"	d
SND_CTL_IOCTL_READ	./include/aserver.h	111;"	d
SND_CTL_NAME_CAPTURE	./include/control.h	133;"	d
SND_CTL_NAME_IEC958	./include/control.h	152;"	d
SND_CTL_NAME_IEC958_CON_MASK	./include/control.h	146;"	d
SND_CTL_NAME_IEC958_DEFAULT	./include/control.h	142;"	d
SND_CTL_NAME_IEC958_MASK	./include/control.h	144;"	d
SND_CTL_NAME_IEC958_NONE	./include/control.h	136;"	d
SND_CTL_NAME_IEC958_PCM_STREAM	./include/control.h	150;"	d
SND_CTL_NAME_IEC958_PRO_MASK	./include/control.h	148;"	d
SND_CTL_NAME_IEC958_SWITCH	./include/control.h	138;"	d
SND_CTL_NAME_IEC958_VOLUME	./include/control.h	140;"	d
SND_CTL_NAME_NONE	./include/control.h	129;"	d
SND_CTL_NAME_PLAYBACK	./include/control.h	131;"	d
SND_CTL_NONBLOCK	./include/control.h	198;"	d
SND_CTL_PLUGIN_DEFINE_FUNC	./include/control_external.h	53;"	d
SND_CTL_PLUGIN_ENTRY	./include/control_external.h	43;"	d
SND_CTL_PLUGIN_SYMBOL	./include/control_external.h	48;"	d
SND_CTL_POWER_D0	./include/control.h	157;"	d
SND_CTL_POWER_D1	./include/control.h	159;"	d
SND_CTL_POWER_D2	./include/control.h	161;"	d
SND_CTL_POWER_D3	./include/control.h	163;"	d
SND_CTL_POWER_D3cold	./include/control.h	167;"	d
SND_CTL_POWER_D3hot	./include/control.h	165;"	d
SND_CTL_POWER_MASK	./include/control.h	155;"	d
SND_CTL_READONLY	./include/control.h	204;"	d
SND_CTL_TLVT_CONTAINER	./include/control.h	170;"	d
SND_CTL_TLVT_DB_LINEAR	./include/control.h	174;"	d
SND_CTL_TLVT_DB_MINMAX	./include/control.h	178;"	d
SND_CTL_TLVT_DB_MINMAX_MUTE	./include/control.h	180;"	d
SND_CTL_TLVT_DB_RANGE	./include/control.h	176;"	d
SND_CTL_TLVT_DB_SCALE	./include/control.h	172;"	d
SND_CTL_TLV_DB_GAIN_MUTE	./include/control.h	183;"	d
SND_CTL_TYPE_EXT	./include/control.h	/^	SND_CTL_TYPE_EXT$/;"	e	enum:_snd_ctl_type
SND_CTL_TYPE_HW	./include/control.h	/^	SND_CTL_TYPE_HW,$/;"	e	enum:_snd_ctl_type
SND_CTL_TYPE_INET	./include/control.h	/^	SND_CTL_TYPE_INET,$/;"	e	enum:_snd_ctl_type
SND_CTL_TYPE_SHM	./include/control.h	/^	SND_CTL_TYPE_SHM,$/;"	e	enum:_snd_ctl_type
SND_DEV_TYPE_CONTROL	./include/aserver.h	/^	SND_DEV_TYPE_CONTROL,$/;"	e	enum:_snd_dev_type
SND_DEV_TYPE_HWDEP	./include/aserver.h	/^	SND_DEV_TYPE_HWDEP,$/;"	e	enum:_snd_dev_type
SND_DEV_TYPE_PCM	./include/aserver.h	/^	SND_DEV_TYPE_PCM,$/;"	e	enum:_snd_dev_type
SND_DEV_TYPE_RAWMIDI	./include/aserver.h	/^	SND_DEV_TYPE_RAWMIDI,$/;"	e	enum:_snd_dev_type
SND_DEV_TYPE_SEQ	./include/aserver.h	/^	SND_DEV_TYPE_SEQ,$/;"	e	enum:_snd_dev_type
SND_DEV_TYPE_TIMER	./include/aserver.h	/^	SND_DEV_TYPE_TIMER,$/;"	e	enum:_snd_dev_type
SND_DLSYM_BUILD_VERSION	./include/global.h	62;"	d
SND_DLSYM_BUILD_VERSION	./include/global.h	80;"	d
SND_DLSYM_VERSION	./include/global.h	98;"	d
SND_ERROR_ALISP_NIL	./include/error.h	43;"	d
SND_ERROR_BEGIN	./include/error.h	41;"	d
SND_ERROR_INCOMPATIBLE_VERSION	./include/error.h	42;"	d
SND_FILE_CONTROL	./src/control/cards.c	38;"	d	file:
SND_FILE_LOAD	./src/control/cards.c	39;"	d	file:
SND_HWDEP_DLSYM_VERSION	./include/hwdep.h	42;"	d
SND_HWDEP_IFACE_BLUETOOTH	./include/hwdep.h	/^	SND_HWDEP_IFACE_BLUETOOTH,	\/**< Bluetooth audio *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_EMU10K1	./include/hwdep.h	/^	SND_HWDEP_IFACE_EMU10K1,	\/**< EMU10K1 driver *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_EMUX_WAVETABLE	./include/hwdep.h	/^	SND_HWDEP_IFACE_EMUX_WAVETABLE,	\/**< EmuX wavetable *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_ICS2115	./include/hwdep.h	/^	SND_HWDEP_IFACE_ICS2115,	\/**< ICS2115 driver *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_LAST	./include/hwdep.h	/^	SND_HWDEP_IFACE_LAST = SND_HWDEP_IFACE_SB_RC  \/**< last known hwdep interface *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_MIXART	./include/hwdep.h	/^	SND_HWDEP_IFACE_MIXART,		\/**< Digigram miXart cards *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_OPL2	./include/hwdep.h	/^	SND_HWDEP_IFACE_OPL2 = 0,	\/**< OPL2 raw driver *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_OPL3	./include/hwdep.h	/^	SND_HWDEP_IFACE_OPL3,		\/**< OPL3 raw driver *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_OPL4	./include/hwdep.h	/^	SND_HWDEP_IFACE_OPL4,		\/**< OPL4 raw driver *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_PCXHR	./include/hwdep.h	/^	SND_HWDEP_IFACE_PCXHR,		\/**< Digigram PCXHR *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_SB16CSP	./include/hwdep.h	/^	SND_HWDEP_IFACE_SB16CSP,	\/**< SB16CSP driver *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_SB_RC	./include/hwdep.h	/^	SND_HWDEP_IFACE_SB_RC,		\/**< SB Extigy\/Audigy2NX remote control *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_SSCAPE	./include/hwdep.h	/^	SND_HWDEP_IFACE_SSCAPE,		\/**< Ensoniq SoundScape ISA card (MC68EC000) *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_USX2Y	./include/hwdep.h	/^	SND_HWDEP_IFACE_USX2Y,		\/**< Tascam US122, US224 & US428 usb *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_USX2Y_PCM	./include/hwdep.h	/^	SND_HWDEP_IFACE_USX2Y_PCM,	\/**< Tascam US122, US224 & US428 raw USB PCM *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_VX	./include/hwdep.h	/^	SND_HWDEP_IFACE_VX,		\/**< Digigram VX cards *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_YSS225	./include/hwdep.h	/^	SND_HWDEP_IFACE_YSS225,		\/**< YSS225 driver *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_OPEN_DUPLEX	./include/hwdep.h	80;"	d
SND_HWDEP_OPEN_NONBLOCK	./include/hwdep.h	82;"	d
SND_HWDEP_OPEN_READ	./include/hwdep.h	76;"	d
SND_HWDEP_OPEN_WRITE	./include/hwdep.h	78;"	d
SND_HWDEP_TYPE_HW	./include/hwdep.h	/^	SND_HWDEP_TYPE_HW,$/;"	e	enum:_snd_hwdep_type
SND_HWDEP_TYPE_INET	./include/hwdep.h	/^	SND_HWDEP_TYPE_INET$/;"	e	enum:_snd_hwdep_type
SND_HWDEP_TYPE_SHM	./include/hwdep.h	/^	SND_HWDEP_TYPE_SHM,$/;"	e	enum:_snd_hwdep_type
SND_INPUT_BUFFER	./include/input.h	/^	SND_INPUT_BUFFER$/;"	e	enum:_snd_input_type
SND_INPUT_STDIO	./include/input.h	/^	SND_INPUT_STDIO,$/;"	e	enum:_snd_input_type
SND_INTERVAL_C	./src/pcm/interval.c	22;"	d	file:
SND_INTERVAL_INLINE	./src/pcm/interval.c	23;"	d	file:
SND_INTERVAL_INLINE	./src/pcm/pcm_local.h	35;"	d
SND_LIB_EXTRAVER	./include/version.h	8;"	d
SND_LIB_MAJOR	./include/version.h	5;"	d
SND_LIB_MINOR	./include/version.h	6;"	d
SND_LIB_SUBMINOR	./include/version.h	7;"	d
SND_LIB_VERSION	./include/version.h	10;"	d
SND_LIB_VERSION_STR	./include/version.h	14;"	d
SND_LITTLE_ENDIAN	./include/local.h	129;"	d
SND_MASK_C	./src/pcm/mask.c	22;"	d	file:
SND_MASK_INLINE	./src/pcm/mask.c	23;"	d	file:
SND_MASK_INLINE	./src/pcm/pcm_local.h	38;"	d
SND_MASK_MAX	./src/pcm/mask.h	24;"	d
SND_MIXER_ELEM_LAST	./include/mixer.h	/^	SND_MIXER_ELEM_LAST = SND_MIXER_ELEM_SIMPLE$/;"	e	enum:_snd_mixer_elem_type
SND_MIXER_ELEM_SIMPLE	./include/mixer.h	/^	SND_MIXER_ELEM_SIMPLE,$/;"	e	enum:_snd_mixer_elem_type
SND_MIXER_SABSTRACT_BASIC	./include/mixer.h	/^	SND_MIXER_SABSTRACT_BASIC,$/;"	e	enum:snd_mixer_selem_regopt_abstract
SND_MIXER_SABSTRACT_NONE	./include/mixer.h	/^	SND_MIXER_SABSTRACT_NONE = 0,$/;"	e	enum:snd_mixer_selem_regopt_abstract
SND_MIXER_SCHN_FRONT_CENTER	./include/mixer.h	/^	SND_MIXER_SCHN_FRONT_CENTER,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_FRONT_LEFT	./include/mixer.h	/^	SND_MIXER_SCHN_FRONT_LEFT = 0,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_FRONT_RIGHT	./include/mixer.h	/^	SND_MIXER_SCHN_FRONT_RIGHT,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_LAST	./include/mixer.h	/^	SND_MIXER_SCHN_LAST = 31,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_MONO	./include/mixer.h	/^	SND_MIXER_SCHN_MONO = SND_MIXER_SCHN_FRONT_LEFT$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_REAR_CENTER	./include/mixer.h	/^	SND_MIXER_SCHN_REAR_CENTER,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_REAR_LEFT	./include/mixer.h	/^	SND_MIXER_SCHN_REAR_LEFT,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_REAR_RIGHT	./include/mixer.h	/^	SND_MIXER_SCHN_REAR_RIGHT,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_SIDE_LEFT	./include/mixer.h	/^	SND_MIXER_SCHN_SIDE_LEFT,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_SIDE_RIGHT	./include/mixer.h	/^	SND_MIXER_SCHN_SIDE_RIGHT,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_UNKNOWN	./include/mixer.h	/^	SND_MIXER_SCHN_UNKNOWN = -1,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_WOOFER	./include/mixer.h	/^	SND_MIXER_SCHN_WOOFER,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_OUTPUT_BUFFER	./include/output.h	/^	SND_OUTPUT_BUFFER$/;"	e	enum:_snd_output_type
SND_OUTPUT_STDIO	./include/output.h	/^	SND_OUTPUT_STDIO,$/;"	e	enum:_snd_output_type
SND_PCM_ACCBIT_MMAP	./src/pcm/pcm_local.h	894;"	d
SND_PCM_ACCBIT_MMAPC	./src/pcm/pcm_local.h	899;"	d
SND_PCM_ACCBIT_MMAPI	./src/pcm/pcm_local.h	897;"	d
SND_PCM_ACCBIT_MMAPN	./src/pcm/pcm_local.h	898;"	d
SND_PCM_ACCBIT_SHM	./src/pcm/pcm_local.h	901;"	d
SND_PCM_ACCBIT_SHMI	./src/pcm/pcm_local.h	905;"	d
SND_PCM_ACCBIT_SHMN	./src/pcm/pcm_local.h	907;"	d
SND_PCM_ACCESS_LAST	./include/pcm.h	/^	SND_PCM_ACCESS_LAST = SND_PCM_ACCESS_RW_NONINTERLEAVED$/;"	e	enum:_snd_pcm_access
SND_PCM_ACCESS_MMAP_COMPLEX	./include/pcm.h	/^	SND_PCM_ACCESS_MMAP_COMPLEX,$/;"	e	enum:_snd_pcm_access
SND_PCM_ACCESS_MMAP_INTERLEAVED	./include/pcm.h	/^	SND_PCM_ACCESS_MMAP_INTERLEAVED = 0,$/;"	e	enum:_snd_pcm_access
SND_PCM_ACCESS_MMAP_NONINTERLEAVED	./include/pcm.h	/^	SND_PCM_ACCESS_MMAP_NONINTERLEAVED,$/;"	e	enum:_snd_pcm_access
SND_PCM_ACCESS_RW_INTERLEAVED	./include/pcm.h	/^	SND_PCM_ACCESS_RW_INTERLEAVED,$/;"	e	enum:_snd_pcm_access
SND_PCM_ACCESS_RW_NONINTERLEAVED	./include/pcm.h	/^	SND_PCM_ACCESS_RW_NONINTERLEAVED,$/;"	e	enum:_snd_pcm_access
SND_PCM_APPEND	./src/pcm/pcm_local.h	853;"	d
SND_PCM_AREA_LOCAL	./src/pcm/pcm_local.h	/^	enum { SND_PCM_AREA_SHM, SND_PCM_AREA_MMAP, SND_PCM_AREA_LOCAL } type;$/;"	e	enum:_snd_pcm_channel_info::__anon133
SND_PCM_AREA_MMAP	./src/pcm/pcm_local.h	/^	enum { SND_PCM_AREA_SHM, SND_PCM_AREA_MMAP, SND_PCM_AREA_LOCAL } type;$/;"	e	enum:_snd_pcm_channel_info::__anon133
SND_PCM_AREA_SHM	./src/pcm/pcm_local.h	/^	enum { SND_PCM_AREA_SHM, SND_PCM_AREA_MMAP, SND_PCM_AREA_LOCAL } type;$/;"	e	enum:_snd_pcm_channel_info::__anon133
SND_PCM_ASYNC	./include/pcm.h	301;"	d
SND_PCM_CLASS_DIGITIZER	./include/pcm.h	/^	SND_PCM_CLASS_DIGITIZER,$/;"	e	enum:_snd_pcm_class
SND_PCM_CLASS_GENERIC	./include/pcm.h	/^	SND_PCM_CLASS_GENERIC = 0,$/;"	e	enum:_snd_pcm_class
SND_PCM_CLASS_LAST	./include/pcm.h	/^	SND_PCM_CLASS_LAST = SND_PCM_CLASS_DIGITIZER$/;"	e	enum:_snd_pcm_class
SND_PCM_CLASS_MODEM	./include/pcm.h	/^	SND_PCM_CLASS_MODEM,$/;"	e	enum:_snd_pcm_class
SND_PCM_CLASS_MULTI	./include/pcm.h	/^	SND_PCM_CLASS_MULTI,$/;"	e	enum:_snd_pcm_class
SND_PCM_DIRECT_MAGIC	./src/pcm/pcm_direct.c	85;"	d	file:
SND_PCM_DLSYM_VERSION	./include/pcm.h	43;"	d
SND_PCM_EXTPLUG_HW_CHANNELS	./include/pcm_extplug.h	/^	SND_PCM_EXTPLUG_HW_CHANNELS,	\/**< channels *\/$/;"	e	enum:__anon83
SND_PCM_EXTPLUG_HW_FORMAT	./include/pcm_extplug.h	/^	SND_PCM_EXTPLUG_HW_FORMAT,	\/**< format *\/$/;"	e	enum:__anon83
SND_PCM_EXTPLUG_HW_PARAMS	./include/pcm_extplug.h	/^	SND_PCM_EXTPLUG_HW_PARAMS	\/**< max number of hw constraints *\/$/;"	e	enum:__anon83
SND_PCM_EXTPLUG_VERSION	./include/pcm_extplug.h	62;"	d
SND_PCM_EXTPLUG_VERSION_MAJOR	./include/pcm_extplug.h	56;"	d
SND_PCM_EXTPLUG_VERSION_MINOR	./include/pcm_extplug.h	57;"	d
SND_PCM_EXTPLUG_VERSION_TINY	./include/pcm_extplug.h	58;"	d
SND_PCM_FILE_FORMAT_RAW	./src/pcm/pcm_file.c	/^	SND_PCM_FILE_FORMAT_RAW,$/;"	e	enum:_snd_pcm_file_format	file:
SND_PCM_FILE_FORMAT_WAV	./src/pcm/pcm_file.c	/^	SND_PCM_FILE_FORMAT_WAV$/;"	e	enum:_snd_pcm_file_format	file:
SND_PCM_FMTBIT_FLOAT	./src/pcm/pcm_local.h	939;"	d
SND_PCM_FMTBIT_LINEAR	./src/pcm/pcm_local.h	910;"	d
SND_PCM_FORMAT_A_LAW	./include/pcm.h	/^	SND_PCM_FORMAT_A_LAW,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_FLOAT	./include/pcm.h	/^	SND_PCM_FORMAT_FLOAT = SND_PCM_FORMAT_FLOAT_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_FLOAT64	./include/pcm.h	/^	SND_PCM_FORMAT_FLOAT64 = SND_PCM_FORMAT_FLOAT64_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_FLOAT64_BE	./include/pcm.h	/^	SND_PCM_FORMAT_FLOAT64_BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_FLOAT64_LE	./include/pcm.h	/^	SND_PCM_FORMAT_FLOAT64_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_FLOAT_BE	./include/pcm.h	/^	SND_PCM_FORMAT_FLOAT_BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_FLOAT_LE	./include/pcm.h	/^	SND_PCM_FORMAT_FLOAT_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_GSM	./include/pcm.h	/^	SND_PCM_FORMAT_GSM,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_IEC958_SUBFRAME	./include/pcm.h	/^	SND_PCM_FORMAT_IEC958_SUBFRAME = SND_PCM_FORMAT_IEC958_SUBFRAME_LE$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_IEC958_SUBFRAME_BE	./include/pcm.h	/^	SND_PCM_FORMAT_IEC958_SUBFRAME_BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_IEC958_SUBFRAME_LE	./include/pcm.h	/^	SND_PCM_FORMAT_IEC958_SUBFRAME_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_IMA_ADPCM	./include/pcm.h	/^	SND_PCM_FORMAT_IMA_ADPCM,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_LAST	./include/pcm.h	/^	SND_PCM_FORMAT_LAST = SND_PCM_FORMAT_U18_3BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_MPEG	./include/pcm.h	/^	SND_PCM_FORMAT_MPEG,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_MU_LAW	./include/pcm.h	/^	SND_PCM_FORMAT_MU_LAW,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S16	./include/pcm.h	/^	SND_PCM_FORMAT_S16 = SND_PCM_FORMAT_S16_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S16_BE	./include/pcm.h	/^	SND_PCM_FORMAT_S16_BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S16_LE	./include/pcm.h	/^	SND_PCM_FORMAT_S16_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S18_3BE	./include/pcm.h	/^	SND_PCM_FORMAT_S18_3BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S18_3LE	./include/pcm.h	/^	SND_PCM_FORMAT_S18_3LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S20_3BE	./include/pcm.h	/^	SND_PCM_FORMAT_S20_3BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S20_3LE	./include/pcm.h	/^	SND_PCM_FORMAT_S20_3LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S24	./include/pcm.h	/^	SND_PCM_FORMAT_S24 = SND_PCM_FORMAT_S24_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S24_3BE	./include/pcm.h	/^	SND_PCM_FORMAT_S24_3BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S24_3LE	./include/pcm.h	/^	SND_PCM_FORMAT_S24_3LE = 32,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S24_BE	./include/pcm.h	/^	SND_PCM_FORMAT_S24_BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S24_LE	./include/pcm.h	/^	SND_PCM_FORMAT_S24_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S32	./include/pcm.h	/^	SND_PCM_FORMAT_S32 = SND_PCM_FORMAT_S32_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S32_BE	./include/pcm.h	/^	SND_PCM_FORMAT_S32_BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S32_LE	./include/pcm.h	/^	SND_PCM_FORMAT_S32_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S8	./include/pcm.h	/^	SND_PCM_FORMAT_S8 = 0,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_SPECIAL	./include/pcm.h	/^	SND_PCM_FORMAT_SPECIAL = 31,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U16	./include/pcm.h	/^	SND_PCM_FORMAT_U16 = SND_PCM_FORMAT_U16_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U16_BE	./include/pcm.h	/^	SND_PCM_FORMAT_U16_BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U16_LE	./include/pcm.h	/^	SND_PCM_FORMAT_U16_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U18_3BE	./include/pcm.h	/^	SND_PCM_FORMAT_U18_3BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U18_3LE	./include/pcm.h	/^	SND_PCM_FORMAT_U18_3LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U20_3BE	./include/pcm.h	/^	SND_PCM_FORMAT_U20_3BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U20_3LE	./include/pcm.h	/^	SND_PCM_FORMAT_U20_3LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U24	./include/pcm.h	/^	SND_PCM_FORMAT_U24 = SND_PCM_FORMAT_U24_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U24_3BE	./include/pcm.h	/^	SND_PCM_FORMAT_U24_3BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U24_3LE	./include/pcm.h	/^	SND_PCM_FORMAT_U24_3LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U24_BE	./include/pcm.h	/^	SND_PCM_FORMAT_U24_BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U24_LE	./include/pcm.h	/^	SND_PCM_FORMAT_U24_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U32	./include/pcm.h	/^	SND_PCM_FORMAT_U32 = SND_PCM_FORMAT_U32_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U32_BE	./include/pcm.h	/^	SND_PCM_FORMAT_U32_BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U32_LE	./include/pcm.h	/^	SND_PCM_FORMAT_U32_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U8	./include/pcm.h	/^	SND_PCM_FORMAT_U8,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_UNKNOWN	./include/pcm.h	/^	SND_PCM_FORMAT_UNKNOWN = -1,$/;"	e	enum:_snd_pcm_format
SND_PCM_HOOK_TYPE_CLOSE	./include/pcm.h	/^	SND_PCM_HOOK_TYPE_CLOSE,$/;"	e	enum:_snd_pcm_hook_type
SND_PCM_HOOK_TYPE_HW_FREE	./include/pcm.h	/^	SND_PCM_HOOK_TYPE_HW_FREE,$/;"	e	enum:_snd_pcm_hook_type
SND_PCM_HOOK_TYPE_HW_PARAMS	./include/pcm.h	/^	SND_PCM_HOOK_TYPE_HW_PARAMS = 0,$/;"	e	enum:_snd_pcm_hook_type
SND_PCM_HOOK_TYPE_LAST	./include/pcm.h	/^	SND_PCM_HOOK_TYPE_LAST = SND_PCM_HOOK_TYPE_CLOSE$/;"	e	enum:_snd_pcm_hook_type
SND_PCM_HW_PARAMS_EXPORT_BUFFER	./src/pcm/pcm_local.h	98;"	d
SND_PCM_HW_PARAMS_NORESAMPLE	./src/pcm/pcm_local.h	97;"	d
SND_PCM_HW_PARAMS_NO_PERIOD_WAKEUP	./src/pcm/pcm_local.h	99;"	d
SND_PCM_HW_PARAM_ACCESS	./src/pcm/pcm_local.h	42;"	d
SND_PCM_HW_PARAM_BUFFER_BYTES	./src/pcm/pcm_local.h	58;"	d
SND_PCM_HW_PARAM_BUFFER_SIZE	./src/pcm/pcm_local.h	57;"	d
SND_PCM_HW_PARAM_BUFFER_TIME	./src/pcm/pcm_local.h	56;"	d
SND_PCM_HW_PARAM_CHANNELS	./src/pcm/pcm_local.h	50;"	d
SND_PCM_HW_PARAM_FIRST_INTERVAL	./src/pcm/pcm_local.h	48;"	d
SND_PCM_HW_PARAM_FIRST_INTERVAL	./src/pcm/pcm_local.h	64;"	d
SND_PCM_HW_PARAM_FIRST_MASK	./src/pcm/pcm_local.h	43;"	d
SND_PCM_HW_PARAM_FIRST_MASK	./src/pcm/pcm_local.h	62;"	d
SND_PCM_HW_PARAM_FORMAT	./src/pcm/pcm_local.h	44;"	d
SND_PCM_HW_PARAM_FRAME_BITS	./src/pcm/pcm_local.h	49;"	d
SND_PCM_HW_PARAM_LAST_INTERVAL	./src/pcm/pcm_local.h	60;"	d
SND_PCM_HW_PARAM_LAST_INTERVAL	./src/pcm/pcm_local.h	63;"	d
SND_PCM_HW_PARAM_LAST_MASK	./src/pcm/pcm_local.h	46;"	d
SND_PCM_HW_PARAM_LAST_MASK	./src/pcm/pcm_local.h	61;"	d
SND_PCM_HW_PARAM_PERIODS	./src/pcm/pcm_local.h	55;"	d
SND_PCM_HW_PARAM_PERIOD_BYTES	./src/pcm/pcm_local.h	54;"	d
SND_PCM_HW_PARAM_PERIOD_SIZE	./src/pcm/pcm_local.h	53;"	d
SND_PCM_HW_PARAM_PERIOD_TIME	./src/pcm/pcm_local.h	52;"	d
SND_PCM_HW_PARAM_RATE	./src/pcm/pcm_local.h	51;"	d
SND_PCM_HW_PARAM_SAMPLE_BITS	./src/pcm/pcm_local.h	47;"	d
SND_PCM_HW_PARAM_SUBFORMAT	./src/pcm/pcm_local.h	45;"	d
SND_PCM_HW_PARAM_TICK_TIME	./src/pcm/pcm_local.h	59;"	d
SND_PCM_HW_PARBIT_ACCESS	./src/pcm/pcm_local.h	877;"	d
SND_PCM_HW_PARBIT_BUFFER_BYTES	./src/pcm/pcm_local.h	890;"	d
SND_PCM_HW_PARBIT_BUFFER_SIZE	./src/pcm/pcm_local.h	886;"	d
SND_PCM_HW_PARBIT_BUFFER_TIME	./src/pcm/pcm_local.h	885;"	d
SND_PCM_HW_PARBIT_CHANNELS	./src/pcm/pcm_local.h	880;"	d
SND_PCM_HW_PARBIT_FORMAT	./src/pcm/pcm_local.h	878;"	d
SND_PCM_HW_PARBIT_FRAME_BITS	./src/pcm/pcm_local.h	888;"	d
SND_PCM_HW_PARBIT_PERIODS	./src/pcm/pcm_local.h	884;"	d
SND_PCM_HW_PARBIT_PERIOD_BYTES	./src/pcm/pcm_local.h	889;"	d
SND_PCM_HW_PARBIT_PERIOD_SIZE	./src/pcm/pcm_local.h	883;"	d
SND_PCM_HW_PARBIT_PERIOD_TIME	./src/pcm/pcm_local.h	882;"	d
SND_PCM_HW_PARBIT_RATE	./src/pcm/pcm_local.h	881;"	d
SND_PCM_HW_PARBIT_SAMPLE_BITS	./src/pcm/pcm_local.h	887;"	d
SND_PCM_HW_PARBIT_SUBFORMAT	./src/pcm/pcm_local.h	879;"	d
SND_PCM_HW_PARBIT_TICK_TIME	./src/pcm/pcm_local.h	891;"	d
SND_PCM_INFO_BATCH	./src/pcm/pcm_local.h	73;"	d
SND_PCM_INFO_BLOCK_TRANSFER	./src/pcm/pcm_local.h	81;"	d
SND_PCM_INFO_COMPLEX	./src/pcm/pcm_local.h	79;"	d
SND_PCM_INFO_DOUBLE	./src/pcm/pcm_local.h	71;"	d
SND_PCM_INFO_HALF_DUPLEX	./src/pcm/pcm_local.h	89;"	d
SND_PCM_INFO_INTERLEAVED	./src/pcm/pcm_local.h	75;"	d
SND_PCM_INFO_JOINT_DUPLEX	./src/pcm/pcm_local.h	91;"	d
SND_PCM_INFO_MMAP	./src/pcm/pcm_local.h	67;"	d
SND_PCM_INFO_MMAP_VALID	./src/pcm/pcm_local.h	69;"	d
SND_PCM_INFO_MONOTONIC	./src/pcm/pcm_local.h	101;"	d
SND_PCM_INFO_NONINTERLEAVED	./src/pcm/pcm_local.h	77;"	d
SND_PCM_INFO_NO_PERIOD_WAKEUP	./src/pcm/pcm_local.h	95;"	d
SND_PCM_INFO_OVERRANGE	./src/pcm/pcm_local.h	83;"	d
SND_PCM_INFO_PAUSE	./src/pcm/pcm_local.h	87;"	d
SND_PCM_INFO_RESUME	./src/pcm/pcm_local.h	85;"	d
SND_PCM_INFO_SYNC_START	./src/pcm/pcm_local.h	93;"	d
SND_PCM_IOCTL_APPL_PTR_FD	./include/aserver.h	52;"	d
SND_PCM_IOCTL_ASYNC	./include/aserver.h	48;"	d
SND_PCM_IOCTL_AVAIL_UPDATE	./include/aserver.h	47;"	d
SND_PCM_IOCTL_CLOSE	./include/aserver.h	49;"	d
SND_PCM_IOCTL_FORWARD	./include/aserver.h	53;"	d
SND_PCM_IOCTL_HWSYNC	./include/aserver.h	42;"	d
SND_PCM_IOCTL_HW_PARAMS_OLD	./src/pcm/pcm_hw.c	78;"	d	file:
SND_PCM_IOCTL_HW_PTR_FD	./include/aserver.h	51;"	d
SND_PCM_IOCTL_HW_REFINE_OLD	./src/pcm/pcm_hw.c	77;"	d	file:
SND_PCM_IOCTL_MMAP	./include/aserver.h	44;"	d
SND_PCM_IOCTL_MMAP_COMMIT	./include/aserver.h	46;"	d
SND_PCM_IOCTL_MUNMAP	./include/aserver.h	45;"	d
SND_PCM_IOCTL_POLL_DESCRIPTOR	./include/aserver.h	50;"	d
SND_PCM_IOCTL_STATE	./include/aserver.h	43;"	d
SND_PCM_IOPLUG_FLAG_LISTED	./include/pcm_ioplug.h	61;"	d
SND_PCM_IOPLUG_FLAG_MONOTONIC	./include/pcm_ioplug.h	62;"	d
SND_PCM_IOPLUG_HW_ACCESS	./include/pcm_ioplug.h	/^	SND_PCM_IOPLUG_HW_ACCESS = 0,	\/**< access type *\/$/;"	e	enum:__anon80
SND_PCM_IOPLUG_HW_BUFFER_BYTES	./include/pcm_ioplug.h	/^	SND_PCM_IOPLUG_HW_BUFFER_BYTES,	\/**< buffer bytes *\/$/;"	e	enum:__anon80
SND_PCM_IOPLUG_HW_CHANNELS	./include/pcm_ioplug.h	/^	SND_PCM_IOPLUG_HW_CHANNELS,	\/**< channels *\/$/;"	e	enum:__anon80
SND_PCM_IOPLUG_HW_FORMAT	./include/pcm_ioplug.h	/^	SND_PCM_IOPLUG_HW_FORMAT,	\/**< format *\/$/;"	e	enum:__anon80
SND_PCM_IOPLUG_HW_PARAMS	./include/pcm_ioplug.h	/^	SND_PCM_IOPLUG_HW_PARAMS	\/**< max number of hw constraints *\/$/;"	e	enum:__anon80
SND_PCM_IOPLUG_HW_PERIODS	./include/pcm_ioplug.h	/^	SND_PCM_IOPLUG_HW_PERIODS,	\/**< number of periods *\/$/;"	e	enum:__anon80
SND_PCM_IOPLUG_HW_PERIOD_BYTES	./include/pcm_ioplug.h	/^	SND_PCM_IOPLUG_HW_PERIOD_BYTES,	\/**< period bytes *\/$/;"	e	enum:__anon80
SND_PCM_IOPLUG_HW_RATE	./include/pcm_ioplug.h	/^	SND_PCM_IOPLUG_HW_RATE,		\/**< rate *\/$/;"	e	enum:__anon80
SND_PCM_IOPLUG_VERSION	./include/pcm_ioplug.h	73;"	d
SND_PCM_IOPLUG_VERSION_MAJOR	./include/pcm_ioplug.h	67;"	d
SND_PCM_IOPLUG_VERSION_MINOR	./include/pcm_ioplug.h	68;"	d
SND_PCM_IOPLUG_VERSION_TINY	./include/pcm_ioplug.h	69;"	d
SND_PCM_LADSPA_POLICY_DUPLICATE	./src/pcm/pcm_ladspa.c	/^	SND_PCM_LADSPA_POLICY_DUPLICATE		\/* duplicate bindings for all channels *\/$/;"	e	enum:_snd_pcm_ladspa_policy	file:
SND_PCM_LADSPA_POLICY_NONE	./src/pcm/pcm_ladspa.c	/^	SND_PCM_LADSPA_POLICY_NONE,		\/* use bindings only *\/$/;"	e	enum:_snd_pcm_ladspa_policy	file:
SND_PCM_NONBLOCK	./include/pcm.h	299;"	d
SND_PCM_NO_AUTO_CHANNELS	./include/pcm.h	305;"	d
SND_PCM_NO_AUTO_FORMAT	./include/pcm.h	307;"	d
SND_PCM_NO_AUTO_RESAMPLE	./include/pcm.h	303;"	d
SND_PCM_NO_SOFTVOL	./include/pcm.h	309;"	d
SND_PCM_PLUGIN_DEFINE_FUNC	./include/pcm_external.h	53;"	d
SND_PCM_PLUGIN_ENTRY	./include/pcm_external.h	43;"	d
SND_PCM_PLUGIN_RATE_MAX	./include/pcm_plugin.h	42;"	d
SND_PCM_PLUGIN_RATE_MIN	./include/pcm_plugin.h	41;"	d
SND_PCM_PLUGIN_ROUTE_FLOAT	./include/pcm_plugin.h	46;"	d
SND_PCM_PLUGIN_ROUTE_FLOAT	./include/pcm_plugin.h	48;"	d
SND_PCM_PLUGIN_ROUTE_FULL	./include/pcm_plugin.h	57;"	d
SND_PCM_PLUGIN_ROUTE_FULL	./include/pcm_plugin.h	62;"	d
SND_PCM_PLUGIN_ROUTE_HALF	./include/pcm_plugin.h	56;"	d
SND_PCM_PLUGIN_ROUTE_HALF	./include/pcm_plugin.h	61;"	d
SND_PCM_PLUGIN_ROUTE_RESOLUTION	./include/pcm_plugin.h	51;"	d
SND_PCM_PLUGIN_SYMBOL	./include/pcm_external.h	48;"	d
SND_PCM_RATE_PLUGIN_ENTRY	./include/pcm_rate.h	126;"	d
SND_PCM_RATE_PLUGIN_VERSION	./include/pcm_rate.h	41;"	d
SND_PCM_RATE_PLUGIN_VERSION_OLD	./src/pcm/pcm_rate.c	77;"	d	file:
SND_PCM_START_DATA	./include/pcm.h	/^	SND_PCM_START_DATA = 0,$/;"	e	enum:_snd_pcm_start
SND_PCM_START_EXPLICIT	./include/pcm.h	/^	SND_PCM_START_EXPLICIT,$/;"	e	enum:_snd_pcm_start
SND_PCM_START_LAST	./include/pcm.h	/^	SND_PCM_START_LAST = SND_PCM_START_EXPLICIT$/;"	e	enum:_snd_pcm_start
SND_PCM_STATE_DISCONNECTED	./include/pcm.h	/^	SND_PCM_STATE_DISCONNECTED,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_DRAINING	./include/pcm.h	/^	SND_PCM_STATE_DRAINING,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_LAST	./include/pcm.h	/^	SND_PCM_STATE_LAST = SND_PCM_STATE_DISCONNECTED$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_OPEN	./include/pcm.h	/^	SND_PCM_STATE_OPEN = 0,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_PAUSED	./include/pcm.h	/^	SND_PCM_STATE_PAUSED,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_PREPARED	./include/pcm.h	/^	SND_PCM_STATE_PREPARED,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_RUNNING	./include/pcm.h	/^	SND_PCM_STATE_RUNNING,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_SETUP	./include/pcm.h	/^	SND_PCM_STATE_SETUP,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_SUSPENDED	./include/pcm.h	/^	SND_PCM_STATE_SUSPENDED,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_XRUN	./include/pcm.h	/^	SND_PCM_STATE_XRUN,$/;"	e	enum:_snd_pcm_state
SND_PCM_STREAM_CAPTURE	./include/pcm.h	/^	SND_PCM_STREAM_CAPTURE,$/;"	e	enum:_snd_pcm_stream
SND_PCM_STREAM_LAST	./include/pcm.h	/^	SND_PCM_STREAM_LAST = SND_PCM_STREAM_CAPTURE$/;"	e	enum:_snd_pcm_stream
SND_PCM_STREAM_PLAYBACK	./include/pcm.h	/^	SND_PCM_STREAM_PLAYBACK = 0,$/;"	e	enum:_snd_pcm_stream
SND_PCM_SUBCLASS_GENERIC_MIX	./include/pcm.h	/^	SND_PCM_SUBCLASS_GENERIC_MIX = 0,$/;"	e	enum:_snd_pcm_subclass
SND_PCM_SUBCLASS_LAST	./include/pcm.h	/^	SND_PCM_SUBCLASS_LAST = SND_PCM_SUBCLASS_MULTI_MIX$/;"	e	enum:_snd_pcm_subclass
SND_PCM_SUBCLASS_MULTI_MIX	./include/pcm.h	/^	SND_PCM_SUBCLASS_MULTI_MIX,$/;"	e	enum:_snd_pcm_subclass
SND_PCM_SUBFORMAT_LAST	./include/pcm.h	/^	SND_PCM_SUBFORMAT_LAST = SND_PCM_SUBFORMAT_STD$/;"	e	enum:_snd_pcm_subformat
SND_PCM_SUBFORMAT_STD	./include/pcm.h	/^	SND_PCM_SUBFORMAT_STD = 0,$/;"	e	enum:_snd_pcm_subformat
SND_PCM_TSTAMP_ENABLE	./include/pcm.h	/^	SND_PCM_TSTAMP_ENABLE,$/;"	e	enum:_snd_pcm_tstamp
SND_PCM_TSTAMP_LAST	./include/pcm.h	/^	SND_PCM_TSTAMP_LAST = SND_PCM_TSTAMP_ENABLE$/;"	e	enum:_snd_pcm_tstamp
SND_PCM_TSTAMP_MMAP	./include/pcm.h	/^	SND_PCM_TSTAMP_MMAP = SND_PCM_TSTAMP_ENABLE,$/;"	e	enum:_snd_pcm_tstamp
SND_PCM_TSTAMP_NONE	./include/pcm.h	/^	SND_PCM_TSTAMP_NONE = 0,$/;"	e	enum:_snd_pcm_tstamp
SND_PCM_TYPE_ADPCM	./include/pcm.h	/^	SND_PCM_TYPE_ADPCM,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_ALAW	./include/pcm.h	/^	SND_PCM_TYPE_ALAW,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_COPY	./include/pcm.h	/^	SND_PCM_TYPE_COPY,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_DMIX	./include/pcm.h	/^	SND_PCM_TYPE_DMIX,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_DROUTE	./include/pcm.h	/^	SND_PCM_TYPE_DROUTE,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_DSHARE	./include/pcm.h	/^	SND_PCM_TYPE_DSHARE,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_DSNOOP	./include/pcm.h	/^	SND_PCM_TYPE_DSNOOP,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_EXTPLUG	./include/pcm.h	/^	SND_PCM_TYPE_EXTPLUG,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_FILE	./include/pcm.h	/^	SND_PCM_TYPE_FILE,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_HOOKS	./include/pcm.h	/^	SND_PCM_TYPE_HOOKS,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_HW	./include/pcm.h	/^	SND_PCM_TYPE_HW = 0,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_IEC958	./include/pcm.h	/^	SND_PCM_TYPE_IEC958,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_INET	./include/pcm.h	/^	SND_PCM_TYPE_INET,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_IOPLUG	./include/pcm.h	/^	SND_PCM_TYPE_IOPLUG,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_JACK	./include/pcm.h	/^	SND_PCM_TYPE_JACK,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_LADSPA	./include/pcm.h	/^	SND_PCM_TYPE_LADSPA,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_LAST	./include/pcm.h	/^	SND_PCM_TYPE_LAST = SND_PCM_TYPE_MMAP_EMUL$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_LBSERVER	./include/pcm.h	/^	SND_PCM_TYPE_LBSERVER,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_LINEAR	./include/pcm.h	/^	SND_PCM_TYPE_LINEAR,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_LINEAR_FLOAT	./include/pcm.h	/^	SND_PCM_TYPE_LINEAR_FLOAT,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_METER	./include/pcm.h	/^	SND_PCM_TYPE_METER,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_MIX	./include/pcm.h	/^	SND_PCM_TYPE_MIX,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_MMAP_EMUL	./include/pcm.h	/^	SND_PCM_TYPE_MMAP_EMUL,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_MULAW	./include/pcm.h	/^	SND_PCM_TYPE_MULAW,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_MULTI	./include/pcm.h	/^	SND_PCM_TYPE_MULTI,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_NULL	./include/pcm.h	/^	SND_PCM_TYPE_NULL,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_PLUG	./include/pcm.h	/^	SND_PCM_TYPE_PLUG,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_RATE	./include/pcm.h	/^	SND_PCM_TYPE_RATE,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_ROUTE	./include/pcm.h	/^	SND_PCM_TYPE_ROUTE,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_SHARE	./include/pcm.h	/^	SND_PCM_TYPE_SHARE,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_SHM	./include/pcm.h	/^	SND_PCM_TYPE_SHM,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_SOFTVOL	./include/pcm.h	/^	SND_PCM_TYPE_SOFTVOL,$/;"	e	enum:_snd_pcm_type
SND_PCM_XRUN_LAST	./include/pcm.h	/^	SND_PCM_XRUN_LAST = SND_PCM_XRUN_STOP$/;"	e	enum:_snd_pcm_xrun
SND_PCM_XRUN_NONE	./include/pcm.h	/^	SND_PCM_XRUN_NONE = 0,$/;"	e	enum:_snd_pcm_xrun
SND_PCM_XRUN_STOP	./include/pcm.h	/^	SND_PCM_XRUN_STOP,$/;"	e	enum:_snd_pcm_xrun
SND_RAWMIDI_APPEND	./include/rawmidi.h	61;"	d
SND_RAWMIDI_DLSYM_VERSION	./include/rawmidi.h	42;"	d
SND_RAWMIDI_NONBLOCK	./include/rawmidi.h	63;"	d
SND_RAWMIDI_STREAM_INPUT	./include/rawmidi.h	/^	SND_RAWMIDI_STREAM_INPUT,$/;"	e	enum:_snd_rawmidi_stream
SND_RAWMIDI_STREAM_LAST	./include/rawmidi.h	/^	SND_RAWMIDI_STREAM_LAST = SND_RAWMIDI_STREAM_INPUT$/;"	e	enum:_snd_rawmidi_stream
SND_RAWMIDI_STREAM_OUTPUT	./include/rawmidi.h	/^	SND_RAWMIDI_STREAM_OUTPUT = 0,$/;"	e	enum:_snd_rawmidi_stream
SND_RAWMIDI_SYNC	./include/rawmidi.h	65;"	d
SND_RAWMIDI_TYPE_HW	./include/rawmidi.h	/^	SND_RAWMIDI_TYPE_HW,$/;"	e	enum:_snd_rawmidi_type
SND_RAWMIDI_TYPE_INET	./include/rawmidi.h	/^	SND_RAWMIDI_TYPE_INET,$/;"	e	enum:_snd_rawmidi_type
SND_RAWMIDI_TYPE_SHM	./include/rawmidi.h	/^	SND_RAWMIDI_TYPE_SHM,$/;"	e	enum:_snd_rawmidi_type
SND_RAWMIDI_TYPE_VIRTUAL	./include/rawmidi.h	/^	SND_RAWMIDI_TYPE_VIRTUAL$/;"	e	enum:_snd_rawmidi_type
SND_SCTL_NOFREE	./include/control.h	210;"	d
SND_SEQ_ADDRESS_BROADCAST	./include/seq.h	71;"	d
SND_SEQ_ADDRESS_SUBSCRIBERS	./include/seq.h	70;"	d
SND_SEQ_ADDRESS_UNKNOWN	./include/seq.h	69;"	d
SND_SEQ_CLIENT_SYSTEM	./include/seq.h	74;"	d
SND_SEQ_DLSYM_VERSION	./include/seq.h	44;"	d
SND_SEQ_EVENT_BOUNCE	./include/seq_event.h	/^	SND_SEQ_EVENT_BOUNCE,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_CHANPRESS	./include/seq_event.h	/^	SND_SEQ_EVENT_CHANPRESS,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_CLIENT_CHANGE	./include/seq_event.h	/^	SND_SEQ_EVENT_CLIENT_CHANGE,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_CLIENT_EXIT	./include/seq_event.h	/^	SND_SEQ_EVENT_CLIENT_EXIT,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_CLIENT_START	./include/seq_event.h	/^	SND_SEQ_EVENT_CLIENT_START = 60,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_CLOCK	./include/seq_event.h	/^	SND_SEQ_EVENT_CLOCK,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_CONTINUE	./include/seq_event.h	/^	SND_SEQ_EVENT_CONTINUE,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_CONTROL14	./include/seq_event.h	/^	SND_SEQ_EVENT_CONTROL14,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_CONTROLLER	./include/seq_event.h	/^	SND_SEQ_EVENT_CONTROLLER = 10,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_ECHO	./include/seq_event.h	/^	SND_SEQ_EVENT_ECHO = 50,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_KEYPRESS	./include/seq_event.h	/^	SND_SEQ_EVENT_KEYPRESS,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_KEYSIGN	./include/seq_event.h	/^	SND_SEQ_EVENT_KEYSIGN,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_LENGTH_FIXED	./include/seq_event.h	219;"	d
SND_SEQ_EVENT_LENGTH_MASK	./include/seq_event.h	222;"	d
SND_SEQ_EVENT_LENGTH_VARIABLE	./include/seq_event.h	220;"	d
SND_SEQ_EVENT_LENGTH_VARUSR	./include/seq_event.h	221;"	d
SND_SEQ_EVENT_NONE	./include/seq_event.h	/^	SND_SEQ_EVENT_NONE = 255$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_NONREGPARAM	./include/seq_event.h	/^	SND_SEQ_EVENT_NONREGPARAM,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_NOTE	./include/seq_event.h	/^	SND_SEQ_EVENT_NOTE = 5,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_NOTEOFF	./include/seq_event.h	/^	SND_SEQ_EVENT_NOTEOFF,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_NOTEON	./include/seq_event.h	/^	SND_SEQ_EVENT_NOTEON,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_OSS	./include/seq_event.h	/^	SND_SEQ_EVENT_OSS,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_PGMCHANGE	./include/seq_event.h	/^	SND_SEQ_EVENT_PGMCHANGE,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_PITCHBEND	./include/seq_event.h	/^	SND_SEQ_EVENT_PITCHBEND,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_PORT_CHANGE	./include/seq_event.h	/^	SND_SEQ_EVENT_PORT_CHANGE,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_PORT_EXIT	./include/seq_event.h	/^	SND_SEQ_EVENT_PORT_EXIT,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_PORT_START	./include/seq_event.h	/^	SND_SEQ_EVENT_PORT_START,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_PORT_SUBSCRIBED	./include/seq_event.h	/^	SND_SEQ_EVENT_PORT_SUBSCRIBED,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_PORT_UNSUBSCRIBED	./include/seq_event.h	/^	SND_SEQ_EVENT_PORT_UNSUBSCRIBED,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_QFRAME	./include/seq_event.h	/^	SND_SEQ_EVENT_QFRAME,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_QUEUE_SKEW	./include/seq_event.h	/^	SND_SEQ_EVENT_QUEUE_SKEW,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_REGPARAM	./include/seq_event.h	/^	SND_SEQ_EVENT_REGPARAM,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_RESET	./include/seq_event.h	/^	SND_SEQ_EVENT_RESET,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_RESULT	./include/seq_event.h	/^	SND_SEQ_EVENT_RESULT,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SENSING	./include/seq_event.h	/^	SND_SEQ_EVENT_SENSING,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SETPOS_TICK	./include/seq_event.h	/^	SND_SEQ_EVENT_SETPOS_TICK,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SETPOS_TIME	./include/seq_event.h	/^	SND_SEQ_EVENT_SETPOS_TIME,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SONGPOS	./include/seq_event.h	/^	SND_SEQ_EVENT_SONGPOS = 20,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SONGSEL	./include/seq_event.h	/^	SND_SEQ_EVENT_SONGSEL,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_START	./include/seq_event.h	/^	SND_SEQ_EVENT_START = 30,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_STOP	./include/seq_event.h	/^	SND_SEQ_EVENT_STOP,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SYNC_POS	./include/seq_event.h	/^	SND_SEQ_EVENT_SYNC_POS,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SYSEX	./include/seq_event.h	/^	SND_SEQ_EVENT_SYSEX = 130,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SYSTEM	./include/seq_event.h	/^	SND_SEQ_EVENT_SYSTEM = 0,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_TEMPO	./include/seq_event.h	/^	SND_SEQ_EVENT_TEMPO,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_TICK	./include/seq_event.h	/^	SND_SEQ_EVENT_TICK,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_TIMESIGN	./include/seq_event.h	/^	SND_SEQ_EVENT_TIMESIGN,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_TUNE_REQUEST	./include/seq_event.h	/^	SND_SEQ_EVENT_TUNE_REQUEST = 40,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR0	./include/seq_event.h	/^	SND_SEQ_EVENT_USR0 = 90,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR1	./include/seq_event.h	/^	SND_SEQ_EVENT_USR1,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR2	./include/seq_event.h	/^	SND_SEQ_EVENT_USR2,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR3	./include/seq_event.h	/^	SND_SEQ_EVENT_USR3,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR4	./include/seq_event.h	/^	SND_SEQ_EVENT_USR4,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR5	./include/seq_event.h	/^	SND_SEQ_EVENT_USR5,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR6	./include/seq_event.h	/^	SND_SEQ_EVENT_USR6,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR7	./include/seq_event.h	/^	SND_SEQ_EVENT_USR7,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR8	./include/seq_event.h	/^	SND_SEQ_EVENT_USR8,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR9	./include/seq_event.h	/^	SND_SEQ_EVENT_USR9,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR_VAR0	./include/seq_event.h	/^	SND_SEQ_EVENT_USR_VAR0 = 135,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR_VAR1	./include/seq_event.h	/^	SND_SEQ_EVENT_USR_VAR1,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR_VAR2	./include/seq_event.h	/^	SND_SEQ_EVENT_USR_VAR2,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR_VAR3	./include/seq_event.h	/^	SND_SEQ_EVENT_USR_VAR3,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR_VAR4	./include/seq_event.h	/^	SND_SEQ_EVENT_USR_VAR4,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVFLG_CONNECTION	./include/seq.h	/^	SND_SEQ_EVFLG_CONNECTION,$/;"	e	enum:__anon49
SND_SEQ_EVFLG_CONTROL	./include/seq.h	/^	SND_SEQ_EVFLG_CONTROL,$/;"	e	enum:__anon49
SND_SEQ_EVFLG_FIXED	./include/seq.h	/^	SND_SEQ_EVFLG_FIXED,$/;"	e	enum:__anon49
SND_SEQ_EVFLG_INSTR	./include/seq.h	/^	SND_SEQ_EVFLG_INSTR,$/;"	e	enum:__anon49
SND_SEQ_EVFLG_MESSAGE	./include/seq.h	/^	SND_SEQ_EVFLG_MESSAGE,$/;"	e	enum:__anon49
SND_SEQ_EVFLG_NONE	./include/seq.h	/^	SND_SEQ_EVFLG_NONE,$/;"	e	enum:__anon49
SND_SEQ_EVFLG_NOTE	./include/seq.h	/^	SND_SEQ_EVFLG_NOTE,$/;"	e	enum:__anon49
SND_SEQ_EVFLG_NOTE_ONEARG	./include/seq.h	/^	SND_SEQ_EVFLG_NOTE_ONEARG,$/;"	e	enum:__anon50
SND_SEQ_EVFLG_NOTE_TWOARG	./include/seq.h	/^	SND_SEQ_EVFLG_NOTE_TWOARG$/;"	e	enum:__anon50
SND_SEQ_EVFLG_QUEUE	./include/seq.h	/^	SND_SEQ_EVFLG_QUEUE,$/;"	e	enum:__anon49
SND_SEQ_EVFLG_QUEUE_NOARG	./include/seq.h	/^	SND_SEQ_EVFLG_QUEUE_NOARG,$/;"	e	enum:__anon51
SND_SEQ_EVFLG_QUEUE_TICK	./include/seq.h	/^	SND_SEQ_EVFLG_QUEUE_TICK,$/;"	e	enum:__anon51
SND_SEQ_EVFLG_QUEUE_TIME	./include/seq.h	/^	SND_SEQ_EVFLG_QUEUE_TIME,$/;"	e	enum:__anon51
SND_SEQ_EVFLG_QUEUE_VALUE	./include/seq.h	/^	SND_SEQ_EVFLG_QUEUE_VALUE$/;"	e	enum:__anon51
SND_SEQ_EVFLG_QUOTE	./include/seq.h	/^	SND_SEQ_EVFLG_QUOTE,$/;"	e	enum:__anon49
SND_SEQ_EVFLG_RAW	./include/seq.h	/^	SND_SEQ_EVFLG_RAW,$/;"	e	enum:__anon49
SND_SEQ_EVFLG_RESULT	./include/seq.h	/^	SND_SEQ_EVFLG_RESULT,$/;"	e	enum:__anon49
SND_SEQ_EVFLG_SAMPLE	./include/seq.h	/^	SND_SEQ_EVFLG_SAMPLE,$/;"	e	enum:__anon49
SND_SEQ_EVFLG_SYSTEM	./include/seq.h	/^	SND_SEQ_EVFLG_SYSTEM,$/;"	e	enum:__anon49
SND_SEQ_EVFLG_USERS	./include/seq.h	/^	SND_SEQ_EVFLG_USERS,$/;"	e	enum:__anon49
SND_SEQ_EVFLG_VARIABLE	./include/seq.h	/^	SND_SEQ_EVFLG_VARIABLE,$/;"	e	enum:__anon49
SND_SEQ_EVFLG_VARUSR	./include/seq.h	/^	SND_SEQ_EVFLG_VARUSR$/;"	e	enum:__anon49
SND_SEQ_IBUF_SIZE	./src/seq/seq_local.h	32;"	d
SND_SEQ_KERNEL_CLIENT	./include/seq.h	/^	SND_SEQ_KERNEL_CLIENT   = 2	\/**< kernel client *\/$/;"	e	enum:snd_seq_client_type
SND_SEQ_NONBLOCK	./include/seq.h	59;"	d
SND_SEQ_OBUF_SIZE	./src/seq/seq_local.h	31;"	d
SND_SEQ_OPEN_DUPLEX	./include/seq.h	54;"	d
SND_SEQ_OPEN_INPUT	./include/seq.h	53;"	d
SND_SEQ_OPEN_OUTPUT	./include/seq.h	52;"	d
SND_SEQ_PORT_CAP_DUPLEX	./include/seq.h	218;"	d
SND_SEQ_PORT_CAP_NO_EXPORT	./include/seq.h	222;"	d
SND_SEQ_PORT_CAP_READ	./include/seq.h	212;"	d
SND_SEQ_PORT_CAP_SUBS_READ	./include/seq.h	220;"	d
SND_SEQ_PORT_CAP_SUBS_WRITE	./include/seq.h	221;"	d
SND_SEQ_PORT_CAP_SYNC_READ	./include/seq.h	215;"	d
SND_SEQ_PORT_CAP_SYNC_WRITE	./include/seq.h	216;"	d
SND_SEQ_PORT_CAP_WRITE	./include/seq.h	213;"	d
SND_SEQ_PORT_SYSTEM_ANNOUNCE	./include/seq.h	209;"	d
SND_SEQ_PORT_SYSTEM_TIMER	./include/seq.h	208;"	d
SND_SEQ_PORT_TYPE_APPLICATION	./include/seq.h	258;"	d
SND_SEQ_PORT_TYPE_DIRECT_SAMPLE	./include/seq.h	244;"	d
SND_SEQ_PORT_TYPE_HARDWARE	./include/seq.h	249;"	d
SND_SEQ_PORT_TYPE_MIDI_GENERIC	./include/seq.h	228;"	d
SND_SEQ_PORT_TYPE_MIDI_GM	./include/seq.h	230;"	d
SND_SEQ_PORT_TYPE_MIDI_GM2	./include/seq.h	238;"	d
SND_SEQ_PORT_TYPE_MIDI_GS	./include/seq.h	232;"	d
SND_SEQ_PORT_TYPE_MIDI_MT32	./include/seq.h	236;"	d
SND_SEQ_PORT_TYPE_MIDI_XG	./include/seq.h	234;"	d
SND_SEQ_PORT_TYPE_PORT	./include/seq.h	256;"	d
SND_SEQ_PORT_TYPE_SAMPLE	./include/seq.h	247;"	d
SND_SEQ_PORT_TYPE_SOFTWARE	./include/seq.h	251;"	d
SND_SEQ_PORT_TYPE_SPECIFIC	./include/seq.h	226;"	d
SND_SEQ_PORT_TYPE_SYNTH	./include/seq.h	241;"	d
SND_SEQ_PORT_TYPE_SYNTHESIZER	./include/seq.h	253;"	d
SND_SEQ_PRIORITY_HIGH	./include/seq_event.h	225;"	d
SND_SEQ_PRIORITY_MASK	./include/seq_event.h	226;"	d
SND_SEQ_PRIORITY_NORMAL	./include/seq_event.h	224;"	d
SND_SEQ_QUERY_SUBS_READ	./include/seq.h	/^	SND_SEQ_QUERY_SUBS_READ,	\/**< query read subscriptions *\/$/;"	e	enum:__anon47
SND_SEQ_QUERY_SUBS_WRITE	./include/seq.h	/^	SND_SEQ_QUERY_SUBS_WRITE	\/**< query write subscriptions *\/$/;"	e	enum:__anon47
SND_SEQ_QUEUE_DIRECT	./include/seq.h	405;"	d
SND_SEQ_REMOVE_DEST	./include/seq.h	538;"	d
SND_SEQ_REMOVE_DEST_CHANNEL	./include/seq.h	539;"	d
SND_SEQ_REMOVE_EVENT_TYPE	./include/seq.h	543;"	d
SND_SEQ_REMOVE_IGNORE_OFF	./include/seq.h	544;"	d
SND_SEQ_REMOVE_INPUT	./include/seq.h	536;"	d
SND_SEQ_REMOVE_OUTPUT	./include/seq.h	537;"	d
SND_SEQ_REMOVE_TAG_MATCH	./include/seq.h	545;"	d
SND_SEQ_REMOVE_TIME_AFTER	./include/seq.h	541;"	d
SND_SEQ_REMOVE_TIME_BEFORE	./include/seq.h	540;"	d
SND_SEQ_REMOVE_TIME_TICK	./include/seq.h	542;"	d
SND_SEQ_TIMER_ALSA	./include/seq.h	/^	SND_SEQ_TIMER_ALSA = 0,		\/* ALSA timer *\/$/;"	e	enum:__anon48
SND_SEQ_TIMER_MIDI_CLOCK	./include/seq.h	/^	SND_SEQ_TIMER_MIDI_CLOCK = 1,	\/* Midi Clock (CLOCK event) *\/$/;"	e	enum:__anon48
SND_SEQ_TIMER_MIDI_TICK	./include/seq.h	/^	SND_SEQ_TIMER_MIDI_TICK = 2	\/* Midi Timer Tick (TICK event *\/$/;"	e	enum:__anon48
SND_SEQ_TIME_MODE_ABS	./include/seq_event.h	215;"	d
SND_SEQ_TIME_MODE_MASK	./include/seq_event.h	217;"	d
SND_SEQ_TIME_MODE_REL	./include/seq_event.h	216;"	d
SND_SEQ_TIME_STAMP_MASK	./include/seq_event.h	213;"	d
SND_SEQ_TIME_STAMP_REAL	./include/seq_event.h	212;"	d
SND_SEQ_TIME_STAMP_TICK	./include/seq_event.h	211;"	d
SND_SEQ_TYPE_HW	./include/seq.h	/^	SND_SEQ_TYPE_HW,		\/**< hardware *\/$/;"	e	enum:_snd_seq_type
SND_SEQ_TYPE_INET	./include/seq.h	/^	SND_SEQ_TYPE_INET		\/**< network (NYI) *\/$/;"	e	enum:_snd_seq_type
SND_SEQ_TYPE_SHM	./include/seq.h	/^	SND_SEQ_TYPE_SHM,		\/**< shared memory (NYI) *\/$/;"	e	enum:_snd_seq_type
SND_SEQ_USER_CLIENT	./include/seq.h	/^	SND_SEQ_USER_CLIENT     = 1,	\/**< user client *\/$/;"	e	enum:snd_seq_client_type
SND_SPCM_DUPLEX_LIBERAL	./include/pcm.h	/^	SND_SPCM_DUPLEX_LIBERAL = 0,$/;"	e	enum:_snd_spcm_duplex_type
SND_SPCM_DUPLEX_PEDANTIC	./include/pcm.h	/^	SND_SPCM_DUPLEX_PEDANTIC$/;"	e	enum:_snd_spcm_duplex_type
SND_SPCM_LATENCY_MEDIUM	./include/pcm.h	/^	SND_SPCM_LATENCY_MEDIUM,$/;"	e	enum:_snd_spcm_latency
SND_SPCM_LATENCY_REALTIME	./include/pcm.h	/^	SND_SPCM_LATENCY_REALTIME$/;"	e	enum:_snd_spcm_latency
SND_SPCM_LATENCY_STANDARD	./include/pcm.h	/^	SND_SPCM_LATENCY_STANDARD = 0,$/;"	e	enum:_snd_spcm_latency
SND_SPCM_XRUN_IGNORE	./include/pcm.h	/^	SND_SPCM_XRUN_IGNORE = 0,$/;"	e	enum:_snd_spcm_xrun_type
SND_SPCM_XRUN_STOP	./include/pcm.h	/^	SND_SPCM_XRUN_STOP$/;"	e	enum:_snd_spcm_xrun_type
SND_SSCAPE_LOAD_BOOTB	./include/sound/sscape_ioctl.h	18;"	d
SND_SSCAPE_LOAD_MCODE	./include/sound/sscape_ioctl.h	19;"	d
SND_TEST	./include/local.h	/^	SND_TEST,$/;"	e	enum:_snd_set_mode
SND_TIMER_CLASS_CARD	./include/timer.h	/^	SND_TIMER_CLASS_CARD,		\/**< card timer *\/$/;"	e	enum:_snd_timer_class
SND_TIMER_CLASS_GLOBAL	./include/timer.h	/^	SND_TIMER_CLASS_GLOBAL,		\/**< global timer *\/$/;"	e	enum:_snd_timer_class
SND_TIMER_CLASS_LAST	./include/timer.h	/^	SND_TIMER_CLASS_LAST = SND_TIMER_CLASS_PCM	\/**< last timer *\/$/;"	e	enum:_snd_timer_class
SND_TIMER_CLASS_NONE	./include/timer.h	/^	SND_TIMER_CLASS_NONE = -1,	\/**< invalid *\/$/;"	e	enum:_snd_timer_class
SND_TIMER_CLASS_PCM	./include/timer.h	/^	SND_TIMER_CLASS_PCM,		\/**< PCM timer *\/$/;"	e	enum:_snd_timer_class
SND_TIMER_CLASS_SLAVE	./include/timer.h	/^	SND_TIMER_CLASS_SLAVE = 0,	\/**< slave timer *\/$/;"	e	enum:_snd_timer_class
SND_TIMER_DLSYM_VERSION	./include/timer.h	42;"	d
SND_TIMER_EVENT_CONTINUE	./include/timer.h	/^	SND_TIMER_EVENT_CONTINUE,	\/* val = resolution in ns *\/$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_EARLY	./include/timer.h	/^	SND_TIMER_EVENT_EARLY,		\/* val = 0 *\/$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_MCONTINUE	./include/timer.h	/^	SND_TIMER_EVENT_MCONTINUE = SND_TIMER_EVENT_CONTINUE + 10,$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_MPAUSE	./include/timer.h	/^	SND_TIMER_EVENT_MPAUSE = SND_TIMER_EVENT_PAUSE + 10,$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_MRESUME	./include/timer.h	/^	SND_TIMER_EVENT_MRESUME = SND_TIMER_EVENT_RESUME + 10	$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_MSTART	./include/timer.h	/^	SND_TIMER_EVENT_MSTART = SND_TIMER_EVENT_START + 10,$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_MSTOP	./include/timer.h	/^	SND_TIMER_EVENT_MSTOP = SND_TIMER_EVENT_STOP + 10,$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_MSUSPEND	./include/timer.h	/^	SND_TIMER_EVENT_MSUSPEND = SND_TIMER_EVENT_SUSPEND + 10,$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_PAUSE	./include/timer.h	/^	SND_TIMER_EVENT_PAUSE,		\/* val = 0 *\/$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_RESOLUTION	./include/timer.h	/^	SND_TIMER_EVENT_RESOLUTION = 0,	\/* val = resolution in ns *\/$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_RESUME	./include/timer.h	/^	SND_TIMER_EVENT_RESUME,		\/* val = resolution in ns *\/$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_START	./include/timer.h	/^	SND_TIMER_EVENT_START,		\/* val = resolution in ns *\/$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_STOP	./include/timer.h	/^	SND_TIMER_EVENT_STOP,		\/* val = 0 *\/$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_SUSPEND	./include/timer.h	/^	SND_TIMER_EVENT_SUSPEND,	\/* val = 0 *\/$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_TICK	./include/timer.h	/^	SND_TIMER_EVENT_TICK,		\/* val = ticks *\/$/;"	e	enum:_snd_timer_event
SND_TIMER_GLOBAL_HPET	./include/timer.h	117;"	d
SND_TIMER_GLOBAL_HRTIMER	./include/timer.h	119;"	d
SND_TIMER_GLOBAL_RTC	./include/timer.h	115;"	d
SND_TIMER_GLOBAL_SYSTEM	./include/timer.h	113;"	d
SND_TIMER_OPEN_NONBLOCK	./include/timer.h	122;"	d
SND_TIMER_OPEN_TREAD	./include/timer.h	124;"	d
SND_TIMER_QUERY_DLSYM_VERSION	./include/timer.h	44;"	d
SND_TIMER_SCLASS_APPLICATION	./include/timer.h	/^	SND_TIMER_SCLASS_APPLICATION,		\/**< for internal use *\/$/;"	e	enum:_snd_timer_slave_class
SND_TIMER_SCLASS_LAST	./include/timer.h	/^	SND_TIMER_SCLASS_LAST = SND_TIMER_SCLASS_OSS_SEQUENCER	\/**< last slave timer *\/$/;"	e	enum:_snd_timer_slave_class
SND_TIMER_SCLASS_NONE	./include/timer.h	/^	SND_TIMER_SCLASS_NONE = 0,		\/**< none *\/$/;"	e	enum:_snd_timer_slave_class
SND_TIMER_SCLASS_OSS_SEQUENCER	./include/timer.h	/^	SND_TIMER_SCLASS_OSS_SEQUENCER,		\/**< OSS sequencer timer *\/$/;"	e	enum:_snd_timer_slave_class
SND_TIMER_SCLASS_SEQUENCER	./include/timer.h	/^	SND_TIMER_SCLASS_SEQUENCER,		\/**< sequencer timer *\/$/;"	e	enum:_snd_timer_slave_class
SND_TIMER_TYPE_HW	./include/timer.h	/^	SND_TIMER_TYPE_HW = 0,$/;"	e	enum:_snd_timer_type
SND_TIMER_TYPE_INET	./include/timer.h	/^	SND_TIMER_TYPE_INET$/;"	e	enum:_snd_timer_type
SND_TIMER_TYPE_SHM	./include/timer.h	/^	SND_TIMER_TYPE_SHM,$/;"	e	enum:_snd_timer_type
SND_TRANSPORT_TYPE_SHM	./include/aserver.h	/^	SND_TRANSPORT_TYPE_SHM,$/;"	e	enum:_snd_transport_type
SND_TRANSPORT_TYPE_TCP	./include/aserver.h	/^	SND_TRANSPORT_TYPE_TCP,$/;"	e	enum:_snd_transport_type
SND_TRY	./include/local.h	/^	SND_TRY,$/;"	e	enum:_snd_set_mode
SND_USE_CASE_DEV_BLUETOOTH	./include/use-case.h	122;"	d
SND_USE_CASE_DEV_EARPIECE	./include/use-case.h	123;"	d
SND_USE_CASE_DEV_HANDSET	./include/use-case.h	121;"	d
SND_USE_CASE_DEV_HDMI	./include/use-case.h	125;"	d
SND_USE_CASE_DEV_HEADPHONES	./include/use-case.h	119;"	d
SND_USE_CASE_DEV_HEADSET	./include/use-case.h	120;"	d
SND_USE_CASE_DEV_LINE	./include/use-case.h	118;"	d
SND_USE_CASE_DEV_NONE	./include/use-case.h	116;"	d
SND_USE_CASE_DEV_SPDIF	./include/use-case.h	124;"	d
SND_USE_CASE_DEV_SPEAKER	./include/use-case.h	117;"	d
SND_USE_CASE_MOD_CAPTURE_MUSIC	./include/use-case.h	148;"	d
SND_USE_CASE_MOD_CAPTURE_VOICE	./include/use-case.h	147;"	d
SND_USE_CASE_MOD_ECHO_REF	./include/use-case.h	152;"	d
SND_USE_CASE_MOD_PLAY_MUSIC	./include/use-case.h	149;"	d
SND_USE_CASE_MOD_PLAY_TONE	./include/use-case.h	151;"	d
SND_USE_CASE_MOD_PLAY_VOICE	./include/use-case.h	150;"	d
SND_USE_CASE_TQ_MUSIC	./include/use-case.h	164;"	d
SND_USE_CASE_TQ_TONES	./include/use-case.h	166;"	d
SND_USE_CASE_TQ_VOICE	./include/use-case.h	165;"	d
SND_USE_CASE_VERB_ANALOG_RADIO	./include/use-case.h	105;"	d
SND_USE_CASE_VERB_DIGITAL_RADIO	./include/use-case.h	106;"	d
SND_USE_CASE_VERB_HIFI	./include/use-case.h	99;"	d
SND_USE_CASE_VERB_HIFI_LOW_POWER	./include/use-case.h	100;"	d
SND_USE_CASE_VERB_INACTIVE	./include/use-case.h	98;"	d
SND_USE_CASE_VERB_IP_VOICECALL	./include/use-case.h	104;"	d
SND_USE_CASE_VERB_VOICE	./include/use-case.h	101;"	d
SND_USE_CASE_VERB_VOICECALL	./include/use-case.h	103;"	d
SND_USE_CASE_VERB_VOICE_LOW_POWER	./include/use-case.h	102;"	d
SO_PATH	./modules/mixer/simple/sbasedl.c	36;"	d	file:
SO_PATH	./src/mixer/simple_abst.c	44;"	d	file:
SPIN_SLEEP_DURATION	./include/iatomic.h	1149;"	d
SSCAPE_IOCTL_H	./include/sound/sscape_ioctl.h	2;"	d
SSCAPE_MICROCODE_SIZE	./include/sound/sscape_ioctl.h	11;"	d
START	./src/pcm/pcm.c	1473;"	d	file:
STATE	./src/pcm/pcm.c	1466;"	d	file:
STATE_RUN_PENDING	./src/pcm/pcm_dmix.c	55;"	d	file:
STATE_RUN_PENDING	./src/pcm/pcm_dshare.c	55;"	d	file:
STDC_HEADERS	./include/config.h	138;"	d
STREAM	./src/pcm/pcm.c	1467;"	d	file:
ST_INVALID	./src/seq/seq_midi_event.c	50;"	d	file:
ST_SPECIAL	./src/seq/seq_midi_event.c	51;"	d	file:
ST_SYSEX	./src/seq/seq_midi_event.c	52;"	d	file:
SUBFORMAT	./src/pcm/pcm.c	1477;"	d	file:
SUBFORMATD	./src/pcm/pcm.c	1480;"	d	file:
SUPPORT_ALOAD	./include/config.h	141;"	d
SW_PARAM	./src/pcm/pcm.c	1475;"	d	file:
SX_INLINES	./src/pcm/plugin_ops.h	23;"	d
SYSERR	./include/error.h	65;"	d
SYSERR	./include/error.h	68;"	d
SYSERROR	./aserver/aserver.c	54;"	d	file:
SYSMSG	./include/local.h	176;"	d
SYSMSG	./include/local.h	180;"	d
Seq_Circuits	./test/midifile.h	111;"	d
Siel	./test/midifile.h	118;"	d
StepSize	./src/pcm/pcm_adpcm.c	/^static const short StepSize[89] = {$/;"	v	file:
TANKMEMADDRREG_ADDR_MASK	./include/sound/emu10k1.h	238;"	d
TANKMEMADDRREG_ALIGN	./include/sound/emu10k1.h	240;"	d
TANKMEMADDRREG_CLEAR	./include/sound/emu10k1.h	239;"	d
TANKMEMADDRREG_READ	./include/sound/emu10k1.h	242;"	d
TANKMEMADDRREG_WRITE	./include/sound/emu10k1.h	241;"	d
TARGET_ALSA_CONF_DIR	./Android.mk	/^TARGET_ALSA_CONF_DIR := $(TARGET_OUT)\/usr\/share\/alsa$/;"	m
TEMP_TLV_SIZE	./src/control/tlv.c	405;"	d	file:
TEST_CHECK	./test/lsb/test.h	10;"	d
TEST_EXIT_CODE	./test/lsb/test.h	27;"	d
TEST_H_INCLUDED	./test/lsb/test.h	2;"	d
THINK	./test/midifile.c	67;"	d	file:
TIME_WITH_SYS_TIME	./include/config.h	147;"	d
TMPDIR	./include/config.h	150;"	d
TO_LE16	./src/pcm/pcm_file.c	95;"	d	file:
TO_LE16	./src/pcm/pcm_file.c	98;"	d	file:
TO_LE32	./src/pcm/pcm_file.c	94;"	d	file:
TO_LE32	./src/pcm/pcm_file.c	97;"	d	file:
TSTAMP	./src/pcm/pcm.c	1471;"	d	file:
TYPE	./src/control/control.c	923;"	d	file:
Tempi	./test/midifile.h	117;"	d
UINT32	./src/pcm/pcm_route.c	/^	enum {UINT32=0, UINT64=1, FLOAT=2} sum_idx;$/;"	e	enum:__anon141::__anon142	file:
UINT64	./src/pcm/pcm_route.c	/^	enum {UINT32=0, UINT64=1, FLOAT=2} sum_idx;$/;"	e	enum:__anon141::__anon142	file:
USER_CLIENT	./include/sound/asequencer.h	/^	USER_CLIENT     = 1,$/;"	e	enum:sndrv_seq_client_type
USE_VERSIONED_SYMBOLS	./include/alsa-symbols.h	26;"	d
Undefined	./include/sound/hdsp.h	/^	Undefined,$/;"	e	enum:__anon14
UniqueID	./src/pcm/ladspa.h	/^  unsigned long UniqueID;$/;"	m	struct:_LADSPA_Descriptor
UpperBound	./src/pcm/ladspa.h	/^  LADSPA_Data UpperBound;$/;"	m	struct:_LADSPA_PortRangeHint
VALUE_MAXLEN	./src/pcm/pcm_file.c	51;"	d	file:
VERB_EVENT	./test/playmidi1.c	87;"	d	file:
VERB_INFO	./test/playmidi1.c	85;"	d	file:
VERB_MUCH	./test/playmidi1.c	86;"	d	file:
VERSION	./include/config.h	153;"	d
VISIT	./include/search.h	/^VISIT;$/;"	t	typeref:enum:__anon44
VOL_SCALE_MASK	./src/pcm/pcm_softvol.c	57;"	d	file:
VOL_SCALE_SHIFT	./src/pcm/pcm_softvol.c	56;"	d	file:
WRITE_POOL_SIZE	./test/playmidi1.c	62;"	d	file:
WRITE_POOL_SPACE	./test/playmidi1.c	63;"	d	file:
WriteVarLen	./test/midifile.c	/^WriteVarLen (value)$/;"	f
XADD	./src/pcm/pcm_dmix_i386.c	11;"	d	file:
XADD	./src/pcm/pcm_dmix_i386.c	20;"	d	file:
XADD	./src/pcm/pcm_dmix_i386.c	29;"	d	file:
XADD	./src/pcm/pcm_dmix_i386.c	38;"	d	file:
XADD	./src/pcm/pcm_dmix_i386.c	47;"	d	file:
XADD	./src/pcm/pcm_dmix_i386.c	56;"	d	file:
XADD	./src/pcm/pcm_dmix_i386.c	65;"	d	file:
XADD	./src/pcm/pcm_dmix_i386.c	74;"	d	file:
XADD	./src/pcm/pcm_dmix_x86_64.c	16;"	d	file:
XADD	./src/pcm/pcm_dmix_x86_64.c	23;"	d	file:
XADD	./src/pcm/pcm_dmix_x86_64.c	30;"	d	file:
XADD	./src/pcm/pcm_dmix_x86_64.c	37;"	d	file:
XADD	./src/pcm/pcm_dmix_x86_64.c	44;"	d	file:
XADD	./src/pcm/pcm_dmix_x86_64.c	51;"	d	file:
XADD	./src/pcm/pcm_dmix_x86_64.c	58;"	d	file:
XADD	./src/pcm/pcm_dmix_x86_64.c	9;"	d	file:
XRUN	./src/pcm/pcm.c	1469;"	d	file:
XSUB	./src/pcm/pcm_dmix_i386.c	12;"	d	file:
XSUB	./src/pcm/pcm_dmix_i386.c	21;"	d	file:
XSUB	./src/pcm/pcm_dmix_i386.c	30;"	d	file:
XSUB	./src/pcm/pcm_dmix_i386.c	39;"	d	file:
XSUB	./src/pcm/pcm_dmix_i386.c	48;"	d	file:
XSUB	./src/pcm/pcm_dmix_i386.c	57;"	d	file:
XSUB	./src/pcm/pcm_dmix_i386.c	66;"	d	file:
XSUB	./src/pcm/pcm_dmix_i386.c	75;"	d	file:
XSUB	./src/pcm/pcm_dmix_x86_64.c	10;"	d	file:
XSUB	./src/pcm/pcm_dmix_x86_64.c	17;"	d	file:
XSUB	./src/pcm/pcm_dmix_x86_64.c	24;"	d	file:
XSUB	./src/pcm/pcm_dmix_x86_64.c	31;"	d	file:
XSUB	./src/pcm/pcm_dmix_x86_64.c	38;"	d	file:
XSUB	./src/pcm/pcm_dmix_x86_64.c	45;"	d	file:
XSUB	./src/pcm/pcm_dmix_x86_64.c	52;"	d	file:
XSUB	./src/pcm/pcm_dmix_x86_64.c	59;"	d	file:
Yamaha	./test/midifile.h	122;"	d
ZERO_DB	./src/pcm/pcm_softvol.c	61;"	d	file:
_ENTRY	./src/compat/hsearch_r.c	/^_ENTRY;$/;"	t	typeref:struct:_ENTRY	file:
_ENTRY	./src/compat/hsearch_r.c	/^typedef struct _ENTRY$/;"	s	file:
_GNU_SOURCE	./src/dlmisc.c	30;"	d	file:
_GNU_SOURCE	./src/ucm/main.c	35;"	d	file:
_LADSPA_Descriptor	./src/pcm/ladspa.h	/^typedef struct _LADSPA_Descriptor { $/;"	s
_LADSPA_PortRangeHint	./src/pcm/ladspa.h	/^typedef struct _LADSPA_PortRangeHint {$/;"	s
_LIST_H	./include/list.h	2;"	d
_SEARCH_H	./include/search.h	21;"	d
_SND_SEQ_TYPE	./include/seq.h	636;"	d
_SND_SEQ_TYPE_OPT	./include/seq.h	637;"	d
__ACTION_FN_T	./include/search.h	143;"	d
__ALSA_ASOUNDEF_H	./include/asoundef.h	29;"	d
__ALSA_CONF_H	./include/conf.h	29;"	d
__ALSA_CONTROL_EXTERNAL_H	./include/control_external.h	27;"	d
__ALSA_CONTROL_H	./include/control.h	29;"	d
__ALSA_ERROR_H	./include/error.h	29;"	d
__ALSA_GLOBAL_H_	./include/global.h	29;"	d
__ALSA_HWDEP_H	./include/hwdep.h	29;"	d
__ALSA_IATOMIC_H	./include/iatomic.h	2;"	d
__ALSA_INPUT_H	./include/input.h	29;"	d
__ALSA_MIXER_ABST_H	./include/mixer_abst.h	27;"	d
__ALSA_MIXER_H	./include/mixer.h	29;"	d
__ALSA_OUTPUT_H	./include/output.h	29;"	d
__ALSA_PCM_EXTERNAL_H	./include/pcm_external.h	27;"	d
__ALSA_PCM_EXTPLUG_H	./include/pcm_extplug.h	32;"	d
__ALSA_PCM_H	./include/pcm.h	30;"	d
__ALSA_PCM_IOPLUG_H	./include/pcm_ioplug.h	32;"	d
__ALSA_PCM_RATE_H	./include/pcm_rate.h	32;"	d
__ALSA_RAWMIDI_H	./include/rawmidi.h	29;"	d
__ALSA_SEQMID_H	./include/seqmid.h	29;"	d
__ALSA_SEQ_EVENT_H	./include/seq_event.h	29;"	d
__ALSA_SEQ_H	./include/seq.h	30;"	d
__ALSA_SEQ_MIDI_EVENT_H	./include/seq_midi_event.h	29;"	d
__ALSA_SYMBOLS_H	./include/alsa-symbols.h	23;"	d
__ALSA_TIMER_H	./include/timer.h	29;"	d
__ALSA_USE_CASE_H	./include/use-case.h	39;"	d
__ASOUNDLIB_H	./include/asoundlib-head.h	29;"	d
__ASOUNDLIB_H	./include/asoundlib.h	29;"	d
__COMPAR_FN_T	./include/search.h	54;"	d
__LOCAL_H	./include/local.h	23;"	d
__NEW_TO_OLD_MASK	./src/pcm/pcm_hw.c	1510;"	d	file:
__OLD_GET	./src/pcm/pcm.c	7073;"	d	file:
__OLD_GET1	./src/pcm/pcm.c	7074;"	d	file:
__OLD_GET_SW	./src/pcm/pcm.c	7188;"	d	file:
__OLD_NEAR	./src/pcm/pcm.c	7122;"	d	file:
__OLD_NEAR1	./src/pcm/pcm.c	7123;"	d	file:
__OLD_SET_FL	./src/pcm/pcm.c	7152;"	d	file:
__OLD_SET_FL1	./src/pcm/pcm.c	7153;"	d	file:
__OLD_TO_NEW_MASK	./src/pcm/pcm_hw.c	1509;"	d	file:
__P_OLD_GET	./src/pcm/pcm.c	7055;"	d	file:
__P_OLD_GET1	./src/pcm/pcm.c	7064;"	d	file:
__P_OLD_GET_SW	./src/pcm/pcm.c	7179;"	d	file:
__P_OLD_NEAR	./src/pcm/pcm.c	7106;"	d	file:
__P_OLD_NEAR1	./src/pcm/pcm.c	7114;"	d	file:
__P_OLD_SET_FL	./src/pcm/pcm.c	7134;"	d	file:
__P_OLD_SET_FL1	./src/pcm/pcm.c	7143;"	d	file:
__SEQ_LOCAL_H	./src/seq/seq_local.h	24;"	d
__SND_DLSYM_VERSION	./include/global.h	57;"	d
__SND_DLSYM_VERSION	./include/global.h	75;"	d
__SOUND_ASEQUENCER_H	./include/sound/asequencer.h	23;"	d
__SOUND_ASOUNDEF_H	./include/sound/asoundef.h	2;"	d
__SOUND_ASOUND_FM_H	./include/sound/asound_fm.h	2;"	d
__SOUND_ASOUND_H	./include/sound/asound.h	24;"	d
__SOUND_EMU10K1_H	./include/sound/emu10k1.h	2;"	d
__SOUND_HDSPM_H	./include/sound/hdspm.h	2;"	d
__SOUND_HDSP_H	./include/sound/hdsp.h	2;"	d
__SOUND_SB16_CSP_H	./include/sound/sb16_csp.h	2;"	d
__STRING	./include/global.h	94;"	d
__SYMBOL_PREFIX	./include/config.h	159;"	d
__TYPE_COMPAT_H	./include/sound/type_compat.h	2;"	d
__USE_GNU	./src/compat/hsearch_r.c	24;"	d	file:
__action_fn_t	./include/search.h	/^typedef void (*__action_fn_t) __PMT ((__const void *__nodep,$/;"	t
__be16	./include/sound/type_compat.h	37;"	d
__be16_to_cpu	./include/sound/type_compat.h	30;"	d
__be32	./include/sound/type_compat.h	36;"	d
__be32_to_cpu	./include/sound/type_compat.h	28;"	d
__be64	./include/sound/type_compat.h	35;"	d
__buf	./src/pcm/pcm_direct.c	/^	struct seminfo  *__buf;  \/* Buffer for IPC_INFO (Linux specific) *\/$/;"	m	union:semun	typeref:struct:semun::seminfo	file:
__compar_fn_t	./include/search.h	/^typedef int (*__compar_fn_t) __PMT ((__const __ptr_t, __const __ptr_t));$/;"	t
__cpu_to_be16	./include/sound/type_compat.h	19;"	d
__cpu_to_be16	./include/sound/type_compat.h	24;"	d
__cpu_to_be32	./include/sound/type_compat.h	17;"	d
__cpu_to_be32	./include/sound/type_compat.h	22;"	d
__cpu_to_le16	./include/sound/type_compat.h	18;"	d
__cpu_to_le16	./include/sound/type_compat.h	23;"	d
__cpu_to_le32	./include/sound/type_compat.h	16;"	d
__cpu_to_le32	./include/sound/type_compat.h	21;"	d
__free_fn_t	./include/search.h	/^typedef void (*__free_fn_t) __PMT ((void *__nodep));$/;"	t
__le16	./include/sound/type_compat.h	34;"	d
__le16_to_cpu	./include/sound/type_compat.h	29;"	d
__le32	./include/sound/type_compat.h	33;"	d
__le32_to_cpu	./include/sound/type_compat.h	27;"	d
__le64	./include/sound/type_compat.h	32;"	d
__list_add	./include/list.h	/^static __inline__ void __list_add(struct list_head * _new,$/;"	f
__list_del	./include/list.h	/^static __inline__ void __list_del(struct list_head * prev,$/;"	f
__make_section_unallocated	./include/local.h	201;"	d
__make_section_unallocated	./include/local.h	204;"	d
__make_section_unallocated	./include/local.h	207;"	d
__need_size_t	./include/search.h	25;"	d
__restore_flags	./include/iatomic.h	925;"	d
__s16	./include/sound/type_compat.h	/^typedef int16_t __s16;$/;"	t
__s32	./include/sound/type_compat.h	/^typedef int32_t __s32;$/;"	t
__s8	./include/sound/type_compat.h	/^typedef int8_t __s8;$/;"	t
__save_flags_cli	./include/iatomic.h	924;"	d
__set_errno	./src/compat/hsearch_r.c	26;"	d	file:
__snd_alloca	./include/global.h	106;"	d
__snd_pcm_mmap_emul_open	./src/pcm/pcm_mmap_emul.c	/^int __snd_pcm_mmap_emul_open(snd_pcm_t **pcmp, const char *name,$/;"	f
__u16	./include/sound/type_compat.h	/^typedef uint16_t __u16;$/;"	t
__u32	./include/sound/type_compat.h	/^typedef uint32_t __u32;$/;"	t
__u8	./include/sound/type_compat.h	/^typedef uint8_t __u8;$/;"	t
_bag1	./src/mixer/mixer_local.h	/^typedef struct _bag1 {$/;"	s
_class_priv	./src/mixer/simple_abst.c	/^typedef struct _class_priv {$/;"	s	file:
_get_triple	./src/pcm/plugin_ops.h	1098;"	d
_get_triple	./src/pcm/plugin_ops.h	78;"	d
_get_triple	./src/pcm/plugin_ops.h	83;"	d
_get_triple_be	./src/pcm/plugin_ops.h	1101;"	d
_get_triple_be	./src/pcm/plugin_ops.h	61;"	d
_get_triple_le	./src/pcm/plugin_ops.h	1100;"	d
_get_triple_le	./src/pcm/plugin_ops.h	60;"	d
_get_triple_s	./src/pcm/plugin_ops.h	1099;"	d
_get_triple_s	./src/pcm/plugin_ops.h	79;"	d
_get_triple_s	./src/pcm/plugin_ops.h	84;"	d
_norms	./src/pcm/plugin_ops.h	/^static inline void _norms(const void *src, void *dst,$/;"	f
_put_triple	./src/pcm/plugin_ops.h	1102;"	d
_put_triple	./src/pcm/plugin_ops.h	80;"	d
_put_triple	./src/pcm/plugin_ops.h	85;"	d
_put_triple_be	./src/pcm/plugin_ops.h	1105;"	d
_put_triple_be	./src/pcm/plugin_ops.h	69;"	d
_put_triple_le	./src/pcm/plugin_ops.h	1104;"	d
_put_triple_le	./src/pcm/plugin_ops.h	62;"	d
_put_triple_s	./src/pcm/plugin_ops.h	1103;"	d
_put_triple_s	./src/pcm/plugin_ops.h	81;"	d
_put_triple_s	./src/pcm/plugin_ops.h	86;"	d
_selem_ctl	./src/mixer/simple_none.c	/^typedef struct _selem_ctl {$/;"	s	file:
_selem_ctl_type	./src/mixer/simple_none.c	/^typedef enum _selem_ctl_type {$/;"	g	file:
_selem_none	./src/mixer/simple_none.c	/^typedef struct _selem_none {$/;"	s	file:
_sm_class_basic	./include/mixer_abst.h	/^typedef struct _sm_class_basic {$/;"	s
_sm_selem	./include/mixer_abst.h	/^typedef struct _sm_selem {$/;"	s
_snd_async_handler	./include/local.h	/^struct _snd_async_handler {$/;"	s
_snd_config	./src/conf.c	/^struct _snd_config {$/;"	s	file:
_snd_config_copy	./src/conf.c	/^static int _snd_config_copy(snd_config_t *src,$/;"	f	file:
_snd_config_evaluate	./src/conf.c	/^static int _snd_config_evaluate(snd_config_t *src,$/;"	f	file:
_snd_config_expand	./src/conf.c	/^static int _snd_config_expand(snd_config_t *src,$/;"	f	file:
_snd_config_iterator	./include/local.h	46;"	d
_snd_config_make	./src/conf.c	/^static int _snd_config_make(snd_config_t **config, char **id, snd_config_type_t type)$/;"	f	file:
_snd_config_make_add	./src/conf.c	/^static int _snd_config_make_add(snd_config_t **config, char **id,$/;"	f	file:
_snd_config_save_children	./src/conf.c	/^static int _snd_config_save_children(snd_config_t *config, snd_output_t *out,$/;"	f	file:
_snd_config_save_node_value	./src/conf.c	/^static int _snd_config_save_node_value(snd_config_t *n, snd_output_t *out,$/;"	f	file:
_snd_config_search	./src/conf.c	/^static int _snd_config_search(snd_config_t *config, $/;"	f	file:
_snd_config_type	./include/conf.h	/^typedef enum _snd_config_type {$/;"	g
_snd_config_update	./src/conf.c	/^struct _snd_config_update {$/;"	s	file:
_snd_config_walk_pass	./src/conf.c	/^typedef enum _snd_config_walk_pass {$/;"	g	file:
_snd_ctl	./src/control/control_local.h	/^struct _snd_ctl {$/;"	s
_snd_ctl_async_descriptor	./src/control/control_local.h	97;"	d
_snd_ctl_card_info	./include/local.h	53;"	d
_snd_ctl_elem_id	./include/local.h	54;"	d
_snd_ctl_elem_iface	./include/control.h	/^typedef enum _snd_ctl_elem_iface {$/;"	g
_snd_ctl_elem_info	./include/local.h	56;"	d
_snd_ctl_elem_list	./include/local.h	55;"	d
_snd_ctl_elem_type	./include/control.h	/^typedef enum _snd_ctl_elem_type {$/;"	g
_snd_ctl_elem_value	./include/local.h	57;"	d
_snd_ctl_event	./include/local.h	58;"	d
_snd_ctl_event_type	./include/control.h	/^typedef enum _snd_ctl_event_type {$/;"	g
_snd_ctl_hw_open	./src/control/control_hw.c	/^int _snd_ctl_hw_open(snd_ctl_t **handlep, char *name, snd_config_t *root ATTRIBUTE_UNUSED, snd_config_t *conf, int mode)$/;"	f
_snd_ctl_ops	./src/control/control_local.h	/^typedef struct _snd_ctl_ops {$/;"	s
_snd_ctl_poll_descriptor	./src/control/control.c	/^int _snd_ctl_poll_descriptor(snd_ctl_t *ctl)$/;"	f
_snd_ctl_shm_open	./src/control/control_shm.c	/^int _snd_ctl_shm_open(snd_ctl_t **handlep, char *name, snd_config_t *root, snd_config_t *conf, int mode)$/;"	f
_snd_ctl_type	./include/control.h	/^typedef enum _snd_ctl_type {$/;"	g
_snd_dev_type	./include/aserver.h	/^typedef enum _snd_dev_type {$/;"	g
_snd_hctl	./src/control/control_local.h	/^struct _snd_hctl {$/;"	s
_snd_hctl_elem	./src/control/control_local.h	/^struct _snd_hctl_elem {$/;"	s
_snd_hctl_find_elem	./src/control/hcontrol.c	/^static int _snd_hctl_find_elem(snd_hctl_t *hctl, const snd_ctl_elem_id_t *id, int *dir)$/;"	f	file:
_snd_hdsp_9632_aeb	./include/sound/hdsp.h	/^struct _snd_hdsp_9632_aeb {$/;"	s
_snd_hdsp_config_info	./include/sound/hdsp.h	/^struct _snd_hdsp_config_info {$/;"	s
_snd_hdsp_firmware	./include/sound/hdsp.h	/^struct _snd_hdsp_firmware {$/;"	s
_snd_hdsp_mixer	./include/sound/hdsp.h	/^struct _snd_hdsp_mixer {$/;"	s
_snd_hdsp_peak_rms	./include/sound/hdsp.h	/^struct _snd_hdsp_peak_rms {$/;"	s
_snd_hdsp_version	./include/sound/hdsp.h	/^struct _snd_hdsp_version {$/;"	s
_snd_hwdep	./src/hwdep/hwdep_local.h	/^struct _snd_hwdep {$/;"	s
_snd_hwdep_dsp_image	./include/local.h	66;"	d
_snd_hwdep_dsp_status	./include/local.h	65;"	d
_snd_hwdep_hw_open	./src/hwdep/hwdep_hw.c	/^int _snd_hwdep_hw_open(snd_hwdep_t **hwdep, char *name,$/;"	f
_snd_hwdep_iface	./include/hwdep.h	/^typedef enum _snd_hwdep_iface {$/;"	g
_snd_hwdep_info	./include/local.h	64;"	d
_snd_hwdep_type	./include/hwdep.h	/^typedef enum _snd_hwdep_type {$/;"	g
_snd_input	./src/input.c	/^struct _snd_input {$/;"	s	file:
_snd_input_buffer	./src/input.c	/^typedef struct _snd_input_buffer {$/;"	s	file:
_snd_input_ops	./src/input.c	/^typedef struct _snd_input_ops {$/;"	s	file:
_snd_input_stdio	./src/input.c	/^typedef struct _snd_input_stdio {$/;"	s	file:
_snd_input_type	./include/input.h	/^typedef enum _snd_input_type {$/;"	g
_snd_interval	./include/local.h	47;"	d
_snd_mask	./src/pcm/pcm_local.h	28;"	d
_snd_mixer	./src/mixer/mixer_local.h	/^struct _snd_mixer {$/;"	s
_snd_mixer_class	./src/mixer/mixer_local.h	/^struct _snd_mixer_class {$/;"	s
_snd_mixer_elem	./src/mixer/mixer_local.h	/^struct _snd_mixer_elem {$/;"	s
_snd_mixer_elem_type	./include/mixer.h	/^typedef enum _snd_mixer_elem_type {$/;"	g
_snd_mixer_find_elem	./src/mixer/mixer.c	/^static int _snd_mixer_find_elem(snd_mixer_t *mixer, snd_mixer_elem_t *elem, int *dir)$/;"	f	file:
_snd_mixer_selem_channel_id	./include/mixer.h	/^typedef enum _snd_mixer_selem_channel_id {$/;"	g
_snd_mixer_selem_id	./src/mixer/mixer_local.h	/^struct _snd_mixer_selem_id {$/;"	s
_snd_mixer_selem_set_switch	./src/mixer/simple_none.c	/^static int _snd_mixer_selem_set_switch(snd_mixer_elem_t *elem, int dir, snd_mixer_selem_channel_id_t channel, int value)$/;"	f	file:
_snd_mixer_selem_set_volume	./src/mixer/simple_none.c	/^static int _snd_mixer_selem_set_volume(snd_mixer_elem_t *elem, int dir, snd_mixer_selem_channel_id_t channel, long value)$/;"	f	file:
_snd_mixer_slave	./src/mixer/mixer.c	/^typedef struct _snd_mixer_slave {$/;"	s	file:
_snd_module_control_ext	./src/control/control_ext.c	/^const char *_snd_module_control_ext = "";$/;"	v
_snd_module_control_hw	./src/control/control_hw.c	/^const char *_snd_module_control_hw = "";$/;"	v
_snd_module_control_shm	./src/control/control_shm.c	/^const char *_snd_module_control_shm = "";$/;"	v
_snd_module_hwdep_hw	./src/hwdep/hwdep_hw.c	/^const char *_snd_module_hwdep_hw = "";$/;"	v
_snd_module_pcm_adpcm	./src/pcm/pcm_adpcm.c	/^const char *_snd_module_pcm_adpcm = "";$/;"	v
_snd_module_pcm_alaw	./src/pcm/pcm_alaw.c	/^const char *_snd_module_pcm_alaw = "";$/;"	v
_snd_module_pcm_asym	./src/pcm/pcm_asym.c	/^const char *_snd_module_pcm_asym = "";$/;"	v
_snd_module_pcm_copy	./src/pcm/pcm_copy.c	/^const char *_snd_module_pcm_copy = "";$/;"	v
_snd_module_pcm_dmix	./src/pcm/pcm_dmix.c	/^const char *_snd_module_pcm_dmix = "";$/;"	v
_snd_module_pcm_dshare	./src/pcm/pcm_dshare.c	/^const char *_snd_module_pcm_dshare = "";$/;"	v
_snd_module_pcm_dsnoop	./src/pcm/pcm_dsnoop.c	/^const char *_snd_module_pcm_dsnoop = "";$/;"	v
_snd_module_pcm_empty	./src/pcm/pcm_empty.c	/^const char *_snd_module_pcm_empty = "";$/;"	v
_snd_module_pcm_extplug	./src/pcm/pcm_extplug.c	/^const char *_snd_module_pcm_extplug = "";$/;"	v
_snd_module_pcm_file	./src/pcm/pcm_file.c	/^const char *_snd_module_pcm_file = "";$/;"	v
_snd_module_pcm_hooks	./src/pcm/pcm_hooks.c	/^const char *_snd_module_pcm_hooks = "";$/;"	v
_snd_module_pcm_hw	./src/pcm/pcm_hw.c	/^const char *_snd_module_pcm_hw = "";$/;"	v
_snd_module_pcm_iec958	./src/pcm/pcm_iec958.c	/^const char *_snd_module_pcm_iec958 = "";$/;"	v
_snd_module_pcm_ioplug	./src/pcm/pcm_ioplug.c	/^const char *_snd_module_pcm_ioplug = "";$/;"	v
_snd_module_pcm_ladspa	./src/pcm/pcm_ladspa.c	/^const char *_snd_module_pcm_ladspa = "";$/;"	v
_snd_module_pcm_lfloat	./src/pcm/pcm_lfloat.c	/^const char *_snd_module_pcm_lfloat = "";$/;"	v
_snd_module_pcm_linear	./src/pcm/pcm_linear.c	/^const char *_snd_module_pcm_linear = "";$/;"	v
_snd_module_pcm_meter	./src/pcm/pcm_meter.c	/^const char *_snd_module_pcm_meter = "";$/;"	v
_snd_module_pcm_mmap_emul	./src/pcm/pcm_mmap_emul.c	/^const char *_snd_module_pcm_mmap_emul = "";$/;"	v
_snd_module_pcm_mulaw	./src/pcm/pcm_mulaw.c	/^const char *_snd_module_pcm_mulaw = "";$/;"	v
_snd_module_pcm_multi	./src/pcm/pcm_multi.c	/^const char *_snd_module_pcm_multi = "";$/;"	v
_snd_module_pcm_null	./src/pcm/pcm_null.c	/^const char *_snd_module_pcm_null = "";$/;"	v
_snd_module_pcm_plug	./src/pcm/pcm_plug.c	/^const char *_snd_module_pcm_plug = "";$/;"	v
_snd_module_pcm_rate	./src/pcm/pcm_rate.c	/^const char *_snd_module_pcm_rate = "";$/;"	v
_snd_module_pcm_route	./src/pcm/pcm_route.c	/^const char *_snd_module_pcm_route = "";$/;"	v
_snd_module_pcm_share	./src/pcm/pcm_share.c	/^const char *_snd_module_pcm_share = "";$/;"	v
_snd_module_pcm_shm	./src/pcm/pcm_shm.c	/^const char *_snd_module_pcm_shm = "";$/;"	v
_snd_module_pcm_softvol	./src/pcm/pcm_softvol.c	/^const char *_snd_module_pcm_softvol = "";$/;"	v
_snd_module_rawmidi_hw	./src/rawmidi/rawmidi_hw.c	/^const char *_snd_module_rawmidi_hw = "";$/;"	v
_snd_module_rawmidi_virt	./src/rawmidi/rawmidi_virt.c	/^const char *_snd_module_rawmidi_virt = "";$/;"	v
_snd_module_seq_hw	./src/seq/seq_hw.c	/^const char *_snd_module_seq_hw = "";$/;"	v
_snd_module_timer_hw	./src/timer/timer_hw.c	/^const char *_snd_module_timer_hw = "";$/;"	v
_snd_module_timer_query_hw	./src/timer/timer_query_hw.c	/^const char *_snd_module_timer_query_hw = "";$/;"	v
_snd_output	./src/output.c	/^struct _snd_output {$/;"	s	file:
_snd_output_buffer	./src/output.c	/^typedef struct _snd_output_buffer {$/;"	s	file:
_snd_output_ops	./src/output.c	/^typedef struct _snd_output_ops {$/;"	s	file:
_snd_output_stdio	./src/output.c	/^typedef struct _snd_output_stdio {$/;"	s	file:
_snd_output_type	./include/output.h	/^typedef enum _snd_output_type {$/;"	g
_snd_pcm	./src/pcm/pcm_local.h	/^struct _snd_pcm {$/;"	s
_snd_pcm_access	./include/pcm.h	/^typedef enum _snd_pcm_access {$/;"	g
_snd_pcm_access_mask	./src/pcm/pcm_local.h	29;"	d
_snd_pcm_adpcm_open	./src/pcm/pcm_adpcm.c	/^int _snd_pcm_adpcm_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_adpcm_state	./src/pcm/pcm_plugin.h	/^typedef struct _snd_pcm_adpcm_state {$/;"	s
_snd_pcm_alaw_open	./src/pcm/pcm_alaw.c	/^int _snd_pcm_alaw_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_asym_open	./src/pcm/pcm_asym.c	/^int _snd_pcm_asym_open(snd_pcm_t **pcmp, const char *name ATTRIBUTE_UNUSED,$/;"	f
_snd_pcm_async_descriptor	./src/pcm/pcm_local.h	399;"	d
_snd_pcm_boundary	./src/pcm/pcm.c	/^snd_pcm_uframes_t _snd_pcm_boundary(snd_pcm_t *pcm)$/;"	f
_snd_pcm_channel_area	./include/pcm.h	/^typedef struct _snd_pcm_channel_area {$/;"	s
_snd_pcm_channel_info	./src/pcm/pcm_local.h	/^typedef struct _snd_pcm_channel_info {$/;"	s
_snd_pcm_class	./include/pcm.h	/^typedef enum _snd_pcm_class {$/;"	g
_snd_pcm_copy_open	./src/pcm/pcm_copy.c	/^int _snd_pcm_copy_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_direct_get_slave_ipc_offset	./src/pcm/pcm_direct.c	/^static int _snd_pcm_direct_get_slave_ipc_offset(snd_config_t *root,$/;"	f	file:
_snd_pcm_direct_shm_discard	./src/pcm/pcm_direct.c	/^static int _snd_pcm_direct_shm_discard(snd_pcm_direct_t *dmix)$/;"	f	file:
_snd_pcm_dmix_open	./src/pcm/pcm_dmix.c	/^int _snd_pcm_dmix_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_dshare_open	./src/pcm/pcm_dshare.c	/^int _snd_pcm_dshare_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_dsnoop_open	./src/pcm/pcm_dsnoop.c	/^int _snd_pcm_dsnoop_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_empty_open	./src/pcm/pcm_empty.c	/^int _snd_pcm_empty_open(snd_pcm_t **pcmp, const char *name ATTRIBUTE_UNUSED,$/;"	f
_snd_pcm_file_format	./src/pcm/pcm_file.c	/^typedef enum _snd_pcm_file_format {$/;"	g	file:
_snd_pcm_file_open	./src/pcm/pcm_file.c	/^int _snd_pcm_file_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_format	./include/pcm.h	/^typedef enum _snd_pcm_format {$/;"	g
_snd_pcm_format_mask	./src/pcm/pcm_local.h	30;"	d
_snd_pcm_hook	./src/pcm/pcm_hooks.c	/^struct _snd_pcm_hook {$/;"	s	file:
_snd_pcm_hook_ctl_elems_install	./src/pcm/pcm_hooks.c	/^int _snd_pcm_hook_ctl_elems_install(snd_pcm_t *pcm, snd_config_t *conf)$/;"	f
_snd_pcm_hook_type	./include/pcm.h	/^typedef enum _snd_pcm_hook_type {$/;"	g
_snd_pcm_hooks_open	./src/pcm/pcm_hooks.c	/^int _snd_pcm_hooks_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_hw_open	./src/pcm/pcm_hw.c	/^int _snd_pcm_hw_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_hw_param_any	./src/pcm/pcm_params.c	/^static void _snd_pcm_hw_param_any(snd_pcm_hw_params_t *params, snd_pcm_hw_param_t var)$/;"	f	file:
_snd_pcm_hw_param_refine	./src/pcm/pcm_params.c	/^int _snd_pcm_hw_param_refine(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_param_set	./src/pcm/pcm_params.c	/^int _snd_pcm_hw_param_set(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_param_set_empty	./src/pcm/pcm_params.c	/^void _snd_pcm_hw_param_set_empty(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_param_set_first	./src/pcm/pcm_params.c	/^static int _snd_pcm_hw_param_set_first(snd_pcm_hw_params_t *params,$/;"	f	file:
_snd_pcm_hw_param_set_integer	./src/pcm/pcm_params.c	/^static int _snd_pcm_hw_param_set_integer(snd_pcm_hw_params_t *params,$/;"	f	file:
_snd_pcm_hw_param_set_interval	./src/pcm/pcm_params.c	/^int _snd_pcm_hw_param_set_interval(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_param_set_last	./src/pcm/pcm_params.c	/^static int _snd_pcm_hw_param_set_last(snd_pcm_hw_params_t *params,$/;"	f	file:
_snd_pcm_hw_param_set_mask	./src/pcm/pcm_params.c	/^int _snd_pcm_hw_param_set_mask(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_param_set_max	./src/pcm/pcm_params.c	/^int _snd_pcm_hw_param_set_max(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_param_set_min	./src/pcm/pcm_params.c	/^int _snd_pcm_hw_param_set_min(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_param_set_minmax	./src/pcm/pcm_params.c	/^int _snd_pcm_hw_param_set_minmax(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_params	./include/local.h	49;"	d
_snd_pcm_hw_params	./src/pcm/pcm_params.c	/^int _snd_pcm_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f
_snd_pcm_hw_params_any	./src/pcm/pcm_params.c	/^void _snd_pcm_hw_params_any(snd_pcm_hw_params_t *params)$/;"	f
_snd_pcm_hw_params_refine	./src/pcm/pcm_params.c	/^int _snd_pcm_hw_params_refine(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_params_set_format	./src/pcm/pcm_local.h	/^static inline int _snd_pcm_hw_params_set_format(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_params_set_subformat	./src/pcm/pcm_local.h	/^static inline int _snd_pcm_hw_params_set_subformat(snd_pcm_hw_params_t *params,$/;"	f
_snd_pcm_hw_rule	./src/pcm/pcm_params.c	/^struct _snd_pcm_hw_rule {$/;"	s	file:
_snd_pcm_iec958_open	./src/pcm/pcm_iec958.c	/^int _snd_pcm_iec958_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_info	./include/local.h	48;"	d
_snd_pcm_ladspa_open	./src/pcm/pcm_ladspa.c	/^int _snd_pcm_ladspa_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_ladspa_policy	./src/pcm/pcm_ladspa.c	/^typedef enum _snd_pcm_ladspa_policy {$/;"	g	file:
_snd_pcm_lfloat_open	./src/pcm/pcm_lfloat.c	/^int _snd_pcm_lfloat_open(snd_pcm_t **pcmp ATTRIBUTE_UNUSED,$/;"	f
_snd_pcm_lfloat_open	./src/pcm/pcm_lfloat.c	/^int _snd_pcm_lfloat_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_linear_open	./src/pcm/pcm_linear.c	/^int _snd_pcm_linear_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_link_descriptor	./src/pcm/pcm_local.h	398;"	d
_snd_pcm_meter	./src/pcm/pcm_meter.c	/^typedef struct _snd_pcm_meter {$/;"	s	file:
_snd_pcm_meter_open	./src/pcm/pcm_meter.c	/^int _snd_pcm_meter_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_mmap_emul_open	./src/pcm/pcm_mmap_emul.c	/^int _snd_pcm_mmap_emul_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_mmap_hw_ptr	./src/pcm/pcm.c	/^snd_pcm_uframes_t _snd_pcm_mmap_hw_ptr(snd_pcm_t *pcm)$/;"	f
_snd_pcm_mulaw_open	./src/pcm/pcm_mulaw.c	/^int _snd_pcm_mulaw_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_multi_open	./src/pcm/pcm_multi.c	/^int _snd_pcm_multi_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_null_open	./src/pcm/pcm_null.c	/^int _snd_pcm_null_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_plug_open	./src/pcm/pcm_plug.c	/^int _snd_pcm_plug_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_poll_descriptor	./src/pcm/pcm.c	/^int _snd_pcm_poll_descriptor(snd_pcm_t *pcm)$/;"	f
_snd_pcm_rate	./src/pcm/pcm_rate.c	/^struct _snd_pcm_rate {$/;"	s	file:
_snd_pcm_rate_open	./src/pcm/pcm_rate.c	/^int _snd_pcm_rate_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_rbptr	./src/pcm/pcm_local.h	/^typedef struct _snd_pcm_rbptr {$/;"	s
_snd_pcm_readi	./src/pcm/pcm_local.h	/^static inline snd_pcm_sframes_t _snd_pcm_readi(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)$/;"	f
_snd_pcm_readn	./src/pcm/pcm_local.h	/^static inline snd_pcm_sframes_t _snd_pcm_readn(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f
_snd_pcm_route_open	./src/pcm/pcm_route.c	/^int _snd_pcm_route_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_scope	./src/pcm/pcm_meter.c	/^struct _snd_pcm_scope {$/;"	s	file:
_snd_pcm_scope_level	./src/pcm/scopes/level.c	/^typedef struct _snd_pcm_scope_level {$/;"	s	file:
_snd_pcm_scope_level_channel	./src/pcm/scopes/level.c	/^typedef struct _snd_pcm_scope_level_channel {$/;"	s	file:
_snd_pcm_scope_level_open	./src/pcm/scopes/level.c	/^int _snd_pcm_scope_level_open(snd_pcm_t *pcm, const char *name,$/;"	f
_snd_pcm_scope_ops	./include/pcm.h	/^typedef struct _snd_pcm_scope_ops {$/;"	s
_snd_pcm_scope_s16	./src/pcm/pcm_meter.c	/^typedef struct _snd_pcm_scope_s16 {$/;"	s	file:
_snd_pcm_share_delay	./src/pcm/pcm_share.c	/^static int _snd_pcm_share_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
_snd_pcm_share_forward	./src/pcm/pcm_share.c	/^static snd_pcm_sframes_t _snd_pcm_share_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
_snd_pcm_share_hwsync	./src/pcm/pcm_share.c	/^static int _snd_pcm_share_hwsync(snd_pcm_t *pcm)$/;"	f	file:
_snd_pcm_share_missing	./src/pcm/pcm_share.c	/^static snd_pcm_uframes_t _snd_pcm_share_missing(snd_pcm_t *pcm)$/;"	f	file:
_snd_pcm_share_mmap_commit	./src/pcm/pcm_share.c	/^static snd_pcm_sframes_t _snd_pcm_share_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
_snd_pcm_share_open	./src/pcm/pcm_share.c	/^int _snd_pcm_share_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_share_rewind	./src/pcm/pcm_share.c	/^static snd_pcm_sframes_t _snd_pcm_share_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
_snd_pcm_share_slave_forward	./src/pcm/pcm_share.c	/^static snd_pcm_uframes_t _snd_pcm_share_slave_forward(snd_pcm_share_slave_t *slave)$/;"	f	file:
_snd_pcm_share_slave_missing	./src/pcm/pcm_share.c	/^static snd_pcm_uframes_t _snd_pcm_share_slave_missing(snd_pcm_share_slave_t *slave)$/;"	f	file:
_snd_pcm_share_stop	./src/pcm/pcm_share.c	/^static void _snd_pcm_share_stop(snd_pcm_t *pcm, snd_pcm_state_t state)$/;"	f	file:
_snd_pcm_share_update	./src/pcm/pcm_share.c	/^static void _snd_pcm_share_update(snd_pcm_t *pcm)$/;"	f	file:
_snd_pcm_shm_open	./src/pcm/pcm_shm.c	/^int _snd_pcm_shm_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_softvol_open	./src/pcm/pcm_softvol.c	/^int _snd_pcm_softvol_open(snd_pcm_t **pcmp, const char *name,$/;"	f
_snd_pcm_start	./include/pcm.h	/^typedef enum _snd_pcm_start {$/;"	g
_snd_pcm_state	./include/pcm.h	/^typedef enum _snd_pcm_state {$/;"	g
_snd_pcm_status	./include/local.h	51;"	d
_snd_pcm_stream	./include/pcm.h	/^typedef enum _snd_pcm_stream {$/;"	g
_snd_pcm_subclass	./include/pcm.h	/^typedef enum _snd_pcm_subclass {$/;"	g
_snd_pcm_subformat	./include/pcm.h	/^typedef enum _snd_pcm_subformat {$/;"	g
_snd_pcm_subformat_mask	./src/pcm/pcm_local.h	31;"	d
_snd_pcm_sw_params	./include/local.h	50;"	d
_snd_pcm_sync_id	./include/pcm.h	/^typedef union _snd_pcm_sync_id {$/;"	u
_snd_pcm_tstamp	./include/pcm.h	/^typedef enum _snd_pcm_tstamp {$/;"	g
_snd_pcm_type	./include/pcm.h	/^enum _snd_pcm_type {$/;"	g
_snd_pcm_writei	./src/pcm/pcm_local.h	/^static inline snd_pcm_sframes_t _snd_pcm_writei(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)$/;"	f
_snd_pcm_writen	./src/pcm/pcm_local.h	/^static inline snd_pcm_sframes_t _snd_pcm_writen(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f
_snd_pcm_xrun	./include/pcm.h	/^typedef enum _snd_pcm_xrun {$/;"	g
_snd_rawmidi	./src/rawmidi/rawmidi_local.h	/^struct _snd_rawmidi {$/;"	s
_snd_rawmidi_hw_open	./src/rawmidi/rawmidi_hw.c	/^int _snd_rawmidi_hw_open(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp,$/;"	f
_snd_rawmidi_info	./include/local.h	60;"	d
_snd_rawmidi_params	./include/local.h	61;"	d
_snd_rawmidi_status	./include/local.h	62;"	d
_snd_rawmidi_stream	./include/rawmidi.h	/^typedef enum _snd_rawmidi_stream {$/;"	g
_snd_rawmidi_type	./include/rawmidi.h	/^typedef enum _snd_rawmidi_type {$/;"	g
_snd_rawmidi_virtual_open	./src/rawmidi/rawmidi_virt.c	/^int _snd_rawmidi_virtual_open(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp,$/;"	f
_snd_sctl	./src/control/setup.c	/^struct _snd_sctl {$/;"	s	file:
_snd_send_fd	./src/pcm/pcm_direct.c	/^static int _snd_send_fd(int sock, void *data, size_t len, int fd)$/;"	f	file:
_snd_seq	./src/seq/seq_local.h	/^struct _snd_seq {$/;"	s
_snd_seq_client_info	./include/local.h	69;"	d
_snd_seq_client_pool	./include/local.h	77;"	d
_snd_seq_hw_open	./src/seq/seq_hw.c	/^int _snd_seq_hw_open(snd_seq_t **handlep, char *name,$/;"	f
_snd_seq_open_lconf	./src/seq/seq.c	/^int _snd_seq_open_lconf(snd_seq_t **seqp, const char *name, $/;"	f
_snd_seq_port_info	./include/local.h	70;"	d
_snd_seq_port_subscribe	./include/local.h	75;"	d
_snd_seq_query_subscribe	./include/local.h	76;"	d
_snd_seq_queue_info	./include/local.h	72;"	d
_snd_seq_queue_status	./include/local.h	73;"	d
_snd_seq_queue_tempo	./include/local.h	68;"	d
_snd_seq_queue_timer	./include/local.h	74;"	d
_snd_seq_remove_events	./include/local.h	78;"	d
_snd_seq_system_info	./include/local.h	71;"	d
_snd_seq_type	./include/seq.h	/^typedef enum _snd_seq_type {$/;"	g
_snd_set_mode	./include/local.h	/^typedef enum _snd_set_mode {$/;"	g
_snd_spcm_duplex_type	./include/pcm.h	/^typedef enum _snd_spcm_duplex_type {$/;"	g
_snd_spcm_latency	./include/pcm.h	/^typedef enum _snd_spcm_latency {$/;"	g
_snd_spcm_xrun_type	./include/pcm.h	/^typedef enum _snd_spcm_xrun_type {$/;"	g
_snd_timer	./src/timer/timer_local.h	/^struct _snd_timer {$/;"	s
_snd_timer_class	./include/timer.h	/^typedef enum _snd_timer_class {$/;"	g
_snd_timer_event	./include/timer.h	/^typedef enum _snd_timer_event {$/;"	g
_snd_timer_ginfo	./include/local.h	95;"	d
_snd_timer_gparams	./include/local.h	96;"	d
_snd_timer_gstatus	./include/local.h	97;"	d
_snd_timer_hw_open	./src/timer/timer_hw.c	/^int _snd_timer_hw_open(snd_timer_t **timer, char *name,$/;"	f
_snd_timer_id	./include/local.h	94;"	d
_snd_timer_info	./include/local.h	99;"	d
_snd_timer_params	./include/local.h	100;"	d
_snd_timer_query	./src/timer/timer_local.h	/^struct _snd_timer_query {$/;"	s
_snd_timer_query_hw_open	./src/timer/timer_query_hw.c	/^int _snd_timer_query_hw_open(snd_timer_query_t **timer, char *name,$/;"	f
_snd_timer_read	./include/timer.h	/^typedef struct _snd_timer_read {$/;"	s
_snd_timer_select	./include/local.h	98;"	d
_snd_timer_slave_class	./include/timer.h	/^typedef enum _snd_timer_slave_class {$/;"	g
_snd_timer_status	./include/local.h	101;"	d
_snd_timer_tread	./include/timer.h	/^typedef struct _snd_timer_tread {$/;"	s
_snd_timer_type	./include/timer.h	/^typedef enum _snd_timer_type {$/;"	g
_snd_transport_type	./include/aserver.h	/^typedef enum _snd_transport_type {$/;"	g
a0	./test/latency.c	/^float lfo,dlfo,fs,fc,BW,C,D,a0,a1,a2,b1,b2,*x[3],*y[3];$/;"	v
a1	./test/latency.c	/^float lfo,dlfo,fs,fc,BW,C,D,a0,a1,a2,b1,b2,*x[3],*y[3];$/;"	v
a2	./test/latency.c	/^float lfo,dlfo,fs,fc,BW,C,D,a0,a1,a2,b1,b2,*x[3],*y[3];$/;"	v
abstract	./include/mixer.h	/^	enum snd_mixer_selem_regopt_abstract abstract;$/;"	m	struct:snd_mixer_selem_regopt	typeref:enum:snd_mixer_selem_regopt::snd_mixer_selem_regopt_abstract
ac_fn_c_check_func	./configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	./configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	./configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_try_compile	./configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	./configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	./configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	./configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_cxx_try_compile	./configure	/^ac_fn_cxx_try_compile ()$/;"	f
ac_fn_cxx_try_cpp	./configure	/^ac_fn_cxx_try_cpp ()$/;"	f
ac_fn_cxx_try_link	./configure	/^ac_fn_cxx_try_link ()$/;"	f
ac_fn_f77_try_compile	./configure	/^ac_fn_f77_try_compile ()$/;"	f
ac_fn_f77_try_link	./configure	/^ac_fn_f77_try_link ()$/;"	f
acall_compar	./src/alisp/alisp_snd.c	/^static int acall_compar(const void *p1, const void *p2)$/;"	f	file:
acall_table	./src/alisp/alisp_snd.c	/^static const struct acall_table acall_table[] = {$/;"	v	typeref:struct:acall_table	file:
acall_table	./src/alisp/alisp_snd.c	/^struct acall_table {$/;"	s	file:
acc_channels	./include/sound/sb16_csp.h	/^	unsigned short acc_channels;	\/* accepted channels *\/$/;"	m	struct:snd_sb_csp_info
acc_format	./include/sound/sb16_csp.h	/^	unsigned int acc_format;	\/* accepted PCM formats *\/$/;"	m	struct:snd_sb_csp_info
acc_rates	./include/sound/sb16_csp.h	/^	unsigned short acc_rates;	\/* accepted sample rates *\/$/;"	m	struct:snd_sb_csp_info
acc_width	./include/sound/sb16_csp.h	/^	unsigned short acc_width;	\/* accepted sample width *\/$/;"	m	struct:snd_sb_csp_info
access	./include/pcm_ioplug.h	/^	snd_pcm_access_t access;	\/**< access type; filled after hw_params is called *\/$/;"	m	struct:snd_pcm_ioplug
access	./include/sound/asound.h	/^	unsigned int access;		\/* R: value access (bitmask) - SNDRV_CTL_ELEM_ACCESS_* *\/$/;"	m	struct:sndrv_ctl_elem_info
access	./src/pcm/pcm_direct.h	/^		snd_pcm_access_t access;$/;"	m	struct:__anon123::__anon125
access	./src/pcm/pcm_local.h	/^	snd_pcm_access_t access;	\/* access mode *\/$/;"	m	struct:_snd_pcm
access	./src/pcm/pcm_plug.c	/^	snd_pcm_access_t access;$/;"	m	struct:__anon146	file:
access	./test/pcm.c	/^	snd_pcm_access_t access;$/;"	m	struct:transfer_method	file:
activate	./src/pcm/ladspa.h	/^  void (*activate)(LADSPA_Handle Instance);$/;"	m	struct:_LADSPA_Descriptor
active	./src/pcm/pcm_ext_parm.h	/^	unsigned int active: 1;$/;"	m	struct:snd_ext_parm
active	./src/ucm/ucm_local.h	/^	unsigned int active: 1;$/;"	m	struct:use_case_verb
active_devices	./src/ucm/ucm_local.h	/^	struct list_head active_devices;$/;"	m	struct:snd_use_case_mgr	typeref:struct:snd_use_case_mgr::list_head
active_list	./src/ucm/ucm_local.h	/^	struct list_head active_list;$/;"	m	struct:use_case_device	typeref:struct:use_case_device::list_head
active_list	./src/ucm/ucm_local.h	/^	struct list_head active_list;$/;"	m	struct:use_case_modifier	typeref:struct:use_case_modifier::list_head
active_modifiers	./src/ucm/ucm_local.h	/^	struct list_head active_modifiers;$/;"	m	struct:snd_use_case_mgr	typeref:struct:snd_use_case_mgr::list_head
active_verb	./src/ucm/ucm_local.h	/^	struct use_case_verb *active_verb;$/;"	m	struct:snd_use_case_mgr	typeref:struct:snd_use_case_mgr::use_case_verb
ad_gain	./include/sound/hdsp.h	/^	unsigned char ad_gain;$/;"	m	struct:_snd_hdsp_config_info
adat_sync_check	./include/sound/hdsp.h	/^	unsigned char adat_sync_check[3];$/;"	m	struct:_snd_hdsp_config_info
adatsync_sync_check	./include/sound/hdsp.h	/^	unsigned char adatsync_sync_check;$/;"	m	struct:_snd_hdsp_config_info
add	./src/pcm/interval.c	/^static inline unsigned int add(unsigned int a, unsigned int b)$/;"	f	file:
add_card	./src/control/namehint.c	/^static int add_card(struct hint_list *list, int card)$/;"	f	file:
add_char_local_string	./src/conf.c	/^static int add_char_local_string(struct local_string *s, int c)$/;"	f	file:
add_cons	./src/alisp/alisp_snd.c	/^static struct alisp_object * add_cons(struct alisp_instance * instance,$/;"	f	file:
add_cons2	./src/alisp/alisp_snd.c	/^static struct alisp_object * add_cons2(struct alisp_instance * instance,$/;"	f	file:
add_elem	./src/control/setup.c	/^static int add_elem(snd_sctl_t *h, snd_config_t *_conf, snd_config_t *private_data)$/;"	f	file:
add_software_devices	./src/control/namehint.c	/^static int add_software_devices(struct hint_list *list)$/;"	f	file:
add_tlv_info	./src/pcm/pcm_softvol.c	/^static int add_tlv_info(snd_pcm_softvol_t *svol, snd_ctl_elem_info_t *cinfo)$/;"	f	file:
add_user_ctl	./src/pcm/pcm_softvol.c	/^static int add_user_ctl(snd_pcm_softvol_t *svol, snd_ctl_elem_info_t *cinfo, int count)$/;"	f	file:
add_values	./src/ucm/main.c	/^static int add_values(struct list_head *list,$/;"	f	file:
add_waiter	./aserver/aserver.c	/^static void add_waiter(int fd, unsigned short events, waiter_handler_t handler,$/;"	f	file:
addons	./include/sound/hdspm.h	/^	int addons;$/;"	m	struct:hdspm_version
addr	./include/pcm.h	/^	void *addr;$/;"	m	struct:_snd_pcm_channel_area
addr	./include/seq_event.h	/^		snd_seq_addr_t addr;		\/**< address *\/$/;"	m	union:snd_seq_event::__anon46
addr	./include/sound/asequencer.h	/^		struct sndrv_seq_addr addr;$/;"	m	union:sndrv_seq_event::__anon11	typeref:struct:sndrv_seq_event::__anon11::sndrv_seq_addr
addr	./include/sound/asequencer.h	/^	struct sndrv_seq_addr addr;	\/* R\/O: result *\/$/;"	m	struct:sndrv_seq_query_subs	typeref:struct:sndrv_seq_query_subs::sndrv_seq_addr
addr	./include/sound/asequencer.h	/^	struct sndrv_seq_addr addr;	\/* client\/port numbers *\/$/;"	m	struct:sndrv_seq_port_info	typeref:struct:sndrv_seq_port_info::sndrv_seq_addr
addr	./src/pcm/pcm_local.h	/^	void *addr;			\/* base address of channel samples *\/$/;"	m	struct:_snd_pcm_channel_info
address	./include/sound/emu10k1.h	/^	unsigned int address;		\/* 31.bit == 1 -> external TRAM *\/$/;"	m	struct:__anon19
adjust_pitch	./include/pcm_rate.h	/^	int (*adjust_pitch)(void *obj, snd_pcm_rate_info_t *info);$/;"	m	struct:snd_pcm_rate_old_ops
adjust_pitch	./include/pcm_rate.h	/^	int (*adjust_pitch)(void *obj, snd_pcm_rate_info_t *info);$/;"	m	struct:snd_pcm_rate_ops
adpcm_decoder	./src/pcm/pcm_adpcm.c	/^static int adpcm_decoder(unsigned char code, snd_pcm_adpcm_state_t * state)$/;"	f	file:
adpcm_encoder	./src/pcm/pcm_adpcm.c	/^static char adpcm_encoder(int sl, snd_pcm_adpcm_state_t * state)$/;"	f	file:
adpcm_f	./src/pcm/pcm_adpcm.c	/^typedef void (*adpcm_f)(const snd_pcm_channel_area_t *dst_areas,$/;"	t	file:
adpcm_states	./src/pcm/pcm_meter.c	/^	snd_pcm_adpcm_state_t *adpcm_states;$/;"	m	struct:_snd_pcm_scope_s16	file:
aebi	./include/sound/hdsp.h	/^	int aebi;$/;"	m	struct:_snd_hdsp_9632_aeb
aebo	./include/sound/hdsp.h	/^	int aebo;$/;"	m	struct:_snd_hdsp_9632_aeb
alaw_f	./src/pcm/pcm_alaw.c	/^typedef void (*alaw_f)(const snd_pcm_channel_area_t *dst_areas,$/;"	t	file:
alaw_to_s16	./src/pcm/pcm_alaw.c	/^static int alaw_to_s16(unsigned char a_val)$/;"	f	file:
alisp_cfg	./include/alisp.h	/^struct alisp_cfg {$/;"	s
alisp_compare_type	./src/alisp/alisp_local.h	/^static inline int alisp_compare_type(struct alisp_object *p, enum alisp_objects type)$/;"	f
alisp_dec_refs	./src/alisp/alisp_local.h	/^static inline unsigned int alisp_dec_refs(struct alisp_object *p)$/;"	f
alisp_get_refs	./src/alisp/alisp_local.h	/^static inline unsigned int alisp_get_refs(struct alisp_object *p)$/;"	f
alisp_get_type	./src/alisp/alisp_local.h	/^static inline enum alisp_objects alisp_get_type(struct alisp_object *p)$/;"	f
alisp_inc_refs	./src/alisp/alisp_local.h	/^static inline unsigned int alisp_inc_refs(struct alisp_object *p)$/;"	f
alisp_include_file	./src/alisp/alisp.c	/^static int alisp_include_file(struct alisp_instance *instance, const char *filename)$/;"	f	file:
alisp_instance	./src/alisp/alisp_local.h	/^struct alisp_instance {$/;"	s
alisp_object	./src/alisp/alisp_local.h	/^struct alisp_object {$/;"	s
alisp_object_pair	./src/alisp/alisp_local.h	/^struct alisp_object_pair {$/;"	s
alisp_objects	./src/alisp/alisp_local.h	/^enum alisp_objects {$/;"	g
alisp_seq_iterator	./src/alisp/alisp.c	34;"	d	file:
alisp_set_refs	./src/alisp/alisp_local.h	/^static inline void alisp_set_refs(struct alisp_object *p, unsigned int refs)$/;"	f
alisp_set_type	./src/alisp/alisp_local.h	/^static inline void alisp_set_type(struct alisp_object *p, enum alisp_objects type)$/;"	f
alisp_tokens	./src/alisp/alisp_local.h	/^enum alisp_tokens {$/;"	g
alloc	./src/conf.c	/^	size_t alloc;$/;"	m	struct:local_string	file:
alloc	./src/control/control_local.h	/^	unsigned int alloc;	$/;"	m	struct:_snd_hctl
alloc	./src/mixer/mixer_local.h	/^	unsigned int alloc;$/;"	m	struct:_snd_mixer
alloc	./src/output.c	/^	size_t alloc;$/;"	m	struct:_snd_output_buffer	file:
alloc_str_list	./src/ucm/main.c	/^static int alloc_str_list(struct list_head *list, int mult, char **result[])$/;"	f	file:
alloc_tmpbuf	./src/seq/seq.c	/^static int alloc_tmpbuf(snd_seq_t *seq, size_t len)$/;"	f	file:
allocated	./src/control/namehint.c	/^	unsigned int allocated;$/;"	m	struct:hint_list	file:
allocated	./src/pcm/pcm_ladspa.c	/^	unsigned int allocated;			\/* count of allocated samples *\/$/;"	m	struct:__anon113	file:
alsa	./include/sound/asequencer.h	/^		} alsa;$/;"	m	union:sndrv_seq_queue_timer::__anon12	typeref:struct:sndrv_seq_queue_timer::__anon12::__anon13
alsa_lisp	./src/alisp/alisp.c	/^int alsa_lisp(struct alisp_cfg *cfg, struct alisp_instance **_instance)$/;"	f
alsa_lisp_default_cfg	./src/alisp/alisp.c	/^struct alisp_cfg *alsa_lisp_default_cfg(snd_input_t *input)$/;"	f
alsa_lisp_default_cfg_free	./src/alisp/alisp.c	/^void alsa_lisp_default_cfg_free(struct alisp_cfg *cfg)$/;"	f
alsa_lisp_free	./src/alisp/alisp.c	/^void alsa_lisp_free(struct alisp_instance *instance)$/;"	f
alsa_lisp_function	./src/alisp/alisp.c	/^int alsa_lisp_function(struct alisp_instance *instance, struct alisp_seq_iterator **result,$/;"	f
alsa_lisp_init_objects	./src/alisp/alisp.c	/^void alsa_lisp_init_objects(void)$/;"	f
alsa_lisp_nil	./src/alisp/alisp.c	/^struct alisp_object alsa_lisp_nil;$/;"	v	typeref:struct:alisp_object
alsa_lisp_result_free	./src/alisp/alisp.c	/^void alsa_lisp_result_free(struct alisp_instance *instance,$/;"	f
alsa_lisp_seq_count	./src/alisp/alisp.c	/^int alsa_lisp_seq_count(struct alisp_seq_iterator *seq)$/;"	f
alsa_lisp_seq_first	./src/alisp/alisp.c	/^int alsa_lisp_seq_first(struct alisp_instance *instance, const char *id,$/;"	f
alsa_lisp_seq_integer	./src/alisp/alisp.c	/^int alsa_lisp_seq_integer(struct alisp_seq_iterator *seq, long *val)$/;"	f
alsa_lisp_seq_next	./src/alisp/alisp.c	/^int alsa_lisp_seq_next(struct alisp_seq_iterator **seq)$/;"	f
alsa_lisp_seq_pointer	./src/alisp/alisp.c	/^int alsa_lisp_seq_pointer(struct alisp_seq_iterator *seq, const char *ptr_id, void **ptr)$/;"	f
alsa_lisp_t	./src/alisp/alisp.c	/^struct alisp_object alsa_lisp_t;$/;"	v	typeref:struct:alisp_object
alsa_mixer_sbasic_event	./modules/mixer/simple/sbase.c	/^int alsa_mixer_sbasic_event(snd_mixer_class_t *class, unsigned int mask,$/;"	f
alsa_mixer_sbasic_initpriv	./modules/mixer/simple/sbase.c	/^void alsa_mixer_sbasic_initpriv(snd_mixer_class_t *class,$/;"	f
alsa_mixer_sbasic_selreg	./modules/mixer/simple/sbase.c	/^int alsa_mixer_sbasic_selreg(snd_mixer_class_t *class,$/;"	f
alsa_mixer_sbasic_sidreg	./modules/mixer/simple/sbase.c	/^int alsa_mixer_sbasic_sidreg(snd_mixer_class_t *class,$/;"	f
alsa_mixer_simple_event	./modules/mixer/simple/ac97.c	/^int alsa_mixer_simple_event(snd_mixer_class_t *class, unsigned int mask,$/;"	f
alsa_mixer_simple_event	./modules/mixer/simple/hda.c	/^int alsa_mixer_simple_event(snd_mixer_class_t *class, unsigned int mask,$/;"	f
alsa_mixer_simple_event	./modules/mixer/simple/python.c	/^int alsa_mixer_simple_event(snd_mixer_class_t *class, unsigned int mask,$/;"	f
alsa_mixer_simple_finit	./modules/mixer/simple/python.c	/^int alsa_mixer_simple_finit(snd_mixer_class_t *class,$/;"	f
alsa_mixer_simple_free	./modules/mixer/simple/python.c	/^static void alsa_mixer_simple_free(snd_mixer_class_t *class)$/;"	f	file:
alsa_mixer_simple_init	./modules/mixer/simple/ac97.c	/^int alsa_mixer_simple_init(snd_mixer_class_t *class)$/;"	f
alsa_mixer_simple_init	./modules/mixer/simple/hda.c	/^int alsa_mixer_simple_init(snd_mixer_class_t *class)$/;"	f
alsa_start_timer	./test/playmidi1.c	/^static void alsa_start_timer(void)$/;"	f	file:
alsa_stop_timer	./test/playmidi1.c	/^static void alsa_stop_timer(void)$/;"	f	file:
alsa_sync	./test/playmidi1.c	/^static void alsa_sync(void)$/;"	f	file:
am	./include/sound/asound_fm.h	/^	unsigned char am;		\/* amplitude modulation *\/$/;"	m	struct:snd_dm_fm_voice
am_depth	./include/sound/asound_fm.h	/^	unsigned char am_depth;		\/* amplitude modulation depth (1=hi) *\/$/;"	m	struct:snd_dm_fm_params
analog_extension_board	./include/sound/hdsp.h	/^	unsigned char analog_extension_board;$/;"	m	struct:_snd_hdsp_config_info
analog_out	./include/sound/hdspm.h	/^	unsigned int analog_out;$/;"	m	struct:hdspm_config
any_test_failed	./test/lsb/test.h	/^static int any_test_failed;$/;"	v
append_to_string	./src/alisp/alisp.c	/^static int append_to_string(char **s, int *len, char *from, int size)$/;"	f	file:
appl	./include/aserver.h	/^	snd_pcm_shm_rbptr_t appl;$/;"	m	struct:__anon53
appl	./src/pcm/pcm_local.h	/^	snd_pcm_rbptr_t appl;$/;"	m	struct:_snd_pcm
appl_ptr	./include/pcm_ioplug.h	/^	volatile snd_pcm_uframes_t appl_ptr;	\/**< application pointer; read-only *\/$/;"	m	struct:snd_pcm_ioplug
appl_ptr	./include/sound/asound.h	/^	sndrv_pcm_uframes_t appl_ptr;	\/* RW: appl ptr (0...boundary-1) *\/$/;"	m	struct:sndrv_pcm_mmap_control
appl_ptr	./include/sound/asound.h	/^	sndrv_pcm_uframes_t appl_ptr;	\/* appl ptr *\/$/;"	m	struct:sndrv_pcm_status
appl_ptr	./src/pcm/pcm_direct.h	/^	snd_pcm_uframes_t appl_ptr;$/;"	m	struct:snd_pcm_direct
appl_ptr	./src/pcm/pcm_file.c	/^	snd_pcm_uframes_t appl_ptr;$/;"	m	struct:__anon121	file:
appl_ptr	./src/pcm/pcm_hw.c	/^	snd_pcm_uframes_t appl_ptr;$/;"	m	struct:__anon107	file:
appl_ptr	./src/pcm/pcm_mmap_emul.c	/^	snd_pcm_uframes_t appl_ptr;$/;"	m	struct:__anon139	file:
appl_ptr	./src/pcm/pcm_null.c	/^	snd_pcm_uframes_t appl_ptr;$/;"	m	struct:__anon132	file:
appl_ptr	./src/pcm/pcm_plugin.h	/^	snd_pcm_uframes_t appl_ptr, hw_ptr;$/;"	m	struct:__anon106
appl_ptr	./src/pcm/pcm_rate.c	/^	snd_pcm_uframes_t appl_ptr, hw_ptr;$/;"	m	struct:_snd_pcm_rate	file:
appl_ptr	./src/pcm/pcm_share.c	/^	snd_pcm_uframes_t appl_ptr;$/;"	m	struct:__anon119	file:
applyeffect	./test/latency.c	/^void applyeffect(char* buffer,int r)$/;"	f
area	./src/pcm/pcm_local.h	/^			struct snd_shm_area *area;$/;"	m	struct:_snd_pcm_channel_info::__anon134::__anon135	typeref:struct:_snd_pcm_channel_info::__anon134::__anon135::snd_shm_area
areas	./test/pcm.c	/^	snd_pcm_channel_area_t *areas;$/;"	m	struct:async_private_data	file:
array	./src/pcm/pcm_direct.c	/^	unsigned short  *array;  \/* Array for GETALL, SETALL *\/$/;"	m	union:semun	file:
array	./src/pcm/pcm_ladspa.c	/^        unsigned int *array;$/;"	m	struct:__anon114	file:
as_double	./src/pcm/plugin_ops.h	1087;"	d
as_double	./src/pcm/plugin_ops.h	47;"	d
as_doublec	./src/pcm/plugin_ops.h	1096;"	d
as_doublec	./src/pcm/plugin_ops.h	58;"	d
as_float	./src/pcm/pcm_route.c	/^	float as_float;$/;"	m	struct:__anon140	file:
as_float	./src/pcm/pcm_route.c	/^	float as_float;$/;"	m	union:__anon143	file:
as_float	./src/pcm/plugin_ops.h	1086;"	d
as_float	./src/pcm/plugin_ops.h	46;"	d
as_floatc	./src/pcm/plugin_ops.h	1095;"	d
as_floatc	./src/pcm/plugin_ops.h	57;"	d
as_fn_append	./configure	/^  as_fn_append ()$/;"	f
as_fn_arith	./configure	/^  as_fn_arith ()$/;"	f
as_fn_error	./configure	/^as_fn_error ()$/;"	f
as_fn_exit	./configure	/^as_fn_exit ()$/;"	f
as_fn_failure	./configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	./configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	./configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	./configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	./configure	/^as_fn_set_status ()$/;"	f
as_fn_success	./configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	./configure	/^as_fn_unset ()$/;"	f
as_int	./src/pcm/pcm_route.c	/^	int as_int;$/;"	m	struct:__anon140	file:
as_s16	./src/pcm/plugin_ops.h	1084;"	d
as_s16	./src/pcm/plugin_ops.h	43;"	d
as_s16c	./src/pcm/plugin_ops.h	1093;"	d
as_s16c	./src/pcm/plugin_ops.h	54;"	d
as_s32	./src/pcm/plugin_ops.h	1085;"	d
as_s32	./src/pcm/plugin_ops.h	44;"	d
as_s32c	./src/pcm/plugin_ops.h	1094;"	d
as_s32c	./src/pcm/plugin_ops.h	55;"	d
as_s64	./src/pcm/plugin_ops.h	45;"	d
as_s64c	./src/pcm/plugin_ops.h	56;"	d
as_s8	./src/pcm/plugin_ops.h	1083;"	d
as_s8	./src/pcm/plugin_ops.h	42;"	d
as_s8c	./src/pcm/plugin_ops.h	1092;"	d
as_s8c	./src/pcm/plugin_ops.h	53;"	d
as_sint32	./src/pcm/pcm_route.c	/^	int32_t as_sint32;$/;"	m	union:__anon143	file:
as_sint64	./src/pcm/pcm_route.c	/^	int64_t as_sint64;$/;"	m	union:__anon143	file:
as_u16	./src/pcm/plugin_ops.h	1081;"	d
as_u16	./src/pcm/plugin_ops.h	39;"	d
as_u16c	./src/pcm/plugin_ops.h	1090;"	d
as_u16c	./src/pcm/plugin_ops.h	50;"	d
as_u32	./src/pcm/plugin_ops.h	1082;"	d
as_u32	./src/pcm/plugin_ops.h	40;"	d
as_u32c	./src/pcm/plugin_ops.h	1091;"	d
as_u32c	./src/pcm/plugin_ops.h	51;"	d
as_u64	./src/pcm/plugin_ops.h	41;"	d
as_u64c	./src/pcm/plugin_ops.h	52;"	d
as_u8	./src/pcm/plugin_ops.h	1080;"	d
as_u8	./src/pcm/plugin_ops.h	38;"	d
as_u8c	./src/pcm/plugin_ops.h	1089;"	d
as_u8c	./src/pcm/plugin_ops.h	49;"	d
ask_dB_vol	./include/mixer_abst.h	/^	int (*ask_dB_vol)(snd_mixer_elem_t *elem, int dir, long dbValue, long *value, int xdir);$/;"	m	struct:sm_elem_ops
ask_dB_vol_ops	./modules/mixer/simple/python.c	/^static int ask_dB_vol_ops(snd_mixer_elem_t *elem,$/;"	f	file:
ask_dB_vol_ops	./src/mixer/simple_none.c	/^static int ask_dB_vol_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
ask_vol_dB	./include/mixer_abst.h	/^	int (*ask_vol_dB)(snd_mixer_elem_t *elem, int dir, long value, long *dbValue);$/;"	m	struct:sm_elem_ops
ask_vol_dB_ops	./modules/mixer/simple/python.c	/^static int ask_vol_dB_ops(snd_mixer_elem_t *elem,$/;"	f	file:
ask_vol_dB_ops	./src/mixer/simple_none.c	/^static int ask_vol_dB_ops(snd_mixer_elem_t *elem,$/;"	f	file:
async	./include/aserver.h	/^		} async;$/;"	m	union:__anon53::__anon54	typeref:struct:__anon53::__anon54::__anon55
async	./include/aserver.h	/^		} async;$/;"	m	union:__anon64::__anon65	typeref:struct:__anon64::__anon65::__anon66
async	./src/control/control_local.h	/^	int (*async)(snd_ctl_t *handle, int sig, pid_t pid);$/;"	m	struct:_snd_ctl_ops
async	./src/pcm/pcm_local.h	/^	int (*async)(snd_pcm_t *pcm, int sig, pid_t pid);$/;"	m	struct:__anon137
async	./src/timer/timer_local.h	/^	int (*async)(snd_timer_t *timer, int sig, pid_t pid);$/;"	m	struct:__anon88
async_callback	./test/pcm.c	/^static void async_callback(snd_async_handler_t *ahandler)$/;"	f	file:
async_callback	./test/timer.c	/^static void async_callback(snd_async_handler_t *ahandler)$/;"	f	file:
async_direct_callback	./test/pcm.c	/^static void async_direct_callback(snd_async_handler_t *ahandler)$/;"	f	file:
async_direct_loop	./test/pcm.c	/^static int async_direct_loop(snd_pcm_t *handle,$/;"	f	file:
async_handler	./aserver/aserver.c	/^	snd_async_handler_t *async_handler;$/;"	m	struct:client	file:
async_handler	./aserver/aserver.c	/^static void async_handler(snd_async_handler_t *handler)$/;"	f	file:
async_handlers	./src/control/control_local.h	/^	struct list_head async_handlers;$/;"	m	struct:_snd_ctl	typeref:struct:_snd_ctl::list_head
async_handlers	./src/pcm/pcm_local.h	/^	struct list_head async_handlers;$/;"	m	struct:_snd_pcm	typeref:struct:_snd_pcm::list_head
async_handlers	./src/timer/timer_local.h	/^	struct list_head async_handlers;$/;"	m	struct:_snd_timer	typeref:struct:_snd_timer::list_head
async_loop	./test/pcm.c	/^static int async_loop(snd_pcm_t *handle,$/;"	f	file:
async_pid	./aserver/aserver.c	/^	pid_t async_pid;$/;"	m	struct:client	file:
async_private_data	./test/pcm.c	/^struct async_private_data {$/;"	s	file:
async_sig	./aserver/aserver.c	/^	int async_sig;$/;"	m	struct:client	file:
atomic_add	./include/iatomic.h	/^extern __inline__ void atomic_add(int i, atomic_t * v)$/;"	f
atomic_add	./include/iatomic.h	/^static __inline__ void atomic_add(int a, atomic_t *v)$/;"	f
atomic_add	./include/iatomic.h	/^static __inline__ void atomic_add(int i, atomic_t * v)$/;"	f
atomic_add	./include/iatomic.h	/^static __inline__ void atomic_add(int i, atomic_t *v)$/;"	f
atomic_add	./include/iatomic.h	/^static __inline__ void atomic_add(int i, volatile atomic_t *v)$/;"	f
atomic_add	./include/iatomic.h	1029;"	d
atomic_add	./include/iatomic.h	1092;"	d
atomic_add	./include/iatomic.h	1117;"	d
atomic_add	./include/iatomic.h	342;"	d
atomic_add_negative	./include/iatomic.h	/^atomic_add_negative (int i, atomic_t *v)$/;"	f
atomic_add_negative	./include/iatomic.h	/^static __inline__ int atomic_add_negative(int i, atomic_t *v)$/;"	f
atomic_add_negative	./include/iatomic.h	/^static inline int atomic_add_negative(int i, volatile atomic_t *v)$/;"	f
atomic_add_return	./include/iatomic.h	/^extern __inline__ int atomic_add_return(int i, atomic_t * v)$/;"	f
atomic_add_return	./include/iatomic.h	/^static __inline__ int atomic_add_return(int a, atomic_t *v)$/;"	f
atomic_add_return	./include/iatomic.h	/^static __inline__ int atomic_add_return(int i, volatile atomic_t *v)$/;"	f
atomic_add_return	./include/iatomic.h	/^static __inline__ long atomic_add_return(int i, atomic_t * v)$/;"	f
atomic_add_return	./include/iatomic.h	321;"	d
atomic_clear_mask	./include/iatomic.h	/^static __inline__ void atomic_clear_mask(unsigned long mask, unsigned long *addr)$/;"	f
atomic_clear_mask	./include/iatomic.h	186;"	d
atomic_dec	./include/iatomic.h	/^static __inline__ void atomic_dec(atomic_t *v)$/;"	f
atomic_dec	./include/iatomic.h	/^static __inline__ void atomic_dec(volatile atomic_t *v)$/;"	f
atomic_dec	./include/iatomic.h	1032;"	d
atomic_dec	./include/iatomic.h	1095;"	d
atomic_dec	./include/iatomic.h	1120;"	d
atomic_dec	./include/iatomic.h	345;"	d
atomic_dec	./include/iatomic.h	482;"	d
atomic_dec	./include/iatomic.h	861;"	d
atomic_dec_and_test	./include/iatomic.h	/^static __inline__ int atomic_dec_and_test(atomic_t *v)$/;"	f
atomic_dec_and_test	./include/iatomic.h	/^static __inline__ int atomic_dec_and_test(volatile atomic_t *v)$/;"	f
atomic_dec_and_test	./include/iatomic.h	1026;"	d
atomic_dec_and_test	./include/iatomic.h	339;"	d
atomic_dec_and_test	./include/iatomic.h	479;"	d
atomic_dec_and_test	./include/iatomic.h	636;"	d
atomic_dec_and_test	./include/iatomic.h	843;"	d
atomic_dec_if_positive	./include/iatomic.h	/^static __inline__ int atomic_dec_if_positive(atomic_t *v)$/;"	f
atomic_dec_return	./include/iatomic.h	/^static __inline__ int atomic_dec_return(atomic_t *v)$/;"	f
atomic_dec_return	./include/iatomic.h	1022;"	d
atomic_dec_return	./include/iatomic.h	335;"	d
atomic_dec_return	./include/iatomic.h	475;"	d
atomic_dec_return	./include/iatomic.h	808;"	d
atomic_inc	./include/iatomic.h	/^static __inline__ void atomic_inc(atomic_t *v)$/;"	f
atomic_inc	./include/iatomic.h	/^static __inline__ void atomic_inc(volatile atomic_t *v)$/;"	f
atomic_inc	./include/iatomic.h	1031;"	d
atomic_inc	./include/iatomic.h	1094;"	d
atomic_inc	./include/iatomic.h	1119;"	d
atomic_inc	./include/iatomic.h	344;"	d
atomic_inc	./include/iatomic.h	481;"	d
atomic_inc	./include/iatomic.h	852;"	d
atomic_inc_and_test	./include/iatomic.h	/^static __inline__ int atomic_inc_and_test(atomic_t *v)$/;"	f
atomic_inc_and_test	./include/iatomic.h	1027;"	d
atomic_inc_and_test	./include/iatomic.h	340;"	d
atomic_inc_and_test	./include/iatomic.h	832;"	d
atomic_inc_return	./include/iatomic.h	/^static __inline__ int atomic_inc_return(atomic_t *v)$/;"	f
atomic_inc_return	./include/iatomic.h	1023;"	d
atomic_inc_return	./include/iatomic.h	336;"	d
atomic_inc_return	./include/iatomic.h	476;"	d
atomic_inc_return	./include/iatomic.h	809;"	d
atomic_read	./include/iatomic.h	1019;"	d
atomic_read	./include/iatomic.h	1090;"	d
atomic_read	./include/iatomic.h	1115;"	d
atomic_read	./include/iatomic.h	235;"	d
atomic_read	./include/iatomic.h	29;"	d
atomic_read	./include/iatomic.h	397;"	d
atomic_read	./include/iatomic.h	503;"	d
atomic_read	./include/iatomic.h	698;"	d
atomic_read	./include/iatomic.h	931;"	d
atomic_set	./include/iatomic.h	1020;"	d
atomic_set	./include/iatomic.h	1091;"	d
atomic_set	./include/iatomic.h	1116;"	d
atomic_set	./include/iatomic.h	236;"	d
atomic_set	./include/iatomic.h	398;"	d
atomic_set	./include/iatomic.h	39;"	d
atomic_set	./include/iatomic.h	504;"	d
atomic_set	./include/iatomic.h	708;"	d
atomic_set	./include/iatomic.h	932;"	d
atomic_set_mask	./include/iatomic.h	190;"	d
atomic_sub	./include/iatomic.h	/^extern __inline__ void atomic_sub(int i, atomic_t * v)$/;"	f
atomic_sub	./include/iatomic.h	/^static __inline__ void atomic_sub(int a, atomic_t *v)$/;"	f
atomic_sub	./include/iatomic.h	/^static __inline__ void atomic_sub(int i, atomic_t * v)$/;"	f
atomic_sub	./include/iatomic.h	/^static __inline__ void atomic_sub(int i, atomic_t *v)$/;"	f
atomic_sub	./include/iatomic.h	/^static __inline__ void atomic_sub(int i, volatile atomic_t *v)$/;"	f
atomic_sub	./include/iatomic.h	1030;"	d
atomic_sub	./include/iatomic.h	1093;"	d
atomic_sub	./include/iatomic.h	1118;"	d
atomic_sub	./include/iatomic.h	343;"	d
atomic_sub_and_test	./include/iatomic.h	/^static __inline__ int atomic_sub_and_test(int i, atomic_t *v)$/;"	f
atomic_sub_and_test	./include/iatomic.h	1025;"	d
atomic_sub_and_test	./include/iatomic.h	338;"	d
atomic_sub_and_test	./include/iatomic.h	478;"	d
atomic_sub_and_test	./include/iatomic.h	635;"	d
atomic_sub_and_test	./include/iatomic.h	821;"	d
atomic_sub_return	./include/iatomic.h	/^extern __inline__ int atomic_sub_return(int i, atomic_t * v)$/;"	f
atomic_sub_return	./include/iatomic.h	/^static __inline__ int atomic_sub_return(int a, atomic_t *v)$/;"	f
atomic_sub_return	./include/iatomic.h	/^static __inline__ int atomic_sub_return(int i, volatile atomic_t *v)$/;"	f
atomic_sub_return	./include/iatomic.h	/^static __inline__ long atomic_sub_return(int i, atomic_t * v)$/;"	f
atomic_sub_return	./include/iatomic.h	328;"	d
atomic_t	./include/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	t	typeref:struct:__anon69
atomic_t	./include/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	t	typeref:struct:__anon70
atomic_t	./include/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	t	typeref:struct:__anon71
atomic_t	./include/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	t	typeref:struct:__anon72
atomic_t	./include/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	t	typeref:struct:__anon73
atomic_t	./include/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	t	typeref:struct:__anon74
atomic_t	./include/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	t	typeref:struct:__anon75
atomic_t	./include/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	t	typeref:struct:__anon76
atomic_t	./include/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	t	typeref:struct:__anon77
att	./src/pcm/pcm_route.c	/^	int att;	\/* Attenuated *\/$/;"	m	struct:snd_pcm_route_ttable_dst	file:
attach_flag	./src/mixer/simple_abst.c	/^	int attach_flag;$/;"	m	struct:_class_priv	file:
attack	./include/sound/asound_fm.h	/^	unsigned char attack;		\/* 4 bits: attack rate *\/$/;"	m	struct:snd_dm_fm_voice
autosync_ref	./include/sound/hdsp.h	/^	unsigned char autosync_ref;$/;"	m	struct:_snd_hdsp_config_info
autosync_ref	./include/sound/hdspm.h	/^	unsigned char autosync_ref;$/;"	m	struct:hdspm_config
autosync_sample_rate	./include/sound/hdsp.h	/^	unsigned int autosync_sample_rate;$/;"	m	struct:_snd_hdsp_config_info
autosync_sample_rate	./include/sound/hdspm.h	/^	unsigned int autosync_sample_rate;$/;"	m	struct:hdspm_config
autosync_source	./include/sound/hdspm.h	/^	enum hdspm_syncsource autosync_source;$/;"	m	struct:hdspm_status	typeref:enum:hdspm_status::hdspm_syncsource
avail	./include/aserver.h	/^		} avail;$/;"	m	union:__anon53::__anon54	typeref:struct:__anon53::__anon54::__anon56
avail	./include/sound/asound.h	/^	size_t avail;			\/* available bytes *\/$/;"	m	struct:sndrv_rawmidi_status
avail	./include/sound/asound.h	/^	sndrv_pcm_uframes_t avail;	\/* number of frames available *\/$/;"	m	struct:sndrv_pcm_status
avail_max	./include/sound/asound.h	/^	sndrv_pcm_uframes_t avail_max;	\/* max frames available on hw since last status *\/$/;"	m	struct:sndrv_pcm_status
avail_max	./src/pcm/pcm_direct.h	/^	snd_pcm_uframes_t avail_max;$/;"	m	struct:snd_pcm_direct
avail_max	./src/pcm/pcm_ioplug.c	/^	snd_pcm_uframes_t avail_max;$/;"	m	struct:snd_pcm_ioplug_priv	file:
avail_min	./include/sound/asound.h	/^	size_t avail_min;		\/* minimum avail bytes for wakeup *\/$/;"	m	struct:sndrv_rawmidi_params
avail_min	./include/sound/asound.h	/^	sndrv_pcm_uframes_t avail_min;		\/* min avail frames for wakeup *\/$/;"	m	struct:sndrv_pcm_sw_params
avail_min	./include/sound/asound.h	/^	sndrv_pcm_uframes_t avail_min;	\/* RW: min available frames for wakeup *\/$/;"	m	struct:sndrv_pcm_mmap_control
avail_min	./src/pcm/pcm_direct.h	/^		unsigned int avail_min;$/;"	m	struct:__anon123::__anon125
avail_min	./src/pcm/pcm_local.h	/^	snd_pcm_uframes_t avail_min;	\/* min avail frames for wakeup *\/$/;"	m	struct:_snd_pcm
avail_min	./src/rawmidi/rawmidi_local.h	/^	size_t avail_min;$/;"	m	struct:_snd_rawmidi
avail_update	./src/pcm/pcm_local.h	/^	snd_pcm_sframes_t (*avail_update)(snd_pcm_t *pcm);$/;"	m	struct:__anon138
b1	./test/latency.c	/^float lfo,dlfo,fs,fc,BW,C,D,a0,a1,a2,b1,b2,*x[3],*y[3];$/;"	v
b2	./test/latency.c	/^float lfo,dlfo,fs,fc,BW,C,D,a0,a1,a2,b1,b2,*x[3],*y[3];$/;"	v
badbyte	./test/midifile.c	/^badbyte (c)$/;"	f	file:
bag1_t	./src/mixer/mixer_local.h	/^} bag1_t;$/;"	t	typeref:struct:_bag1
bag_add	./src/mixer/bag.c	/^int bag_add(bag_t *bag, void *ptr)$/;"	f
bag_del	./src/mixer/bag.c	/^int bag_del(bag_t *bag, void *ptr)$/;"	f
bag_del_all	./src/mixer/bag.c	/^void bag_del_all(bag_t *bag)$/;"	f
bag_empty	./src/mixer/bag.c	/^int bag_empty(bag_t *bag)$/;"	f
bag_for_each	./src/mixer/mixer_local.h	42;"	d
bag_for_each_safe	./src/mixer/mixer_local.h	43;"	d
bag_free	./src/mixer/bag.c	/^void bag_free(bag_t *bag)$/;"	f
bag_iterator_entry	./src/mixer/mixer_local.h	41;"	d
bag_iterator_t	./src/mixer/mixer_local.h	/^typedef struct list_head *bag_iterator_t;$/;"	t	typeref:struct:list_head
bag_new	./src/mixer/bag.c	/^int bag_new(bag_t **bag)$/;"	f
bag_t	./src/mixer/mixer_local.h	/^typedef struct list_head bag_t;$/;"	t	typeref:struct:list_head
bank	./include/sound/asound_fm.h	/^	unsigned char bank;$/;"	m	struct:sbi_patch
bar_width	./src/pcm/scopes/level.c	/^	unsigned int bar_width;$/;"	m	struct:_snd_pcm_scope_level	file:
base	./include/seq_event.h	/^	unsigned int base;	\/**< skew base *\/$/;"	m	struct:snd_seq_queue_skew
base	./include/sound/asequencer.h	/^	unsigned int base;$/;"	m	struct:sndrv_seq_queue_skew
base_len	./src/mixer/simple_none.c	/^static int base_len(const char *name, selem_ctl_type_t *type)$/;"	f	file:
bass	./include/sound/asound_fm.h	/^	unsigned char bass;$/;"	m	struct:snd_dm_fm_params
bclass_base_ops	./modules/mixer/simple/sbase.h	/^typedef struct bclass_base_ops {$/;"	s
bclass_base_ops_t	./modules/mixer/simple/sbase.h	/^} bclass_base_ops_t;$/;"	t	typeref:struct:bclass_base_ops
bclass_private	./modules/mixer/simple/sbase.h	/^struct bclass_private {$/;"	s
bclass_selector	./modules/mixer/simple/sbase.h	/^struct bclass_selector {$/;"	s
bclass_sid	./modules/mixer/simple/sbase.h	/^struct bclass_sid {$/;"	s
begin	./include/iatomic.h	/^	unsigned int begin, end;$/;"	m	struct:__anon78
big_endian	./include/sound/asequencer.h	/^	unsigned char big_endian;	\/* 1 = big-endian *\/$/;"	m	struct:sndrv_seq_running_info
biggermsg	./test/midifile.c	/^biggermsg ()$/;"	f	file:
bindings	./src/pcm/pcm_direct.h	/^	snd_config_t *bindings;$/;"	m	struct:snd_pcm_direct_open_conf
bindings	./src/pcm/pcm_direct.h	/^	unsigned int *bindings;$/;"	m	struct:snd_pcm_direct
bits	./include/sound/asound.h	/^	u_int32_t bits[(SNDRV_MASK_MAX+31)\/32];$/;"	m	struct:sndrv_mask
bits	./src/pcm/pcm_file.c	/^	short bits;$/;"	m	struct:wav_fmt	file:
block	./test/latency.c	/^int block = 0;			\/* block mode *\/$/;"	v
boundary	./include/sound/asound.h	/^	sndrv_pcm_uframes_t boundary;		\/* pointers wrap point *\/$/;"	m	struct:sndrv_pcm_sw_params
boundary	./src/pcm/pcm_direct.h	/^		unsigned long long boundary;$/;"	m	struct:__anon123::__anon125
boundary	./src/pcm/pcm_local.h	/^	snd_pcm_uframes_t boundary;	\/* pointers wrap point *\/$/;"	m	struct:_snd_pcm
boundary_lt	./src/pcm/interval.c	/^int boundary_lt(unsigned int a, int adir, unsigned int b, int bdir)$/;"	f
boundary_nearer	./src/pcm/interval.c	/^int boundary_nearer(int min, int mindir, int best, int bestdir, int max, int maxdir)$/;"	f
boundary_sub	./src/pcm/interval.c	/^void boundary_sub(int a, int adir, int b, int bdir, int *c, int *cdir)$/;"	f
bps	./src/pcm/pcm_file.c	/^	int bps;$/;"	m	struct:wav_fmt	file:
buf	./include/sound/asound.h	/^	void *buf;$/;"	m	struct:sndrv_xferi
buf	./src/conf.c	/^	char *buf;$/;"	m	struct:local_string	file:
buf	./src/control/tlv.c	/^	unsigned int buf[TEMP_TLV_SIZE];$/;"	m	struct:tlv_info	file:
buf	./src/input.c	/^	unsigned char *buf;$/;"	m	struct:_snd_input_buffer	file:
buf	./src/output.c	/^	unsigned char *buf;$/;"	m	struct:_snd_output_buffer	file:
buf	./src/pcm/pcm_direct.c	/^	struct semid_ds *buf;    \/* Buffer for IPC_STAT, IPC_SET *\/$/;"	m	union:semun	typeref:struct:semun::semid_ds	file:
buf	./src/pcm/pcm_meter.c	/^	int16_t *buf;$/;"	m	struct:_snd_pcm_scope_s16	file:
buf	./src/pcm/pcm_meter.c	/^	unsigned char *buf;$/;"	m	struct:_snd_pcm_meter	file:
buf	./src/seq/seq_midi_event.c	/^	unsigned char *buf;	\/* input buffer *\/$/;"	m	struct:snd_midi_event	file:
buf_areas	./src/pcm/pcm_meter.c	/^	snd_pcm_channel_area_t *buf_areas;$/;"	m	struct:_snd_pcm_meter	file:
buf_areas	./src/pcm/pcm_meter.c	/^	snd_pcm_channel_area_t *buf_areas;$/;"	m	struct:_snd_pcm_scope_s16	file:
buf_size	./src/pcm/pcm_meter.c	/^	snd_pcm_uframes_t buf_size;$/;"	m	struct:_snd_pcm_meter	file:
buffer	./test/pcm_min.c	/^unsigned char buffer[16*1024];				\/* some random data *\/$/;"	v
buffer_bytes	./src/pcm/pcm_file.c	/^	size_t buffer_bytes;$/;"	m	struct:__anon121	file:
buffer_size	./include/pcm_ioplug.h	/^	snd_pcm_uframes_t buffer_size;	\/**< buffer size; filled after hw_params is called *\/$/;"	m	struct:snd_pcm_ioplug
buffer_size	./include/pcm_rate.h	/^	snd_pcm_uframes_t buffer_size;$/;"	m	struct:snd_pcm_rate_side_info
buffer_size	./include/sound/asound.h	/^	size_t buffer_size;		\/* queue size in bytes *\/$/;"	m	struct:sndrv_rawmidi_params
buffer_size	./include/sound/emu10k1.h	/^	unsigned int buffer_size;	\/* count of buffered samples *\/$/;"	m	struct:__anon20
buffer_size	./src/pcm/pcm_direct.h	/^		snd_interval_t buffer_size;$/;"	m	struct:__anon123::__anon124
buffer_size	./src/pcm/pcm_direct.h	/^		unsigned int buffer_size;$/;"	m	struct:__anon123::__anon125
buffer_size	./src/pcm/pcm_direct.h	/^	snd_pcm_sframes_t buffer_size;$/;"	m	struct:slave_params
buffer_size	./src/pcm/pcm_local.h	/^	snd_pcm_uframes_t buffer_size;$/;"	m	struct:_snd_pcm
buffer_size	./src/rawmidi/rawmidi_local.h	/^	size_t buffer_size;$/;"	m	struct:_snd_rawmidi
buffer_size	./test/latency.c	/^int buffer_size = 0;		\/* auto *\/$/;"	v
buffer_size	./test/pcm.c	/^static snd_pcm_sframes_t buffer_size;$/;"	v	file:
buffer_time	./src/pcm/pcm_direct.h	/^		snd_interval_t buffer_time;$/;"	m	struct:__anon123::__anon124
buffer_time	./src/pcm/pcm_direct.h	/^		snd_interval_t buffer_time;$/;"	m	struct:__anon123::__anon125
buffer_time	./src/pcm/pcm_direct.h	/^	int buffer_time;$/;"	m	struct:slave_params
buffer_time	./src/pcm/pcm_local.h	/^	snd_interval_t buffer_time;$/;"	m	struct:_snd_pcm
buffer_time	./src/pcm/pcm_share.c	/^	snd_pcm_sframes_t buffer_time;$/;"	m	struct:__anon118	file:
buffer_time	./test/pcm.c	/^static unsigned int buffer_time = 500000;		\/* ring buffer length in us *\/$/;"	v	file:
bufs	./include/sound/asound.h	/^	void **bufs;$/;"	m	struct:sndrv_xfern
bufsize	./src/seq/seq_midi_event.c	/^	size_t bufsize;$/;"	m	struct:snd_midi_event	file:
build_in_ctls	./src/control/control.c	/^static const char *const build_in_ctls[] = {$/;"	v	file:
build_in_pcms	./src/pcm/pcm.c	/^static const char *const build_in_pcms[] = {$/;"	v	file:
bwidth	./src/pcm/pcm_file.c	/^	short bwidth;$/;"	m	struct:wav_fmt	file:
bytes	./include/sound/asound.h	/^		} bytes;$/;"	m	union:sndrv_ctl_elem_value::__anon34	typeref:union:sndrv_ctl_elem_value::__anon34::__anon38
byteswap	./src/pcm/pcm_iec958.c	/^	unsigned int byteswap;$/;"	m	struct:snd_pcm_iec958	file:
c	./include/sound/asound.h	/^	} c;$/;"	m	struct:sndrv_pcm_sync_ptr	typeref:union:sndrv_pcm_sync_ptr::__anon24
c	./src/alisp/alisp_local.h	/^		} c;$/;"	m	union:alisp_object::__anon92	typeref:struct:alisp_object::__anon92::__anon93
callback	./include/control_external.h	/^	const snd_ctl_ext_callback_t *callback;$/;"	m	struct:snd_ctl_ext
callback	./include/local.h	/^	snd_async_callback_t callback;$/;"	m	struct:_snd_async_handler
callback	./include/pcm_extplug.h	/^	const snd_pcm_extplug_callback_t *callback;$/;"	m	struct:snd_pcm_extplug
callback	./include/pcm_ioplug.h	/^	const snd_pcm_ioplug_callback_t *callback;$/;"	m	struct:snd_pcm_ioplug
callback	./src/control/control_local.h	/^	snd_hctl_callback_t callback;$/;"	m	struct:_snd_hctl
callback	./src/control/control_local.h	/^	snd_hctl_elem_callback_t callback;$/;"	m	struct:_snd_hctl_elem
callback	./src/mixer/mixer_local.h	/^	snd_mixer_callback_t callback;$/;"	m	struct:_snd_mixer
callback	./src/mixer/mixer_local.h	/^	snd_mixer_elem_callback_t callback;$/;"	m	struct:_snd_mixer_elem
callback_private	./src/control/control_local.h	/^	void *callback_private;$/;"	m	struct:_snd_hctl
callback_private	./src/control/control_local.h	/^	void *callback_private;$/;"	m	struct:_snd_hctl_elem
callback_private	./src/mixer/mixer_local.h	/^	void *callback_private;$/;"	m	struct:_snd_mixer
callback_private	./src/mixer/mixer_local.h	/^	void *callback_private;$/;"	m	struct:_snd_mixer_elem
capability	./include/sound/asequencer.h	/^	unsigned int capability;	\/* port capability bits *\/$/;"	m	struct:sndrv_seq_port_info
caps	./include/mixer_abst.h	/^	unsigned int caps;$/;"	m	struct:_sm_selem
caps	./modules/mixer/simple/sbase.h	/^	unsigned int caps;$/;"	m	struct:helem_base
caps	./modules/mixer/simple/sbase.h	/^	unsigned short caps;$/;"	m	struct:helem_selector
capture_group	./include/mixer_abst.h	/^	unsigned int capture_group;$/;"	m	struct:_sm_selem
capture_item	./src/mixer/simple_none.c	/^	unsigned int capture_item;$/;"	m	struct:_selem_none	file:
capture_pcm	./include/mixer.h	/^	snd_pcm_t *capture_pcm;$/;"	m	struct:snd_mixer_selem_regopt
car	./src/alisp/alisp.c	/^static inline struct alisp_object * car(struct alisp_object * p)$/;"	f	file:
car	./src/alisp/alisp_local.h	/^			struct alisp_object *car;$/;"	m	struct:alisp_object::__anon92::__anon93	typeref:struct:alisp_object::__anon92::__anon93::alisp_object
card	./include/sound/asound.h	/^	int card;			\/* R: card number *\/$/;"	m	struct:sndrv_hwdep_info
card	./include/sound/asound.h	/^	int card;			\/* R: card number *\/$/;"	m	struct:sndrv_pcm_info
card	./include/sound/asound.h	/^	int card;			\/* R: card number *\/$/;"	m	struct:sndrv_rawmidi_info
card	./include/sound/asound.h	/^	int card;			\/* card number *\/$/;"	m	struct:sndrv_ctl_card_info
card	./include/sound/asound.h	/^	int card;			\/* card number *\/$/;"	m	struct:sndrv_timer_ginfo
card	./include/sound/asound.h	/^	int card;			\/* card number *\/$/;"	m	struct:sndrv_timer_info
card	./include/sound/asound.h	/^	int card;$/;"	m	struct:sndrv_timer_id
card	./src/control/control_hw.c	/^	int card;$/;"	m	struct:__anon95	file:
card	./src/control/namehint.c	/^	int card;$/;"	m	struct:hint_list	file:
card	./src/pcm/pcm_hw.c	/^	int card, device, subdevice;$/;"	m	struct:__anon107	file:
card	./src/rawmidi/rawmidi_hw.c	/^	int card, device, subdevice;$/;"	m	struct:__anon100	file:
card_clock	./include/sound/hdspm.h	/^	uint64_t card_clock;$/;"	m	struct:hdspm_status
card_idx	./include/control_external.h	/^	int card_idx;$/;"	m	struct:snd_ctl_ext
card_info	./include/aserver.h	/^		snd_ctl_card_info_t card_info;$/;"	m	union:__anon64::__anon65
card_info	./src/control/control_local.h	/^	int (*card_info)(snd_ctl_t *handle, snd_ctl_card_info_t *info);$/;"	m	struct:_snd_ctl_ops
card_name	./src/ucm/ucm_local.h	/^	char *card_name;$/;"	m	struct:snd_use_case_mgr
card_specific	./include/sound/hdspm.h	/^	} card_specific;$/;"	m	struct:hdspm_status	typeref:union:hdspm_status::__anon8
card_type	./include/sound/hdspm.h	/^	uint8_t card_type; \/* enum hdspm_io_type *\/$/;"	m	struct:hdspm_status
card_type	./include/sound/hdspm.h	/^	uint8_t card_type; \/* enum hdspm_io_type *\/$/;"	m	struct:hdspm_version
cardname	./include/sound/hdspm.h	/^	char cardname[20];$/;"	m	struct:hdspm_version
cardname	./src/control/namehint.c	/^	char *cardname;$/;"	m	struct:hint_list	file:
cchannels	./src/pcm/pcm_softvol.c	/^	unsigned int cchannels;$/;"	m	struct:__anon109	file:
cdev	./src/ucm/ucm_local.h	/^		char *cdev;$/;"	m	union:sequence_element::__anon151
cdevice	./test/latency.c	/^char *cdevice = "hw:0,0";$/;"	v
cdr	./src/alisp/alisp.c	/^static inline struct alisp_object * cdr(struct alisp_object * p)$/;"	f	file:
cdr	./src/alisp/alisp_local.h	/^			struct alisp_object *cdr;$/;"	m	struct:alisp_object::__anon92::__anon93	typeref:struct:alisp_object::__anon92::__anon93::alisp_object
ch	./include/sound/hdspm.h	/^	struct hdspm_channelfader ch[HDSPM_MIXER_CHANNELS];$/;"	m	struct:hdspm_mixer	typeref:struct:hdspm_mixer::hdspm_channelfader
ch	./src/conf.c	/^	int ch;$/;"	m	struct:__anon87	file:
chan	./src/pcm/pcm_file.c	/^	short chan;$/;"	m	struct:wav_fmt	file:
changed	./include/aserver.h	/^	int changed;$/;"	m	struct:__anon52
changed	./src/pcm/pcm_local.h	/^	void (*changed)(snd_pcm_t *pcm, snd_pcm_t *src);$/;"	m	struct:_snd_pcm_rbptr
chanmap	./modules/mixer/simple/sbase.h	/^		unsigned int chanmap;$/;"	m	struct:selem_base::__anon84
chanmap	./modules/mixer/simple/sbase.h	/^	unsigned int chanmap[2];$/;"	m	struct:melem_sids
chanmap_to_channels	./modules/mixer/simple/sbase.c	/^static unsigned int chanmap_to_channels(unsigned int chanmap)$/;"	f	file:
chanmessage	./test/midifile.c	/^chanmessage (status, c1, c2)$/;"	f	file:
channel	./include/seq_event.h	/^	unsigned char channel;		\/**< channel number *\/$/;"	m	struct:snd_seq_ev_ctrl
channel	./include/seq_event.h	/^	unsigned char channel;		\/**< channel number *\/$/;"	m	struct:snd_seq_ev_note
channel	./include/sound/asequencer.h	/^	unsigned char channel;	\/* Channel for REMOVE_DEST *\/$/;"	m	struct:sndrv_seq_remove_events
channel	./include/sound/asequencer.h	/^	unsigned char channel;$/;"	m	struct:sndrv_seq_ev_ctrl
channel	./include/sound/asequencer.h	/^	unsigned char channel;$/;"	m	struct:sndrv_seq_ev_note
channel	./include/sound/asound.h	/^	unsigned int channel;$/;"	m	struct:sndrv_pcm_channel_info
channel	./src/pcm/pcm_local.h	/^	unsigned int channel;$/;"	m	struct:_snd_pcm_channel_info
channel	./src/pcm/pcm_route.c	/^	int channel;$/;"	m	struct:__anon140	file:
channel_aftertouch	./test/midifile.h	59;"	d
channel_format	./include/sound/hdspm.h	/^			uint8_t channel_format; \/* enum hdspm_madi_channel_format *\/$/;"	m	struct:hdspm_status::__anon8::__anon9
channel_info	./include/aserver.h	/^		snd_pcm_channel_info_t channel_info;$/;"	m	union:__anon53::__anon54
channel_info	./src/pcm/pcm_local.h	/^	int (*channel_info)(snd_pcm_t *pcm, snd_pcm_channel_info_t *info);$/;"	m	struct:__anon137
channel_prefix	./test/midifile.h	102;"	d
channels	./include/pcm_extplug.h	/^	unsigned int channels;$/;"	m	struct:snd_pcm_extplug
channels	./include/pcm_ioplug.h	/^	unsigned int channels;		\/**< number of channels; filled after hw_params is called *\/$/;"	m	struct:snd_pcm_ioplug
channels	./include/pcm_rate.h	/^	unsigned int channels;$/;"	m	struct:snd_pcm_rate_info
channels	./include/sound/asequencer.h	/^	int channels;			\/* maximum channels per port *\/$/;"	m	struct:sndrv_seq_system_info
channels	./include/sound/emu10k1.h	/^	unsigned int channels;		\/* 16-bit channels count, zero = remove this substream *\/$/;"	m	struct:__anon20
channels	./include/sound/sb16_csp.h	/^	int channels;		\/* channels, look above *\/$/;"	m	struct:snd_sb_csp_start
channels	./src/mixer/simple_none.c	/^		unsigned int channels;$/;"	m	struct:_selem_none::selem_str	file:
channels	./src/pcm/pcm_direct.h	/^		unsigned int channels;$/;"	m	struct:__anon123::__anon125
channels	./src/pcm/pcm_direct.h	/^	int channels;$/;"	m	struct:slave_params
channels	./src/pcm/pcm_direct.h	/^	unsigned int channels;		\/* client's channels *\/$/;"	m	struct:snd_pcm_direct
channels	./src/pcm/pcm_hw.c	/^	int channels;$/;"	m	struct:__anon107	file:
channels	./src/pcm/pcm_ladspa.c	/^	unsigned int channels;			\/* forced input channels, 0 = auto *\/$/;"	m	struct:__anon113	file:
channels	./src/pcm/pcm_ladspa.c	/^        snd_pcm_ladspa_array_t channels;$/;"	m	struct:__anon115	file:
channels	./src/pcm/pcm_local.h	/^	unsigned int channels;		\/* channels *\/$/;"	m	struct:_snd_pcm
channels	./src/pcm/pcm_multi.c	/^	snd_pcm_multi_channel_t *channels;$/;"	m	struct:__anon150	file:
channels	./src/pcm/pcm_plug.c	/^	unsigned int channels;$/;"	m	struct:__anon146	file:
channels	./src/pcm/pcm_rate_linear.c	/^	unsigned int channels;$/;"	m	struct:rate_linear	file:
channels	./src/pcm/pcm_share.c	/^	unsigned int channels;$/;"	m	struct:__anon118	file:
channels	./src/pcm/pcm_share.c	/^	unsigned int channels;$/;"	m	struct:__anon119	file:
channels	./src/pcm/scopes/level.c	/^	snd_pcm_scope_level_channel_t *channels;$/;"	m	struct:_snd_pcm_scope_level	file:
channels	./test/latency.c	/^int channels = 2;$/;"	v
channels	./test/pcm.c	/^static unsigned int channels = 1;			\/* count of channels *\/$/;"	v	file:
channels_count	./src/pcm/pcm_multi.c	/^	unsigned int channels_count;$/;"	m	struct:__anon148	file:
channels_count	./src/pcm/pcm_multi.c	/^	unsigned int channels_count;$/;"	m	struct:__anon150	file:
charno	./src/alisp/alisp_local.h	/^	int charno;$/;"	m	struct:alisp_instance
check_access_change	./src/pcm/pcm_plug.c	/^static int check_access_change(snd_pcm_hw_params_t *cparams,$/;"	f	file:
check_access_mask	./src/pcm/pcm_softvol.c	/^static int check_access_mask(snd_pcm_hw_params_t *src,$/;"	f	file:
check_identifier	./src/ucm/main.c	/^static int check_identifier(const char *identifier, const char *prefix)$/;"	f	file:
check_linear_format	./src/pcm/pcm_plug.c	/^static int check_linear_format(const snd_pcm_format_mask_t *format_mask, int wid, int sgn, int ed)$/;"	f	file:
check_range	./src/control/ctlparse.c	39;"	d	file:
check_set_object	./src/alisp/alisp.c	/^static int check_set_object(struct alisp_instance * instance, struct alisp_object * name)$/;"	f	file:
chip_ready	./include/sound/asound.h	/^	unsigned int chip_ready;	\/* R: 1 = initialization finished *\/$/;"	m	struct:sndrv_hwdep_dsp_status
chn_mask	./src/pcm/pcm_direct.h	/^			unsigned long long chn_mask;$/;"	m	struct:__anon123::__anon126::__anon127
chn_mask	./src/pcm/pcm_direct.h	/^			unsigned long long chn_mask;$/;"	m	struct:snd_pcm_direct::__anon128::__anon131
class	./modules/mixer/simple/python.c	/^	snd_mixer_class_t *class;$/;"	m	struct:pymixer	file:
class_priv_t	./src/mixer/simple_abst.c	/^} class_priv_t;$/;"	t	typeref:struct:_class_priv	file:
classes	./src/mixer/mixer_local.h	/^	struct list_head classes;	\/* list of all elem classes *\/$/;"	m	struct:_snd_mixer	typeref:struct:_snd_mixer::list_head
cleanup	./src/pcm/ladspa.h	/^  void (*cleanup)(LADSPA_Handle Instance);$/;"	m	struct:_LADSPA_Descriptor
clear_ext_params	./src/pcm/pcm_extplug.c	/^static void clear_ext_params(extplug_priv_t *ext)$/;"	f	file:
clear_io_params	./src/pcm/pcm_ioplug.c	/^static void clear_io_params(ioplug_priv_t *io)$/;"	f	file:
client	./aserver/aserver.c	/^struct client {$/;"	s	file:
client	./include/seq_event.h	/^	unsigned char client;	\/**< Client id *\/$/;"	m	struct:snd_seq_addr
client	./include/sound/asequencer.h	/^	int client;			\/* client number to inquire *\/$/;"	m	struct:sndrv_seq_client_info
client	./include/sound/asequencer.h	/^	int client;			\/* client number to inquire *\/$/;"	m	struct:sndrv_seq_client_pool
client	./include/sound/asequencer.h	/^	int client;		\/* sequencer client *\/$/;"	m	struct:sndrv_seq_queue_client
client	./include/sound/asequencer.h	/^	unsigned char client;		\/* client id *\/$/;"	m	struct:sndrv_seq_running_info
client	./include/sound/asequencer.h	/^	unsigned char client;	\/**< Client number:         0..255, 255 = broadcast to all clients *\/$/;"	m	struct:sndrv_seq_addr
client	./src/pcm/pcm_direct.h	/^	int server, client;$/;"	m	struct:snd_pcm_direct
client	./src/seq/seq_local.h	/^	int client;		\/* client number *\/$/;"	m	struct:_snd_seq
client_ctrl_handler	./aserver/aserver.c	/^static int client_ctrl_handler(waiter_t *waiter, unsigned short events)$/;"	f	file:
client_poll_handler	./aserver/aserver.c	/^static int client_poll_handler(waiter_t *waiter, unsigned short events ATTRIBUTE_UNUSED)$/;"	f	file:
client_socket	./src/pcm/pcm_share.c	/^	int client_socket;$/;"	m	struct:__anon119	file:
client_t	./aserver/aserver.c	/^typedef struct client client_t;$/;"	t	typeref:struct:client	file:
clients	./aserver/aserver.c	/^LIST_HEAD(clients);$/;"	v
clients	./include/sound/asequencer.h	/^	int clients;			\/* maximum clients count *\/$/;"	m	struct:sndrv_seq_system_info
clients	./include/sound/asound.h	/^	unsigned int clients;		\/* active timer clients *\/$/;"	m	struct:sndrv_timer_ginfo
clients	./src/pcm/pcm_share.c	/^	struct list_head clients;$/;"	m	struct:__anon118	typeref:struct:__anon118::list_head	file:
clock_source	./include/sound/hdsp.h	/^	unsigned char clock_source;$/;"	m	struct:_snd_hdsp_config_info
clock_source	./include/sound/hdspm.h	/^	unsigned char clock_source;$/;"	m	struct:hdspm_config
close	./aserver/aserver.c	/^	int (*close)(client_t *client);$/;"	m	struct:__anon1	file:
close	./include/control_external.h	/^	void (*close)(snd_ctl_ext_t *ext);$/;"	m	struct:snd_ctl_ext_callback
close	./include/pcm.h	/^	void (*close)(snd_pcm_scope_t *scope);$/;"	m	struct:_snd_pcm_scope_ops
close	./include/pcm_extplug.h	/^	int (*close)(snd_pcm_extplug_t *ext);$/;"	m	struct:snd_pcm_extplug_callback
close	./include/pcm_ioplug.h	/^	int (*close)(snd_pcm_ioplug_t *io);$/;"	m	struct:snd_pcm_ioplug_callback
close	./include/pcm_rate.h	/^	void (*close)(void *obj);$/;"	m	struct:snd_pcm_rate_old_ops
close	./include/pcm_rate.h	/^	void (*close)(void *obj);$/;"	m	struct:snd_pcm_rate_ops
close	./src/control/control_local.h	/^	int (*close)(snd_ctl_t *handle);$/;"	m	struct:_snd_ctl_ops
close	./src/hwdep/hwdep_local.h	/^	int (*close)(snd_hwdep_t *hwdep);$/;"	m	struct:__anon91
close	./src/input.c	/^	int (*close)(snd_input_t *input);$/;"	m	struct:_snd_input_ops	file:
close	./src/input.c	/^	int close;$/;"	m	struct:_snd_input_stdio	file:
close	./src/output.c	/^	int (*close)(snd_output_t *output);$/;"	m	struct:_snd_output_ops	file:
close	./src/output.c	/^	int close;$/;"	m	struct:_snd_output_stdio	file:
close	./src/pcm/pcm_local.h	/^	int (*close)(snd_pcm_t *pcm);$/;"	m	struct:__anon137
close	./src/rawmidi/rawmidi_local.h	/^	int (*close)(snd_rawmidi_t *rawmidi);$/;"	m	struct:__anon99
close	./src/seq/seq_local.h	/^	int (*close)(snd_seq_t *seq);$/;"	m	struct:__anon97
close	./src/timer/timer_local.h	/^	int (*close)(snd_timer_query_t *timer);$/;"	m	struct:__anon89
close	./src/timer/timer_local.h	/^	int (*close)(snd_timer_t *timer);$/;"	m	struct:__anon88
close_slave	./src/pcm/pcm_generic.h	/^	int close_slave;$/;"	m	struct:__anon103
close_slave	./src/pcm/pcm_multi.c	/^	int close_slave;$/;"	m	struct:__anon148	file:
closed	./src/pcm/pcm_meter.c	/^	int closed;$/;"	m	struct:_snd_pcm_meter	file:
cmask	./include/sound/asound.h	/^	unsigned int cmask;		\/* R: changed masks *\/$/;"	m	struct:sndrv_pcm_hw_params
cmask	./src/pcm/pcm_hw.c	/^	unsigned int cmask;$/;"	m	struct:sndrv_pcm_hw_params_old	file:
cmd	./aserver/aserver.c	/^	int (*cmd)(client_t *client);$/;"	m	struct:__anon1	file:
cmd	./include/aserver.h	/^	int cmd;$/;"	m	struct:__anon53
cmd	./include/aserver.h	/^	int cmd;$/;"	m	struct:__anon64
code	./include/sound/emu10k1.h	/^	uint32_t *code;			\/* one instruction - 64 bits *\/$/;"	m	struct:__anon18
code	./include/sound/sscape_ioctl.h	/^  unsigned char *code;$/;"	m	struct:sscape_microcode
code	./include/sound/sscape_ioctl.h	/^  unsigned char code[256];$/;"	m	struct:sscape_bootblock
code_valid	./include/sound/emu10k1.h	/^	unsigned long code_valid[1024\/(sizeof(unsigned long)*8)];  \/* bitmask of valid instructions *\/$/;"	m	struct:__anon18
codec_name	./include/sound/sb16_csp.h	/^	char codec_name[16];		\/* id name of codec *\/$/;"	m	struct:snd_sb_csp_info
codec_name	./include/sound/sb16_csp.h	/^	char codec_name[16];		\/* id name of codec *\/$/;"	m	struct:snd_sb_csp_mc_header
column	./src/conf.c	/^	unsigned int line, column;$/;"	m	struct:filedesc	file:
comm_fd	./src/pcm/pcm_direct.h	/^	int comm_fd;			\/* communication file descriptor (socket) *\/$/;"	m	struct:snd_pcm_direct
command	./aserver/aserver.c	/^char *command;$/;"	v
comment	./include/conf.h	/^	char *comment;	\/**< Comments *\/$/;"	m	struct:snd_devname
comment	./src/ucm/ucm_local.h	/^	char *comment;$/;"	m	struct:snd_use_case_mgr
comment	./src/ucm/ucm_local.h	/^	char *comment;$/;"	m	struct:use_case_device
comment	./src/ucm/ucm_local.h	/^	char *comment;$/;"	m	struct:use_case_modifier
comment	./src/ucm/ucm_local.h	/^	char *comment;$/;"	m	struct:use_case_verb
common_error	./src/alisp/alisp_snd.c	/^static int common_error(snd_output_t **rout, struct alisp_instance *instance, struct alisp_object * args)$/;"	f	file:
compar	./src/alisp/alisp.c	/^static int compar(const void *p1, const void *p2)$/;"	f	file:
compare	./src/control/control_local.h	/^	snd_hctl_compare_t compare;$/;"	m	struct:_snd_hctl
compare	./src/mixer/mixer_local.h	/^	snd_mixer_compare_t compare;$/;"	m	struct:_snd_mixer
compare	./src/mixer/mixer_local.h	/^	snd_mixer_compare_t compare;$/;"	m	struct:_snd_mixer_class
compare_hctl	./src/control/hcontrol.c	/^static snd_hctl_t *compare_hctl;$/;"	v	file:
compare_mixer_priority_lookup	./src/mixer/simple_none.c	/^static int compare_mixer_priority_lookup(const char **name, const char * const *names, int coef)$/;"	f	file:
compare_weight	./src/control/control_local.h	/^	int compare_weight;		\/* compare weight (reversed) *\/$/;"	m	struct:_snd_hctl_elem
compare_weight	./src/mixer/mixer_local.h	/^	int compare_weight;		\/* compare weight (reversed) *\/$/;"	m	struct:_snd_mixer_elem
comparison_fn_t	./include/search.h	/^typedef __compar_fn_t comparison_fn_t;$/;"	t
compat	./src/pcm/pcm_local.h	/^	    compat: 1;$/;"	m	struct:_snd_pcm
components	./include/sound/asound.h	/^	unsigned char components[128];	\/* card components \/ fine identification, delimited with one space (AC97 etc..) *\/$/;"	m	struct:sndrv_ctl_card_info
compound	./src/conf.c	/^		} compound;$/;"	m	union:_snd_config::__anon85	typeref:struct:_snd_config::__anon85::__anon86	file:
configs_equal	./test/lsb/config.c	/^static int configs_equal(snd_config_t *c1, snd_config_t *c2)$/;"	f	file:
connect	./include/seq_event.h	/^		snd_seq_connect_t connect;	\/**< connect information *\/$/;"	m	union:snd_seq_event::__anon46
connect	./include/sound/asequencer.h	/^		struct sndrv_seq_connect connect;$/;"	m	union:sndrv_seq_event::__anon11	typeref:struct:sndrv_seq_event::__anon11::sndrv_seq_connect
connect_port	./src/pcm/ladspa.h	/^   void (*connect_port)(LADSPA_Handle Instance,$/;"	m	struct:_LADSPA_Descriptor
connection	./include/sound/asound_fm.h	/^	unsigned char connection;	\/* 0 for serial, 1 for parallel *\/$/;"	m	struct:snd_dm_fm_voice
control	./include/seq_event.h	/^		snd_seq_ev_ctrl_t control;	\/**< MIDI control information *\/$/;"	m	union:snd_seq_event::__anon46
control	./include/sound/asequencer.h	/^		struct sndrv_seq_ev_ctrl control;$/;"	m	union:sndrv_seq_event::__anon11	typeref:struct:sndrv_seq_event::__anon11::sndrv_seq_ev_ctrl
control	./include/sound/asound.h	/^		struct sndrv_pcm_mmap_control control;$/;"	m	union:sndrv_pcm_sync_ptr::__anon24	typeref:struct:sndrv_pcm_sync_ptr::__anon24::sndrv_pcm_mmap_control
control_change	./test/midifile.h	57;"	d
controls	./src/pcm/pcm_ladspa.c	/^	LADSPA_Data *controls;			\/* index = LADSPA control port index *\/$/;"	m	struct:__anon116	file:
controls_initialized	./src/pcm/pcm_ladspa.c	/^	unsigned char *controls_initialized;	\/* initialized by ALSA user *\/$/;"	m	struct:__anon116	file:
controls_size	./src/pcm/pcm_ladspa.c	/^	unsigned int controls_size;		\/* size of array *\/$/;"	m	struct:__anon116	file:
conv_idx	./src/pcm/pcm_linear.c	/^	unsigned int conv_idx;$/;"	m	struct:__anon105	file:
conv_idx	./src/pcm/pcm_route.c	/^	unsigned int conv_idx;$/;"	m	struct:__anon141	file:
conv_labels	./src/pcm/plugin_ops.h	/^static void *const conv_labels[4 * 2 * 2 * 4 * 2] = {$/;"	v
convert	./include/pcm_rate.h	/^	void (*convert)(void *obj,$/;"	m	struct:snd_pcm_rate_old_ops
convert	./include/pcm_rate.h	/^	void (*convert)(void *obj,$/;"	m	struct:snd_pcm_rate_ops
convert_from_dB	./src/mixer/simple_none.c	/^static int convert_from_dB(snd_hctl_elem_t *ctl, struct selem_str *rec,$/;"	f	file:
convert_from_s16	./src/pcm/pcm_rate.c	/^static void convert_from_s16(snd_pcm_rate_t *rate, const int16_t *buf,$/;"	f	file:
convert_prange1	./src/control/ctlparse.c	36;"	d	file:
convert_s16	./include/pcm_rate.h	/^	void (*convert_s16)(void *obj, int16_t *dst, unsigned int dst_frames,$/;"	m	struct:snd_pcm_rate_old_ops
convert_s16	./include/pcm_rate.h	/^	void (*convert_s16)(void *obj, int16_t *dst, unsigned int dst_frames,$/;"	m	struct:snd_pcm_rate_ops
convert_to_dB	./src/mixer/simple_none.c	/^static int convert_to_dB(snd_hctl_elem_t *ctl, struct selem_str *rec,$/;"	f	file:
convert_to_s16	./src/pcm/pcm_rate.c	/^static void convert_to_s16(snd_pcm_rate_t *rate, int16_t *buf,$/;"	f	file:
cookie	./aserver/aserver.c	/^	int cookie;$/;"	m	struct:client	file:
cookie	./aserver/aserver.c	/^	uint32_t cookie;$/;"	m	struct:__anon7	file:
cookie	./include/aserver.h	/^	int cookie;$/;"	m	struct:__anon68
copy_from	./Android.mk	/^copy_from := $(addprefix $(LOCAL_ALSA_CONF_DIR)\/,$(copy_from))$/;"	m
copy_from	./Android.mk	/^copy_from := \\$/;"	m
copy_labels	./src/pcm/plugin_ops.h	/^static void *copy_labels[5] = {$/;"	v
copy_local_string	./src/conf.c	/^static char *copy_local_string(struct local_string *s)$/;"	f	file:
copy_slave_setting	./src/pcm/pcm_direct.c	/^static void copy_slave_setting(snd_pcm_direct_t *dmix, snd_pcm_t *spcm)$/;"	f	file:
copy_to	./Android.mk	/^copy_to   := $(addprefix $(TARGET_ALSA_CONF_DIR)\/,$(copy_from))$/;"	m
copyright_notice	./test/midifile.h	96;"	d
count	./include/sound/asound.h	/^	unsigned int count;		\/* R: count of all elements *\/$/;"	m	struct:sndrv_ctl_elem_list
count	./include/sound/asound.h	/^	unsigned int count;		\/* count of values *\/$/;"	m	struct:sndrv_ctl_elem_info
count	./include/sound/asound.h	/^	unsigned long count;$/;"	m	struct:sndrv_xferv
count	./include/sound/emu10k1.h	/^	unsigned int count;		\/* count of GPR (1..16) *\/$/;"	m	struct:__anon17
count	./modules/mixer/simple/sbase.h	/^	unsigned int count;$/;"	m	struct:bclass_selector
count	./modules/mixer/simple/sbase.h	/^	unsigned int count;$/;"	m	struct:bclass_sid
count	./modules/mixer/simple/sbase.h	/^	unsigned int count;$/;"	m	struct:helem_base
count	./src/conf.c	/^	unsigned int count;$/;"	m	struct:_snd_config_update	file:
count	./src/control/control_local.h	/^	unsigned int count;$/;"	m	struct:_snd_hctl
count	./src/control/namehint.c	/^	unsigned int count;$/;"	m	struct:hint_list	file:
count	./src/mixer/mixer_local.h	/^	unsigned int count;$/;"	m	struct:_snd_mixer
count_list	./src/alisp/alisp.c	/^static int count_list(struct alisp_object * p)$/;"	f	file:
counter	./include/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	m	struct:__anon69
counter	./include/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	m	struct:__anon70
counter	./include/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	m	struct:__anon71
counter	./include/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	m	struct:__anon72
counter	./include/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	m	struct:__anon73
counter	./include/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	m	struct:__anon74
counter	./include/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	m	struct:__anon75
counter	./include/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	m	struct:__anon76
counter	./include/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	m	struct:__anon77
counter	./src/pcm/pcm_iec958.c	/^	unsigned int counter;$/;"	m	struct:snd_pcm_iec958	file:
cplugins	./src/pcm/pcm_ladspa.c	/^	struct list_head cplugins;$/;"	m	struct:__anon113	typeref:struct:__anon113::list_head	file:
cpu_mode	./include/sound/asequencer.h	/^	unsigned char cpu_mode;		\/* 4 = 32bit, 8 = 64bit *\/$/;"	m	struct:sndrv_seq_running_info
create_ctl_elem_id	./src/alisp/alisp_snd.c	/^static struct alisp_object * create_ctl_elem_id(struct alisp_instance * instance, snd_ctl_elem_id_t * id, struct alisp_object * cons)$/;"	f	file:
create_port	./src/seq/seq_local.h	/^	int (*create_port)(snd_seq_t *seq, snd_seq_port_info_t * port);$/;"	m	struct:__anon97
create_queue	./src/seq/seq_local.h	/^	int (*create_queue)(snd_seq_t *seq, snd_seq_queue_info_t *info);$/;"	m	struct:__anon97
cset	./src/ucm/ucm_local.h	/^		char *cset;$/;"	m	union:sequence_element::__anon151
csp_mode	./include/sound/sb16_csp.h	/^	unsigned short csp_mode;	\/* CSP mode, see above *\/$/;"	m	struct:snd_sb_csp_info
ctl	./aserver/aserver.c	/^		} ctl;$/;"	m	union:client::__anon2	typeref:struct:client::__anon2::__anon4	file:
ctl	./include/local.h	/^		snd_ctl_t *ctl;$/;"	m	union:_snd_async_handler::__anon82
ctl	./include/mixer_abst.h	/^	snd_ctl_t *ctl;$/;"	m	struct:_sm_class_basic
ctl	./src/control/control_local.h	/^	snd_ctl_t *ctl;$/;"	m	struct:_snd_hctl
ctl	./src/control/namehint.c	/^	snd_ctl_t *ctl;$/;"	m	struct:hint_list	file:
ctl	./src/control/setup.c	/^	snd_ctl_t *ctl;$/;"	m	struct:_snd_sctl	file:
ctl	./src/mixer/simple_abst.c	/^	snd_ctl_t *ctl;$/;"	m	struct:_class_priv	file:
ctl	./src/pcm/pcm_softvol.c	/^	snd_ctl_t *ctl;$/;"	m	struct:__anon109	file:
ctl	./src/ucm/ucm_local.h	/^	snd_ctl_t *ctl;$/;"	m	struct:snd_use_case_mgr
ctl_dev	./src/ucm/ucm_local.h	/^	char *ctl_dev;$/;"	m	struct:snd_use_case_mgr
ctl_handler	./aserver/aserver.c	/^static int ctl_handler(waiter_t *waiter, unsigned short events)$/;"	f	file:
ctl_shm_close	./aserver/aserver.c	/^static int ctl_shm_close(client_t *client)$/;"	f	file:
ctl_shm_cmd	./aserver/aserver.c	/^static int ctl_shm_cmd(client_t *client)$/;"	f	file:
ctl_shm_open	./aserver/aserver.c	/^static int ctl_shm_open(client_t *client, int *cookie)$/;"	f	file:
ctl_shm_ops	./aserver/aserver.c	/^transport_ops_t ctl_shm_ops = {$/;"	v
ctls	./src/mixer/simple_none.c	/^	selem_ctl_t ctls[CTL_LAST + 1];$/;"	m	struct:_selem_none	file:
ctrl	./aserver/aserver.c	/^			void *ctrl;$/;"	m	struct:client::__anon5::__anon6	file:
ctrl	./src/control/control_shm.c	/^	volatile snd_ctl_shm_ctrl_t *ctrl;$/;"	m	struct:__anon94	file:
ctrl	./src/pcm/pcm_shm.c	/^	volatile snd_pcm_shm_ctrl_t *ctrl;$/;"	m	struct:__anon108	file:
ctrl_chorus_depth	./test/midifile.h	77;"	d
ctrl_fd	./aserver/aserver.c	/^	int ctrl_fd;$/;"	m	struct:client	file:
ctrl_id	./aserver/aserver.c	/^			int ctrl_id;$/;"	m	struct:client::__anon5::__anon6	file:
cue_point	./test/midifile.h	101;"	d
cur_clients	./include/sound/asequencer.h	/^	int cur_clients;		\/* current clients *\/$/;"	m	struct:sndrv_seq_system_info
cur_queues	./include/sound/asequencer.h	/^	int cur_queues;			\/* current queues *\/$/;"	m	struct:sndrv_seq_system_info
cur_vol	./src/pcm/pcm_softvol.c	/^	unsigned int cur_vol[2];$/;"	m	struct:__anon109	file:
current	./src/conf.c	/^	struct filedesc *current;$/;"	m	struct:__anon87	typeref:struct:__anon87::filedesc	file:
cymbal	./include/sound/asound_fm.h	/^	unsigned char cymbal;$/;"	m	struct:snd_dm_fm_params
d	./include/seq_event.h	/^	unsigned char d[12];		\/**< 8 bit value *\/$/;"	m	struct:snd_seq_ev_raw8
d	./include/seq_event.h	/^	unsigned int d[3];		\/**< 32 bit value *\/$/;"	m	struct:snd_seq_ev_raw32
d	./include/sound/asequencer.h	/^	unsigned char d[12];	\/* 8 bit value *\/$/;"	m	struct:sndrv_seq_ev_raw8
d	./include/sound/asequencer.h	/^	unsigned int d[3];	\/* 32 bit value *\/$/;"	m	struct:sndrv_seq_ev_raw32
d	./include/sound/asound.h	/^		unsigned short d[4];		\/* dimensions *\/$/;"	m	union:sndrv_ctl_elem_info::__anon33
d	./src/pcm/pcm_local.h	/^	double d;$/;"	m	union:snd_tmp_double
d32	./include/seq_event.h	/^		unsigned int d32[2];		\/**< any data *\/$/;"	m	union:snd_seq_ev_queue_control::__anon45
d32	./include/sound/asequencer.h	/^		unsigned int d32[2];$/;"	m	union:sndrv_seq_ev_queue_control::__anon10
d8	./include/seq_event.h	/^		unsigned char d8[8];		\/**< any data *\/$/;"	m	union:snd_seq_ev_queue_control::__anon45
d8	./include/sound/asequencer.h	/^		unsigned char d8[8];$/;"	m	union:sndrv_seq_ev_queue_control::__anon10
dB_value	./src/pcm/pcm_softvol.c	/^	unsigned int *dB_value;$/;"	m	struct:__anon109	file:
d_ptr	./include/sound/asound.h	/^		unsigned short *d_ptr;		\/* (obsolete) indirect *\/$/;"	m	union:sndrv_ctl_elem_info::__anon33
da_gain	./include/sound/hdsp.h	/^	unsigned char da_gain;$/;"	m	struct:_snd_hdsp_config_info
damper_pedal	./test/midifile.h	65;"	d
data	./include/aserver.h	/^	char data[0];$/;"	m	struct:__anon53
data	./include/aserver.h	/^	char data[0];$/;"	m	struct:__anon64
data	./include/search.h	/^    void *data;$/;"	m	struct:entry
data	./include/seq_event.h	/^	} data;				\/**< event data... *\/$/;"	m	struct:snd_seq_event	typeref:union:snd_seq_event::__anon46
data	./include/sound/asequencer.h	/^	} data;$/;"	m	struct:sndrv_seq_event	typeref:union:sndrv_seq_event::__anon11
data	./include/sound/asound.h	/^			unsigned char data[512];$/;"	m	union:sndrv_ctl_elem_value::__anon34::__anon38
data	./include/sound/asound.h	/^        } data;$/;"	m	struct:sndrv_ctl_event	typeref:union:sndrv_ctl_event::__anon40
data	./include/sound/asound_fm.h	/^	unsigned char data[32];$/;"	m	struct:sbi_patch
data	./include/sound/sb16_csp.h	/^	unsigned char data[SNDRV_SB_CSP_MAX_MICROCODE_FILE_SIZE];$/;"	m	struct:snd_sb_csp_microcode
data	./src/pcm/pcm_extplug.c	/^	snd_pcm_extplug_t *data;$/;"	m	struct:snd_pcm_extplug_priv	file:
data	./src/pcm/pcm_ioplug.c	/^	snd_pcm_ioplug_t *data;$/;"	m	struct:snd_pcm_ioplug_priv	file:
data	./src/pcm/pcm_ladspa.c	/^        LADSPA_Data **data;$/;"	m	struct:__anon115	file:
data	./src/ucm/ucm_local.h	/^	} data;$/;"	m	struct:sequence_element	typeref:union:sequence_element::__anon151
data	./src/ucm/ucm_local.h	/^        char *data;$/;"	m	struct:ucm_value
data8	./include/sound/asound.h	/^                unsigned char data8[60];$/;"	m	union:sndrv_ctl_event::__anon40
data_dec	./test/midifile.h	84;"	d
data_inc	./test/midifile.h	83;"	d
data_ptr	./include/sound/asound.h	/^			unsigned char *data_ptr;	\/* obsolete *\/$/;"	m	union:sndrv_ctl_elem_value::__anon34::__anon38
db_info	./src/mixer/simple_none.c	/^		unsigned int *db_info;$/;"	m	struct:_selem_none::selem_str	file:
db_init_error	./src/mixer/simple_none.c	/^		unsigned int db_init_error: 1;$/;"	m	struct:_selem_none::selem_str	file:
db_initialized	./src/mixer/simple_none.c	/^		unsigned int db_initialized: 1;$/;"	m	struct:_selem_none::selem_str	file:
deactivate	./src/pcm/ladspa.h	/^  void (*deactivate)(LADSPA_Handle Instance);$/;"	m	struct:_LADSPA_Descriptor
debug	./alsalisp/alsalisp.c	/^static int debug = 0;$/;"	v	file:
debug	./include/alisp.h	/^	    debug: 1;$/;"	m	struct:alisp_cfg
debug	./src/alisp/alisp_local.h	/^	    debug: 1;$/;"	m	struct:alisp_instance
debug	./test/seq.c	/^int debug = 0;$/;"	v
decay	./include/sound/asound_fm.h	/^	unsigned char decay;		\/* 4 bits: decay rate *\/$/;"	m	struct:snd_dm_fm_voice
decay_ms	./src/pcm/scopes/level.c	/^	unsigned int decay_ms;$/;"	m	struct:_snd_pcm_scope_level	file:
decode	./src/seq/seq_midi_event.c	/^	event_decode_t decode;$/;"	m	struct:status_event_list_t	file:
decode	./src/seq/seq_midi_event.c	/^	int (*decode)(snd_midi_event_t *dev, unsigned char *buf, int len, const snd_seq_event_t *ev);$/;"	m	struct:extra_event_list_t	file:
decode_event	./test/seq-decoder.c	/^int decode_event(snd_seq_event_t * ev)$/;"	f
default_list	./src/ucm/ucm_local.h	/^	struct list_head default_list;$/;"	m	struct:snd_use_case_mgr	typeref:struct:snd_use_case_mgr::list_head
default_rate_plugins	./src/pcm/pcm_rate.c	/^static const char *const default_rate_plugins[] = {$/;"	v	file:
default_symbol_version	./include/alsa-symbols.h	36;"	d
default_symbol_version	./include/alsa-symbols.h	42;"	d
del_waiter	./aserver/aserver.c	/^static void del_waiter(int fd)$/;"	f	file:
delay	./include/aserver.h	/^		} delay;$/;"	m	union:__anon53::__anon54	typeref:struct:__anon53::__anon54::__anon57
delay	./include/pcm_ioplug.h	/^	int (*delay)(snd_pcm_ioplug_t *io, snd_pcm_sframes_t *delayp);$/;"	m	struct:snd_pcm_ioplug_callback
delay	./include/sound/asound.h	/^	sndrv_pcm_sframes_t delay;	\/* current delay in frames *\/$/;"	m	struct:sndrv_pcm_status
delay	./src/pcm/pcm_local.h	/^	int (*delay)(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp);$/;"	m	struct:__anon138
delay	./src/pcm/pcm_meter.c	/^	struct timespec delay;$/;"	m	struct:_snd_pcm_meter	typeref:struct:_snd_pcm_meter::timespec	file:
delay_packet	./test/midifile.h	62;"	d
delete_object	./src/alisp/alisp.c	/^static void delete_object(struct alisp_instance *instance, struct alisp_object * p)$/;"	f	file:
delete_port	./src/seq/seq_local.h	/^	int (*delete_port)(snd_seq_t *seq, snd_seq_port_info_t * port);$/;"	m	struct:__anon97
delete_queue	./src/seq/seq_local.h	/^	int (*delete_queue)(snd_seq_t *seq, snd_seq_queue_info_t *info);$/;"	m	struct:__anon97
delete_tree	./src/alisp/alisp.c	/^static void delete_tree(struct alisp_instance *instance, struct alisp_object * p)$/;"	f	file:
deps	./src/pcm/pcm_params.c	/^	int deps[4];$/;"	m	struct:_snd_pcm_hw_rule	file:
depth	./src/pcm/pcm_ladspa.c	/^	unsigned int depth;$/;"	m	struct:snd_pcm_ladspa_instance	file:
desc	./src/pcm/pcm_ladspa.c	/^	const LADSPA_Descriptor *desc;$/;"	m	struct:__anon117	file:
desc	./src/pcm/pcm_ladspa.c	/^	const LADSPA_Descriptor *desc;$/;"	m	struct:snd_pcm_ladspa_instance	file:
dest	./include/seq_event.h	/^	snd_seq_addr_t dest;		\/**< destination address *\/$/;"	m	struct:snd_seq_event
dest	./include/seq_event.h	/^	snd_seq_addr_t dest;	\/**< destination address *\/$/;"	m	struct:snd_seq_connect
dest	./include/sound/asequencer.h	/^	struct sndrv_seq_addr dest;	\/* Address for REMOVE_DEST *\/$/;"	m	struct:sndrv_seq_remove_events	typeref:struct:sndrv_seq_remove_events::sndrv_seq_addr
dest	./include/sound/asequencer.h	/^	struct sndrv_seq_addr dest;	\/* destination address *\/$/;"	m	struct:sndrv_seq_event	typeref:struct:sndrv_seq_event::sndrv_seq_addr
dest	./include/sound/asequencer.h	/^	struct sndrv_seq_addr dest;	\/* destination address *\/$/;"	m	struct:sndrv_seq_port_subscribe	typeref:struct:sndrv_seq_port_subscribe::sndrv_seq_addr
dest	./include/sound/asequencer.h	/^	struct sndrv_seq_addr dest;$/;"	m	struct:sndrv_seq_connect	typeref:struct:sndrv_seq_connect::sndrv_seq_addr
dest_client	./test/playmidi1.c	/^static int dest_client = DEST_CLIENT_NUMBER;$/;"	v	file:
dest_port	./test/playmidi1.c	/^static int dest_port = DEST_PORT_NUMBER;$/;"	v	file:
dest_queue	./test/playmidi1.c	/^static int dest_queue = -1;$/;"	v	file:
detune	./test/midifile.h	78;"	d
dev	./src/conf.c	/^	dev_t dev;$/;"	m	struct:finfo	file:
dev_class	./include/sound/asound.h	/^	int dev_class;			\/* SNDRV_PCM_CLASS_* *\/$/;"	m	struct:sndrv_pcm_info
dev_class	./include/sound/asound.h	/^	int dev_class;$/;"	m	struct:sndrv_timer_id
dev_list	./src/ucm/ucm_local.h	/^	struct list_head dev_list;$/;"	m	struct:use_case_modifier	typeref:struct:use_case_modifier::list_head
dev_list	./src/ucm/ucm_local.h	/^struct dev_list {$/;"	s
dev_sclass	./include/sound/asound.h	/^	int dev_sclass;$/;"	m	struct:sndrv_timer_id
dev_subclass	./include/sound/asound.h	/^	int dev_subclass;		\/* SNDRV_PCM_SUBCLASS_* *\/$/;"	m	struct:sndrv_pcm_info
dev_type	./aserver/aserver.c	/^	int dev_type;$/;"	m	struct:client	file:
dev_type	./include/aserver.h	/^	unsigned char dev_type;$/;"	m	struct:__anon67
device	./aserver/aserver.c	/^	} device;$/;"	m	struct:client	typeref:union:client::__anon2	file:
device	./include/aserver.h	/^		int device;$/;"	m	union:__anon64::__anon65
device	./include/mixer.h	/^	const char *device;$/;"	m	struct:snd_mixer_selem_regopt
device	./include/mixer_abst.h	/^	char *device;$/;"	m	struct:_sm_class_basic
device	./include/sound/asound.h	/^	int device;$/;"	m	struct:sndrv_timer_id
device	./include/sound/asound.h	/^	unsigned int device;		\/* RO\/WR (control): device number *\/$/;"	m	struct:sndrv_pcm_info
device	./include/sound/asound.h	/^	unsigned int device;		\/* RO\/WR (control): device number *\/$/;"	m	struct:sndrv_rawmidi_info
device	./include/sound/asound.h	/^	unsigned int device;		\/* WR: device number *\/$/;"	m	struct:sndrv_hwdep_info
device	./include/sound/asound.h	/^	unsigned int device;		\/* device\/client number *\/$/;"	m	struct:sndrv_ctl_elem_id
device	./include/sound/emu10k1.h	/^	unsigned int device;		\/* device\/client number *\/$/;"	m	struct:__anon16
device	./src/control/namehint.c	/^	int device;$/;"	m	struct:hint_list	file:
device	./src/mixer/simple_abst.c	/^	char *device;$/;"	m	struct:_class_priv	file:
device	./src/pcm/pcm_hw.c	/^	int card, device, subdevice;$/;"	m	struct:__anon107	file:
device	./src/rawmidi/rawmidi_hw.c	/^	int card, device, subdevice;$/;"	m	struct:__anon100	file:
device	./test/pcm.c	/^static char *device = "plughw:0,0";			\/* playback device *\/$/;"	v	file:
device	./test/pcm_min.c	/^static char *device = "default";			\/* playback device *\/$/;"	v	file:
device_input	./src/control/namehint.c	/^	long device_input;$/;"	m	struct:hint_list	file:
device_list	./src/ucm/ucm_local.h	/^	struct list_head device_list;$/;"	m	struct:use_case_verb	typeref:struct:use_case_verb::list_head
device_output	./src/control/namehint.c	/^	long device_output;$/;"	m	struct:hint_list	file:
device_status	./src/ucm/main.c	/^long device_status(snd_use_case_mgr_t *uc_mgr,$/;"	f
dig_subframe	./include/control.h	/^	unsigned char dig_subframe[4];	\/**< AES\/IEC958 subframe bits *\/$/;"	m	struct:snd_aes_iec958
dig_subframe	./include/sound/asound.h	/^	unsigned char dig_subframe[4];	\/* AES\/IEC958 subframe bits *\/$/;"	m	struct:sndrv_aes_iec958
dimen	./include/sound/asound.h	/^	} dimen;$/;"	m	struct:sndrv_ctl_elem_info	typeref:union:sndrv_ctl_elem_info::__anon33
dir	./modules/mixer/simple/sbase.h	/^	} dir[2];$/;"	m	struct:selem_base	typeref:struct:selem_base::__anon84
direct_loop	./test/pcm.c	/^static int direct_loop(snd_pcm_t *handle,$/;"	f	file:
direct_write_loop	./test/pcm.c	/^static int direct_write_loop(snd_pcm_t *handle,$/;"	f	file:
disable	./include/pcm.h	/^	void (*disable)(snd_pcm_scope_t *scope);$/;"	m	struct:_snd_pcm_scope_ops
disable_list	./src/ucm/ucm_local.h	/^	struct list_head disable_list;$/;"	m	struct:use_case_device	typeref:struct:use_case_device::list_head
disable_list	./src/ucm/ucm_local.h	/^	struct list_head disable_list;$/;"	m	struct:use_case_modifier	typeref:struct:use_case_modifier::list_head
disable_list	./src/ucm/ucm_local.h	/^	struct list_head disable_list;$/;"	m	struct:use_case_verb	typeref:struct:use_case_verb::list_head
dismantle_use_case	./src/ucm/main.c	/^static int dismantle_use_case(snd_use_case_mgr_t *uc_mgr)$/;"	f	file:
div	./src/pcm/pcm_route.c	45;"	d	file:
div	./src/pcm/pcm_route.c	47;"	d	file:
div32	./src/pcm/interval.c	/^static inline unsigned int div32(unsigned int a, unsigned int b, $/;"	f	file:
div64_32	./src/pcm/interval.c	/^static inline void div64_32(u_int64_t *n, u_int32_t d, u_int32_t *rem)$/;"	f	file:
div_down	./src/pcm/interval.c	/^static inline unsigned int div_down(unsigned int a, unsigned int b)$/;"	f	file:
div_up	./src/pcm/interval.c	/^static inline unsigned int div_up(unsigned int a, unsigned int b)$/;"	f	file:
dl_handle	./src/hwdep/hwdep_local.h	/^	void *dl_handle;$/;"	m	struct:_snd_hwdep
dl_handle	./src/pcm/pcm_ladspa.c	/^	void *dl_handle;$/;"	m	struct:__anon117	file:
dl_handle	./src/pcm/pcm_meter.c	/^	void *dl_handle;$/;"	m	struct:_snd_pcm_meter	file:
dl_handle	./src/rawmidi/rawmidi_local.h	/^	void *dl_handle;$/;"	m	struct:_snd_rawmidi
dl_handle	./src/seq/seq_local.h	/^	void *dl_handle;$/;"	m	struct:_snd_seq
dl_handle	./src/timer/timer_local.h	/^	void *dl_handle;$/;"	m	struct:_snd_timer
dl_handle	./src/timer/timer_local.h	/^	void *dl_handle;$/;"	m	struct:_snd_timer_query
dl_sbase	./modules/mixer/simple/sbase.h	/^	void *dl_sbase;$/;"	m	struct:bclass_private
dlfo	./test/latency.c	/^float lfo,dlfo,fs,fc,BW,C,D,a0,a1,a2,b1,b2,*x[3],*y[3];$/;"	v
dlhandle	./src/mixer/simple_abst.c	/^	void *dlhandle;$/;"	m	struct:_class_priv	file:
dllist	./src/pcm/pcm_hooks.c	/^	struct list_head dllist;$/;"	m	struct:__anon122	typeref:struct:__anon122::list_head	file:
dlobj	./src/dlmisc.c	/^	void *dlobj;$/;"	m	struct:dlobj_cache	file:
dlobj	./src/pcm/pcm_hooks.c	/^	void *dlobj;$/;"	m	struct:snd_pcm_hook_dllist	file:
dlobj_cache	./src/dlmisc.c	/^struct dlobj_cache {$/;"	s	file:
dlsym_name	./include/global.h	/^	const char *dlsym_name;$/;"	m	struct:snd_dlsym_link
dlsym_ptr	./include/global.h	/^	const void *dlsym_ptr;$/;"	m	struct:snd_dlsym_link
dmix	./src/pcm/pcm_direct.h	/^		} dmix;$/;"	m	union:snd_pcm_direct::__anon128	typeref:struct:snd_pcm_direct::__anon128::__anon129
dmix_down_sem	./src/pcm/pcm_dmix.c	296;"	d	file:
dmix_down_sem	./src/pcm/pcm_dmix.c	299;"	d	file:
dmix_server_free	./src/pcm/pcm_dmix.c	/^static void dmix_server_free(snd_pcm_direct_t *dmix)$/;"	f	file:
dmix_supported_format	./src/pcm/pcm_dmix.c	150;"	d	file:
dmix_supported_format	./src/pcm/pcm_dmix_i386.c	83;"	d	file:
dmix_supported_format	./src/pcm/pcm_dmix_x86_64.c	66;"	d	file:
dmix_up_sem	./src/pcm/pcm_dmix.c	297;"	d	file:
dmix_up_sem	./src/pcm/pcm_dmix.c	300;"	d	file:
do_chanpressure	./test/playmidi1.c	/^static void do_chanpressure(int chan, int pressure)$/;"	f	file:
do_convert	./src/pcm/pcm_rate.c	/^static void do_convert(const snd_pcm_channel_area_t *dst_areas,$/;"	f	file:
do_header	./test/playmidi1.c	/^static void do_header(int format, int ntracks, int division)$/;"	f	file:
do_noteoff	./test/playmidi1.c	/^static void do_noteoff(int chan, int pitch, int vol)$/;"	f	file:
do_noteon	./test/playmidi1.c	/^static void do_noteon(int chan, int pitch, int vol)$/;"	f	file:
do_parameter	./test/playmidi1.c	/^static void do_parameter(int chan, int control, int value)$/;"	f	file:
do_pitchbend	./test/playmidi1.c	/^static void do_pitchbend(int chan, int lsb, int msb)$/;"	f	file:
do_pressure	./test/playmidi1.c	/^static void do_pressure(int chan, int pitch, int pressure)$/;"	f	file:
do_program	./test/playmidi1.c	/^static void do_program(int chan, int program)$/;"	f	file:
do_silence	./src/pcm/pcm_dshare.c	/^static void do_silence(snd_pcm_t *pcm)$/;"	f	file:
do_sustain	./include/sound/asound_fm.h	/^	unsigned char do_sustain;	\/* sustain phase *\/$/;"	m	struct:snd_dm_fm_voice
do_sysex	./test/playmidi1.c	/^static void do_sysex(int len, char *msg)$/;"	f	file:
do_tempo	./test/playmidi1.c	/^static void do_tempo(int us)$/;"	f	file:
done_lex	./src/alisp/alisp.c	/^static void done_lex(struct alisp_instance *instance)$/;"	f	file:
donot_close	./src/pcm/pcm_local.h	/^	unsigned int donot_close: 1;	\/* don't close this PCM *\/$/;"	m	struct:_snd_pcm
double_t	./src/pcm/pcm_lfloat.c	/^typedef double double_t;$/;"	t	file:
dout	./include/alisp.h	/^	snd_output_t *dout;	\/* debug output *\/$/;"	m	struct:alisp_cfg
dout	./src/alisp/alisp_local.h	/^	snd_output_t *dout;	\/* debug output *\/$/;"	m	struct:alisp_instance
drain	./include/pcm_ioplug.h	/^	int (*drain)(snd_pcm_ioplug_t *io);$/;"	m	struct:snd_pcm_ioplug_callback
drain	./src/pcm/pcm_local.h	/^	int (*drain)(snd_pcm_t *pcm);$/;"	m	struct:__anon138
drain	./src/rawmidi/rawmidi_local.h	/^	int (*drain)(snd_rawmidi_t *rawmidi);$/;"	m	struct:__anon99
drain_silenced	./src/pcm/pcm_share.c	/^	int drain_silenced;$/;"	m	struct:__anon119	file:
driver	./include/control_external.h	/^	char driver[16];$/;"	m	struct:snd_ctl_ext
driver	./include/sound/asound.h	/^	unsigned char driver[16];	\/* Driver name *\/$/;"	m	struct:sndrv_ctl_card_info
driver_data	./include/sound/asound.h	/^	unsigned long driver_data;	\/* W: driver-specific data *\/$/;"	m	struct:sndrv_hwdep_dsp_image
drop	./src/pcm/pcm_local.h	/^	int (*drop)(snd_pcm_t *pcm);$/;"	m	struct:__anon138
drop	./src/rawmidi/rawmidi_local.h	/^	int (*drop)(snd_rawmidi_t *rawmidi);$/;"	m	struct:__anon99
drop_frame	./include/sound/hdspm.h	/^	drop_frame,$/;"	e	enum:hdspm_ltc_frame
ds	./include/sound/hdspm.h	/^	ds,$/;"	e	enum:hdspm_speed
dshare	./src/pcm/pcm_direct.h	/^		} dshare;$/;"	m	union:__anon123::__anon126	typeref:struct:__anon123::__anon126::__anon127
dshare	./src/pcm/pcm_direct.h	/^		} dshare;$/;"	m	union:snd_pcm_direct::__anon128	typeref:struct:snd_pcm_direct::__anon128::__anon131
dsnoop	./src/pcm/pcm_direct.h	/^		} dsnoop;$/;"	m	union:snd_pcm_direct::__anon128	typeref:struct:snd_pcm_direct::__anon128::__anon130
dsp_loaded	./include/sound/asound.h	/^	unsigned int dsp_loaded;	\/* R: bit flags indicating the loaded DSPs *\/$/;"	m	struct:sndrv_hwdep_dsp_status
dst	./src/pcm/plugin_ops.h	/^		   as_u32(dst) = bswap_32(tmp_float.i); goto PUT32F_END;$/;"	v
dst	./src/pcm/plugin_ops.h	/^		   as_u64(dst) = bswap_64(tmp_double.l); goto PUT32F_END;$/;"	v
dst	./src/pcm/plugin_ops.h	/^put32f_1234_1234F: as_float(dst) = (float_t)((int32_t)sample) \/ (float_t)0x80000000UL; goto PUT32F_END;$/;"	v
dst	./src/pcm/plugin_ops.h	/^put_1_1: as_s8(dst) = sample; goto PUT_END;$/;"	v
dst_buf	./src/pcm/pcm_rate.c	/^	int16_t *dst_buf;$/;"	m	struct:_snd_pcm_rate	file:
dst_sfmt	./src/pcm/pcm_route.c	/^	snd_pcm_format_t dst_sfmt;$/;"	m	struct:__anon141	file:
dsts	./src/pcm/pcm_route.c	/^	snd_pcm_route_ttable_dst_t *dsts;$/;"	m	struct:__anon141	file:
dump	./include/pcm_extplug.h	/^	void (*dump)(snd_pcm_extplug_t *ext, snd_output_t *out);$/;"	m	struct:snd_pcm_extplug_callback
dump	./include/pcm_ioplug.h	/^	void (*dump)(snd_pcm_ioplug_t *io, snd_output_t *out);$/;"	m	struct:snd_pcm_ioplug_callback
dump	./include/pcm_rate.h	/^	void (*dump)(void *obj, snd_output_t *out);$/;"	m	struct:snd_pcm_rate_ops
dump	./src/pcm/pcm_local.h	/^	void (*dump)(snd_pcm_t *pcm, snd_output_t *out);$/;"	m	struct:__anon137
dump_event_filter	./test/client_event_filter.c	/^void dump_event_filter(snd_seq_client_info_t *client_info) {$/;"	f
dump_hw_params	./src/pcm/pcm_params.c	/^static inline void dump_hw_params(snd_pcm_hw_params_t *params, const char *type,$/;"	f	file:
dump_hw_params	./src/pcm/pcm_params.c	/^static void dump_hw_params(snd_pcm_hw_params_t *params, const char *type,$/;"	f	file:
dump_obj_lists	./src/alisp/alisp.c	/^static void dump_obj_lists(struct alisp_instance *instance, const char *fname)$/;"	f	file:
dump_objects	./src/alisp/alisp.c	/^static void dump_objects(struct alisp_instance *instance, const char *fname)$/;"	f	file:
dump_one_param	./src/pcm/pcm.c	/^static void dump_one_param(snd_pcm_hw_params_t *params, unsigned int k, snd_output_t *out)$/;"	f	file:
duration	./include/seq_event.h	/^	unsigned int duration;		\/**< duration until note-off; only for #SND_SEQ_EVENT_NOTE *\/$/;"	m	struct:snd_seq_ev_note
duration	./include/sound/asequencer.h	/^	unsigned int duration;		\/* only for SNDRV_SEQ_EVENT_NOTE *\/$/;"	m	struct:sndrv_seq_ev_note
egetc	./test/midifile.c	/^egetc ()			\/* read a single character and abort on EOF *\/$/;"	f	file:
elem	./include/sound/asound.h	/^		} elem;$/;"	m	union:sndrv_ctl_event::__anon40	typeref:struct:sndrv_ctl_event::__anon40::__anon41
elem	./src/mixer/simple_none.c	/^	snd_hctl_elem_t *elem;$/;"	m	struct:_selem_ctl	file:
elem	./src/pcm/pcm_softvol.c	/^	snd_ctl_elem_value_t elem;$/;"	m	struct:__anon109	file:
elem_count	./include/control_external.h	/^	int (*elem_count)(snd_ctl_ext_t *ext);$/;"	m	struct:snd_ctl_ext_callback
elem_list	./include/control_external.h	/^	int (*elem_list)(snd_ctl_ext_t *ext, unsigned int offset, snd_ctl_elem_id_t *id);$/;"	m	struct:snd_ctl_ext_callback
elem_read_enum	./src/mixer/simple_none.c	/^static int elem_read_enum(selem_none_t *s)$/;"	f	file:
elem_read_route	./src/mixer/simple_none.c	/^static int elem_read_route(selem_none_t *s, int dir, selem_ctl_type_t type)$/;"	f	file:
elem_read_switch	./src/mixer/simple_none.c	/^static int elem_read_switch(selem_none_t *s, int dir, selem_ctl_type_t type)$/;"	f	file:
elem_read_volume	./src/mixer/simple_none.c	/^static int elem_read_volume(selem_none_t *s, int dir, selem_ctl_type_t type)$/;"	f	file:
elem_write_enum	./src/mixer/simple_none.c	/^static int elem_write_enum(selem_none_t *s)$/;"	f	file:
elem_write_route	./src/mixer/simple_none.c	/^static int elem_write_route(selem_none_t *s, int dir, selem_ctl_type_t type)$/;"	f	file:
elem_write_switch	./src/mixer/simple_none.c	/^static int elem_write_switch(selem_none_t *s, int dir, selem_ctl_type_t type)$/;"	f	file:
elem_write_switch_constant	./src/mixer/simple_none.c	/^static int elem_write_switch_constant(selem_none_t *s, selem_ctl_type_t type, int val)$/;"	f	file:
elem_write_volume	./src/mixer/simple_none.c	/^static int elem_write_volume(selem_none_t *s, int dir, selem_ctl_type_t type)$/;"	f	file:
element_add	./src/control/control_local.h	/^	int (*element_add)(snd_ctl_t *handle, snd_ctl_elem_info_t *info);$/;"	m	struct:_snd_ctl_ops
element_info	./include/aserver.h	/^		snd_ctl_elem_info_t element_info;$/;"	m	union:__anon64::__anon65
element_info	./src/control/control_local.h	/^	int (*element_info)(snd_ctl_t *handle, snd_ctl_elem_info_t *info);$/;"	m	struct:_snd_ctl_ops
element_list	./include/aserver.h	/^		snd_ctl_elem_list_t element_list;$/;"	m	union:__anon64::__anon65
element_list	./src/control/control_local.h	/^	int (*element_list)(snd_ctl_t *handle, snd_ctl_elem_list_t *list);$/;"	m	struct:_snd_ctl_ops
element_lock	./include/aserver.h	/^		snd_ctl_elem_id_t element_lock;$/;"	m	union:__anon64::__anon65
element_lock	./src/control/control_local.h	/^	int (*element_lock)(snd_ctl_t *handle, snd_ctl_elem_id_t *lock);$/;"	m	struct:_snd_ctl_ops
element_read	./include/aserver.h	/^		snd_ctl_elem_value_t element_read;$/;"	m	union:__anon64::__anon65
element_read	./src/control/control_local.h	/^	int (*element_read)(snd_ctl_t *handle, snd_ctl_elem_value_t *control);$/;"	m	struct:_snd_ctl_ops
element_remove	./src/control/control_local.h	/^	int (*element_remove)(snd_ctl_t *handle, snd_ctl_elem_id_t *id);$/;"	m	struct:_snd_ctl_ops
element_replace	./src/control/control_local.h	/^	int (*element_replace)(snd_ctl_t *handle, snd_ctl_elem_info_t *info);$/;"	m	struct:_snd_ctl_ops
element_tlv	./src/control/control_local.h	/^	int (*element_tlv)(snd_ctl_t *handle, int op_flag, unsigned int numid,$/;"	m	struct:_snd_ctl_ops
element_unlock	./include/aserver.h	/^		snd_ctl_elem_id_t element_unlock;$/;"	m	union:__anon64::__anon65
element_unlock	./src/control/control_local.h	/^	int (*element_unlock)(snd_ctl_t *handle, snd_ctl_elem_id_t *unlock);$/;"	m	struct:_snd_ctl_ops
element_write	./include/aserver.h	/^		snd_ctl_elem_value_t element_write;$/;"	m	union:__anon64::__anon65
element_write	./src/control/control_local.h	/^	int (*element_write)(snd_ctl_t *handle, snd_ctl_elem_value_t *control);$/;"	m	struct:_snd_ctl_ops
elems	./src/control/control_local.h	/^	struct list_head elems;		\/* list of all controls *\/$/;"	m	struct:_snd_hctl	typeref:struct:_snd_hctl::list_head
elems	./src/control/setup.c	/^	struct list_head elems;$/;"	m	struct:_snd_sctl	typeref:struct:_snd_sctl::list_head	file:
elems	./src/mixer/mixer_local.h	/^	struct list_head elems;		\/* list of all elems *\/$/;"	m	struct:_snd_mixer	typeref:struct:_snd_mixer::list_head
empty	./include/sound/asound.h	/^		     empty:1;$/;"	m	struct:sndrv_interval
emu10k1_ctl_elem_id_t	./include/sound/emu10k1.h	/^} emu10k1_ctl_elem_id_t;$/;"	t	typeref:struct:__anon16
emu10k1_ctl_elem_iface	./include/sound/emu10k1.h	/^enum emu10k1_ctl_elem_iface {$/;"	g
emu10k1_fx8010_code_t	./include/sound/emu10k1.h	/^} emu10k1_fx8010_code_t;$/;"	t	typeref:struct:__anon18
emu10k1_fx8010_control_gpr_t	./include/sound/emu10k1.h	/^} emu10k1_fx8010_control_gpr_t;$/;"	t	typeref:struct:__anon17
emu10k1_fx8010_info_t	./include/sound/emu10k1.h	/^} emu10k1_fx8010_info_t;$/;"	t	typeref:struct:__anon15
emu10k1_fx8010_pcm_t	./include/sound/emu10k1.h	/^} emu10k1_fx8010_pcm_t;$/;"	t	typeref:struct:__anon20
emu10k1_fx8010_tram_t	./include/sound/emu10k1.h	/^} emu10k1_fx8010_tram_t;$/;"	t	typeref:struct:__anon19
enable	./include/aserver.h	/^			int enable;$/;"	m	struct:__anon53::__anon54::__anon58
enable	./include/pcm.h	/^	int (*enable)(snd_pcm_scope_t *scope);$/;"	m	struct:_snd_pcm_scope_ops
enable_list	./src/ucm/ucm_local.h	/^	struct list_head enable_list;$/;"	m	struct:use_case_device	typeref:struct:use_case_device::list_head
enable_list	./src/ucm/ucm_local.h	/^	struct list_head enable_list;$/;"	m	struct:use_case_modifier	typeref:struct:use_case_modifier::list_head
enable_list	./src/ucm/ucm_local.h	/^	struct list_head enable_list;$/;"	m	struct:use_case_verb	typeref:struct:use_case_verb::list_head
enabled	./src/pcm/pcm_meter.c	/^	int enabled;$/;"	m	struct:_snd_pcm_scope	file:
encode	./src/seq/seq_midi_event.c	/^	event_encode_t encode;$/;"	m	struct:status_event_list_t	file:
end	./include/iatomic.h	/^	unsigned int begin, end;$/;"	m	struct:__anon78
end	./include/iatomic.h	/^	unsigned int end;$/;"	m	struct:__anon79
end_of_track	./test/midifile.h	103;"	d
endorder	./include/search.h	/^  endorder,$/;"	e	enum:__anon44
entry	./include/search.h	/^typedef struct entry$/;"	s
entry	./src/compat/hsearch_r.c	/^  ENTRY entry;$/;"	m	struct:_ENTRY	file:
enum_item_name	./include/mixer_abst.h	/^	int (*enum_item_name)(snd_mixer_elem_t *elem, unsigned int item, size_t maxlen, char *buf);$/;"	m	struct:sm_elem_ops
enum_item_name_ops	./modules/mixer/simple/python.c	/^static int enum_item_name_ops(snd_mixer_elem_t *elem,$/;"	f	file:
enum_item_name_ops	./modules/mixer/simple/sbase.c	/^static int enum_item_name_ops(snd_mixer_elem_t *elem ATTRIBUTE_UNUSED,$/;"	f	file:
enum_item_name_ops	./src/mixer/simple_none.c	/^static int enum_item_name_ops(snd_mixer_elem_t *elem,$/;"	f	file:
enumerated	./include/sound/asound.h	/^		} enumerated;$/;"	m	union:sndrv_ctl_elem_info::__anon29	typeref:struct:sndrv_ctl_elem_info::__anon29::__anon32
enumerated	./include/sound/asound.h	/^		} enumerated;$/;"	m	union:sndrv_ctl_elem_value::__anon34	typeref:union:sndrv_ctl_elem_value::__anon34::__anon37
eout	./include/alisp.h	/^	snd_output_t *eout;	\/* error output *\/$/;"	m	struct:alisp_cfg
eout	./src/alisp/alisp_local.h	/^	snd_output_t *eout;	\/* error output *\/$/;"	m	struct:alisp_instance
eputc	./test/midifile.c	/^eputc (c)$/;"	f	file:
eq	./src/alisp/alisp.c	/^static inline int eq(struct alisp_object * p1, struct alisp_object * p2)$/;"	f	file:
equal	./src/alisp/alisp.c	/^static int equal(struct alisp_object * p1, struct alisp_object * p2)$/;"	f	file:
err	./include/sound/asequencer.h	/^	int err;$/;"	m	struct:sndrv_seq_event_bounce
etram	./include/sound/emu10k1.h	/^	unsigned char etram[32];	\/* external TRAM address & data (one per channel) *\/$/;"	m	struct:__anon20
eval	./src/alisp/alisp.c	/^static struct alisp_object * eval(struct alisp_instance *instance, struct alisp_object * p)$/;"	f	file:
eval_cons	./src/alisp/alisp.c	/^static inline struct alisp_object * eval_cons(struct alisp_instance *instance, struct alisp_object * p)$/;"	f	file:
eval_cons1	./src/alisp/alisp.c	/^static inline struct alisp_object * eval_cons1(struct alisp_instance *instance, struct alisp_object * p1, struct alisp_object * p2)$/;"	f	file:
eval_func	./src/alisp/alisp.c	/^static struct alisp_object * eval_func(struct alisp_instance *instance, struct alisp_object * p, struct alisp_object * args)$/;"	f	file:
event	./include/seq_event.h	/^	int event;		\/**< processed event type *\/$/;"	m	struct:snd_seq_result
event	./include/sound/asequencer.h	/^	int event;		\/* processed event type *\/$/;"	m	struct:sndrv_seq_result
event	./include/sound/asequencer.h	/^	struct sndrv_seq_event *event;		\/* quoted event *\/$/;"	m	struct:sndrv_seq_ev_quote	typeref:struct:sndrv_seq_ev_quote::sndrv_seq_event
event	./include/sound/asequencer.h	/^	struct sndrv_seq_event event;$/;"	m	struct:sndrv_seq_event_bounce	typeref:struct:sndrv_seq_event_bounce::sndrv_seq_event
event	./include/sound/asound.h	/^	int event;$/;"	m	struct:sndrv_timer_tread
event	./include/timer.h	/^	snd_timer_event_t event;	\/**< Timer event *\/$/;"	m	struct:_snd_timer_tread
event	./modules/mixer/simple/sbase.h	/^	int (*event)(snd_mixer_class_t *class, unsigned int mask,$/;"	m	struct:bclass_base_ops
event	./src/mixer/mixer_local.h	/^	snd_mixer_event_t event;$/;"	m	struct:_snd_mixer_class
event	./src/seq/seq_midi_event.c	/^	int event;$/;"	m	struct:extra_event_list_t	file:
event	./src/seq/seq_midi_event.c	/^	int event;$/;"	m	struct:status_event_list_t	file:
event_decode_t	./src/seq/seq_midi_event.c	/^typedef void (*event_decode_t)(const snd_seq_event_t *ev, unsigned char *buf);$/;"	t	file:
event_decoder	./test/seq-decoder.c	/^void event_decoder(snd_seq_t *handle, int argc, char *argv[])$/;"	f
event_decoder_start_timer	./test/seq-decoder.c	/^void event_decoder_start_timer(snd_seq_t *handle, int queue,$/;"	f
event_encode_t	./src/seq/seq_midi_event.c	/^typedef void (*event_encode_t)(snd_midi_event_t *dev, snd_seq_event_t *ev);$/;"	t	file:
event_filter	./include/sound/asequencer.h	/^	unsigned char event_filter[32];	\/* event filter bitmap *\/$/;"	m	struct:sndrv_seq_client_info
event_lost	./include/sound/asequencer.h	/^	int event_lost;			\/* number of lost events *\/$/;"	m	struct:sndrv_seq_client_info
event_names	./test/seq-decoder.c	/^static char *event_names[256] = {$/;"	v	file:
event_sender	./test/seq-sender.c	/^void event_sender(snd_seq_t *handle, int argc, char *argv[])$/;"	f
event_sender_filter	./test/seq-sender.c	/^void event_sender_filter(snd_seq_t *handle)$/;"	f
event_sender_start_timer	./test/seq-sender.c	/^void event_sender_start_timer(snd_seq_t *handle,$/;"	f
events	./include/sound/asequencer.h	/^	int events;			\/* read-only - queue size *\/$/;"	m	struct:sndrv_seq_queue_status
events	./src/mixer/mixer_local.h	/^	unsigned int events;$/;"	m	struct:_snd_mixer
excl_parbits	./src/pcm/pcm_extplug.c	/^static const unsigned int excl_parbits[SND_PCM_EXTPLUG_HW_PARAMS] = {$/;"	v	file:
exec	./src/ucm/ucm_local.h	/^		char *exec;$/;"	m	union:sequence_element::__anon151
execute_cset	./src/ucm/main.c	/^static int execute_cset(snd_ctl_t *ctl, char *cset)$/;"	f	file:
execute_sequence	./src/ucm/main.c	/^static int execute_sequence(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
ext	./include/seq_event.h	/^		snd_seq_ev_ext_t ext;		\/**< external data *\/$/;"	m	union:snd_seq_event::__anon46
ext	./include/sound/asequencer.h	/^		struct sndrv_seq_ev_ext ext;$/;"	m	union:sndrv_seq_event::__anon11	typeref:struct:sndrv_seq_event::__anon11::sndrv_seq_ev_ext
extend_buf	./src/alisp/alisp.c	/^static char * extend_buf(struct alisp_instance *instance, char *p)$/;"	f	file:
extension	./include/sound/asound_fm.h	/^	char extension[7];$/;"	m	struct:sbi_patch
external_tram_size	./include/sound/emu10k1.h	/^	unsigned int external_tram_size;	\/* in samples *\/$/;"	m	struct:__anon15
extin_names	./include/sound/emu10k1.h	/^	char extin_names[16][32];		\/* names of external inputs *\/$/;"	m	struct:__anon15
extout_names	./include/sound/emu10k1.h	/^	char extout_names[32][32];		\/* names of external outputs *\/$/;"	m	struct:__anon15
extplug_hw_refine	./src/pcm/pcm_extplug.c	/^static int extplug_hw_refine(snd_pcm_hw_params_t *hw_params,$/;"	f	file:
extplug_priv_t	./src/pcm/pcm_extplug.c	/^} extplug_priv_t;$/;"	t	typeref:struct:snd_pcm_extplug_priv	file:
extra_decode_ctrl14	./src/seq/seq_midi_event.c	/^static int extra_decode_ctrl14(snd_midi_event_t *dev, unsigned char *buf, int count, const snd_seq_event_t *ev)$/;"	f	file:
extra_decode_xrpn	./src/seq/seq_midi_event.c	/^static int extra_decode_xrpn(snd_midi_event_t *dev, unsigned char *buf, int count, const snd_seq_event_t *ev)$/;"	f	file:
extra_event	./src/seq/seq_midi_event.c	/^} extra_event[] = {$/;"	v	typeref:struct:extra_event_list_t	file:
extra_event_list_t	./src/seq/seq_midi_event.c	/^static const struct extra_event_list_t {$/;"	s	file:
f	./src/alisp/alisp_local.h	/^		double	f;$/;"	m	union:alisp_object::__anon92
f	./src/pcm/pcm_local.h	/^	float f;$/;"	m	union:snd_tmp_float
fast_op_arg	./src/pcm/pcm_local.h	/^	snd_pcm_t *fast_op_arg;$/;"	m	struct:_snd_pcm
fast_ops	./src/pcm/pcm_local.h	/^	const snd_pcm_fast_ops_t *fast_ops;$/;"	m	struct:_snd_pcm
fc	./test/latency.c	/^float lfo,dlfo,fs,fc,BW,C,D,a0,a1,a2,b1,b2,*x[3],*y[3];$/;"	v
fd	./aserver/aserver.c	/^			int fd;$/;"	m	struct:client::__anon2::__anon3	file:
fd	./aserver/aserver.c	/^			int fd;$/;"	m	struct:client::__anon2::__anon4	file:
fd	./aserver/aserver.c	/^	int fd;$/;"	m	struct:__anon7	file:
fd	./aserver/aserver.c	/^	int fd;$/;"	m	struct:waiter	file:
fd	./include/aserver.h	/^			int fd;$/;"	m	struct:__anon53::__anon54::__anon61
fd	./include/local.h	/^	int fd;$/;"	m	struct:_snd_async_handler
fd	./src/control/control_hw.c	/^	int fd;$/;"	m	struct:__anon95	file:
fd	./src/pcm/pcm_file.c	/^	int fd;$/;"	m	struct:__anon121	file:
fd	./src/pcm/pcm_hw.c	/^	int fd;$/;"	m	struct:__anon107	file:
fd	./src/pcm/pcm_local.h	/^			int fd;$/;"	m	struct:_snd_pcm_channel_info::__anon134::__anon136
fd	./src/pcm/pcm_local.h	/^	int fd;$/;"	m	struct:_snd_pcm_rbptr
fd	./src/rawmidi/rawmidi_hw.c	/^	int fd;$/;"	m	struct:__anon100	file:
fd	./src/seq/seq_hw.c	/^	int fd;$/;"	m	struct:__anon98	file:
feedback	./include/sound/asound_fm.h	/^	unsigned char feedback;		\/* 3 bits: feedback for op0 *\/$/;"	m	struct:snd_dm_fm_voice
fields	./src/conf.c	/^			struct list_head fields;$/;"	m	struct:_snd_config::__anon85::__anon86	typeref:struct:_snd_config::__anon85::__anon86::list_head	file:
fifo_size	./include/sound/asound.h	/^	sndrv_pcm_uframes_t fifo_size;	\/* R: chip FIFO size in frames *\/$/;"	m	struct:sndrv_pcm_hw_params
fifo_size	./src/pcm/pcm_direct.h	/^		unsigned int fifo_size;$/;"	m	struct:__anon123::__anon125
fifo_size	./src/pcm/pcm_hw.c	/^	sndrv_pcm_uframes_t fifo_size;$/;"	m	struct:sndrv_pcm_hw_params_old	file:
fifo_size	./src/pcm/pcm_local.h	/^	snd_pcm_uframes_t fifo_size;	\/* chip FIFO size in frames *\/$/;"	m	struct:_snd_pcm
file_ptr_bytes	./src/pcm/pcm_file.c	/^	snd_pcm_uframes_t file_ptr_bytes;$/;"	m	struct:__anon121	file:
filedesc	./src/conf.c	/^struct filedesc {$/;"	s	file:
filelen	./src/pcm/pcm_file.c	/^	size_t filelen;$/;"	m	struct:__anon121	file:
filename	./src/pcm/pcm_ladspa.c	/^	char *filename;$/;"	m	struct:__anon117	file:
filename_filter	./src/ucm/parser.c	/^static int filename_filter(const struct dirent *dirent)$/;"	f	file:
filled	./include/search.h	/^    unsigned int filled;$/;"	m	struct:hsearch_data
filter	./include/sound/asequencer.h	/^	unsigned int filter;		\/* filter flags *\/$/;"	m	struct:sndrv_seq_client_info
filter	./include/sound/asound.h	/^	unsigned int filter;		\/* event filter (bitmask of SNDRV_TIMER_EVENT_*) *\/$/;"	m	struct:sndrv_timer_params
final_fname	./src/pcm/pcm_file.c	/^	char *final_fname;$/;"	m	struct:__anon121	file:
find	./src/ucm/main.c	336;"	d	file:
find0	./src/ucm/main.c	/^static void *find0(struct list_head *list,$/;"	f	file:
find_device	./src/ucm/main.c	/^        find_device(struct use_case_verb *verb,$/;"	f	file:
find_elem	./include/control_external.h	/^	snd_ctl_ext_key_t (*find_elem)(snd_ctl_ext_t *ext, const snd_ctl_elem_id_t *id);$/;"	m	struct:snd_ctl_ext_callback
find_full	./src/mixer/simple_abst.c	/^static int find_full(snd_mixer_class_t *class, snd_mixer_t *mixer,$/;"	f	file:
find_helem	./modules/mixer/simple/python.c	/^static PyObject *find_helem(struct python_priv *priv, snd_hctl_elem_t *helem)$/;"	f	file:
find_melem	./modules/mixer/simple/python.c	/^static PyObject *find_melem(struct python_priv *priv, snd_mixer_elem_t *melem)$/;"	f	file:
find_modifier	./src/ucm/main.c	/^        find_modifier(snd_use_case_mgr_t *uc_mgr, const char *modifier_name)$/;"	f	file:
find_module	./src/mixer/simple_abst.c	/^static int find_module(snd_mixer_class_t *class, snd_config_t *top)$/;"	f	file:
find_tempo	./test/midifile.c	/^find_tempo()$/;"	f	file:
find_verb	./src/ucm/main.c	/^static inline struct use_case_verb *find_verb(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
finfo	./src/conf.c	/^	struct finfo *finfo;$/;"	m	struct:_snd_config_update	typeref:struct:_snd_config_update::finfo	file:
finfo	./src/conf.c	/^struct finfo {$/;"	s	file:
firmware_data	./include/sound/hdsp.h	/^	void *firmware_data;	\/* 24413 x 4 bytes *\/$/;"	m	struct:_snd_hdsp_firmware
firmware_rev	./include/sound/hdsp.h	/^	unsigned short firmware_rev;$/;"	m	struct:_snd_hdsp_version
firmware_rev	./include/sound/hdspm.h	/^	unsigned short firmware_rev;$/;"	m	struct:hdspm_version
first	./include/pcm.h	/^	unsigned int first;$/;"	m	struct:_snd_pcm_channel_area
first	./include/sound/asound.h	/^	unsigned int first;		\/* offset to first sample in bits *\/$/;"	m	struct:sndrv_pcm_channel_info
first	./src/pcm/pcm_local.h	/^	unsigned int first;		\/* offset to first sample in bits *\/$/;"	m	struct:_snd_pcm_channel_info
fixup_wav_header	./src/pcm/pcm_file.c	/^static void fixup_wav_header(snd_pcm_t *pcm)$/;"	f	file:
flags	./include/pcm_ioplug.h	/^	unsigned int flags;	\/**< SND_PCM_IOPLUG_FLAG_XXX *\/$/;"	m	struct:snd_pcm_ioplug
flags	./include/seq_event.h	/^	unsigned char flags;		\/**< event flags *\/$/;"	m	struct:snd_seq_event
flags	./include/sound/asequencer.h	/^	int flags;			\/* various flags *\/$/;"	m	struct:sndrv_seq_queue_status
flags	./include/sound/asequencer.h	/^	unsigned char flags;		\/* event flags *\/$/;"	m	struct:sndrv_seq_event
flags	./include/sound/asequencer.h	/^	unsigned int flags;		\/* misc. conditioning *\/$/;"	m	struct:sndrv_seq_port_info
flags	./include/sound/asequencer.h	/^	unsigned int flags;		\/* modes *\/$/;"	m	struct:sndrv_seq_port_subscribe
flags	./include/sound/asequencer.h	/^	unsigned int flags;	\/* R\/O: result *\/$/;"	m	struct:sndrv_seq_query_subs
flags	./include/sound/asequencer.h	/^	unsigned int flags;	\/* flags *\/$/;"	m	struct:sndrv_seq_queue_info
flags	./include/sound/asound.h	/^	unsigned int flags;		\/* SNDRV_RAWMIDI_INFO_XXXX *\/$/;"	m	struct:sndrv_rawmidi_info
flags	./include/sound/asound.h	/^	unsigned int flags;		\/* flags - SNDRV_MIXER_PSFLG_* *\/$/;"	m	struct:sndrv_timer_params
flags	./include/sound/asound.h	/^	unsigned int flags;		\/* timer flags - SNDRV_TIMER_FLG_* *\/$/;"	m	struct:sndrv_timer_ginfo
flags	./include/sound/asound.h	/^	unsigned int flags;		\/* timer flags - SNDRV_TIMER_FLG_* *\/$/;"	m	struct:sndrv_timer_info
flags	./include/sound/asound.h	/^	unsigned int flags;$/;"	m	struct:sndrv_pcm_hw_params
flags	./include/sound/asound.h	/^	unsigned int flags;$/;"	m	struct:sndrv_pcm_sync_ptr
flags	./src/alisp/alisp_snd.c	/^struct flags {$/;"	s	file:
flags	./src/pcm/pcm_hw.c	/^	unsigned int flags;$/;"	m	struct:sndrv_pcm_hw_params_old	file:
float32_idx	./src/pcm/pcm_lfloat.c	/^	unsigned int float32_idx;$/;"	m	struct:__anon112	file:
float_preferred_formats	./src/pcm/pcm_plug.c	/^static const snd_pcm_format_t float_preferred_formats[] = {$/;"	v	file:
float_t	./src/pcm/pcm_lfloat.c	/^typedef float float_t;$/;"	t	file:
flush	./src/output.c	/^	int (*flush)(snd_output_t *output);$/;"	m	struct:_snd_output_ops	file:
fm_mode	./include/sound/asound_fm.h	/^	unsigned char fm_mode;		\/* OPL mode, see SNDRV_DM_FM_MODE_XXX *\/$/;"	m	struct:snd_dm_fm_info
fmt	./src/pcm/pcm_file.c	/^	short fmt;$/;"	m	struct:wav_fmt	file:
fname	./src/pcm/pcm_file.c	/^	char *fname;$/;"	m	struct:__anon121	file:
fnum	./include/sound/asound_fm.h	/^	unsigned int fnum;	\/* 10 bits: frequency number *\/$/;"	m	struct:snd_dm_fm_note
force_exit	./test/midifile.c	/^static int force_exit;$/;"	v	file:
forced_range	./modules/mixer/simple/sbase.h	/^		unsigned int forced_range: 1;$/;"	m	struct:selem_base::__anon84
format	./include/pcm_extplug.h	/^	snd_pcm_format_t format;$/;"	m	struct:snd_pcm_extplug
format	./include/pcm_ioplug.h	/^	snd_pcm_format_t format;	\/**< PCM format; filled after hw_params is called *\/$/;"	m	struct:snd_pcm_ioplug
format	./include/pcm_rate.h	/^	snd_pcm_format_t format;$/;"	m	struct:snd_pcm_rate_side_info
format	./include/sound/hdspm.h	/^	enum hdspm_ltc_format format;$/;"	m	struct:hdspm_ltc	typeref:enum:hdspm_ltc::hdspm_ltc_format
format	./src/pcm/pcm_direct.h	/^		snd_pcm_format_t format;$/;"	m	struct:__anon123::__anon125
format	./src/pcm/pcm_direct.h	/^		unsigned int format;$/;"	m	struct:__anon123::__anon124
format	./src/pcm/pcm_direct.h	/^	snd_pcm_format_t format;$/;"	m	struct:slave_params
format	./src/pcm/pcm_file.c	/^	int format;$/;"	m	struct:__anon121	file:
format	./src/pcm/pcm_hw.c	/^	snd_pcm_format_t format;$/;"	m	struct:__anon107	file:
format	./src/pcm/pcm_iec958.c	/^	snd_pcm_format_t format;$/;"	m	struct:snd_pcm_iec958	file:
format	./src/pcm/pcm_local.h	/^	snd_pcm_format_t format;	\/* SND_PCM_FORMAT_* *\/$/;"	m	struct:_snd_pcm
format	./src/pcm/pcm_plug.c	/^	snd_pcm_format_t format;$/;"	m	struct:__anon146	file:
format	./src/pcm/pcm_share.c	/^	snd_pcm_format_t format;$/;"	m	struct:__anon118	file:
format	./test/latency.c	/^snd_pcm_format_t format = SND_PCM_FORMAT_S16_LE;$/;"	v
format	./test/pcm.c	/^static snd_pcm_format_t format = SND_PCM_FORMAT_S16;	\/* sample format *\/$/;"	v	file:
format_invalid	./include/sound/hdspm.h	/^	format_invalid,$/;"	e	enum:hdspm_ltc_format
format_parse_char	./src/alisp/alisp.c	/^static int format_parse_char(struct alisp_instance *instance, char **s, int *len, struct alisp_object *p)$/;"	f	file:
format_parse_float	./src/alisp/alisp.c	/^static int format_parse_float(struct alisp_instance *instance, char **s, int *len, struct alisp_object *p)$/;"	f	file:
format_parse_integer	./src/alisp/alisp.c	/^static int format_parse_integer(struct alisp_instance *instance, char **s, int *len, struct alisp_object *p)$/;"	f	file:
format_parse_string	./src/alisp/alisp.c	/^static int format_parse_string(struct alisp_instance *instance, char **s, int *len, struct alisp_object *p)$/;"	f	file:
forward	./include/aserver.h	/^		} forward;$/;"	m	union:__anon53::__anon54	typeref:struct:__anon53::__anon54::__anon60
forward	./src/pcm/pcm_local.h	/^	snd_pcm_sframes_t (*forward)(snd_pcm_t *pcm, snd_pcm_uframes_t frames);$/;"	m	struct:__anon138
forwardable	./src/pcm/pcm_local.h	/^	snd_pcm_sframes_t (*forwardable)(snd_pcm_t *pcm);$/;"	m	struct:__anon138
fp	./src/input.c	/^	FILE *fp;$/;"	m	struct:_snd_input_stdio	file:
fp	./src/output.c	/^	FILE *fp;$/;"	m	struct:_snd_output_stdio	file:
fps_24	./include/sound/hdspm.h	/^	fps_24,$/;"	e	enum:hdspm_ltc_format
fps_25	./include/sound/hdspm.h	/^	fps_25,$/;"	e	enum:hdspm_ltc_format
fps_2997	./include/sound/hdspm.h	/^	fps_2997,$/;"	e	enum:hdspm_ltc_format
fps_30	./include/sound/hdspm.h	/^	fps_30$/;"	e	enum:hdspm_ltc_format
frame	./include/sound/hdspm.h	/^	enum hdspm_ltc_frame frame;$/;"	m	struct:hdspm_ltc	typeref:enum:hdspm_ltc::hdspm_ltc_frame
frame_bits	./src/pcm/pcm_direct.h	/^		unsigned int frame_bits;$/;"	m	struct:__anon123::__anon125
frame_bits	./src/pcm/pcm_local.h	/^	unsigned int frame_bits;$/;"	m	struct:_snd_pcm
frame_format	./include/sound/hdspm.h	/^			uint8_t frame_format; \/* enum hdspm_madi_frame_format *\/$/;"	m	struct:hdspm_status::__anon8::__anon9
frame_invalid	./include/sound/hdspm.h	/^	frame_invalid,$/;"	e	enum:hdspm_ltc_frame
frames	./include/aserver.h	/^			snd_pcm_sframes_t frames;$/;"	m	struct:__anon53::__anon54::__anon57
frames	./include/aserver.h	/^			snd_pcm_uframes_t frames;$/;"	m	struct:__anon53::__anon54::__anon56
frames	./include/aserver.h	/^			snd_pcm_uframes_t frames;$/;"	m	struct:__anon53::__anon54::__anon59
frames	./include/aserver.h	/^			snd_pcm_uframes_t frames;$/;"	m	struct:__anon53::__anon54::__anon60
frames	./include/aserver.h	/^			snd_pcm_uframes_t frames;$/;"	m	struct:__anon53::__anon54::__anon62
frames	./include/sound/asound.h	/^	sndrv_pcm_uframes_t frames;$/;"	m	struct:sndrv_xferi
frames	./include/sound/asound.h	/^	sndrv_pcm_uframes_t frames;$/;"	m	struct:sndrv_xfern
free	./include/pcm_rate.h	/^	void (*free)(void *obj);$/;"	m	struct:snd_pcm_rate_old_ops
free	./include/pcm_rate.h	/^	void (*free)(void *obj);$/;"	m	struct:snd_pcm_rate_ops
free_elems	./src/control/setup.c	/^static int free_elems(snd_sctl_t *h)$/;"	f	file:
free_key	./include/control_external.h	/^	void (*free_key)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key);$/;"	m	struct:snd_ctl_ext_callback
free_local_string	./src/conf.c	/^static void free_local_string(struct local_string *s)$/;"	f	file:
free_object	./src/alisp/alisp.c	/^static void free_object(struct alisp_object * p)$/;"	f	file:
free_objects	./src/alisp/alisp.c	/^static void free_objects(struct alisp_instance *instance)$/;"	f	file:
free_objs	./src/alisp/alisp_local.h	/^	long free_objs;$/;"	m	struct:alisp_instance
free_objs_list	./src/alisp/alisp_local.h	/^	struct list_head free_objs_list;$/;"	m	struct:alisp_instance	typeref:struct:alisp_instance::list_head
freq	./test/pcm.c	/^static double freq = 440;				\/* sinusoidal wave frequency in Hz *\/$/;"	v	file:
from_user	./src/mixer/simple_none.c	/^static long from_user(selem_none_t *s, int dir, selem_ctl_t *c, long value)$/;"	f	file:
fs	./test/latency.c	/^float lfo,dlfo,fs,fc,BW,C,D,a0,a1,a2,b1,b2,*x[3],*y[3];$/;"	v
full_frame	./include/sound/hdspm.h	/^	full_frame$/;"	e	enum:hdspm_ltc_frame
func	./src/alisp/alisp.c	/^	struct alisp_object * (*func)(struct alisp_instance *instance, struct alisp_object * args);$/;"	m	struct:intrinsic	typeref:struct:intrinsic::func	file:
func	./src/alisp/alisp_snd.c	/^	struct alisp_object * (*func) (struct alisp_instance *instance, struct acall_table * item, struct alisp_object * args);$/;"	m	struct:acall_table	typeref:struct:acall_table::func	file:
func	./src/dlmisc.c	/^	void *func;$/;"	m	struct:dlobj_cache	file:
func	./src/pcm/pcm_adpcm.c	/^	adpcm_f func;$/;"	m	struct:__anon104	file:
func	./src/pcm/pcm_alaw.c	/^	alaw_f func;$/;"	m	struct:__anon102	file:
func	./src/pcm/pcm_hooks.c	/^	snd_pcm_hook_func_t func;$/;"	m	struct:_snd_pcm_hook	file:
func	./src/pcm/pcm_iec958.c	/^	iec958_f func;$/;"	m	struct:snd_pcm_iec958	file:
func	./src/pcm/pcm_lfloat.c	/^	void (*func)(const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset,$/;"	m	struct:__anon112	file:
func	./src/pcm/pcm_mulaw.c	/^	mulaw_f func;$/;"	m	struct:__anon147	file:
func	./src/pcm/pcm_params.c	/^	snd_pcm_hw_rule_func_t func;$/;"	m	struct:_snd_pcm_hw_rule	file:
func	./src/pcm/pcm_rate_linear.c	/^	void (*func)(struct rate_linear *rate,$/;"	m	struct:rate_linear	file:
func	./src/pcm/pcm_route.c	/^	route_f func;$/;"	m	struct:snd_pcm_route_ttable_dst	file:
func_extract_an_archive	./libtool	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	./ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	./libtool	/^func_extract_archives ()$/;"	f
func_extract_archives	./ltmain.sh	/^func_extract_archives ()$/;"	f
func_infer_tag	./libtool	/^func_infer_tag ()$/;"	f
func_infer_tag	./ltmain.sh	/^func_infer_tag ()$/;"	f
func_mktempdir	./libtool	/^func_mktempdir ()$/;"	f
func_mktempdir	./ltmain.sh	/^func_mktempdir ()$/;"	f
func_nr	./include/sound/sb16_csp.h	/^	unsigned short func_nr;		\/* function number *\/$/;"	m	struct:snd_sb_csp_info
func_req	./include/sound/sb16_csp.h	/^	unsigned short func_req;	\/* requested function *\/$/;"	m	struct:snd_sb_csp_mc_header
func_win32_libid	./libtool	/^func_win32_libid ()$/;"	f
func_win32_libid	./ltmain.sh	/^func_win32_libid ()$/;"	f
fxbus_names	./include/sound/emu10k1.h	/^	char fxbus_names[16][32];		\/* names of FXBUSes *\/$/;"	m	struct:__anon15
gen	./src/pcm/pcm_file.c	/^	snd_pcm_generic_t gen;$/;"	m	struct:__anon121	file:
gen	./src/pcm/pcm_hooks.c	/^	snd_pcm_generic_t gen;$/;"	m	struct:__anon122	file:
gen	./src/pcm/pcm_meter.c	/^	snd_pcm_generic_t gen;$/;"	m	struct:_snd_pcm_meter	file:
gen	./src/pcm/pcm_mmap_emul.c	/^	snd_pcm_generic_t gen;$/;"	m	struct:__anon139	file:
gen	./src/pcm/pcm_plug.c	/^	snd_pcm_generic_t gen;$/;"	m	struct:__anon145	file:
gen	./src/pcm/pcm_plugin.h	/^	snd_pcm_generic_t gen;$/;"	m	struct:__anon106
gen	./src/pcm/pcm_rate.c	/^	snd_pcm_generic_t gen;$/;"	m	struct:_snd_pcm_rate	file:
general_4	./test/midifile.h	69;"	d
general_5	./test/midifile.h	71;"	d
general_6	./test/midifile.h	72;"	d
general_7	./test/midifile.h	73;"	d
general_8	./test/midifile.h	74;"	d
generate_sine	./test/pcm.c	/^static void generate_sine(const snd_pcm_channel_area_t *areas, $/;"	f	file:
generic_dmix_supported_format	./src/pcm/pcm_dmix_generic.c	122;"	d	file:
generic_mix_areas_16_native	./src/pcm/pcm_dmix_generic.c	/^static void generic_mix_areas_16_native(unsigned int size,$/;"	f	file:
generic_mix_areas_16_swap	./src/pcm/pcm_dmix_generic.c	/^static void generic_mix_areas_16_swap(unsigned int size,$/;"	f	file:
generic_mix_areas_24	./src/pcm/pcm_dmix_generic.c	/^static void generic_mix_areas_24(unsigned int size,$/;"	f	file:
generic_mix_areas_32_native	./src/pcm/pcm_dmix_generic.c	/^static void generic_mix_areas_32_native(unsigned int size,$/;"	f	file:
generic_mix_areas_32_swap	./src/pcm/pcm_dmix_generic.c	/^static void generic_mix_areas_32_swap(unsigned int size,$/;"	f	file:
generic_mix_areas_u8	./src/pcm/pcm_dmix_generic.c	/^static void generic_mix_areas_u8(unsigned int size,$/;"	f	file:
generic_mix_select_callbacks	./src/pcm/pcm_dmix_generic.c	/^static void generic_mix_select_callbacks(snd_pcm_direct_t *dmix)$/;"	f	file:
generic_remix_areas_16_native	./src/pcm/pcm_dmix_generic.c	/^static void generic_remix_areas_16_native(unsigned int size,$/;"	f	file:
generic_remix_areas_16_swap	./src/pcm/pcm_dmix_generic.c	/^static void generic_remix_areas_16_swap(unsigned int size,$/;"	f	file:
generic_remix_areas_24	./src/pcm/pcm_dmix_generic.c	/^static void generic_remix_areas_24(unsigned int size,$/;"	f	file:
generic_remix_areas_32_native	./src/pcm/pcm_dmix_generic.c	/^static void generic_remix_areas_32_native(unsigned int size,$/;"	f	file:
generic_remix_areas_32_swap	./src/pcm/pcm_dmix_generic.c	/^static void generic_remix_areas_32_swap(unsigned int size,$/;"	f	file:
generic_remix_areas_u8	./src/pcm/pcm_dmix_generic.c	/^static void generic_remix_areas_u8(unsigned int size,$/;"	f	file:
get16_labels	./src/pcm/plugin_ops.h	/^static void *const get16_labels[4 * 2 * 2 + 4 * 3] = {$/;"	v
get32_labels	./src/pcm/plugin_ops.h	/^static void *const get32_labels[4 * 2 * 2 + 4 * 3] = {$/;"	v
get32float_labels	./src/pcm/plugin_ops.h	/^static void *const get32float_labels[2 * 2] = {$/;"	v
get_C_ptr	./modules/mixer/simple/python.c	/^static void *get_C_ptr(PyObject *obj, const char *attr)$/;"	f	file:
get_attribute	./include/control_external.h	/^	int (*get_attribute)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key,$/;"	m	struct:snd_ctl_ext_callback
get_card_name	./src/control/namehint.c	/^static int get_card_name(struct hint_list *list, int card)$/;"	f	file:
get_char	./src/conf.c	/^static int get_char(input_t *input)$/;"	f	file:
get_char_skip_comments	./src/conf.c	/^static int get_char_skip_comments(input_t *input)$/;"	f	file:
get_client_info	./src/seq/seq_local.h	/^	int (*get_client_info)(snd_seq_t *seq, snd_seq_client_info_t * info);$/;"	m	struct:__anon97
get_client_pool	./src/seq/seq_local.h	/^	int (*get_client_pool)(snd_seq_t *seq, snd_seq_client_pool_t *info);$/;"	m	struct:__anon97
get_compare_weight	./src/control/hcontrol.c	/^static int get_compare_weight(const snd_ctl_elem_id_t *id)$/;"	f	file:
get_compare_weight	./src/mixer/simple_none.c	/^static int get_compare_weight(const char *name, unsigned int idx)$/;"	f	file:
get_ctl_enum_item_index	./src/control/ctlparse.c	/^static int get_ctl_enum_item_index(snd_ctl_t *handle,$/;"	f	file:
get_current_volume	./src/pcm/pcm_softvol.c	/^static void get_current_volume(snd_pcm_softvol_t *svol)$/;"	f	file:
get_dB	./include/mixer_abst.h	/^	int (*get_dB)(snd_mixer_elem_t *elem, int dir, snd_mixer_selem_channel_id_t channel, long *value);$/;"	m	struct:sm_elem_ops
get_dB_ops	./modules/mixer/simple/python.c	/^static int get_dB_ops(snd_mixer_elem_t *elem,$/;"	f	file:
get_dB_ops	./modules/mixer/simple/sbase.c	/^static int get_dB_ops(snd_mixer_elem_t *elem ATTRIBUTE_UNUSED,$/;"	f	file:
get_dB_ops	./src/mixer/simple_none.c	/^static int get_dB_ops(snd_mixer_elem_t *elem,$/;"	f	file:
get_dB_range	./include/mixer_abst.h	/^	int (*get_dB_range)(snd_mixer_elem_t *elem, int dir, long *min, long *max);$/;"	m	struct:sm_elem_ops
get_dB_range	./src/mixer/simple_none.c	/^static int get_dB_range(snd_hctl_elem_t *ctl, struct selem_str *rec,$/;"	f	file:
get_dB_range_ops	./modules/mixer/simple/python.c	/^static int get_dB_range_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
get_dB_range_ops	./modules/mixer/simple/sbase.c	/^static int get_dB_range_ops(snd_mixer_elem_t *elem ATTRIBUTE_UNUSED,$/;"	f	file:
get_dB_range_ops	./src/mixer/simple_none.c	/^static int get_dB_range_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
get_delimstring	./src/conf.c	/^static int get_delimstring(char **string, int delim, input_t *input)$/;"	f	file:
get_dev_name	./src/control/namehint.c	/^static char *get_dev_name(struct hint_list *list)$/;"	f	file:
get_dev_name1	./src/control/namehint.c	/^static int get_dev_name1(struct hint_list *list, char **res, int device,$/;"	f	file:
get_device_list	./src/ucm/main.c	/^static int get_device_list(snd_use_case_mgr_t *uc_mgr, const char **list[],$/;"	f	file:
get_elem	./src/control/control_ext.c	/^static snd_ctl_ext_key_t get_elem(snd_ctl_ext_t *ext, snd_ctl_elem_id_t *id)$/;"	f	file:
get_enabled_device_list	./src/ucm/main.c	/^static int get_enabled_device_list(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
get_enabled_modifier_list	./src/ucm/main.c	/^static int get_enabled_modifier_list(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
get_enum_item	./include/mixer_abst.h	/^	int (*get_enum_item)(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, unsigned int *itemp);$/;"	m	struct:sm_elem_ops
get_enum_item_ops	./modules/mixer/simple/python.c	/^static int get_enum_item_ops(snd_mixer_elem_t *elem,$/;"	f	file:
get_enum_item_ops	./modules/mixer/simple/sbase.c	/^static int get_enum_item_ops(snd_mixer_elem_t *elem ATTRIBUTE_UNUSED,$/;"	f	file:
get_enum_item_ops	./src/mixer/simple_none.c	/^static int get_enum_item_ops(snd_mixer_elem_t *elem,$/;"	f	file:
get_enumerated_info	./include/control_external.h	/^	int (*get_enumerated_info)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, unsigned int *items);$/;"	m	struct:snd_ctl_ext_callback
get_enumerated_name	./include/control_external.h	/^	int (*get_enumerated_name)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, unsigned int item,$/;"	m	struct:snd_ctl_ext_callback
get_flags	./src/alisp/alisp_snd.c	/^static unsigned int get_flags(struct alisp_instance * instance,$/;"	f	file:
get_freestring	./src/conf.c	/^static int get_freestring(char **string, int id, input_t *input)$/;"	f	file:
get_idx	./src/pcm/pcm_linear.c	/^	unsigned int get_idx, put_idx;$/;"	m	struct:__anon105	file:
get_idx	./src/pcm/pcm_rate.c	/^	unsigned int get_idx;$/;"	m	struct:_snd_pcm_rate	file:
get_idx	./src/pcm/pcm_rate_linear.c	/^	unsigned int get_idx;$/;"	m	struct:rate_linear	file:
get_idx	./src/pcm/pcm_route.c	/^	unsigned int get_idx;$/;"	m	struct:__anon141	file:
get_integer	./src/alisp/alisp_snd.c	/^static inline int get_integer(struct alisp_object * obj)$/;"	f	file:
get_integer	./src/control/ctlparse.c	/^static long get_integer(const char **ptr, long min, long max)$/;"	f	file:
get_integer64	./src/control/ctlparse.c	/^static long long get_integer64(const char **ptr, long long min, long long max)$/;"	f	file:
get_integer64_info	./include/control_external.h	/^	int (*get_integer64_info)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key,$/;"	m	struct:snd_ctl_ext_callback
get_integer_info	./include/control_external.h	/^	int (*get_integer_info)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key,$/;"	m	struct:snd_ctl_ext_callback
get_links	./src/pcm/pcm_extplug.c	/^static unsigned int get_links(struct snd_ext_parm *params)$/;"	f	file:
get_list	./src/ucm/main.c	380;"	d	file:
get_list0	./src/ucm/main.c	/^static int get_list0(struct list_head *list,$/;"	f	file:
get_list2	./src/ucm/main.c	436;"	d	file:
get_list20	./src/ucm/main.c	/^static int get_list20(struct list_head *list,$/;"	f	file:
get_modifier_list	./src/ucm/main.c	/^static int get_modifier_list(snd_use_case_mgr_t *uc_mgr, const char **list[],$/;"	f	file:
get_named_queue	./src/seq/seq_local.h	/^	int (*get_named_queue)(snd_seq_t *seq, snd_seq_queue_info_t *info);$/;"	m	struct:__anon97
get_nonwhite	./src/conf.c	/^static int get_nonwhite(input_t *input)$/;"	f	file:
get_object	./src/alisp/alisp.c	/^static struct alisp_object * get_object(struct alisp_instance *instance, struct alisp_object * name)$/;"	f	file:
get_object1	./src/alisp/alisp.c	/^static struct alisp_object * get_object1(struct alisp_instance *instance, const char *id)$/;"	f	file:
get_pointer	./src/alisp/alisp_snd.c	/^static inline const void *get_pointer(struct alisp_object * obj)$/;"	f	file:
get_port_info	./src/seq/seq_local.h	/^	int (*get_port_info)(snd_seq_t *seq, snd_seq_port_info_t * info);$/;"	m	struct:__anon97
get_port_subscription	./src/seq/seq_local.h	/^	int (*get_port_subscription)(snd_seq_t *seq, snd_seq_port_subscribe_t * sub);$/;"	m	struct:__anon97
get_power_state	./src/control/control_local.h	/^	int (*get_power_state)(snd_ctl_t *handle, unsigned int *state);$/;"	m	struct:_snd_ctl_ops
get_ptr	./src/alisp/alisp_snd.c	/^static const void *get_ptr(struct alisp_instance * instance,$/;"	f	file:
get_queue_client	./src/seq/seq_local.h	/^	int (*get_queue_client)(snd_seq_t *seq, snd_seq_queue_client_t * client);$/;"	m	struct:__anon97
get_queue_info	./src/seq/seq_local.h	/^	int (*get_queue_info)(snd_seq_t *seq, snd_seq_queue_info_t *info);$/;"	m	struct:__anon97
get_queue_status	./src/seq/seq_local.h	/^	int (*get_queue_status)(snd_seq_t *seq, snd_seq_queue_status_t * status);$/;"	m	struct:__anon97
get_queue_tempo	./src/seq/seq_local.h	/^	int (*get_queue_tempo)(snd_seq_t *seq, snd_seq_queue_tempo_t * tempo);$/;"	m	struct:__anon97
get_queue_timer	./src/seq/seq_local.h	/^	int (*get_queue_timer)(snd_seq_t *seq, snd_seq_queue_timer_t * timer);$/;"	m	struct:__anon97
get_quotedchar	./src/conf.c	/^static int get_quotedchar(input_t *input)$/;"	f	file:
get_range	./include/mixer_abst.h	/^	int (*get_range)(snd_mixer_elem_t *elem, int dir, long *min, long *max);$/;"	m	struct:sm_elem_ops
get_range_ops	./modules/mixer/simple/python.c	/^static int get_range_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
get_range_ops	./modules/mixer/simple/sbase.c	/^static int get_range_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
get_range_ops	./src/mixer/simple_none.c	/^static int get_range_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
get_selem_ctl	./src/mixer/simple_none.c	/^static selem_ctl_t *get_selem_ctl(selem_none_t *s, int dir)$/;"	f	file:
get_short_name	./src/mixer/simple_none.c	/^static const char *get_short_name(const char *lname)$/;"	f	file:
get_string	./src/alisp/alisp_snd.c	/^static const char *get_string(struct alisp_object * obj, const char * deflt)$/;"	f	file:
get_string	./src/conf.c	/^static int get_string(char **string, int id, input_t *input)$/;"	f	file:
get_string_hash	./src/alisp/alisp.c	/^static int get_string_hash(const char *s)$/;"	f	file:
get_supported_rates	./include/pcm_rate.h	/^	int (*get_supported_rates)(void *obj, unsigned int *rate_min,$/;"	m	struct:snd_pcm_rate_ops
get_supported_rates	./src/pcm/pcm_rate_linear.c	/^static int get_supported_rates(ATTRIBUTE_UNUSED void *rate,$/;"	f	file:
get_switch	./include/mixer_abst.h	/^	int (*get_switch)(snd_mixer_elem_t *elem, int dir, snd_mixer_selem_channel_id_t channel, int *value);$/;"	m	struct:sm_elem_ops
get_switch_ops	./modules/mixer/simple/python.c	/^static int get_switch_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
get_switch_ops	./modules/mixer/simple/sbase.c	/^static int get_switch_ops(snd_mixer_elem_t *elem ATTRIBUTE_UNUSED,$/;"	f	file:
get_switch_ops	./src/mixer/simple_none.c	/^static int get_switch_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
get_tlv_info	./src/control/tlv.c	/^static int get_tlv_info(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id,$/;"	f	file:
get_tmp_name	./src/pcm/pcm_direct.c	/^static int get_tmp_name(char *filename, size_t size)$/;"	f	file:
get_value	./src/ucm/main.c	/^static int get_value(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
get_value1	./src/ucm/main.c	/^static int get_value1(const char **value, struct list_head *value_list,$/;"	f	file:
get_value3	./src/ucm/main.c	/^static int get_value3(const char **value,$/;"	f	file:
get_value_list	./src/ucm/main.c	/^static int get_value_list(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
get_verb_list	./src/ucm/main.c	/^static int get_verb_list(snd_use_case_mgr_t *uc_mgr, const char **list[])$/;"	f	file:
get_volume	./include/mixer_abst.h	/^	int (*get_volume)(snd_mixer_elem_t *elem, int dir, snd_mixer_selem_channel_id_t channel, long *value);$/;"	m	struct:sm_elem_ops
get_volume_ops	./modules/mixer/simple/python.c	/^static int get_volume_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
get_volume_ops	./modules/mixer/simple/sbase.c	/^static int get_volume_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
get_volume_ops	./src/mixer/simple_none.c	/^static int get_volume_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
get_x_ops	./modules/mixer/simple/python.c	/^static int get_x_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
get_x_range_ops	./modules/mixer/simple/python.c	/^static int get_x_range_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
getch	./src/input.c	/^	int (*getch)(snd_input_t *input);$/;"	m	struct:_snd_input_ops	file:
getput_idx	./src/pcm/pcm_adpcm.c	/^	unsigned int getput_idx;$/;"	m	struct:__anon104	file:
getput_idx	./src/pcm/pcm_alaw.c	/^	unsigned int getput_idx;$/;"	m	struct:__anon102	file:
getput_idx	./src/pcm/pcm_iec958.c	/^	unsigned int getput_idx;$/;"	m	struct:snd_pcm_iec958	file:
getput_idx	./src/pcm/pcm_mulaw.c	/^	unsigned int getput_idx;$/;"	m	struct:__anon147	file:
gets	./src/input.c	/^	char *(*(gets))(snd_input_t *input, char *str, size_t size);$/;"	m	struct:_snd_input_ops	file:
gets_labels	./src/pcm/plugin_ops.h	/^static void *const gets_labels[4 * 2 * 2] = {$/;"	v
gettimestamp	./src/pcm/pcm_local.h	/^static inline void gettimestamp(snd_htimestamp_t *tstamp, int monotonic)$/;"	f
gettimestamp	./test/latency.c	/^void gettimestamp(snd_pcm_t *handle, snd_timestamp_t *timestamp)$/;"	f
gettoken	./src/alisp/alisp.c	/^static int gettoken(struct alisp_instance *instance)$/;"	f	file:
getu_labels	./src/pcm/plugin_ops.h	/^static void *const getu_labels[4 * 2 * 2] = {$/;"	v
glist	./include/local.h	/^	struct list_head glist;$/;"	m	struct:_snd_async_handler	typeref:struct:_snd_async_handler::list_head
gpr	./include/sound/emu10k1.h	/^	unsigned short gpr[32];		\/* GPR number(s) *\/$/;"	m	struct:__anon17
gpr_add_control_count	./include/sound/emu10k1.h	/^	unsigned int gpr_add_control_count; \/* count of GPR controls to add\/replace *\/$/;"	m	struct:__anon18
gpr_add_controls	./include/sound/emu10k1.h	/^	emu10k1_fx8010_control_gpr_t *gpr_add_controls; \/* GPR controls to add\/replace *\/$/;"	m	struct:__anon18
gpr_controls	./include/sound/emu10k1.h	/^	unsigned int gpr_controls;		\/* count of GPR controls *\/$/;"	m	struct:__anon15
gpr_count	./include/sound/emu10k1.h	/^	unsigned short gpr_count;	\/* GPR containing count of samples between two interrupts (host) *\/$/;"	m	struct:__anon20
gpr_del_control_count	./include/sound/emu10k1.h	/^	unsigned int gpr_del_control_count; \/* count of GPR controls to remove *\/$/;"	m	struct:__anon18
gpr_del_controls	./include/sound/emu10k1.h	/^	emu10k1_ctl_elem_id_t *gpr_del_controls; \/* IDs of GPR controls to remove *\/$/;"	m	struct:__anon18
gpr_list_control_count	./include/sound/emu10k1.h	/^	unsigned int gpr_list_control_count; \/* count of GPR controls to list *\/$/;"	m	struct:__anon18
gpr_list_control_total	./include/sound/emu10k1.h	/^	unsigned int gpr_list_control_total; \/* total count of GPR controls *\/$/;"	m	struct:__anon18
gpr_list_controls	./include/sound/emu10k1.h	/^	emu10k1_fx8010_control_gpr_t *gpr_list_controls; \/* listed GPR controls *\/$/;"	m	struct:__anon18
gpr_map	./include/sound/emu10k1.h	/^	uint32_t *gpr_map;		  \/* initializers *\/$/;"	m	struct:__anon18
gpr_ptr	./include/sound/emu10k1.h	/^	unsigned short gpr_ptr;		\/* GPR containing current pointer in the ring buffer (host = reset, FX8010) *\/$/;"	m	struct:__anon20
gpr_running	./include/sound/emu10k1.h	/^	unsigned short gpr_running;	\/* GPR containing info if PCM is running (FX8010) *\/$/;"	m	struct:__anon20
gpr_size	./include/sound/emu10k1.h	/^	unsigned short gpr_size;		\/* GPR containing size of ringbuffer in samples (host) *\/$/;"	m	struct:__anon20
gpr_tmpcount	./include/sound/emu10k1.h	/^	unsigned short gpr_tmpcount;	\/* GPR containing current count of samples to interrupt (host = set, FX8010) *\/$/;"	m	struct:__anon20
gpr_trigger	./include/sound/emu10k1.h	/^	unsigned short gpr_trigger;	\/* GPR containing trigger (activate) information (host) *\/$/;"	m	struct:__anon20
gpr_valid	./include/sound/emu10k1.h	/^	unsigned long gpr_valid[0x200\/(sizeof(unsigned long)*8)]; \/* bitmask of valid initializers *\/$/;"	m	struct:__anon18
handle	./aserver/aserver.c	/^			snd_ctl_t *handle;$/;"	m	struct:client::__anon2::__anon4	file:
handle	./aserver/aserver.c	/^			snd_pcm_t *handle;$/;"	m	struct:client::__anon2::__anon3	file:
handle	./include/control_external.h	/^	snd_ctl_t *handle;$/;"	m	struct:snd_ctl_ext
handle	./src/pcm/pcm_ladspa.c	/^	LADSPA_Handle *handle;$/;"	m	struct:snd_pcm_ladspa_instance	file:
handle	./src/rawmidi/rawmidi_virt.c	/^	snd_seq_t *handle;$/;"	m	struct:__anon101	file:
handle_transition_verb	./src/ucm/main.c	/^static int handle_transition_verb(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
handler	./aserver/aserver.c	/^	waiter_handler_t handler;$/;"	m	struct:waiter	file:
harmonic	./include/sound/asound_fm.h	/^	unsigned char harmonic;		\/* 4 bits: harmonic and multiplier *\/$/;"	m	struct:snd_dm_fm_voice
hcreate_r	./src/compat/hsearch_r.c	/^hcreate_r (nel, htab)$/;"	f
hctl	./include/mixer_abst.h	/^	snd_hctl_t *hctl;$/;"	m	struct:_sm_class_basic
hctl	./modules/mixer/simple/python.c	/^	void **hctl;$/;"	m	struct:pymixer	file:
hctl	./src/control/control_local.h	/^	snd_hctl_t *hctl;		\/* associated handle *\/$/;"	m	struct:_snd_hctl_elem
hctl	./src/mixer/mixer.c	/^	snd_hctl_t *hctl;$/;"	m	struct:_snd_mixer_slave	file:
hctl	./src/mixer/simple_abst.c	/^	snd_hctl_t *hctl;$/;"	m	struct:_class_priv	file:
hctl_compare	./src/control/hcontrol.c	/^static int hctl_compare(const void *a, const void *b) {$/;"	f	file:
hctl_count	./modules/mixer/simple/python.c	/^	int hctl_count;$/;"	m	struct:pymixer	file:
hctl_elem_event_handler	./src/mixer/mixer.c	/^static int hctl_elem_event_handler(snd_hctl_elem_t *helem,$/;"	f	file:
hctl_event_handler	./src/mixer/mixer.c	/^static int hctl_event_handler(snd_hctl_t *hctl, unsigned int mask,$/;"	f	file:
hdestroy_r	./src/compat/hsearch_r.c	/^hdestroy_r (htab)$/;"	f
hdsp_9632_aeb_t	./include/sound/hdsp.h	/^typedef struct _snd_hdsp_9632_aeb hdsp_9632_aeb_t;$/;"	t	typeref:struct:_snd_hdsp_9632_aeb
hdsp_config_info_t	./include/sound/hdsp.h	/^typedef struct _snd_hdsp_config_info hdsp_config_info_t;$/;"	t	typeref:struct:_snd_hdsp_config_info
hdsp_firmware_t	./include/sound/hdsp.h	/^typedef struct _snd_hdsp_firmware hdsp_firmware_t;$/;"	t	typeref:struct:_snd_hdsp_firmware
hdsp_mixer_t	./include/sound/hdsp.h	/^typedef struct _snd_hdsp_mixer hdsp_mixer_t;$/;"	t	typeref:struct:_snd_hdsp_mixer
hdsp_peak_rms_t	./include/sound/hdsp.h	/^typedef struct _snd_hdsp_peak_rms hdsp_peak_rms_t;$/;"	t	typeref:struct:_snd_hdsp_peak_rms
hdsp_version_t	./include/sound/hdsp.h	/^typedef struct _snd_hdsp_version hdsp_version_t;$/;"	t	typeref:struct:_snd_hdsp_version
hdspm_channelfader	./include/sound/hdspm.h	/^struct hdspm_channelfader {$/;"	s
hdspm_config	./include/sound/hdspm.h	/^struct hdspm_config {$/;"	s
hdspm_config_info_t	./include/sound/hdspm.h	/^typedef struct hdspm_config_info hdspm_config_info_t;$/;"	t	typeref:struct:hdspm_config_info
hdspm_format_ch_56	./include/sound/hdspm.h	/^	hdspm_format_ch_56 = 1$/;"	e	enum:hdspm_madi_channel_format
hdspm_format_ch_64	./include/sound/hdspm.h	/^	hdspm_format_ch_64 = 0,$/;"	e	enum:hdspm_madi_channel_format
hdspm_frame_48	./include/sound/hdspm.h	/^	hdspm_frame_48 = 0,$/;"	e	enum:hdspm_madi_frame_format
hdspm_frame_96	./include/sound/hdspm.h	/^	hdspm_frame_96 = 1$/;"	e	enum:hdspm_madi_frame_format
hdspm_input_coax	./include/sound/hdspm.h	/^	hdspm_input_coax = 1$/;"	e	enum:hdspm_madi_input
hdspm_input_optical	./include/sound/hdspm.h	/^	hdspm_input_optical = 0,$/;"	e	enum:hdspm_madi_input
hdspm_io_type	./include/sound/hdspm.h	/^enum hdspm_io_type {$/;"	g
hdspm_ltc	./include/sound/hdspm.h	/^struct hdspm_ltc {$/;"	s
hdspm_ltc_format	./include/sound/hdspm.h	/^enum hdspm_ltc_format {$/;"	g
hdspm_ltc_frame	./include/sound/hdspm.h	/^enum hdspm_ltc_frame {$/;"	g
hdspm_ltc_input_format	./include/sound/hdspm.h	/^enum hdspm_ltc_input_format {$/;"	g
hdspm_madi_channel_format	./include/sound/hdspm.h	/^enum hdspm_madi_channel_format {$/;"	g
hdspm_madi_frame_format	./include/sound/hdspm.h	/^enum hdspm_madi_frame_format {$/;"	g
hdspm_madi_input	./include/sound/hdspm.h	/^enum hdspm_madi_input {$/;"	g
hdspm_mixer	./include/sound/hdspm.h	/^struct hdspm_mixer {$/;"	s
hdspm_mixer_ioctl	./include/sound/hdspm.h	/^struct hdspm_mixer_ioctl {$/;"	s
hdspm_mixer_t	./include/sound/hdspm.h	/^typedef struct hdspm_mixer hdspm_mixer_t;$/;"	t	typeref:struct:hdspm_mixer
hdspm_peak_rms	./include/sound/hdspm.h	/^struct hdspm_peak_rms {$/;"	s
hdspm_peak_rms_t	./include/sound/hdspm.h	/^typedef struct hdspm_peak_rms hdspm_peak_rms_t;$/;"	t	typeref:struct:hdspm_peak_rms
hdspm_speed	./include/sound/hdspm.h	/^enum hdspm_speed {$/;"	g
hdspm_status	./include/sound/hdspm.h	/^struct hdspm_status {$/;"	s
hdspm_sync	./include/sound/hdspm.h	/^enum hdspm_sync {$/;"	g
hdspm_sync_lock	./include/sound/hdspm.h	/^	hdspm_sync_lock = 1,$/;"	e	enum:hdspm_sync
hdspm_sync_no_lock	./include/sound/hdspm.h	/^	hdspm_sync_no_lock = 0,$/;"	e	enum:hdspm_sync
hdspm_sync_sync	./include/sound/hdspm.h	/^	hdspm_sync_sync = 2$/;"	e	enum:hdspm_sync
hdspm_syncsource	./include/sound/hdspm.h	/^enum hdspm_syncsource {$/;"	g
hdspm_version	./include/sound/hdspm.h	/^struct hdspm_version {$/;"	s
hdspm_version_t	./include/sound/hdspm.h	/^typedef struct hdspm_version hdspm_version_t;$/;"	t	typeref:struct:hdspm_version
helem	./modules/mixer/simple/python.c	/^	void **helem;$/;"	m	struct:pymixer	file:
helem	./modules/mixer/simple/sbase.h	/^	snd_hctl_elem_t *helem;$/;"	m	struct:helem_base
helem_base	./modules/mixer/simple/sbase.h	/^struct helem_base {$/;"	s
helem_count	./modules/mixer/simple/python.c	/^	int helem_count;$/;"	m	struct:pymixer	file:
helem_selector	./modules/mixer/simple/sbase.h	/^struct helem_selector {$/;"	s
helems	./modules/mixer/simple/sbase.h	/^	struct list_head helems;$/;"	m	struct:selem_base	typeref:struct:selem_base::list_head
helems	./src/mixer/mixer_local.h	/^	bag_t helems;$/;"	m	struct:_snd_mixer_elem
help	./test/latency.c	/^void help(void)$/;"	f
help	./test/pcm.c	/^static void help(void)$/;"	f	file:
help	./test/seq.c	/^static void help(void)$/;"	f	file:
hihat	./include/sound/asound_fm.h	/^	unsigned char hihat;$/;"	m	struct:snd_dm_fm_params
hint_list	./src/control/namehint.c	/^struct hint_list {$/;"	s	file:
hint_list_add	./src/control/namehint.c	/^static int hint_list_add(struct hint_list *list,$/;"	f	file:
hlist	./include/local.h	/^	struct list_head hlist;$/;"	m	struct:_snd_async_handler	typeref:struct:_snd_async_handler::list_head
hold_2	./test/midifile.h	70;"	d
hook_add_dlobj	./src/pcm/pcm_hooks.c	/^static int hook_add_dlobj(snd_pcm_t *pcm, void *dlobj)$/;"	f	file:
hook_remove_dlobj	./src/pcm/pcm_hooks.c	/^static void hook_remove_dlobj(struct snd_pcm_hook_dllist *dl)$/;"	f	file:
hooks	./src/pcm/pcm_hooks.c	/^	struct list_head hooks[SND_PCM_HOOK_TYPE_LAST + 1];$/;"	m	struct:__anon122	typeref:struct:__anon122::list_head	file:
hop	./src/conf.c	/^	int hop;$/;"	m	struct:_snd_config	file:
hsearch_data	./include/search.h	/^struct hsearch_data$/;"	s
hsearch_r	./src/compat/hsearch_r.c	/^hsearch_r (item, action, retval, htab)$/;"	f
htimestamp	./src/pcm/pcm_local.h	/^	int (*htimestamp)(snd_pcm_t *pcm, snd_pcm_uframes_t *avail, snd_htimestamp_t *tstamp);$/;"	m	struct:__anon138
hw	./include/aserver.h	/^	snd_pcm_shm_rbptr_t hw;$/;"	m	struct:__anon53
hw	./src/pcm/pcm_direct.h	/^	} hw;$/;"	m	struct:__anon123	typeref:struct:__anon123::__anon124
hw	./src/pcm/pcm_local.h	/^	snd_pcm_rbptr_t hw;$/;"	m	struct:_snd_pcm
hw_fd	./src/pcm/pcm_direct.h	/^	int hw_fd;			\/* hardware file descriptor *\/$/;"	m	struct:snd_pcm_direct
hw_flags	./src/pcm/pcm_direct.h	/^		unsigned int hw_flags;$/;"	m	struct:__anon123::__anon125
hw_flags	./src/pcm/pcm_local.h	/^	unsigned int hw_flags;		\/* actual hardware flags *\/$/;"	m	struct:_snd_pcm
hw_free	./include/pcm_extplug.h	/^	int (*hw_free)(snd_pcm_extplug_t *ext);$/;"	m	struct:snd_pcm_extplug_callback
hw_free	./include/pcm_ioplug.h	/^	int (*hw_free)(snd_pcm_ioplug_t *io);$/;"	m	struct:snd_pcm_ioplug_callback
hw_free	./src/pcm/pcm_local.h	/^	int (*hw_free)(snd_pcm_t *pcm);$/;"	m	struct:__anon137
hw_is_interval	./src/pcm/pcm_params.c	/^static inline int hw_is_interval(snd_pcm_hw_param_t var)$/;"	f	file:
hw_is_mask	./src/pcm/pcm_params.c	/^static inline int hw_is_mask(snd_pcm_hw_param_t var)$/;"	f	file:
hw_link	./src/pcm/pcm_hw.c	/^static int hw_link(snd_pcm_t *pcm1, snd_pcm_t *pcm2)$/;"	f	file:
hw_param_interval	./src/pcm/pcm_direct.c	/^static inline snd_interval_t *hw_param_interval(snd_pcm_hw_params_t *params,$/;"	f	file:
hw_param_interval	./src/pcm/pcm_ext_parm.h	/^static inline snd_interval_t *hw_param_interval(snd_pcm_hw_params_t *params,$/;"	f
hw_param_interval	./src/pcm/pcm_params.c	84;"	d	file:
hw_param_interval_c	./src/pcm/pcm_params.c	88;"	d	file:
hw_param_interval_refine_minmax	./src/pcm/pcm_direct.c	/^static int hw_param_interval_refine_minmax(snd_pcm_hw_params_t *params,$/;"	f	file:
hw_param_interval_refine_one	./src/pcm/pcm_direct.c	/^static int hw_param_interval_refine_one(snd_pcm_hw_params_t *params,$/;"	f	file:
hw_param_mask	./src/pcm/pcm_direct.c	/^static inline snd_mask_t *hw_param_mask(snd_pcm_hw_params_t *params,$/;"	f	file:
hw_param_mask	./src/pcm/pcm_ext_parm.h	/^static inline snd_mask_t *hw_param_mask(snd_pcm_hw_params_t *params,$/;"	f
hw_param_mask	./src/pcm/pcm_params.c	81;"	d	file:
hw_param_mask_c	./src/pcm/pcm_params.c	87;"	d	file:
hw_params	./include/aserver.h	/^		snd_pcm_hw_params_t hw_params;$/;"	m	union:__anon53::__anon54
hw_params	./include/pcm_extplug.h	/^	int (*hw_params)(snd_pcm_extplug_t *ext, snd_pcm_hw_params_t *params);$/;"	m	struct:snd_pcm_extplug_callback
hw_params	./include/pcm_ioplug.h	/^	int (*hw_params)(snd_pcm_ioplug_t *io, snd_pcm_hw_params_t *params);$/;"	m	struct:snd_pcm_ioplug_callback
hw_params	./src/pcm/pcm_local.h	/^	int (*hw_params)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params);$/;"	m	struct:__anon137
hw_params_call	./src/pcm/pcm_hw.c	/^static inline int hw_params_call(snd_pcm_hw_t *pcm_hw, snd_pcm_hw_params_t *params)$/;"	f	file:
hw_params_type	./src/pcm/pcm_extplug.c	/^static const int hw_params_type[SND_PCM_EXTPLUG_HW_PARAMS] = {$/;"	v	file:
hw_params_type	./src/pcm/pcm_ioplug.c	/^static const int hw_params_type[SND_PCM_IOPLUG_HW_PARAMS] = {$/;"	v	file:
hw_ptr	./include/pcm_ioplug.h	/^	volatile snd_pcm_uframes_t hw_ptr;	\/**< hw pointer; read-only *\/$/;"	m	struct:snd_pcm_ioplug
hw_ptr	./include/sound/asound.h	/^	sndrv_pcm_uframes_t hw_ptr;	\/* RO: hw ptr (0...boundary-1) *\/$/;"	m	struct:sndrv_pcm_mmap_status
hw_ptr	./include/sound/asound.h	/^	sndrv_pcm_uframes_t hw_ptr;	\/* hw ptr *\/$/;"	m	struct:sndrv_pcm_status
hw_ptr	./src/pcm/pcm_direct.h	/^	snd_pcm_uframes_t hw_ptr;$/;"	m	struct:snd_pcm_direct
hw_ptr	./src/pcm/pcm_hw.c	/^	snd_pcm_uframes_t hw_ptr;$/;"	m	struct:__anon107	file:
hw_ptr	./src/pcm/pcm_mmap_emul.c	/^	snd_pcm_uframes_t hw_ptr;$/;"	m	struct:__anon139	file:
hw_ptr	./src/pcm/pcm_null.c	/^	snd_pcm_uframes_t hw_ptr;$/;"	m	struct:__anon132	file:
hw_ptr	./src/pcm/pcm_plugin.h	/^	snd_pcm_uframes_t appl_ptr, hw_ptr;$/;"	m	struct:__anon106
hw_ptr	./src/pcm/pcm_rate.c	/^	snd_pcm_uframes_t appl_ptr, hw_ptr;$/;"	m	struct:_snd_pcm_rate	file:
hw_ptr	./src/pcm/pcm_share.c	/^	snd_pcm_uframes_t hw_ptr;$/;"	m	struct:__anon118	file:
hw_ptr	./src/pcm/pcm_share.c	/^	snd_pcm_uframes_t hw_ptr;$/;"	m	struct:__anon119	file:
hw_refine	./include/aserver.h	/^		snd_pcm_hw_params_t hw_refine;$/;"	m	union:__anon53::__anon54
hw_refine	./src/pcm/pcm_local.h	/^	int (*hw_refine)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params);$/;"	m	struct:__anon137
hw_refine_call	./src/pcm/pcm_hw.c	/^static inline int hw_refine_call(snd_pcm_hw_t *pcm_hw, snd_pcm_hw_params_t *params)$/;"	f	file:
hwdep_info	./include/aserver.h	/^		snd_hwdep_info_t hwdep_info;$/;"	m	union:__anon64::__anon65
hwdep_info	./src/control/control_local.h	/^	int (*hwdep_info)(snd_ctl_t *handle, snd_hwdep_info_t * info);$/;"	m	struct:_snd_ctl_ops
hwdep_next_device	./src/control/control_local.h	/^	int (*hwdep_next_device)(snd_ctl_t *handle, int *device);$/;"	m	struct:_snd_ctl_ops
hweight32	./src/pcm/mask_inline.h	/^MASK_INLINE unsigned int hweight32(u_int32_t v)$/;"	f
hwsync	./src/pcm/pcm_local.h	/^	int (*hwsync)(snd_pcm_t *pcm);$/;"	m	struct:__anon138
i	./src/alisp/alisp_local.h	/^		long	i;$/;"	m	union:alisp_object::__anon92
i	./src/pcm/pcm_local.h	/^	int32_t i;$/;"	m	union:snd_tmp_float
i	./src/pcm/pcm_softvol.c	/^	int i;$/;"	m	union:__anon110	file:
i386_dmix_supported_format	./src/pcm/pcm_dmix_i386.c	77;"	d	file:
iACC3	./include/sound/emu10k1.h	44;"	d
iANDXOR	./include/sound/emu10k1.h	46;"	d
iEXP	./include/sound/emu10k1.h	51;"	d
iINTERP	./include/sound/emu10k1.h	52;"	d
iLIMITGE	./include/sound/emu10k1.h	48;"	d
iLIMITLT	./include/sound/emu10k1.h	49;"	d
iLOG	./include/sound/emu10k1.h	50;"	d
iMAC0	./include/sound/emu10k1.h	38;"	d
iMAC1	./include/sound/emu10k1.h	39;"	d
iMAC2	./include/sound/emu10k1.h	40;"	d
iMAC3	./include/sound/emu10k1.h	41;"	d
iMACINT0	./include/sound/emu10k1.h	42;"	d
iMACINT1	./include/sound/emu10k1.h	43;"	d
iMACMV	./include/sound/emu10k1.h	45;"	d
iSKIP	./include/sound/emu10k1.h	53;"	d
iTSTNEG	./include/sound/emu10k1.h	47;"	d
ia64_atomic_add	./include/iatomic.h	/^ia64_atomic_add (int i, atomic_t *v)$/;"	f
ia64_atomic_sub	./include/iatomic.h	/^ia64_atomic_sub (int i, atomic_t *v)$/;"	f
ia64_cmpxchg	./include/iatomic.h	239;"	d
ia64_fetch_and_add	./include/iatomic.h	294;"	d
ibuf	./src/seq/seq_local.h	/^	snd_seq_event_t *ibuf;	\/* input buffer *\/$/;"	m	struct:_snd_seq
ibuflen	./src/seq/seq_local.h	/^	size_t ibuflen;		\/* queued length *\/$/;"	m	struct:_snd_seq
ibufptr	./src/seq/seq_local.h	/^	size_t ibufptr;		\/* current pointer of input buffer *\/$/;"	m	struct:_snd_seq
ibufsize	./src/seq/seq_local.h	/^	size_t ibufsize;		\/* input buffer size *\/$/;"	m	struct:_snd_seq
id	./include/control_external.h	/^	char id[16];$/;"	m	struct:snd_ctl_ext
id	./include/mixer_abst.h	/^	snd_mixer_selem_id_t *id;$/;"	m	struct:_sm_selem
id	./include/pcm.h	/^	unsigned char id[16];$/;"	m	union:_snd_pcm_sync_id
id	./include/sound/asequencer.h	/^			struct sndrv_timer_id id;	\/* ALSA's timer ID *\/$/;"	m	struct:sndrv_seq_queue_timer::__anon12::__anon13	typeref:struct:sndrv_seq_queue_timer::__anon12::__anon13::sndrv_timer_id
id	./include/sound/asound.h	/^			struct sndrv_ctl_elem_id id;$/;"	m	struct:sndrv_ctl_event::__anon40::__anon41	typeref:struct:sndrv_ctl_event::__anon40::__anon41::sndrv_ctl_elem_id
id	./include/sound/asound.h	/^	struct sndrv_ctl_elem_id id;	\/* W: element ID *\/$/;"	m	struct:sndrv_ctl_elem_info	typeref:struct:sndrv_ctl_elem_info::sndrv_ctl_elem_id
id	./include/sound/asound.h	/^	struct sndrv_ctl_elem_id id;	\/* W: element ID *\/$/;"	m	struct:sndrv_ctl_elem_value	typeref:struct:sndrv_ctl_elem_value::sndrv_ctl_elem_id
id	./include/sound/asound.h	/^	struct sndrv_timer_id id;	\/* bind to timer ID *\/$/;"	m	struct:sndrv_timer_select	typeref:struct:sndrv_timer_select::sndrv_timer_id
id	./include/sound/asound.h	/^	unsigned char id[16];		\/* ID of card (user selectable) *\/$/;"	m	struct:sndrv_ctl_card_info
id	./include/sound/asound.h	/^	unsigned char id[16];$/;"	m	union:sndrv_pcm_sync_id
id	./include/sound/asound.h	/^	unsigned char id[32];		\/* R: driver-specific ID string *\/$/;"	m	struct:sndrv_hwdep_dsp_status
id	./include/sound/asound.h	/^	unsigned char id[64];		\/* ID (user selectable) *\/$/;"	m	struct:sndrv_hwdep_info
id	./include/sound/asound.h	/^	unsigned char id[64];		\/* ID (user selectable) *\/$/;"	m	struct:sndrv_pcm_info
id	./include/sound/asound.h	/^	unsigned char id[64];		\/* ID (user selectable) *\/$/;"	m	struct:sndrv_rawmidi_info
id	./include/sound/asound.h	/^	unsigned char id[64];		\/* timer identification *\/$/;"	m	struct:sndrv_timer_ginfo
id	./include/sound/asound.h	/^	unsigned char id[64];		\/* timer identificator *\/$/;"	m	struct:sndrv_timer_info
id	./include/sound/emu10k1.h	/^	emu10k1_ctl_elem_id_t id;	\/* full control ID definition *\/$/;"	m	struct:__anon17
id	./src/conf.c	/^	char *id;$/;"	m	struct:_snd_config	file:
id	./src/control/control_local.h	/^	snd_ctl_elem_id_t id; 		\/* must be always on top *\/$/;"	m	struct:_snd_hctl_elem
id	./src/control/setup.c	/^	snd_ctl_elem_id_t *id;$/;"	m	struct:__anon96	file:
id16	./include/pcm.h	/^	unsigned short id16[8];$/;"	m	union:_snd_pcm_sync_id
id16	./include/sound/asound.h	/^	unsigned short id16[8];$/;"	m	union:sndrv_pcm_sync_id
id32	./include/pcm.h	/^	unsigned int id32[4];$/;"	m	union:_snd_pcm_sync_id
id32	./include/sound/asound.h	/^	unsigned int id32[4];$/;"	m	union:sndrv_pcm_sync_id
id_print	./src/conf.c	/^static void id_print(snd_config_t *n, snd_output_t *out, unsigned int joins)$/;"	f	file:
idx	./src/conf.c	/^	size_t idx;$/;"	m	struct:local_string	file:
iec958	./include/sound/asound.h	/^		struct sndrv_aes_iec958 iec958;$/;"	m	union:sndrv_ctl_elem_value::__anon34	typeref:struct:sndrv_ctl_elem_value::__anon34::sndrv_aes_iec958
iec958_f	./src/pcm/pcm_iec958.c	/^typedef void (*iec958_f)(snd_pcm_iec958_t *iec,$/;"	t	file:
iec958_parity	./src/pcm/pcm_iec958.c	/^static unsigned int iec958_parity(unsigned int data)$/;"	f	file:
iec958_subframe	./src/pcm/pcm_iec958.c	/^static inline u_int32_t iec958_subframe(snd_pcm_iec958_t *iec, u_int32_t data, int channel)$/;"	f	file:
iec958_to_s32	./src/pcm/pcm_iec958.c	/^static inline int32_t iec958_to_s32(snd_pcm_iec958_t *iec, u_int32_t data)$/;"	f	file:
iface	./include/sound/asound.h	/^	int iface;			\/* hwdep interface *\/$/;"	m	struct:sndrv_hwdep_info
iface	./include/sound/asound.h	/^	int iface;			\/* interface identifier *\/$/;"	m	struct:sndrv_ctl_elem_id
iface	./include/sound/emu10k1.h	/^	int iface;			\/* interface identifier *\/$/;"	m	struct:__anon16
iface	./modules/mixer/simple/sbase.h	/^	snd_ctl_elem_iface_t iface;$/;"	m	struct:helem_selector
iface	./src/control/namehint.c	/^	snd_ctl_elem_iface_t iface;$/;"	m	struct:hint_list	file:
ifd	./src/pcm/pcm_file.c	/^	int ifd;$/;"	m	struct:__anon121	file:
ifname	./src/pcm/pcm_file.c	/^	char *ifname;$/;"	m	struct:__anon121	file:
image	./include/sound/asound.h	/^	unsigned char *image;		\/* W: binary image *\/$/;"	m	struct:sndrv_hwdep_dsp_image
import_master_config	./src/ucm/main.c	/^static int import_master_config(snd_use_case_mgr_t *uc_mgr)$/;"	f	file:
in	./include/alisp.h	/^	snd_input_t *in;	\/* program code *\/$/;"	m	struct:alisp_cfg
in	./include/pcm_rate.h	/^	struct snd_pcm_rate_side_info in;$/;"	m	struct:snd_pcm_rate_info	typeref:struct:snd_pcm_rate_info::snd_pcm_rate_side_info
in	./include/sound/hdspm.h	/^	unsigned int in[HDSPM_MIXER_CHANNELS];$/;"	m	struct:hdspm_channelfader
in	./src/alisp/alisp_local.h	/^	snd_input_t *in;$/;"	m	struct:alisp_instance
in	./src/conf.c	/^	snd_input_t *in;$/;"	m	struct:filedesc	file:
in_buf_ofs	./src/rawmidi/rawmidi_virt.c	/^	int in_buf_ofs;$/;"	m	struct:__anon101	file:
in_buf_ptr	./src/rawmidi/rawmidi_virt.c	/^	char *in_buf_ptr;$/;"	m	struct:__anon101	file:
in_buf_size	./src/rawmidi/rawmidi_virt.c	/^	int in_buf_size;$/;"	m	struct:__anon101	file:
in_event	./src/rawmidi/rawmidi_virt.c	/^	snd_seq_event_t *in_event;$/;"	m	struct:__anon101	file:
in_tmp_buf	./src/rawmidi/rawmidi_virt.c	/^	char in_tmp_buf[16];$/;"	m	struct:__anon101	file:
inactive	./modules/mixer/simple/sbase.h	/^	unsigned int inactive: 1;$/;"	m	struct:helem_base
inactive	./src/mixer/simple_none.c	/^	unsigned int inactive: 1;$/;"	m	struct:_selem_ctl	file:
incref_object	./src/alisp/alisp.c	/^static struct alisp_object * incref_object(struct alisp_instance *instance ATTRIBUTE_UNUSED, struct alisp_object * p)$/;"	f	file:
incref_tree	./src/alisp/alisp.c	/^static struct alisp_object * incref_tree(struct alisp_instance *instance, struct alisp_object * p)$/;"	f	file:
index	./include/sound/asequencer.h	/^	int index;		\/* 0..N-1 *\/$/;"	m	struct:sndrv_seq_query_subs
index	./include/sound/asound.h	/^	unsigned int index;		\/* W: DSP index *\/$/;"	m	struct:sndrv_hwdep_dsp_image
index	./include/sound/asound.h	/^	unsigned int index;		\/* index of item *\/$/;"	m	struct:sndrv_ctl_elem_id
index	./include/sound/emu10k1.h	/^	unsigned int index;		\/* index of item *\/$/;"	m	struct:__anon16
index	./modules/mixer/simple/sbase.h	/^	unsigned short index;$/;"	m	struct:helem_selector
index	./src/mixer/mixer_local.h	/^	unsigned int index;$/;"	m	struct:_snd_mixer_selem_id
index	./src/pcm/pcm_meter.c	/^	unsigned int index;$/;"	m	struct:_snd_pcm_scope_s16	file:
indirect	./include/sound/asound.h	/^	unsigned int indirect: 1;	\/* (obsolete) W: use indirect pointer (xxx_ptr member) *\/$/;"	m	struct:sndrv_ctl_elem_value
inet_handler	./aserver/aserver.c	/^static int inet_handler(waiter_t *waiter, unsigned short events ATTRIBUTE_UNUSED)$/;"	f	file:
inet_pending_handler	./aserver/aserver.c	/^static int inet_pending_handler(waiter_t *waiter, unsigned short events)$/;"	f	file:
inet_pending_t	./aserver/aserver.c	/^} inet_pending_t;$/;"	t	typeref:struct:__anon7	file:
inet_pendings	./aserver/aserver.c	/^LIST_HEAD(inet_pendings);$/;"	v
info	./include/aserver.h	/^		snd_pcm_info_t info;$/;"	m	union:__anon53::__anon54
info	./include/mixer_abst.h	/^	snd_ctl_card_info_t *info;$/;"	m	struct:_sm_class_basic
info	./include/sound/asound.h	/^	unsigned int info;		\/* R: Info flags for returned setup *\/$/;"	m	struct:sndrv_pcm_hw_params
info	./include/sound/sb16_csp.h	/^	snd_sb_csp_mc_header_t info;$/;"	m	struct:snd_sb_csp_microcode
info	./src/control/namehint.c	/^	snd_ctl_card_info_t *info;	$/;"	m	struct:hint_list	file:
info	./src/control/setup.c	/^	snd_ctl_elem_info_t *info;$/;"	m	struct:__anon96	file:
info	./src/hwdep/hwdep_local.h	/^	int (*info)(snd_hwdep_t *hwdep, snd_hwdep_info_t *info);$/;"	m	struct:__anon91
info	./src/mixer/simple_abst.c	/^	snd_ctl_card_info_t *info;$/;"	m	struct:_class_priv	file:
info	./src/pcm/pcm_direct.h	/^		unsigned int info;$/;"	m	struct:__anon123::__anon125
info	./src/pcm/pcm_hw.c	/^	unsigned int info;$/;"	m	struct:sndrv_pcm_hw_params_old	file:
info	./src/pcm/pcm_local.h	/^	int (*info)(snd_pcm_t *pcm, snd_pcm_info_t *info);$/;"	m	struct:__anon137
info	./src/pcm/pcm_local.h	/^	unsigned int info;		\/* Info for returned setup *\/$/;"	m	struct:_snd_pcm
info	./src/pcm/pcm_rate.c	/^	snd_pcm_rate_info_t info;$/;"	m	struct:_snd_pcm_rate	file:
info	./src/rawmidi/rawmidi_local.h	/^	int (*info)(snd_rawmidi_t *rawmidi, snd_rawmidi_info_t *info);$/;"	m	struct:__anon99
info	./src/timer/timer_local.h	/^	int (*info)(snd_timer_query_t *timer, snd_timer_ginfo_t *info);$/;"	m	struct:__anon89
info	./src/timer/timer_local.h	/^	int (*info)(snd_timer_t *timer, snd_timer_info_t *info);$/;"	m	struct:__anon88
init	./include/pcm_extplug.h	/^	int (*init)(snd_pcm_extplug_t *ext);$/;"	m	struct:snd_pcm_extplug_callback
init	./include/pcm_rate.h	/^	int (*init)(void *obj, snd_pcm_rate_info_t *info);$/;"	m	struct:snd_pcm_rate_old_ops
init	./include/pcm_rate.h	/^	int (*init)(void *obj, snd_pcm_rate_info_t *info);$/;"	m	struct:snd_pcm_rate_ops
init	./src/pcm/pcm_plugin.h	/^	int (*init)(snd_pcm_t *pcm);$/;"	m	struct:__anon106
init_db_range	./src/mixer/simple_none.c	/^static int init_db_range(snd_hctl_elem_t *ctl, struct selem_str *rec)$/;"	f	file:
init_lex	./src/alisp/alisp.c	/^static int init_lex(struct alisp_instance *instance)$/;"	f	file:
init_local_string	./src/conf.c	/^static void init_local_string(struct local_string *s)$/;"	f	file:
inline	./include/config.h	167;"	d
ino	./src/conf.c	/^	ino_t ino;$/;"	m	struct:finfo	file:
input	./src/pcm/pcm_ladspa.c	/^	snd_pcm_ladspa_eps_t input;$/;"	m	struct:snd_pcm_ladspa_instance	file:
input	./src/pcm/pcm_ladspa.c	/^	snd_pcm_ladspa_plugin_io_t input;$/;"	m	struct:__anon117	file:
input_format	./include/sound/hdspm.h	/^	enum hdspm_ltc_input_format input_format;$/;"	m	struct:hdspm_ltc	typeref:enum:hdspm_ltc::hdspm_ltc_input_format
input_frames	./include/pcm_rate.h	/^	snd_pcm_uframes_t (*input_frames)(void *obj, snd_pcm_uframes_t frames);$/;"	m	struct:snd_pcm_rate_old_ops
input_frames	./include/pcm_rate.h	/^	snd_pcm_uframes_t (*input_frames)(void *obj, snd_pcm_uframes_t frames);$/;"	m	struct:snd_pcm_rate_ops
input_frames	./src/pcm/pcm_rate_linear.c	/^static snd_pcm_uframes_t input_frames(void *obj, snd_pcm_uframes_t frames)$/;"	f	file:
input_free	./include/sound/asequencer.h	/^	int input_free;			\/* unused size *\/$/;"	m	struct:sndrv_seq_client_pool
input_peaks	./include/sound/hdsp.h	/^	uint32_t input_peaks[26];$/;"	m	struct:_snd_hdsp_peak_rms
input_peaks	./include/sound/hdspm.h	/^	uint32_t input_peaks[64];$/;"	m	struct:hdspm_peak_rms
input_pool	./include/sound/asequencer.h	/^	int input_pool;			\/* incoming (read) pool size *\/$/;"	m	struct:sndrv_seq_client_pool
input_rms	./include/sound/hdsp.h	/^	uint64_t input_rms[26];$/;"	m	struct:_snd_hdsp_peak_rms
input_rms	./include/sound/hdspm.h	/^	uint64_t input_rms[64];$/;"	m	struct:hdspm_peak_rms
input_t	./src/conf.c	/^} input_t;$/;"	t	typeref:struct:__anon87	file:
instances	./src/pcm/pcm_ladspa.c	/^	struct list_head instances;		\/* one LADSPA plugin might be used multiple times *\/$/;"	m	struct:__anon117	typeref:struct:__anon117::list_head	file:
instantiate	./src/pcm/ladspa.h	/^  LADSPA_Handle (*instantiate)(const struct _LADSPA_Descriptor * Descriptor,$/;"	m	struct:_LADSPA_Descriptor
instrument_name	./test/midifile.h	98;"	d
int32_idx	./src/pcm/pcm_lfloat.c	/^	unsigned int int32_idx;$/;"	m	struct:__anon112	file:
int_index	./src/control/tlv.c	40;"	d	file:
integer	./include/sound/asound.h	/^		     integer:1,$/;"	m	struct:sndrv_interval
integer	./include/sound/asound.h	/^		} integer;$/;"	m	union:sndrv_ctl_elem_info::__anon29	typeref:struct:sndrv_ctl_elem_info::__anon29::__anon30
integer	./include/sound/asound.h	/^		} integer;$/;"	m	union:sndrv_ctl_elem_value::__anon34	typeref:union:sndrv_ctl_elem_value::__anon34::__anon35
integer	./src/conf.c	/^		long integer;$/;"	m	union:_snd_config::__anon85	file:
integer	./src/pcm/pcm_ext_parm.h	/^	unsigned int integer: 1;$/;"	m	struct:snd_ext_parm
integer64	./include/sound/asound.h	/^		} integer64;$/;"	m	union:sndrv_ctl_elem_info::__anon29	typeref:struct:sndrv_ctl_elem_info::__anon29::__anon31
integer64	./include/sound/asound.h	/^		} integer64;$/;"	m	union:sndrv_ctl_elem_value::__anon34	typeref:union:sndrv_ctl_elem_value::__anon34::__anon36
integer64	./src/conf.c	/^		long long integer64;$/;"	m	union:_snd_config::__anon85	file:
interleaved	./src/pcm/pcm_direct.h	/^	int interleaved;	 	\/* we have interleaved buffer *\/$/;"	m	struct:snd_pcm_direct
internal_tram_size	./include/sound/emu10k1.h	/^	unsigned int internal_tram_size;	\/* in samples *\/$/;"	m	struct:__anon15
interpret_filename	./alsalisp/alsalisp.c	/^static void interpret_filename(const char *file)$/;"	f	file:
intervals	./include/sound/asound.h	/^	struct sndrv_interval intervals[SNDRV_PCM_HW_PARAM_LAST_INTERVAL -$/;"	m	struct:sndrv_pcm_hw_params	typeref:struct:sndrv_pcm_hw_params::sndrv_interval
intervals	./src/pcm/pcm_hw.c	/^	struct sndrv_interval intervals[SNDRV_PCM_HW_PARAM_TICK_TIME -$/;"	m	struct:sndrv_pcm_hw_params_old	typeref:struct:sndrv_pcm_hw_params_old::sndrv_interval	file:
intrinsic	./src/alisp/alisp.c	/^struct intrinsic {$/;"	s	file:
intrinsics	./src/alisp/alisp.c	/^static const struct intrinsic intrinsics[] = {$/;"	v	typeref:struct:intrinsic	file:
io_type	./include/sound/hdsp.h	/^	HDSP_IO_Type io_type;$/;"	m	struct:_snd_hdsp_version
ioctl	./src/hwdep/hwdep_local.h	/^	int (*ioctl)(snd_hwdep_t *hwdep, unsigned int request, void * arg);$/;"	m	struct:__anon91
ioplug_priv_t	./src/pcm/pcm_ioplug.c	/^} ioplug_priv_t;$/;"	t	typeref:struct:snd_pcm_ioplug_priv	file:
ioplug_priv_transfer_areas	./src/pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t ioplug_priv_transfer_areas(snd_pcm_t *pcm,$/;"	f	file:
ipc_gid	./src/pcm/pcm_direct.h	/^	int ipc_gid;			\/* IPC socket gid *\/$/;"	m	struct:snd_pcm_direct
ipc_gid	./src/pcm/pcm_direct.h	/^	int ipc_gid;$/;"	m	struct:snd_pcm_direct_open_conf
ipc_key	./src/pcm/pcm_direct.h	/^	key_t ipc_key;			\/* IPC key for semaphore and memory *\/$/;"	m	struct:snd_pcm_direct
ipc_key	./src/pcm/pcm_direct.h	/^	key_t ipc_key;$/;"	m	struct:snd_pcm_direct_open_conf
ipc_perm	./src/pcm/pcm_direct.h	/^	mode_t ipc_perm;		\/* IPC socket permissions *\/$/;"	m	struct:snd_pcm_direct
ipc_perm	./src/pcm/pcm_direct.h	/^	mode_t ipc_perm;$/;"	m	struct:snd_pcm_direct_open_conf
ires	./include/sound/asound.h	/^	struct sndrv_interval ires[9];	\/* reserved intervals *\/$/;"	m	struct:sndrv_pcm_hw_params	typeref:struct:sndrv_pcm_hw_params::sndrv_interval
is	./include/mixer_abst.h	/^	int (*is)(snd_mixer_elem_t *elem, int dir, int cmd, int val);$/;"	m	struct:sm_elem_ops
is_builtin_plugin	./src/pcm/pcm_rate.c	/^static int is_builtin_plugin(const char *type)$/;"	f	file:
is_mask_type	./src/pcm/pcm_extplug.c	53;"	d	file:
is_modifier_supported	./src/ucm/main.c	/^static int is_modifier_supported(snd_use_case_mgr_t *uc_mgr, $/;"	f	file:
is_ops	./modules/mixer/simple/python.c	/^static int is_ops(snd_mixer_elem_t *elem, int dir, int cmd, int val)$/;"	f	file:
is_ops	./modules/mixer/simple/sbase.c	/^static int is_ops(snd_mixer_elem_t *elem, int dir, int cmd, int val)$/;"	f	file:
is_ops	./src/mixer/simple_none.c	/^static int is_ops(snd_mixer_elem_t *elem, int dir, int cmd, int val)$/;"	f	file:
isprime	./src/compat/hsearch_r.c	/^isprime (unsigned int number)$/;"	f	file:
item	./include/sound/asound.h	/^			unsigned int item;	\/* W: item number *\/$/;"	m	struct:sndrv_ctl_elem_info::__anon29::__anon32
item	./include/sound/asound.h	/^			unsigned int item[128];$/;"	m	union:sndrv_ctl_elem_value::__anon34::__anon37
item_ptr	./include/sound/asound.h	/^			unsigned int *item_ptr;	\/* obsolete *\/$/;"	m	union:sndrv_ctl_elem_value::__anon34::__anon37
items	./include/sound/asound.h	/^			unsigned int items;	\/* R: number of items *\/$/;"	m	struct:sndrv_ctl_elem_info::__anon29::__anon32
join	./src/conf.c	/^			int join;$/;"	m	struct:_snd_config::__anon85::__anon86	file:
kbd_scale	./include/sound/asound_fm.h	/^	unsigned char kbd_scale;	\/* keyboard scaling *\/$/;"	m	struct:snd_dm_fm_voice
kbd_split	./include/sound/asound_fm.h	/^	unsigned char kbd_split;	\/* keyboard split *\/$/;"	m	struct:snd_dm_fm_params
kernel	./include/sound/asequencer.h	/^	void *kernel;			\/* reserved for kernel use (must be NULL) *\/$/;"	m	struct:sndrv_seq_port_info
key	./include/search.h	/^    char *key;$/;"	m	struct:entry
key	./include/sound/asound_fm.h	/^	char key[4];$/;"	m	struct:sbi_patch
key	./src/alisp/alisp_snd.c	/^	const char *key;$/;"	m	struct:flags	file:
key_on	./include/sound/asound_fm.h	/^	unsigned char key_on;	\/* set for active, clear for silent *\/$/;"	m	struct:snd_dm_fm_note
key_signature	./test/midifile.h	107;"	d
l	./src/pcm/pcm_local.h	/^	int64_t l;$/;"	m	union:snd_tmp_double
last_appl_ptr	./src/pcm/pcm_direct.h	/^	snd_pcm_uframes_t last_appl_ptr;$/;"	m	struct:snd_pcm_direct
last_commit_ptr	./src/pcm/pcm_rate.c	/^	snd_pcm_uframes_t last_commit_ptr;$/;"	m	struct:_snd_pcm_rate	file:
last_hw	./src/pcm/pcm_ioplug.c	/^	unsigned int last_hw;$/;"	m	struct:snd_pcm_ioplug_priv	file:
lastcmd	./src/seq/seq_midi_event.c	/^	unsigned char lastcmd;$/;"	m	struct:snd_midi_event	file:
laststatus	./test/midifile.c	/^static int laststatus = 0;$/;"	v	file:
latency_max	./test/latency.c	/^int latency_max = 2048;		\/* in frames \/ 2 *\/$/;"	v
latency_min	./test/latency.c	/^int latency_min = 32;		\/* in frames \/ 2 *\/$/;"	v
ld2	./src/pcm/mask_inline.h	/^MASK_INLINE unsigned int ld2(u_int32_t v)$/;"	f
leaf	./include/search.h	/^  leaf$/;"	e	enum:__anon44
left	./include/sound/asound_fm.h	/^	unsigned char left;		\/* stereo left *\/$/;"	m	struct:snd_dm_fm_voice
len	./include/seq_event.h	/^	unsigned int len;		\/**< length of data *\/$/;"	m	struct:snd_seq_ev_ext
len	./include/sound/asequencer.h	/^	unsigned int len;	\/* length of data *\/$/;"	m	struct:sndrv_seq_ev_ext
length	./include/sound/asound.h	/^	size_t length;			\/* W: size of image in bytes *\/$/;"	m	struct:sndrv_hwdep_dsp_image
length	./include/sound/asound.h	/^        unsigned int length;    \/* in bytes aligned to 4 *\/$/;"	m	struct:sndrv_ctl_tlv
level	./src/pcm/scopes/level.c	/^	int16_t level;$/;"	m	struct:_snd_pcm_scope_level_channel	file:
level_close	./src/pcm/scopes/level.c	/^static void level_close(snd_pcm_scope_t *scope)$/;"	f	file:
level_disable	./src/pcm/scopes/level.c	/^static void level_disable(snd_pcm_scope_t *scope)$/;"	f	file:
level_enable	./src/pcm/scopes/level.c	/^static int level_enable(snd_pcm_scope_t *scope)$/;"	f	file:
level_ops	./src/pcm/scopes/level.c	/^snd_pcm_scope_ops_t level_ops = {$/;"	v
level_reset	./src/pcm/scopes/level.c	/^static void level_reset(snd_pcm_scope_t *scope)$/;"	f	file:
level_start	./src/pcm/scopes/level.c	/^static void level_start(snd_pcm_scope_t *scope ATTRIBUTE_UNUSED)$/;"	f	file:
level_stop	./src/pcm/scopes/level.c	/^static void level_stop(snd_pcm_scope_t *scope)$/;"	f	file:
level_update	./src/pcm/scopes/level.c	/^static void level_update(snd_pcm_scope_t *scope)$/;"	f	file:
lex_buf	./src/alisp/alisp_local.h	/^	int lex_buf[ALISP_LEX_BUF_MAX];$/;"	m	struct:alisp_instance
lex_bufp	./src/alisp/alisp_local.h	/^	int *lex_bufp;$/;"	m	struct:alisp_instance
lfo	./test/latency.c	/^float lfo,dlfo,fs,fc,BW,C,D,a0,a1,a2,b1,b2,*x[3],*y[3];$/;"	v
lib	./src/dlmisc.c	/^	const char *lib;$/;"	m	struct:dlobj_cache	file:
line	./src/conf.c	/^	unsigned int line, column;$/;"	m	struct:filedesc	file:
line_out	./include/sound/hdsp.h	/^	unsigned char line_out;$/;"	m	struct:_snd_hdsp_config_info
line_out	./include/sound/hdspm.h	/^	unsigned char line_out;$/;"	m	struct:hdspm_config
linear	./src/pcm/pcm_rate_linear.c	/^int SND_PCM_RATE_PLUGIN_ENTRY(linear) (ATTRIBUTE_UNUSED unsigned int version,$/;"	f
linear24_formats	./src/pcm/pcm_misc.c	/^static const int linear24_formats[3][2][2] = {$/;"	v	file:
linear_adjust_pitch	./src/pcm/pcm_rate_linear.c	/^static int linear_adjust_pitch(void *obj, snd_pcm_rate_info_t *info)$/;"	f	file:
linear_close	./src/pcm/pcm_rate_linear.c	/^static void linear_close(void *obj)$/;"	f	file:
linear_convert	./src/pcm/pcm_rate_linear.c	/^static void linear_convert(void *obj, $/;"	f	file:
linear_dump	./src/pcm/pcm_rate_linear.c	/^static void linear_dump(ATTRIBUTE_UNUSED void *rate, snd_output_t *out)$/;"	f	file:
linear_expand	./src/pcm/pcm_rate_linear.c	/^static void linear_expand(struct rate_linear *rate,$/;"	f	file:
linear_expand_s16	./src/pcm/pcm_rate_linear.c	/^static void linear_expand_s16(struct rate_linear *rate,$/;"	f	file:
linear_format_widths	./src/pcm/pcm_plug.c	/^static const char linear_format_widths[32] = {$/;"	v	file:
linear_formats	./src/pcm/pcm_misc.c	/^static const int linear_formats[4][2][2] = {$/;"	v	file:
linear_free	./src/pcm/pcm_rate_linear.c	/^static void linear_free(void *obj)$/;"	f	file:
linear_init	./src/pcm/pcm_rate_linear.c	/^static int linear_init(void *obj, snd_pcm_rate_info_t *info)$/;"	f	file:
linear_ops	./src/pcm/pcm_rate_linear.c	/^static const snd_pcm_rate_ops_t linear_ops = {$/;"	v	file:
linear_preferred_formats	./src/pcm/pcm_plug.c	/^static const snd_pcm_format_t linear_preferred_formats[] = {$/;"	v	file:
linear_reset	./src/pcm/pcm_rate_linear.c	/^static void linear_reset(void *obj)$/;"	f	file:
linear_shrink	./src/pcm/pcm_rate_linear.c	/^static void linear_shrink(struct rate_linear *rate,$/;"	f	file:
linear_shrink_s16	./src/pcm/pcm_rate_linear.c	/^static void linear_shrink_s16(struct rate_linear *rate,$/;"	f	file:
lineno	./src/alisp/alisp_local.h	/^	int lineno;$/;"	m	struct:alisp_instance
link	./include/aserver.h	/^		} link;$/;"	m	union:__anon53::__anon54	typeref:struct:__anon53::__anon54::__anon61
link	./src/pcm/pcm_local.h	/^	int (*link)(snd_pcm_t *pcm1, snd_pcm_t *pcm2);$/;"	m	struct:__anon138
link_dst	./src/pcm/pcm_local.h	/^	snd_pcm_t **link_dst;$/;"	m	struct:_snd_pcm_rbptr
link_dst_count	./src/pcm/pcm_local.h	/^	int link_dst_count;$/;"	m	struct:_snd_pcm_rbptr
link_slaves	./src/pcm/pcm_local.h	/^	int (*link_slaves)(snd_pcm_t *pcm, snd_pcm_t *master);$/;"	m	struct:__anon138
link_warning	./include/local.h	213;"	d
link_warning	./include/local.h	218;"	d
link_warning	./include/local.h	224;"	d
link_warning	./include/local.h	230;"	d
linked	./src/pcm/pcm_multi.c	/^	snd_pcm_t *linked;$/;"	m	struct:__anon148	file:
lisp_debug	./src/alisp/alisp.c	/^static void lisp_debug(struct alisp_instance *instance, const char *fmt, ...)$/;"	f	file:
lisp_error	./src/alisp/alisp.c	/^static void lisp_error(struct alisp_instance *instance, const char *fmt, ...)$/;"	f	file:
lisp_verbose	./src/alisp/alisp.c	/^static void lisp_verbose(struct alisp_instance *instance, const char *fmt, ...)$/;"	f	file:
lisp_warn	./src/alisp/alisp.c	/^static void lisp_warn(struct alisp_instance *instance, const char *fmt, ...)$/;"	f	file:
list	./aserver/aserver.c	/^	struct list_head list;$/;"	m	struct:__anon7	typeref:struct:__anon7::list_head	file:
list	./aserver/aserver.c	/^	struct list_head list;$/;"	m	struct:client	typeref:struct:client::list_head	file:
list	./modules/mixer/simple/sbase.h	/^	struct list_head list;$/;"	m	struct:bclass_selector	typeref:struct:bclass_selector::list_head
list	./modules/mixer/simple/sbase.h	/^	struct list_head list;$/;"	m	struct:bclass_sid	typeref:struct:bclass_sid::list_head
list	./modules/mixer/simple/sbase.h	/^	struct list_head list;$/;"	m	struct:helem_base	typeref:struct:helem_base::list_head
list	./src/alisp/alisp_local.h	/^	struct list_head list;$/;"	m	struct:alisp_object	typeref:struct:alisp_object::list_head
list	./src/alisp/alisp_local.h	/^	struct list_head list;$/;"	m	struct:alisp_object_pair	typeref:struct:alisp_object_pair::list_head
list	./src/conf.c	/^	struct list_head list;$/;"	m	struct:_snd_config	typeref:struct:_snd_config::list_head	file:
list	./src/control/control_local.h	/^	struct list_head list;		\/* links for list of all helems *\/$/;"	m	struct:_snd_hctl_elem	typeref:struct:_snd_hctl_elem::list_head
list	./src/control/namehint.c	/^	char **list;$/;"	m	struct:hint_list	file:
list	./src/control/setup.c	/^	struct list_head list;$/;"	m	struct:__anon96	typeref:struct:__anon96::list_head	file:
list	./src/dlmisc.c	/^	struct list_head list;$/;"	m	struct:dlobj_cache	typeref:struct:dlobj_cache::list_head	file:
list	./src/mixer/mixer.c	/^	struct list_head list;$/;"	m	struct:_snd_mixer_slave	typeref:struct:_snd_mixer_slave::list_head	file:
list	./src/mixer/mixer_local.h	/^	struct list_head list;		\/* links for list of all elems *\/$/;"	m	struct:_snd_mixer_elem	typeref:struct:_snd_mixer_elem::list_head
list	./src/mixer/mixer_local.h	/^	struct list_head list;$/;"	m	struct:_bag1	typeref:struct:_bag1::list_head
list	./src/mixer/mixer_local.h	/^	struct list_head list;$/;"	m	struct:_snd_mixer_class	typeref:struct:_snd_mixer_class::list_head
list	./src/pcm/pcm_ext_parm.h	/^	unsigned int *list;$/;"	m	struct:snd_ext_parm
list	./src/pcm/pcm_hooks.c	/^	struct list_head list;$/;"	m	struct:_snd_pcm_hook	typeref:struct:_snd_pcm_hook::list_head	file:
list	./src/pcm/pcm_hooks.c	/^	struct list_head list;$/;"	m	struct:snd_pcm_hook_dllist	typeref:struct:snd_pcm_hook_dllist::list_head	file:
list	./src/pcm/pcm_ladspa.c	/^	struct list_head list;$/;"	m	struct:__anon117	typeref:struct:__anon117::list_head	file:
list	./src/pcm/pcm_ladspa.c	/^	struct list_head list;$/;"	m	struct:snd_pcm_ladspa_instance	typeref:struct:snd_pcm_ladspa_instance::list_head	file:
list	./src/pcm/pcm_meter.c	/^	struct list_head list;$/;"	m	struct:_snd_pcm_scope	typeref:struct:_snd_pcm_scope::list_head	file:
list	./src/pcm/pcm_share.c	/^	struct list_head list;$/;"	m	struct:__anon118	typeref:struct:__anon118::list_head	file:
list	./src/pcm/pcm_share.c	/^	struct list_head list;$/;"	m	struct:__anon119	typeref:struct:__anon119::list_head	file:
list	./src/shmarea.c	/^	struct list_head list;$/;"	m	struct:snd_shm_area	typeref:struct:snd_shm_area::list_head	file:
list	./src/ucm/main.c	/^        struct list_head list;$/;"	m	struct:myvalue	typeref:struct:myvalue::list_head	file:
list	./src/ucm/ucm_local.h	/^	struct list_head list;$/;"	m	struct:dev_list	typeref:struct:dev_list::list_head
list	./src/ucm/ucm_local.h	/^	struct list_head list;$/;"	m	struct:sequence_element	typeref:struct:sequence_element::list_head
list	./src/ucm/ucm_local.h	/^	struct list_head list;$/;"	m	struct:transition_sequence	typeref:struct:transition_sequence::list_head
list	./src/ucm/ucm_local.h	/^	struct list_head list;$/;"	m	struct:use_case_device	typeref:struct:use_case_device::list_head
list	./src/ucm/ucm_local.h	/^	struct list_head list;$/;"	m	struct:use_case_modifier	typeref:struct:use_case_modifier::list_head
list	./src/ucm/ucm_local.h	/^	struct list_head list;$/;"	m	struct:use_case_verb	typeref:struct:use_case_verb::list_head
list	./src/ucm/ucm_local.h	/^        struct list_head list;$/;"	m	struct:ucm_value	typeref:struct:ucm_value::list_head
list_add	./include/list.h	/^static __inline__ void list_add(struct list_head *_new, struct list_head *head)$/;"	f
list_add_tail	./include/list.h	/^static __inline__ void list_add_tail(struct list_head *_new, struct list_head *head)$/;"	f
list_count	./src/ucm/main.c	/^static int list_count(struct list_head *list)$/;"	f	file:
list_del	./include/list.h	/^static __inline__ void list_del(struct list_head *entry)$/;"	f
list_del_init	./include/list.h	/^static __inline__ void list_del_init(struct list_head *entry)$/;"	f
list_empty	./include/list.h	/^static __inline__ int list_empty(struct list_head *head)$/;"	f
list_entry	./include/list.h	162;"	d
list_entry_offset	./include/list.h	171;"	d
list_for_each	./include/list.h	144;"	d
list_for_each_safe	./include/list.h	153;"	d
list_head	./include/list.h	/^struct list_head {$/;"	s
list_splice	./include/list.h	/^static __inline__ void list_splice(struct list_head *list, struct list_head *head)$/;"	f
load_defaults	./src/conf.c	/^static int load_defaults(snd_config_t *subs, snd_config_t *defs)$/;"	f	file:
load_master_config	./src/ucm/parser.c	/^static int load_master_config(const char *card_name, snd_config_t **cfg)$/;"	f	file:
local	./aserver/aserver.c	/^	int local;$/;"	m	struct:client	file:
local_handler	./aserver/aserver.c	/^static int local_handler(waiter_t *waiter, unsigned short events ATTRIBUTE_UNUSED)$/;"	f	file:
local_irq_restore	./include/iatomic.h	917;"	d
local_irq_save	./include/iatomic.h	902;"	d
local_secs	./test/playmidi1.c	/^static double local_secs = 0;$/;"	v	file:
local_string	./src/conf.c	/^struct local_string {$/;"	s	file:
local_tempo	./test/playmidi1.c	/^static int local_tempo = 500000;$/;"	v	file:
local_ticks	./test/playmidi1.c	/^static int local_ticks = 0;$/;"	v	file:
lock	./src/control/setup.c	/^	unsigned int lock: 1;$/;"	m	struct:__anon96	file:
locked	./include/sound/asequencer.h	/^	int locked:1;		\/* timing queue locked for other queues *\/$/;"	m	struct:sndrv_seq_queue_info
longname	./include/control_external.h	/^	char longname[80];$/;"	m	struct:snd_ctl_ext
longname	./include/sound/asound.h	/^	unsigned char longname[80];	\/* name + info text about soundcard *\/$/;"	m	struct:sndrv_ctl_card_info
longname	./src/mixer/simple_none.c	/^	const char *longname;$/;"	m	struct:mixer_name_table	file:
loop_limit	./test/latency.c	/^unsigned long loop_limit;$/;"	v
loop_sec	./test/latency.c	/^int loop_sec = 30;		\/* seconds *\/$/;"	v
lost	./include/sound/asound.h	/^	unsigned int lost;		\/* counter of master tick lost *\/$/;"	m	struct:sndrv_timer_status
lowerbyte	./test/midifile.c	58;"	d	file:
lowerbyte	./test/midifile.h	130;"	d
ltc	./include/sound/hdspm.h	/^	unsigned int ltc;$/;"	m	struct:hdspm_ltc
lyric	./test/midifile.h	99;"	d
m_data	./src/pcm/pcm_ladspa.c	/^	LADSPA_Data **m_data;$/;"	m	struct:__anon115	file:
madi	./include/sound/hdspm.h	/^		} madi;$/;"	m	union:hdspm_status::__anon8	typeref:struct:hdspm_status::__anon8::__anon9
madi_input	./include/sound/hdspm.h	/^			uint8_t madi_input; \/* enum hdspm_madi_input *\/$/;"	m	struct:hdspm_status::__anon8::__anon9
madi_sync_check	./include/sound/hdspm.h	/^	unsigned char madi_sync_check;$/;"	m	struct:hdspm_config
magic	./src/pcm/pcm_direct.h	/^	unsigned int magic;			\/* magic number *\/$/;"	m	struct:__anon123
main	./alsalisp/alsalisp.c	/^int main(int argc, char **argv)$/;"	f
main	./aserver/aserver.c	/^int main(int argc, char **argv)$/;"	f
main	./config.guess	/^		main()$/;"	f
main	./config.guess	/^	main ()$/;"	f
main	./config.guess	/^main ()$/;"	f
main	./test/client_event_filter.c	/^int main(void) {$/;"	f
main	./test/control.c	/^int main(void)$/;"	f
main	./test/latency.c	/^int main(int argc, char *argv[])$/;"	f
main	./test/lsb/config.c	/^int main(void)$/;"	f
main	./test/lsb/midi_event.c	/^int main(void)$/;"	f
main	./test/midiloop.c	/^int main(int argc, char** argv)$/;"	f
main	./test/namehint.c	/^int main(int argc, char *argv[])$/;"	f
main	./test/oldapi.c	/^int main(int argc ATTRIBUTE_UNUSED, char *argv[] ATTRIBUTE_UNUSED)$/;"	f
main	./test/pcm.c	/^int main(int argc, char *argv[])$/;"	f
main	./test/pcm_min.c	/^int main(void)$/;"	f
main	./test/playmidi1.c	/^int main(int argc, char *argv[])$/;"	f
main	./test/queue_timer.c	/^main(int argc ATTRIBUTE_UNUSED, char **argv ATTRIBUTE_UNUSED)$/;"	f
main	./test/rawmidi.c	/^int main(int argc,char** argv)$/;"	f
main	./test/seq.c	/^int main(int argc, char *argv[])$/;"	f
main	./test/timer.c	/^int main(int argc, char *argv[])$/;"	f
main_interpreter	./modules/mixer/simple/python.c	/^static PyInterpreterState *main_interpreter;$/;"	v	file:
make_inet_socket	./aserver/aserver.c	/^static int make_inet_socket(int port)$/;"	f	file:
make_local_socket	./aserver/aserver.c	/^static int make_local_socket(const char *filename)$/;"	f	file:
make_local_socket	./src/control/control_shm.c	/^static int make_local_socket(const char *filename)$/;"	f	file:
make_local_socket	./src/pcm/pcm_direct.c	/^static int make_local_socket(const char *filename, int server, mode_t ipc_perm, int ipc_gid)$/;"	f	file:
make_local_socket	./src/pcm/pcm_shm.c	/^static int make_local_socket(const char *filename)$/;"	f	file:
marker	./test/midifile.h	100;"	d
mask	./include/sound/asound.h	/^			unsigned int mask;$/;"	m	struct:sndrv_ctl_event::__anon40::__anon41
mask	./src/alisp/alisp_snd.c	/^	unsigned int mask;$/;"	m	struct:flags	file:
mask	./src/control/setup.c	/^	snd_ctl_elem_value_t *mask;$/;"	m	struct:__anon96	file:
masks	./include/sound/asound.h	/^	struct sndrv_mask masks[SNDRV_PCM_HW_PARAM_LAST_MASK - $/;"	m	struct:sndrv_pcm_hw_params	typeref:struct:sndrv_pcm_hw_params::sndrv_mask
masks	./src/pcm/pcm_hw.c	/^	unsigned int masks[SNDRV_PCM_HW_PARAM_SUBFORMAT -$/;"	m	struct:sndrv_pcm_hw_params_old	file:
master	./src/pcm/pcm_local.h	/^	snd_pcm_t *master;$/;"	m	struct:_snd_pcm_rbptr
master_period	./include/sound/hdspm.h	/^	uint32_t master_period;$/;"	m	struct:hdspm_status
master_slave	./src/pcm/pcm_multi.c	/^	unsigned int master_slave;$/;"	m	struct:__anon150	file:
match	./src/mixer/simple_abst.c	/^static int match(snd_mixer_class_t *class, const char *lib, const char *searchl)$/;"	f	file:
matrix	./include/sound/hdsp.h	/^	unsigned short matrix[HDSP_MATRIX_MIXER_SIZE];$/;"	m	struct:_snd_hdsp_mixer
max	./include/sound/asound.h	/^			long long max;		\/* R: maximum value *\/$/;"	m	struct:sndrv_ctl_elem_info::__anon29::__anon31
max	./include/sound/asound.h	/^			long max;		\/* R: maximum value *\/$/;"	m	struct:sndrv_ctl_elem_info::__anon29::__anon30
max	./include/sound/asound.h	/^	unsigned int min, max;$/;"	m	struct:sndrv_interval
max	./include/sound/emu10k1.h	/^	unsigned int max;		\/* maximum range *\/$/;"	m	struct:__anon17
max	./modules/mixer/simple/sbase.h	/^		long min, max;$/;"	m	struct:selem_base::__anon84
max	./modules/mixer/simple/sbase.h	/^	long min, max;$/;"	m	struct:helem_base
max	./src/mixer/simple_none.c	/^		long min, max;$/;"	m	struct:_selem_none::selem_str	file:
max	./src/mixer/simple_none.c	/^	long min, max;$/;"	m	struct:_selem_ctl	file:
max	./src/pcm/pcm_ext_parm.h	/^	unsigned int min, max;$/;"	m	struct:snd_ext_parm
max_clients	./test/seq.c	/^int max_clients;$/;"	v
max_dB	./src/pcm/pcm_softvol.c	/^	double max_dB;$/;"	m	struct:__anon109	file:
max_objs	./src/alisp/alisp_local.h	/^	long max_objs;$/;"	m	struct:alisp_instance
max_periods	./src/pcm/pcm_direct.h	/^	int max_periods;		\/* max periods (-1 = fixed periods, 0 = max buffer size) *\/$/;"	m	struct:snd_pcm_direct
max_periods	./src/pcm/pcm_direct.h	/^	int max_periods;$/;"	m	struct:snd_pcm_direct_open_conf
max_ports	./test/seq.c	/^int max_ports;$/;"	v
max_queues	./test/seq.c	/^int max_queues;$/;"	v
max_val	./src/pcm/pcm_softvol.c	/^	unsigned int max_val;     \/* max index *\/$/;"	m	struct:__anon109	file:
maxval	./src/control/tlv.c	/^	long minval, maxval;$/;"	m	struct:tlv_info	file:
mb	./include/iatomic.h	1005;"	d
mb	./include/iatomic.h	1074;"	d
mb	./include/iatomic.h	1097;"	d
mb	./include/iatomic.h	1122;"	d
mb	./include/iatomic.h	210;"	d
mb	./include/iatomic.h	214;"	d
mb	./include/iatomic.h	369;"	d
mb	./include/iatomic.h	484;"	d
mb	./include/iatomic.h	677;"	d
mb	./include/iatomic.h	876;"	d
mdict	./modules/mixer/simple/python.c	/^	PyObject *mdict;$/;"	m	struct:pymixer	file:
melem	./modules/mixer/simple/python.c	/^	snd_mixer_elem_t *melem;$/;"	m	struct:pymelem	file:
melem	./modules/mixer/simple/python.c	/^	void **melem;$/;"	m	struct:pymixer	file:
melem_count	./modules/mixer/simple/python.c	/^	int melem_count;$/;"	m	struct:pymixer	file:
melem_sids	./modules/mixer/simple/sbase.h	/^struct melem_sids {$/;"	s
melem_to_pymelem	./modules/mixer/simple/python.c	/^static struct pymelem *melem_to_pymelem(snd_mixer_elem_t *elem)$/;"	f	file:
meta_event	./test/midifile.c	56;"	d	file:
meta_event	./test/midifile.h	93;"	d
metaevent	./test/midifile.c	/^metaevent (int type)$/;"	f	file:
mf_sec2ticks	./test/midifile.c	/^mf_sec2ticks (secs, division, tempo)$/;"	f
mf_ticks2sec	./test/midifile.c	/^mf_ticks2sec (ticks, division, tempo)$/;"	f
mf_write_header_chunk	./test/midifile.c	/^mf_write_header_chunk (format, ntracks, division)$/;"	f
mf_write_meta_event	./test/midifile.c	/^mf_write_meta_event (delta_time, type, data, size)$/;"	f
mf_write_midi_event	./test/midifile.c	/^mf_write_midi_event (delta_time, type, chan, data, size)$/;"	f
mf_write_seqnum	./test/midifile.c	/^mf_write_seqnum (delta_time, seqnum)$/;"	f
mf_write_tempo	./test/midifile.c	/^mf_write_tempo (delta_time, tempo)$/;"	f
mf_write_track_chunk	./test/midifile.c	/^mf_write_track_chunk (which_track, fp)$/;"	f
mferror	./test/midifile.c	/^mferror (s)$/;"	f
mfread	./test/midifile.c	/^mfread ()$/;"	f
mfwrite	./test/midifile.c	/^mfwrite (format, ntracks, division, fp)$/;"	f
midi_channels	./include/sound/asequencer.h	/^	int midi_channels;		\/* channels per MIDI port *\/$/;"	m	struct:sndrv_seq_port_info
midi_event	./src/rawmidi/rawmidi_virt.c	/^	snd_midi_event_t *midi_event;$/;"	m	struct:__anon101	file:
midi_matches_regex	./test/lsb/midi_event.c	/^static int midi_matches_regex(unsigned char *midi, int count, const char *regex)$/;"	f	file:
midi_voices	./include/sound/asequencer.h	/^	int midi_voices;		\/* voices per MIDI port *\/$/;"	m	struct:sndrv_seq_port_info
midifile	./test/midifile.c	/^midifile ()$/;"	f
min	./include/sound/asound.h	/^			long long min;		\/* R: minimum value *\/$/;"	m	struct:sndrv_ctl_elem_info::__anon29::__anon31
min	./include/sound/asound.h	/^			long min;		\/* R: minimum value *\/$/;"	m	struct:sndrv_ctl_elem_info::__anon29::__anon30
min	./include/sound/asound.h	/^	unsigned int min, max;$/;"	m	struct:sndrv_interval
min	./include/sound/emu10k1.h	/^	unsigned int min;		\/* minimum range *\/$/;"	m	struct:__anon17
min	./modules/mixer/simple/sbase.h	/^		long min, max;$/;"	m	struct:selem_base::__anon84
min	./modules/mixer/simple/sbase.h	/^	long min, max;$/;"	m	struct:helem_base
min	./src/mixer/simple_none.c	/^		long min, max;$/;"	m	struct:_selem_none::selem_str	file:
min	./src/mixer/simple_none.c	/^	long min, max;$/;"	m	struct:_selem_ctl	file:
min	./src/pcm/pcm_ext_parm.h	/^	unsigned int min, max;$/;"	m	struct:snd_ext_parm
min_align	./src/pcm/pcm_local.h	/^	snd_pcm_uframes_t min_align;$/;"	m	struct:_snd_pcm
min_dB	./src/pcm/pcm_softvol.c	/^	double min_dB;$/;"	m	struct:__anon109	file:
minperiodtime	./src/pcm/pcm_local.h	/^	long minperiodtime;		\/* in us *\/$/;"	m	struct:_snd_pcm
minval	./src/control/tlv.c	/^	long minval, maxval;$/;"	m	struct:tlv_info	file:
mix_areas	./src/pcm/pcm_dmix.c	/^static void mix_areas(snd_pcm_direct_t *dmix,$/;"	f	file:
mix_areas_16	./src/pcm/pcm_direct.h	/^			mix_areas_16_t *mix_areas_16;$/;"	m	struct:snd_pcm_direct::__anon128::__anon129
mix_areas_16	./src/pcm/pcm_dmix_generic.c	/^static void mix_areas_16(unsigned int size,$/;"	f	file:
mix_areas_16_t	./src/pcm/pcm_direct.h	/^typedef void (mix_areas_16_t)(unsigned int size,$/;"	t
mix_areas_24	./src/pcm/pcm_direct.h	/^			mix_areas_24_t *mix_areas_24;$/;"	m	struct:snd_pcm_direct::__anon128::__anon129
mix_areas_24_t	./src/pcm/pcm_direct.h	/^typedef void (mix_areas_24_t)(unsigned int size,$/;"	t
mix_areas_32	./src/pcm/pcm_direct.h	/^			mix_areas_32_t *mix_areas_32;$/;"	m	struct:snd_pcm_direct::__anon128::__anon129
mix_areas_32	./src/pcm/pcm_dmix_generic.c	/^static void mix_areas_32(unsigned int size,$/;"	f	file:
mix_areas_32_t	./src/pcm/pcm_direct.h	/^typedef void (mix_areas_32_t)(unsigned int size,$/;"	t
mix_areas_t	./src/pcm/pcm_direct.h	/^typedef void (mix_areas_t)(unsigned int size,$/;"	t
mix_areas_u8	./src/pcm/pcm_direct.h	/^			mix_areas_u8_t *mix_areas_u8;$/;"	m	struct:snd_pcm_direct::__anon128::__anon129
mix_areas_u8_t	./src/pcm/pcm_direct.h	/^typedef void (mix_areas_u8_t)(unsigned int size,$/;"	t
mix_select_callbacks	./src/pcm/pcm_dmix.c	149;"	d	file:
mix_select_callbacks	./src/pcm/pcm_dmix_generic.c	/^static void mix_select_callbacks(snd_pcm_direct_t *dmix)$/;"	f	file:
mix_select_callbacks	./src/pcm/pcm_dmix_i386.c	/^static void mix_select_callbacks(snd_pcm_direct_t *dmix)$/;"	f	file:
mix_select_callbacks	./src/pcm/pcm_dmix_x86_64.c	/^static void mix_select_callbacks(snd_pcm_direct_t *dmix)$/;"	f	file:
mixer	./include/sound/hdspm.h	/^	struct hdspm_mixer *mixer;$/;"	m	struct:hdspm_mixer_ioctl	typeref:struct:hdspm_mixer_ioctl::hdspm_mixer
mixer	./modules/mixer/simple/python.c	/^	snd_mixer_t *mixer;$/;"	m	struct:pymixer	file:
mixer	./src/mixer/mixer_local.h	/^	snd_mixer_t *mixer;$/;"	m	struct:_snd_mixer_class
mixer_compare	./src/mixer/mixer.c	/^static int mixer_compare(const void *a, const void *b)$/;"	f	file:
mixer_name_table	./src/mixer/simple_none.c	/^static const struct mixer_name_table {$/;"	s	file:
mixer_simple_basic_dlopen	./modules/mixer/simple/sbasedl.c	/^int mixer_simple_basic_dlopen(snd_mixer_class_t *class,$/;"	f
mixername	./include/control_external.h	/^	char mixername[80];$/;"	m	struct:snd_ctl_ext
mixername	./include/sound/asound.h	/^	unsigned char mixername[80];	\/* visual mixer identification *\/$/;"	m	struct:sndrv_ctl_card_info
mmap	./src/pcm/pcm_local.h	/^		} mmap;$/;"	m	union:_snd_pcm_channel_info::__anon134	typeref:struct:_snd_pcm_channel_info::__anon134::__anon136
mmap	./src/pcm/pcm_local.h	/^	int (*mmap)(snd_pcm_t *pcm);$/;"	m	struct:__anon137
mmap_channels	./src/pcm/pcm_local.h	/^	snd_pcm_channel_info_t *mmap_channels;$/;"	m	struct:_snd_pcm
mmap_commit	./include/aserver.h	/^		} mmap_commit;$/;"	m	union:__anon53::__anon54	typeref:struct:__anon53::__anon54::__anon62
mmap_commit	./src/pcm/pcm_local.h	/^	snd_pcm_sframes_t (*mmap_commit)(snd_pcm_t *pcm, snd_pcm_uframes_t offset, snd_pcm_uframes_t size);$/;"	m	struct:__anon138
mmap_control	./src/pcm/pcm_hw.c	/^	struct sndrv_pcm_mmap_control *mmap_control;$/;"	m	struct:__anon107	typeref:struct:__anon107::sndrv_pcm_mmap_control	file:
mmap_emul	./src/pcm/pcm_mmap_emul.c	/^	unsigned int mmap_emul :1;$/;"	m	struct:__anon139	file:
mmap_emul_t	./src/pcm/pcm_mmap_emul.c	/^} mmap_emul_t;$/;"	t	typeref:struct:__anon139	file:
mmap_rw	./include/pcm_ioplug.h	/^	unsigned int mmap_rw;		\/**< pseudo mmap mode *\/$/;"	m	struct:snd_pcm_ioplug
mmap_rw	./src/pcm/pcm_local.h	/^	unsigned int mmap_rw: 1;	\/* use always mmapped buffer *\/$/;"	m	struct:_snd_pcm
mmap_shadow	./src/pcm/pcm_local.h	/^	unsigned int mmap_shadow: 1;	\/* don't call actual mmap,$/;"	m	struct:_snd_pcm
mmap_status	./src/pcm/pcm_hw.c	/^	volatile struct sndrv_pcm_mmap_status * mmap_status;$/;"	m	struct:__anon107	typeref:struct:__anon107::sndrv_pcm_mmap_status	file:
mod_file_flag	./test/midifile.c	/^static int mod_file_flag = 0;$/;"	v	file:
mode	./aserver/aserver.c	/^	int mode;$/;"	m	struct:client	file:
mode	./include/aserver.h	/^	unsigned char mode;$/;"	m	struct:__anon67
mode	./src/control/setup.c	/^	int mode;$/;"	m	struct:_snd_sctl	file:
mode	./src/hwdep/hwdep_local.h	/^	int mode;$/;"	m	struct:_snd_hwdep
mode	./src/pcm/pcm_local.h	/^	int mode;$/;"	m	struct:_snd_pcm
mode	./src/rawmidi/rawmidi_local.h	/^	int mode;$/;"	m	struct:_snd_rawmidi
mode	./src/seq/seq_local.h	/^	int mode;$/;"	m	struct:_snd_seq
mode	./src/timer/timer_local.h	/^	int mode;$/;"	m	struct:_snd_timer
mode	./src/timer/timer_local.h	/^	int mode;$/;"	m	struct:_snd_timer_query
modifier_list	./src/ucm/ucm_local.h	/^	struct list_head modifier_list;$/;"	m	struct:use_case_verb	typeref:struct:use_case_verb::list_head
modifier_status	./src/ucm/main.c	/^long modifier_status(snd_use_case_mgr_t *uc_mgr,$/;"	f
monotonic	./src/pcm/pcm_direct.h	/^		unsigned int monotonic;$/;"	m	struct:__anon123::__anon125
monotonic	./src/pcm/pcm_local.h	/^	    monotonic: 1,$/;"	m	struct:_snd_pcm
mres	./include/sound/asound.h	/^	struct sndrv_mask mres[5];	\/* reserved masks *\/$/;"	m	struct:sndrv_pcm_hw_params	typeref:struct:sndrv_pcm_hw_params::sndrv_mask
msbits	./include/sound/asound.h	/^	unsigned int msbits;		\/* R: used most significant bits *\/$/;"	m	struct:sndrv_pcm_hw_params
msbits	./src/pcm/pcm_direct.h	/^		unsigned int msbits;$/;"	m	struct:__anon123::__anon125
msbits	./src/pcm/pcm_hw.c	/^	unsigned int msbits;$/;"	m	struct:sndrv_pcm_hw_params_old	file:
msbits	./src/pcm/pcm_local.h	/^	unsigned int msbits;		\/* used most significant bits *\/$/;"	m	struct:_snd_pcm
msg	./test/midifile.c	/^msg ()$/;"	f	file:
msgadd	./test/midifile.c	/^msgadd (c)$/;"	f	file:
msginit	./test/midifile.c	/^msginit ()$/;"	f	file:
msgleng	./test/midifile.c	/^msgleng ()$/;"	f	file:
mtime	./src/conf.c	/^	time_t mtime;$/;"	m	struct:finfo	file:
mul	./src/pcm/interval.c	/^static inline unsigned int mul(unsigned int a, unsigned int b)$/;"	f	file:
mulaw_f	./src/pcm/pcm_mulaw.c	/^typedef void (*mulaw_f)(const snd_pcm_channel_area_t *src_areas,$/;"	t	file:
muldiv	./src/pcm/pcm_local.h	/^static inline int muldiv(int a, int b, int c, int *r)$/;"	f
muldiv32	./src/pcm/interval.c	/^static inline unsigned int muldiv32(unsigned int a, unsigned int b,$/;"	f	file:
muldiv_down	./src/pcm/pcm_local.h	/^static inline int muldiv_down(int a, int b, int c)$/;"	f
muldiv_near	./src/pcm/pcm_local.h	/^static inline int muldiv_near(int a, int b, int c)$/;"	f
multicast_filter	./include/sound/asequencer.h	/^	unsigned char multicast_filter[8]; \/* multicast filter bitmap *\/$/;"	m	struct:sndrv_seq_client_info
munmap	./src/pcm/pcm_local.h	/^	int (*munmap)(snd_pcm_t *pcm);$/;"	m	struct:__anon137
mutex	./src/pcm/pcm_share.c	/^	pthread_mutex_t mutex;$/;"	m	struct:__anon118	file:
mutex	./src/ucm/ucm_local.h	/^	pthread_mutex_t mutex;$/;"	m	struct:snd_use_case_mgr
mutex_holder	./src/pcm/pcm_share.c	/^	char *mutex_holder;$/;"	m	struct:__anon118	file:
my_port	./test/playmidi1.c	/^static int my_port = 0;$/;"	v	file:
myfcn	./test/oldapi.c	/^typedef void (myfcn)(void *);$/;"	t	file:
mygetc	./test/playmidi1.c	/^static int mygetc(void)$/;"	f	file:
mytext	./test/playmidi1.c	/^static void mytext(int type ATTRIBUTE_UNUSED, int leng, char *msg)$/;"	f	file:
myvalue	./src/ucm/main.c	/^struct myvalue {$/;"	s	file:
name	./aserver/aserver.c	/^	char name[256];$/;"	m	struct:client	file:
name	./include/aserver.h	/^	char name[0];$/;"	m	struct:__anon67
name	./include/conf.h	/^	char *name;	\/**< Device name string *\/$/;"	m	struct:snd_devname
name	./include/control_external.h	/^	char name[32];$/;"	m	struct:snd_ctl_ext
name	./include/pcm_extplug.h	/^	const char *name;$/;"	m	struct:snd_pcm_extplug
name	./include/pcm_ioplug.h	/^	const char *name;$/;"	m	struct:snd_pcm_ioplug
name	./include/sound/asequencer.h	/^	char name[64];			\/* client name *\/$/;"	m	struct:sndrv_seq_client_info
name	./include/sound/asequencer.h	/^	char name[64];			\/* port name *\/$/;"	m	struct:sndrv_seq_port_info
name	./include/sound/asequencer.h	/^	char name[64];		\/* name of this queue *\/$/;"	m	struct:sndrv_seq_queue_info
name	./include/sound/asound.h	/^			char name[64];		\/* R: value name *\/$/;"	m	struct:sndrv_ctl_elem_info::__anon29::__anon32
name	./include/sound/asound.h	/^	unsigned char name[32];		\/* Short name of soundcard *\/$/;"	m	struct:sndrv_ctl_card_info
name	./include/sound/asound.h	/^	unsigned char name[64];		\/* W: ID (e.g. file name) *\/$/;"	m	struct:sndrv_hwdep_dsp_image
name	./include/sound/asound.h	/^	unsigned char name[80];		\/* hwdep name *\/$/;"	m	struct:sndrv_hwdep_info
name	./include/sound/asound.h	/^	unsigned char name[80];		\/* name of device *\/$/;"	m	struct:sndrv_rawmidi_info
name	./include/sound/asound.h	/^	unsigned char name[80];		\/* name of this device *\/$/;"	m	struct:sndrv_pcm_info
name	./include/sound/asound.h	/^	unsigned char name[80];		\/* timer name *\/$/;"	m	struct:sndrv_timer_ginfo
name	./include/sound/asound.h	/^	unsigned char name[80];		\/* timer name *\/$/;"	m	struct:sndrv_timer_info
name	./include/sound/asound.h	/^        unsigned char name[44];		\/* ASCII name of item *\/$/;"	m	struct:sndrv_ctl_elem_id
name	./include/sound/asound_fm.h	/^	char name[25];$/;"	m	struct:sbi_patch
name	./include/sound/emu10k1.h	/^	char name[128];$/;"	m	struct:__anon18
name	./include/sound/emu10k1.h	/^	unsigned char name[44];		\/* ASCII name of item *\/ $/;"	m	struct:__anon16
name	./modules/mixer/simple/sbase.h	/^	const char *name;$/;"	m	struct:helem_selector
name	./src/alisp/alisp.c	/^	const char *name;$/;"	m	struct:intrinsic	file:
name	./src/alisp/alisp_local.h	/^	const char *name;$/;"	m	struct:alisp_object_pair
name	./src/alisp/alisp_snd.c	/^	const char *name;$/;"	m	struct:acall_table	file:
name	./src/conf.c	/^	char *name;$/;"	m	struct:filedesc	file:
name	./src/conf.c	/^	char *name;$/;"	m	struct:finfo	file:
name	./src/control/control_local.h	/^	char *name;$/;"	m	struct:_snd_ctl
name	./src/dlmisc.c	/^	const char *name;$/;"	m	struct:dlobj_cache	file:
name	./src/hwdep/hwdep_local.h	/^	char *name;$/;"	m	struct:_snd_hwdep
name	./src/mixer/mixer_local.h	/^	char name[60];$/;"	m	struct:_snd_mixer_selem_id
name	./src/pcm/pcm_local.h	/^	char *name;$/;"	m	struct:_snd_pcm
name	./src/pcm/pcm_meter.c	/^	char *name;$/;"	m	struct:_snd_pcm_scope	file:
name	./src/rawmidi/rawmidi_local.h	/^	char *name;$/;"	m	struct:_snd_rawmidi
name	./src/seq/seq_local.h	/^	char *name;$/;"	m	struct:_snd_seq
name	./src/timer/timer_local.h	/^	char *name;$/;"	m	struct:_snd_timer
name	./src/timer/timer_local.h	/^	char *name;$/;"	m	struct:_snd_timer_query
name	./src/ucm/ucm_local.h	/^	char *name;$/;"	m	struct:dev_list
name	./src/ucm/ucm_local.h	/^	char *name;$/;"	m	struct:transition_sequence
name	./src/ucm/ucm_local.h	/^	char *name;$/;"	m	struct:use_case_device
name	./src/ucm/ucm_local.h	/^	char *name;$/;"	m	struct:use_case_modifier
name	./src/ucm/ucm_local.h	/^	char *name;$/;"	m	struct:use_case_verb
name	./src/ucm/ucm_local.h	/^        char *name;$/;"	m	struct:ucm_value
name	./test/pcm.c	/^	const char *name;$/;"	m	struct:transfer_method	file:
name_table	./src/mixer/simple_none.c	/^} name_table[] = {$/;"	v	typeref:struct:mixer_name_table	file:
namelen	./include/aserver.h	/^	unsigned char namelen;$/;"	m	struct:__anon67
names	./src/pcm/pcm.c	/^static const char *const names[SND_PCM_HW_PARAM_LAST_INTERVAL + 1] = {$/;"	v	file:
ndsts	./src/pcm/pcm_route.c	/^	unsigned int ndsts;$/;"	m	struct:__anon141	file:
new_cons_pointer	./src/alisp/alisp.c	/^static struct alisp_object * new_cons_pointer(struct alisp_instance * instance, const char *ptr_id, void *ptr)$/;"	f	file:
new_float	./src/alisp/alisp.c	/^static struct alisp_object * new_float(struct alisp_instance *instance, double value)$/;"	f	file:
new_helem	./modules/mixer/simple/python.c	/^static PyObject *new_helem(struct python_priv *priv, snd_hctl_elem_t *helem)$/;"	f	file:
new_identifier	./src/alisp/alisp.c	/^static struct alisp_object * new_identifier(struct alisp_instance *instance, const char *id)$/;"	f	file:
new_integer	./src/alisp/alisp.c	/^static struct alisp_object * new_integer(struct alisp_instance *instance, long value)$/;"	f	file:
new_lexpr	./src/alisp/alisp_snd.c	/^static struct alisp_object * new_lexpr(struct alisp_instance * instance, int err)$/;"	f	file:
new_object	./src/alisp/alisp.c	/^static struct alisp_object * new_object(struct alisp_instance *instance, int type)$/;"	f	file:
new_pointer	./src/alisp/alisp.c	/^static struct alisp_object * new_pointer(struct alisp_instance *instance, const void *ptr)$/;"	f	file:
new_result1	./src/alisp/alisp_snd.c	/^static struct alisp_object * new_result1(struct alisp_instance * instance,$/;"	f	file:
new_result2	./src/alisp/alisp_snd.c	/^static struct alisp_object * new_result2(struct alisp_instance * instance,$/;"	f	file:
new_result3	./src/alisp/alisp_snd.c	/^static struct alisp_object * new_result3(struct alisp_instance * instance,$/;"	f	file:
new_string	./src/alisp/alisp.c	/^static struct alisp_object * new_string(struct alisp_instance *instance, const char *str)$/;"	f	file:
next	./include/conf.h	/^	snd_devname_t *next;	\/**< Next pointer *\/$/;"	m	struct:snd_devname
next	./include/global.h	/^	struct snd_dlsym_link *next;$/;"	m	struct:snd_dlsym_link	typeref:struct:snd_dlsym_link::snd_dlsym_link
next	./include/list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
next	./src/conf.c	/^	struct filedesc *next;$/;"	m	struct:filedesc	typeref:struct:filedesc::filedesc	file:
next	./src/pcm/pcm_ladspa.c	/^	struct snd_pcm_ladspa_instance *next;$/;"	m	struct:snd_pcm_ladspa_instance	typeref:struct:snd_pcm_ladspa_instance::snd_pcm_ladspa_instance	file:
next_device	./src/timer/timer_local.h	/^	int (*next_device)(snd_timer_query_t *timer, snd_timer_id_t *tid);$/;"	m	struct:__anon89
next_devices	./src/control/namehint.c	/^static const next_devices_t next_devices[] = {$/;"	v	file:
next_devices_t	./src/control/namehint.c	/^typedef int (*next_devices_t)(snd_ctl_t *, int *);$/;"	t	file:
no_active_sensing	./include/sound/asound.h	/^	unsigned int no_active_sensing: 1; \/* do not send active sensing byte in close() *\/$/;"	m	struct:sndrv_rawmidi_params
no_active_sensing	./src/rawmidi/rawmidi_local.h	/^	unsigned int no_active_sensing: 1;$/;"	m	struct:_snd_rawmidi
no_video	./include/sound/hdspm.h	/^	no_video$/;"	e	enum:hdspm_ltc_input_format
nomem	./src/alisp/alisp.c	/^static void nomem(void)$/;"	f	file:
non_reg_lsb	./test/midifile.h	87;"	d
non_reg_msb	./test/midifile.h	88;"	d
nonblock	./include/control_external.h	/^	int nonblock;			\/**< non-block mode; read-only *\/$/;"	m	struct:snd_ctl_ext
nonblock	./include/pcm_ioplug.h	/^	int nonblock;			\/**< non-block mode; read-only *\/$/;"	m	struct:snd_pcm_ioplug
nonblock	./src/control/control_local.h	/^	int (*nonblock)(snd_ctl_t *handle, int nonblock);$/;"	m	struct:_snd_ctl_ops
nonblock	./src/control/control_local.h	/^	int nonblock;$/;"	m	struct:_snd_ctl
nonblock	./src/hwdep/hwdep_local.h	/^	int (*nonblock)(snd_hwdep_t *hwdep, int nonblock);$/;"	m	struct:__anon91
nonblock	./src/pcm/pcm_local.h	/^	int (*nonblock)(snd_pcm_t *pcm, int nonblock);$/;"	m	struct:__anon137
nonblock	./src/rawmidi/rawmidi_local.h	/^	int (*nonblock)(snd_rawmidi_t *rawmidi, int nonblock);$/;"	m	struct:__anon99
nonblock	./src/seq/seq_local.h	/^	int (*nonblock)(snd_seq_t *seq, int nonblock);$/;"	m	struct:__anon97
nonblock	./src/timer/timer_local.h	/^	int (*nonblock)(snd_timer_t *timer, int nonblock);$/;"	m	struct:__anon88
nonlinear_preferred_formats	./src/pcm/pcm_plug.c	/^static const snd_pcm_format_t nonlinear_preferred_formats[] = {$/;"	v	file:
normalize	./test/queue_timer.c	/^void normalize(struct timeval *tv)$/;"	f
norms_labels	./src/pcm/plugin_ops.h	/^static void *const norms_labels[4 * 2 * 4 * 2] = {$/;"	v
nostat	./src/seq/seq_midi_event.c	/^	unsigned char nostat;$/;"	m	struct:snd_midi_event	file:
note	./include/seq_event.h	/^		snd_seq_ev_note_t note;		\/**< note information *\/$/;"	m	union:snd_seq_event::__anon46
note	./include/seq_event.h	/^	unsigned char note;		\/**< note *\/$/;"	m	struct:snd_seq_ev_note
note	./include/sound/asequencer.h	/^		struct sndrv_seq_ev_note note;$/;"	m	union:sndrv_seq_event::__anon11	typeref:struct:sndrv_seq_event::__anon11::sndrv_seq_ev_note
note	./include/sound/asequencer.h	/^	unsigned char note;$/;"	m	struct:sndrv_seq_ev_note
note_decode	./src/seq/seq_midi_event.c	/^static void note_decode(const snd_seq_event_t *ev, unsigned char *buf)$/;"	f	file:
note_event	./src/seq/seq_midi_event.c	/^static void note_event(snd_midi_event_t *dev, snd_seq_event_t *ev)$/;"	f	file:
note_off	./test/midifile.h	54;"	d
note_on	./test/midifile.h	55;"	d
now	./src/pcm/pcm_meter.c	/^	snd_pcm_uframes_t now;$/;"	m	struct:_snd_pcm_meter	file:
nsrcs	./src/pcm/pcm_route.c	/^	unsigned int nsrcs;$/;"	m	struct:snd_pcm_route_ttable_dst	file:
ntsc	./include/sound/hdspm.h	/^	ntsc,$/;"	e	enum:hdspm_ltc_input_format
num_dsps	./include/sound/asound.h	/^	unsigned int num_dsps;		\/* R: number of DSP images to transfer *\/$/;"	m	struct:sndrv_hwdep_dsp_status
num_list	./src/pcm/pcm_ext_parm.h	/^	unsigned int num_list;$/;"	m	struct:snd_ext_parm
num_ports	./include/sound/asequencer.h	/^	int num_ports;			\/* RO: number of ports *\/$/;"	m	struct:sndrv_seq_client_info
num_subs	./include/sound/asequencer.h	/^	int num_subs;		\/* R\/O: number of subscriptions on this port *\/$/;"	m	struct:sndrv_seq_query_subs
numberof	./src/seq/seq_midi_event.c	128;"	d	file:
numid	./include/sound/asound.h	/^	unsigned int numid;		\/* numeric identifier, zero = invalid *\/$/;"	m	struct:sndrv_ctl_elem_id
numid	./include/sound/asound.h	/^	unsigned int numid;     \/* control element numeric identification *\/$/;"	m	struct:sndrv_ctl_tlv
obj	./src/pcm/pcm_rate.c	/^	void *obj;$/;"	m	struct:_snd_pcm_rate	file:
obj_type_str	./src/alisp/alisp.c	/^static const char *obj_type_str(struct alisp_object * p)$/;"	f	file:
obuf	./src/seq/seq_local.h	/^	char *obuf;		\/* output buffer *\/$/;"	m	struct:_snd_seq
obufsize	./src/seq/seq_local.h	/^	size_t obufsize;		\/* output buffer size *\/$/;"	m	struct:_snd_seq
obufused	./src/seq/seq_local.h	/^	size_t obufused;		\/* output buffer used size *\/$/;"	m	struct:_snd_seq
octave	./include/sound/asound_fm.h	/^	unsigned char octave;	\/* 3 bits: what octave to play *\/$/;"	m	struct:snd_dm_fm_note
off_velocity	./include/seq_event.h	/^	unsigned char off_velocity;	\/**< note-off velocity; only for #SND_SEQ_EVENT_NOTE *\/$/;"	m	struct:snd_seq_ev_note
off_velocity	./include/sound/asequencer.h	/^	unsigned char off_velocity;	\/* only for SNDRV_SEQ_EVENT_NOTE *\/$/;"	m	struct:sndrv_seq_ev_note
offset	./include/aserver.h	/^			off_t offset;$/;"	m	struct:__anon53::__anon54::__anon63
offset	./include/aserver.h	/^			snd_pcm_uframes_t offset;$/;"	m	struct:__anon53::__anon54::__anon62
offset	./include/aserver.h	/^	off_t offset;		\/* for mmap *\/$/;"	m	struct:__anon52
offset	./include/sound/asound.h	/^	long offset;			\/* mmap offset *\/$/;"	m	struct:sndrv_pcm_channel_info
offset	./include/sound/asound.h	/^	unsigned int offset;		\/* W: first element ID to get *\/$/;"	m	struct:sndrv_ctl_elem_list
offset	./src/pcm/pcm_local.h	/^			off_t offset;$/;"	m	struct:_snd_pcm_channel_info::__anon134::__anon136
offset	./src/pcm/pcm_local.h	/^	off_t offset;$/;"	m	struct:_snd_pcm_rbptr
old	./src/control/setup.c	/^	snd_ctl_elem_value_t *old;$/;"	m	struct:__anon96	file:
old	./src/pcm/pcm_meter.c	/^	snd_pcm_uframes_t old;$/;"	m	struct:_snd_pcm_scope_s16	file:
old	./src/pcm/scopes/level.c	/^	snd_pcm_uframes_t old;$/;"	m	struct:_snd_pcm_scope_level	file:
old_currtempo	./test/midifile.c	/^static unsigned long old_currtempo = 500000;$/;"	v	file:
old_currtime	./test/midifile.c	/^static unsigned long old_currtime = 0;$/;"	v	file:
old_f_realtime	./test/midifile.c	/^static double old_f_realtime = 0;$/;"	v	file:
old_realtime	./test/midifile.c	/^static unsigned long old_realtime = 0;$/;"	v	file:
old_sample	./src/pcm/pcm_rate_linear.c	/^	int16_t *old_sample;$/;"	m	struct:rate_linear	file:
one_param_ctrl_event	./src/seq/seq_midi_event.c	/^static void one_param_ctrl_event(snd_midi_event_t *dev, snd_seq_event_t *ev)$/;"	f	file:
one_param_decode	./src/seq/seq_midi_event.c	/^static void one_param_decode(const snd_seq_event_t *ev, unsigned char *buf)$/;"	f	file:
one_param_event	./src/seq/seq_midi_event.c	/^static void one_param_event(snd_midi_event_t *dev, snd_seq_event_t *ev)$/;"	f	file:
op	./include/sound/asound_fm.h	/^	unsigned char op;		\/* operator cell (0 or 1) *\/$/;"	m	struct:snd_dm_fm_voice
op_arg	./src/pcm/pcm_local.h	/^	snd_pcm_t *op_arg;$/;"	m	struct:_snd_pcm
open	./aserver/aserver.c	/^	int (*open)(client_t *client, int *cookie);$/;"	m	struct:__anon1	file:
open	./aserver/aserver.c	/^	int open;$/;"	m	struct:client	file:
open	./src/rawmidi/rawmidi_hw.c	/^	int open;$/;"	m	struct:__anon100	file:
open	./src/rawmidi/rawmidi_virt.c	/^	int open;$/;"	m	struct:__anon101	file:
open_count	./src/pcm/pcm_share.c	/^	unsigned int open_count;$/;"	m	struct:__anon118	file:
open_ctl	./src/confmisc.c	/^static int open_ctl(long card, snd_ctl_t **ctl)$/;"	f	file:
open_ctl	./src/ucm/main.c	/^static int open_ctl(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
open_func	./src/control/control_local.h	/^	void *open_func;$/;"	m	struct:_snd_ctl
open_func	./src/pcm/pcm_local.h	/^	void *open_func;$/;"	m	struct:_snd_pcm
open_func	./src/pcm/pcm_rate.c	/^	void *open_func;$/;"	m	struct:_snd_pcm_rate	file:
openmax	./include/sound/asound.h	/^		     openmax:1,$/;"	m	struct:sndrv_interval
openmin	./include/sound/asound.h	/^	unsigned int openmin:1,$/;"	m	struct:sndrv_interval
ops	./aserver/aserver.c	/^	transport_ops_t *ops;$/;"	m	struct:client	file:
ops	./include/mixer_abst.h	/^	struct sm_elem_ops *ops;$/;"	m	struct:_sm_selem	typeref:struct:_sm_selem::sm_elem_ops
ops	./modules/mixer/simple/sbase.h	/^	bclass_base_ops_t ops;$/;"	m	struct:bclass_private
ops	./src/control/control_local.h	/^	const snd_ctl_ops_t *ops;$/;"	m	struct:_snd_ctl
ops	./src/hwdep/hwdep_local.h	/^	const snd_hwdep_ops_t *ops;$/;"	m	struct:_snd_hwdep
ops	./src/input.c	/^	const snd_input_ops_t *ops;$/;"	m	struct:_snd_input	file:
ops	./src/output.c	/^	const snd_output_ops_t *ops;$/;"	m	struct:_snd_output	file:
ops	./src/pcm/pcm_local.h	/^	const snd_pcm_ops_t *ops;$/;"	m	struct:_snd_pcm
ops	./src/pcm/pcm_meter.c	/^	const snd_pcm_scope_ops_t *ops;$/;"	m	struct:_snd_pcm_scope	file:
ops	./src/pcm/pcm_rate.c	/^	snd_pcm_rate_ops_t ops;$/;"	m	struct:_snd_pcm_rate	file:
ops	./src/rawmidi/rawmidi_local.h	/^	const snd_rawmidi_ops_t *ops;$/;"	m	struct:_snd_rawmidi
ops	./src/seq/seq_local.h	/^	const snd_seq_ops_t *ops;$/;"	m	struct:_snd_seq
ops	./src/timer/timer_local.h	/^	const snd_timer_ops_t *ops;$/;"	m	struct:_snd_timer
ops	./src/timer/timer_local.h	/^	const snd_timer_query_ops_t *ops;$/;"	m	struct:_snd_timer_query
orig_avail_min	./src/pcm/pcm_rate.c	/^	snd_pcm_uframes_t orig_avail_min;$/;"	m	struct:_snd_pcm_rate	file:
origin	./include/sound/asequencer.h	/^	struct sndrv_seq_addr origin;		\/* original sender *\/$/;"	m	struct:sndrv_seq_ev_quote	typeref:struct:sndrv_seq_ev_quote::sndrv_seq_addr
out	./include/alisp.h	/^	snd_output_t *out;	\/* program output *\/$/;"	m	struct:alisp_cfg
out	./include/pcm_rate.h	/^	struct snd_pcm_rate_side_info out;$/;"	m	struct:snd_pcm_rate_info	typeref:struct:snd_pcm_rate_info::snd_pcm_rate_side_info
out	./src/alisp/alisp_local.h	/^	snd_output_t *out;$/;"	m	struct:alisp_instance
out_event	./src/rawmidi/rawmidi_virt.c	/^	snd_seq_event_t out_event;$/;"	m	struct:__anon101	file:
output	./src/pcm/pcm_ladspa.c	/^	snd_pcm_ladspa_eps_t output;$/;"	m	struct:snd_pcm_ladspa_instance	file:
output	./src/pcm/pcm_ladspa.c	/^	snd_pcm_ladspa_plugin_io_t output;$/;"	m	struct:__anon117	file:
output	./test/latency.c	/^snd_output_t *output = NULL;$/;"	v
output	./test/pcm.c	/^static snd_output_t *output = NULL;$/;"	v	file:
output	./test/pcm_min.c	/^snd_output_t *output = NULL;$/;"	v
output_frames	./include/pcm_rate.h	/^	snd_pcm_uframes_t (*output_frames)(void *obj, snd_pcm_uframes_t frames);$/;"	m	struct:snd_pcm_rate_old_ops
output_frames	./include/pcm_rate.h	/^	snd_pcm_uframes_t (*output_frames)(void *obj, snd_pcm_uframes_t frames);$/;"	m	struct:snd_pcm_rate_ops
output_frames	./src/pcm/pcm_rate_linear.c	/^static snd_pcm_uframes_t output_frames(void *obj, snd_pcm_uframes_t frames)$/;"	f	file:
output_free	./include/sound/asequencer.h	/^	int output_free;		\/* unused size *\/$/;"	m	struct:sndrv_seq_client_pool
output_peaks	./include/sound/hdsp.h	/^	uint32_t output_peaks[28];$/;"	m	struct:_snd_hdsp_peak_rms
output_peaks	./include/sound/hdspm.h	/^	uint32_t output_peaks[64];$/;"	m	struct:hdspm_peak_rms
output_pool	./include/sound/asequencer.h	/^	int output_pool;		\/* outgoing (write) pool size *\/$/;"	m	struct:sndrv_seq_client_pool
output_rms	./include/sound/hdsp.h	/^	uint64_t output_rms[26];$/;"	m	struct:_snd_hdsp_peak_rms
output_rms	./include/sound/hdspm.h	/^	uint64_t output_rms[64];$/;"	m	struct:hdspm_peak_rms
output_room	./include/sound/asequencer.h	/^	int output_room;		\/* minimum free pool size for select\/blocking mode *\/$/;"	m	struct:sndrv_seq_client_pool
overrange	./include/sound/asound.h	/^	sndrv_pcm_uframes_t overrange;	\/* count of ADC (capture) overrange detections from last status *\/$/;"	m	struct:sndrv_pcm_status
overrun	./include/sound/asound.h	/^	unsigned int overrun;		\/* count of read queue overruns *\/$/;"	m	struct:sndrv_timer_status
owner	./include/sound/asequencer.h	/^	int owner;		\/* client id for owner of the queue *\/$/;"	m	struct:sndrv_seq_queue_info
owner	./include/sound/asound.h	/^	pid_t owner;			\/* owner's PID of this control *\/$/;"	m	struct:sndrv_ctl_elem_info
pad	./include/control.h	/^	unsigned char pad;		\/**< nothing *\/$/;"	m	struct:snd_aes_iec958
pad	./include/sound/asequencer.h	/^	unsigned char pad;		\/* reserved *\/$/;"	m	struct:sndrv_seq_running_info
pad	./include/sound/asequencer.h	/^	unsigned char pad[3];			\/* reserved *\/$/;"	m	struct:sndrv_seq_ev_queue_control
pad	./include/sound/asequencer.h	/^	unsigned char pad[3];		\/* reserved *\/$/;"	m	struct:sndrv_seq_port_subscribe
pad	./include/sound/asound.h	/^	int pad;			\/* reserved for future (was type) *\/$/;"	m	struct:sndrv_ctl_card_info
pad	./include/sound/asound.h	/^	unsigned char pad;		\/* nothing *\/$/;"	m	struct:sndrv_aes_iec958
pad	./include/sound/emu10k1.h	/^	unsigned char pad;		\/* reserved *\/$/;"	m	struct:__anon20
pad	./include/sound/emu10k1.h	/^	unsigned int pad;		\/* don't use *\/$/;"	m	struct:__anon16
pad1	./include/sound/asound.h	/^	int pad1;			\/* Needed for 64 bit alignment *\/$/;"	m	struct:sndrv_pcm_mmap_status
page_align	./src/pcm/pcm_mmap.c	/^size_t page_align(size_t size)$/;"	f
page_ptr	./src/pcm/pcm_mmap.c	/^size_t page_ptr(size_t object_offset, size_t object_size, size_t *offset, size_t *mmap_offset)$/;"	f
page_size	./src/pcm/pcm_mmap.c	/^size_t page_size(void)$/;"	f
pal	./include/sound/hdspm.h	/^	pal,$/;"	e	enum:hdspm_ltc_input_format
param	./include/seq_event.h	/^	unsigned int param;		\/**< control parameter *\/$/;"	m	struct:snd_seq_ev_ctrl
param	./include/seq_event.h	/^	} param;				\/**< data value union *\/$/;"	m	struct:snd_seq_ev_queue_control	typeref:union:snd_seq_ev_queue_control::__anon45
param	./include/sound/asequencer.h	/^	unsigned int param;$/;"	m	struct:sndrv_seq_ev_ctrl
param	./include/sound/asequencer.h	/^	} param;$/;"	m	struct:sndrv_seq_ev_queue_control	typeref:union:sndrv_seq_ev_queue_control::__anon10
params	./src/pcm/pcm_extplug.c	/^	struct snd_ext_parm params[SND_PCM_EXTPLUG_HW_PARAMS];$/;"	m	struct:snd_pcm_extplug_priv	typeref:struct:snd_pcm_extplug_priv::snd_ext_parm	file:
params	./src/pcm/pcm_ioplug.c	/^	struct snd_ext_parm params[SND_PCM_IOPLUG_HW_PARAMS];$/;"	m	struct:snd_pcm_ioplug_priv	typeref:struct:snd_pcm_ioplug_priv::snd_ext_parm	file:
params	./src/pcm/pcm_route.c	/^	snd_pcm_route_params_t params;$/;"	m	struct:__anon144	file:
params	./src/rawmidi/rawmidi_local.h	/^	int (*params)(snd_rawmidi_t *rawmidi, snd_rawmidi_params_t *params);$/;"	m	struct:__anon99
params	./src/timer/timer_local.h	/^	int (*params)(snd_timer_query_t *timer, snd_timer_gparams_t *info);$/;"	m	struct:__anon89
params	./src/timer/timer_local.h	/^	int (*params)(snd_timer_t *timer, snd_timer_params_t *params);$/;"	m	struct:__anon88
pareas	./src/pcm/pcm_rate.c	/^	snd_pcm_channel_area_t *pareas;	\/* areas for splitted period (rate pcm) *\/$/;"	m	struct:_snd_pcm_rate	file:
parent	./src/conf.c	/^	snd_config_t *parent;$/;"	m	struct:_snd_config	file:
parse_arg	./src/conf.c	/^static int parse_arg(const char **ptr, unsigned int *varlen, char **val)$/;"	f	file:
parse_args	./src/conf.c	/^static int parse_args(snd_config_t *subs, const char *str, snd_config_t *defs)$/;"	f	file:
parse_array_def	./src/conf.c	/^static int parse_array_def(snd_config_t *parent, input_t *input, int idx, int skip, int override)$/;"	f	file:
parse_array_defs	./src/conf.c	/^static int parse_array_defs(snd_config_t *parent, input_t *input, int skip, int override)$/;"	f	file:
parse_card	./src/confmisc.c	/^static int parse_card(snd_config_t *root, snd_config_t *src,$/;"	f	file:
parse_char	./src/conf.c	/^static int parse_char(const char **ptr)$/;"	f	file:
parse_compound	./src/ucm/parser.c	/^static int parse_compound(snd_use_case_mgr_t *uc_mgr, snd_config_t *cfg,$/;"	f	file:
parse_controls	./src/ucm/parser.c	/^static int parse_controls(snd_use_case_mgr_t *uc_mgr, snd_config_t *cfg)$/;"	f	file:
parse_ctl_elem_id	./src/alisp/alisp_snd.c	/^static int parse_ctl_elem_id(struct alisp_instance * instance,$/;"	f	file:
parse_def	./src/conf.c	/^static int parse_def(snd_config_t *parent, input_t *input, int skip, int override)$/;"	f	file:
parse_defs	./src/conf.c	/^static int parse_defs(snd_config_t *parent, input_t *input, int skip, int override)$/;"	f	file:
parse_device_index	./src/ucm/parser.c	/^static int parse_device_index(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
parse_device_name	./src/ucm/parser.c	/^static int parse_device_name(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
parse_form	./src/alisp/alisp.c	/^static struct alisp_object * parse_form(struct alisp_instance *instance)$/;"	f	file:
parse_get_safe_id	./src/ucm/parser.c	/^int parse_get_safe_id(snd_config_t *n, const char **id)$/;"	f
parse_id	./src/conf.c	/^static int parse_id(const char **ptr)$/;"	f	file:
parse_is_name_safe	./src/ucm/parser.c	/^int parse_is_name_safe(char *name)$/;"	f
parse_master_file	./src/ucm/parser.c	/^static int parse_master_file(snd_use_case_mgr_t *uc_mgr, snd_config_t *cfg)$/;"	f	file:
parse_master_section	./src/ucm/parser.c	/^static int parse_master_section(snd_use_case_mgr_t *uc_mgr, snd_config_t *cfg,$/;"	f	file:
parse_modifier	./src/ucm/parser.c	/^static int parse_modifier(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
parse_modifier_name	./src/ucm/parser.c	/^static int parse_modifier_name(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
parse_object	./src/alisp/alisp.c	/^static struct alisp_object * parse_object(struct alisp_instance *instance, int havetoken)$/;"	f	file:
parse_quote	./src/alisp/alisp.c	/^static inline struct alisp_object * parse_quote(struct alisp_instance *instance)$/;"	f	file:
parse_sequence	./src/ucm/parser.c	/^static int parse_sequence(snd_use_case_mgr_t *uc_mgr ATTRIBUTE_UNUSED,$/;"	f	file:
parse_string	./src/conf.c	/^static int parse_string(const char **ptr, char **val)$/;"	f	file:
parse_string	./src/ucm/parser.c	/^int parse_string(snd_config_t *n, char **res)$/;"	f
parse_supported_device	./src/ucm/parser.c	/^static int parse_supported_device(snd_use_case_mgr_t *uc_mgr ATTRIBUTE_UNUSED,$/;"	f	file:
parse_transition	./src/ucm/parser.c	/^static int parse_transition(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
parse_value	./src/conf.c	/^static int parse_value(snd_config_t **_n, snd_config_t *parent, input_t *input, char **id, int skip)$/;"	f	file:
parse_value	./src/ucm/parser.c	/^static int parse_value(snd_use_case_mgr_t *uc_mgr ATTRIBUTE_UNUSED,$/;"	f	file:
parse_verb	./src/ucm/parser.c	/^static int parse_verb(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
parse_verb_file	./src/ucm/parser.c	/^static int parse_verb_file(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
passthru	./include/sound/hdsp.h	/^	unsigned char passthru; $/;"	m	struct:_snd_hdsp_config_info
passthru	./include/sound/hdspm.h	/^	unsigned int passthru;$/;"	m	struct:hdspm_config
pause	./include/aserver.h	/^		} pause;$/;"	m	union:__anon53::__anon54	typeref:struct:__anon53::__anon54::__anon58
pause	./include/pcm_ioplug.h	/^	int (*pause)(snd_pcm_ioplug_t *io, int enable);$/;"	m	struct:snd_pcm_ioplug_callback
pause	./src/pcm/pcm_local.h	/^	int (*pause)(snd_pcm_t *pcm, int enable);$/;"	m	struct:__anon138
pb	./include/sound/hdspm.h	/^	unsigned int pb[HDSPM_MIXER_CHANNELS];$/;"	m	struct:hdspm_channelfader
pcall	./modules/mixer/simple/python.c	/^static int pcall(struct pymelem *pymelem, const char *attr, PyObject *args, PyObject **_res)$/;"	f	file:
pcard	./test/seq-sender.c	/^int pcard = 0;$/;"	v
pcm	./aserver/aserver.c	/^		} pcm;$/;"	m	union:client::__anon2	typeref:struct:client::__anon2::__anon3	file:
pcm	./include/local.h	/^		snd_pcm_t *pcm;$/;"	m	union:_snd_async_handler::__anon82
pcm	./include/pcm_extplug.h	/^	snd_pcm_t *pcm;$/;"	m	struct:snd_pcm_extplug
pcm	./include/pcm_ioplug.h	/^	snd_pcm_t *pcm;$/;"	m	struct:snd_pcm_ioplug
pcm	./src/pcm/pcm_hooks.c	/^	snd_pcm_t *pcm;$/;"	m	struct:_snd_pcm_hook	file:
pcm	./src/pcm/pcm_meter.c	/^	snd_pcm_t *pcm;$/;"	m	struct:_snd_pcm_scope_s16	file:
pcm	./src/pcm/pcm_multi.c	/^	snd_pcm_t *pcm;$/;"	m	struct:__anon148	file:
pcm	./src/pcm/pcm_share.c	/^	snd_pcm_t *pcm;$/;"	m	struct:__anon118	file:
pcm	./src/pcm/pcm_share.c	/^	snd_pcm_t *pcm;$/;"	m	struct:__anon119	file:
pcm	./src/pcm/scopes/level.c	/^	snd_pcm_t *pcm;$/;"	m	struct:_snd_pcm_scope_level	file:
pcm_info	./include/aserver.h	/^		snd_pcm_info_t pcm_info;$/;"	m	union:__anon64::__anon65
pcm_info	./src/control/control_local.h	/^	int (*pcm_info)(snd_ctl_t *handle, snd_pcm_info_t * info);$/;"	m	struct:_snd_ctl_ops
pcm_next_device	./src/control/control_local.h	/^	int (*pcm_next_device)(snd_ctl_t *handle, int *device);$/;"	m	struct:_snd_ctl_ops
pcm_prefer_subdevice	./include/aserver.h	/^		int pcm_prefer_subdevice;$/;"	m	union:__anon64::__anon65
pcm_prefer_subdevice	./src/control/control_local.h	/^	int (*pcm_prefer_subdevice)(snd_ctl_t *handle, int subdev);$/;"	m	struct:_snd_ctl_ops
pcm_shm_appl_ptr_changed	./aserver/aserver.c	/^static void pcm_shm_appl_ptr_changed(snd_pcm_t *pcm, snd_pcm_t *src ATTRIBUTE_UNUSED)$/;"	f	file:
pcm_shm_close	./aserver/aserver.c	/^static int pcm_shm_close(client_t *client)$/;"	f	file:
pcm_shm_cmd	./aserver/aserver.c	/^static int pcm_shm_cmd(client_t *client)$/;"	f	file:
pcm_shm_hw_ptr_changed	./aserver/aserver.c	/^static void pcm_shm_hw_ptr_changed(snd_pcm_t *pcm, snd_pcm_t *src ATTRIBUTE_UNUSED)$/;"	f	file:
pcm_shm_open	./aserver/aserver.c	/^static int pcm_shm_open(client_t *client, int *cookie)$/;"	f	file:
pcm_shm_ops	./aserver/aserver.c	/^transport_ops_t pcm_shm_ops = {$/;"	v
pdesc	./src/pcm/pcm_ladspa.c	/^	LADSPA_PortDescriptor pdesc;		\/* port description *\/$/;"	m	struct:__anon116	file:
pdevice	./test/latency.c	/^char *pdevice = "hw:0,0";$/;"	v
pdevice	./test/seq-sender.c	/^int pdevice = 0;$/;"	v
peak	./src/pcm/scopes/level.c	/^	int16_t peak;$/;"	m	struct:_snd_pcm_scope_level_channel	file:
peak_age	./src/pcm/scopes/level.c	/^	unsigned int peak_age;$/;"	m	struct:_snd_pcm_scope_level_channel	file:
peak_ms	./src/pcm/scopes/level.c	/^	unsigned int peak_ms;$/;"	m	struct:_snd_pcm_scope_level	file:
pelems	./src/control/control_local.h	/^	snd_hctl_elem_t **pelems;$/;"	m	struct:_snd_hctl
pelems	./src/mixer/mixer_local.h	/^	snd_mixer_elem_t **pelems;	\/* array of all elems *\/$/;"	m	struct:_snd_mixer
pending	./src/rawmidi/rawmidi_virt.c	/^	int pending;$/;"	m	struct:__anon101	file:
period_den	./include/sound/asound.h	/^	unsigned long period_den;	\/* requested precise period duration (in seconds) - denominator *\/$/;"	m	struct:sndrv_timer_gparams
period_event	./include/sound/asound.h	/^	unsigned int period_event;		\/* for alsa-lib implementation *\/$/;"	m	struct:sndrv_pcm_sw_params
period_event	./src/pcm/pcm_hw.c	/^	int period_event;$/;"	m	struct:__anon107	file:
period_event	./src/pcm/pcm_local.h	/^	int period_event;$/;"	m	struct:_snd_pcm
period_event	./test/pcm.c	/^static int period_event = 0;				\/* produce poll event after each period *\/$/;"	v	file:
period_num	./include/sound/asound.h	/^	unsigned long period_num;	\/* requested precise period duration (in seconds) - numerator *\/$/;"	m	struct:sndrv_timer_gparams
period_size	./include/pcm_ioplug.h	/^	snd_pcm_uframes_t period_size;	\/**< period size; filled after hw_params is called *\/$/;"	m	struct:snd_pcm_ioplug
period_size	./include/pcm_rate.h	/^	snd_pcm_uframes_t period_size;$/;"	m	struct:snd_pcm_rate_side_info
period_size	./src/pcm/pcm_direct.h	/^		snd_interval_t period_size;$/;"	m	struct:__anon123::__anon124
period_size	./src/pcm/pcm_direct.h	/^		unsigned int period_size;$/;"	m	struct:__anon123::__anon125
period_size	./src/pcm/pcm_direct.h	/^	snd_pcm_sframes_t period_size;$/;"	m	struct:slave_params
period_size	./src/pcm/pcm_local.h	/^	snd_pcm_uframes_t period_size;$/;"	m	struct:_snd_pcm
period_size	./test/latency.c	/^int period_size = 0;		\/* auto *\/$/;"	v
period_size	./test/pcm.c	/^static snd_pcm_sframes_t period_size;$/;"	v	file:
period_size	./test/seq-sender.c	/^int period_size = 1024;$/;"	v
period_step	./include/sound/asound.h	/^	unsigned int period_step;$/;"	m	struct:sndrv_pcm_sw_params
period_step	./src/pcm/pcm_direct.h	/^		unsigned int period_step;$/;"	m	struct:__anon123::__anon125
period_step	./src/pcm/pcm_local.h	/^	unsigned int period_step;$/;"	m	struct:_snd_pcm
period_time	./src/pcm/pcm_direct.h	/^		snd_interval_t period_time;$/;"	m	struct:__anon123::__anon124
period_time	./src/pcm/pcm_direct.h	/^		unsigned int period_time;$/;"	m	struct:__anon123::__anon125
period_time	./src/pcm/pcm_direct.h	/^	int period_time;$/;"	m	struct:slave_params
period_time	./src/pcm/pcm_local.h	/^	unsigned int period_time;	\/* period duration *\/$/;"	m	struct:_snd_pcm
period_time	./src/pcm/pcm_share.c	/^	snd_pcm_sframes_t period_time;$/;"	m	struct:__anon118	file:
period_time	./test/pcm.c	/^static unsigned int period_time = 100000;		\/* period time in us *\/$/;"	v	file:
period_timer	./src/pcm/pcm_hw.c	/^	snd_timer_t *period_timer;$/;"	m	struct:__anon107	file:
period_timer_need_poll	./src/pcm/pcm_hw.c	/^	int period_timer_need_poll;$/;"	m	struct:__anon107	file:
period_timer_pfd	./src/pcm/pcm_hw.c	/^	struct pollfd period_timer_pfd;$/;"	m	struct:__anon107	typeref:struct:__anon107::pollfd	file:
periods	./src/pcm/pcm_direct.h	/^		snd_interval_t periods;$/;"	m	struct:__anon123::__anon124
periods	./src/pcm/pcm_direct.h	/^		snd_interval_t periods;$/;"	m	struct:__anon123::__anon125
periods	./src/pcm/pcm_direct.h	/^	unsigned int periods;$/;"	m	struct:slave_params
periods	./src/pcm/pcm_local.h	/^	snd_interval_t periods;$/;"	m	struct:_snd_pcm
perm	./src/pcm/pcm_file.c	/^	int perm;$/;"	m	struct:__anon121	file:
phase	./test/pcm.c	/^	double phase;$/;"	m	struct:async_private_data	file:
phaser_depth	./test/midifile.h	79;"	d
phone_gain	./include/sound/hdsp.h	/^	unsigned char phone_gain;$/;"	m	struct:_snd_hdsp_config_info
pid	./include/aserver.h	/^			pid_t pid;$/;"	m	struct:__anon53::__anon54::__anon55
pid	./include/aserver.h	/^			pid_t pid;$/;"	m	struct:__anon64::__anon65::__anon66
pids	./include/sound/asound.h	/^	struct sndrv_ctl_elem_id *pids; \/* R: IDs *\/$/;"	m	struct:sndrv_ctl_elem_list	typeref:struct:sndrv_ctl_elem_list::sndrv_ctl_elem_id
pitch	./src/pcm/pcm_rate_linear.c	/^	unsigned int pitch;$/;"	m	struct:rate_linear	file:
pitch_shift	./src/pcm/pcm_rate_linear.c	/^	unsigned int pitch_shift;	\/* for expand interpolation *\/$/;"	m	struct:rate_linear	file:
pitch_wheel	./test/midifile.h	60;"	d
pitchbend_ctrl_event	./src/seq/seq_midi_event.c	/^static void pitchbend_ctrl_event(snd_midi_event_t *dev, snd_seq_event_t *ev)$/;"	f	file:
pitchbend_decode	./src/seq/seq_midi_event.c	/^static void pitchbend_decode(const snd_seq_event_t *ev, unsigned char *buf)$/;"	f	file:
playback_pcm	./include/mixer.h	/^	snd_pcm_t *playback_pcm;$/;"	m	struct:snd_mixer_selem_regopt
playback_peaks	./include/sound/hdsp.h	/^	uint32_t playback_peaks[26];$/;"	m	struct:_snd_hdsp_peak_rms
playback_peaks	./include/sound/hdspm.h	/^	uint32_t playback_peaks[64];$/;"	m	struct:hdspm_peak_rms
playback_rms	./include/sound/hdsp.h	/^	uint64_t playback_rms[26];$/;"	m	struct:_snd_hdsp_peak_rms
playback_rms	./include/sound/hdspm.h	/^	uint64_t playback_rms[64];$/;"	m	struct:hdspm_peak_rms
plug	./src/pcm/pcm_adpcm.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:__anon104	file:
plug	./src/pcm/pcm_alaw.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:__anon102	file:
plug	./src/pcm/pcm_copy.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:__anon111	file:
plug	./src/pcm/pcm_extplug.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:snd_pcm_extplug_priv	file:
plug	./src/pcm/pcm_iec958.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:snd_pcm_iec958	file:
plug	./src/pcm/pcm_ladspa.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:__anon113	file:
plug	./src/pcm/pcm_lfloat.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:__anon112	file:
plug	./src/pcm/pcm_linear.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:__anon105	file:
plug	./src/pcm/pcm_mulaw.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:__anon147	file:
plug	./src/pcm/pcm_route.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:__anon144	file:
plug	./src/pcm/pcm_softvol.c	/^	snd_pcm_plugin_t plug;$/;"	m	struct:__anon109	file:
plugin_version	./src/pcm/pcm_rate.c	/^	unsigned int plugin_version;$/;"	m	struct:_snd_pcm_rate	file:
pointer	./include/pcm_ioplug.h	/^	snd_pcm_sframes_t (*pointer)(snd_pcm_ioplug_t *io);$/;"	m	struct:snd_pcm_ioplug_callback
policy	./src/pcm/pcm_ladspa.c	/^	snd_pcm_ladspa_policy_t policy;$/;"	m	struct:__anon117	file:
poll	./src/pcm/pcm_share.c	/^	int poll[2];$/;"	m	struct:__anon118	file:
poll_cond	./src/pcm/pcm_share.c	/^	pthread_cond_t poll_cond;$/;"	m	struct:__anon118	file:
poll_descriptors	./include/control_external.h	/^	int (*poll_descriptors)(snd_ctl_ext_t *ext, struct pollfd *pfds, unsigned int space);$/;"	m	struct:snd_ctl_ext_callback
poll_descriptors	./include/pcm_ioplug.h	/^	int (*poll_descriptors)(snd_pcm_ioplug_t *io, struct pollfd *pfd, unsigned int space);$/;"	m	struct:snd_pcm_ioplug_callback
poll_descriptors	./src/control/control_local.h	/^	int (*poll_descriptors)(snd_ctl_t *handle, struct pollfd *pfds, unsigned int space);$/;"	m	struct:_snd_ctl_ops
poll_descriptors	./src/pcm/pcm_local.h	/^	int (*poll_descriptors)(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int space);$/;"	m	struct:__anon138
poll_descriptors_count	./include/control_external.h	/^	int (*poll_descriptors_count)(snd_ctl_ext_t *ext);$/;"	m	struct:snd_ctl_ext_callback
poll_descriptors_count	./include/pcm_ioplug.h	/^	int (*poll_descriptors_count)(snd_pcm_ioplug_t *io);$/;"	m	struct:snd_pcm_ioplug_callback
poll_descriptors_count	./src/control/control_local.h	/^	int (*poll_descriptors_count)(snd_ctl_t *handle);$/;"	m	struct:_snd_ctl_ops
poll_descriptors_count	./src/pcm/pcm_local.h	/^	int (*poll_descriptors_count)(snd_pcm_t *pcm);$/;"	m	struct:__anon138
poll_events	./include/pcm_ioplug.h	/^	unsigned int poll_events;	\/**< poll events *\/$/;"	m	struct:snd_pcm_ioplug
poll_events	./src/pcm/pcm_local.h	/^	unsigned short poll_events;$/;"	m	struct:_snd_pcm
poll_fd	./aserver/aserver.c	/^	int poll_fd;$/;"	m	struct:client	file:
poll_fd	./include/control_external.h	/^	int poll_fd;$/;"	m	struct:snd_ctl_ext
poll_fd	./include/pcm_ioplug.h	/^	int poll_fd;		\/**< poll file descriptor *\/$/;"	m	struct:snd_pcm_ioplug
poll_fd	./src/control/control_local.h	/^	int poll_fd;$/;"	m	struct:_snd_ctl
poll_fd	./src/hwdep/hwdep_local.h	/^	int poll_fd;$/;"	m	struct:_snd_hwdep
poll_fd	./src/pcm/pcm_direct.h	/^	int poll_fd;$/;"	m	struct:snd_pcm_direct
poll_fd	./src/pcm/pcm_local.h	/^	int poll_fd;$/;"	m	struct:_snd_pcm
poll_fd	./src/pcm/pcm_null.c	/^	int poll_fd;$/;"	m	struct:__anon132	file:
poll_fd	./src/rawmidi/rawmidi_local.h	/^	int poll_fd;$/;"	m	struct:_snd_rawmidi
poll_fd	./src/seq/seq_local.h	/^	int poll_fd;$/;"	m	struct:_snd_seq
poll_fd	./src/timer/timer_local.h	/^	int poll_fd;$/;"	m	struct:_snd_timer
poll_fd	./src/timer/timer_local.h	/^	int poll_fd;$/;"	m	struct:_snd_timer_query
poll_fd_count	./src/pcm/pcm_local.h	/^	int poll_fd_count;$/;"	m	struct:_snd_pcm
poll_revents	./include/control_external.h	/^	int (*poll_revents)(snd_ctl_ext_t *ext, struct pollfd *pfds, unsigned int nfds, unsigned short *revents);$/;"	m	struct:snd_ctl_ext_callback
poll_revents	./include/pcm_ioplug.h	/^	int (*poll_revents)(snd_pcm_ioplug_t *io, struct pollfd *pfd, unsigned int nfds, unsigned short *revents);$/;"	m	struct:snd_pcm_ioplug_callback
poll_revents	./src/control/control_local.h	/^	int (*poll_revents)(snd_ctl_t *handle, struct pollfd *pfds, unsigned int nfds, unsigned short *revents);$/;"	m	struct:_snd_ctl_ops
poll_revents	./src/pcm/pcm_local.h	/^	int (*poll_revents)(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int nfds, unsigned short *revents);$/;"	m	struct:__anon138
pollfds	./aserver/aserver.c	/^struct pollfd *pollfds;$/;"	v	typeref:struct:pollfd
pollfds_count	./aserver/aserver.c	/^unsigned int pollfds_count = 0;$/;"	v
polling	./aserver/aserver.c	/^	int polling;$/;"	m	struct:client	file:
polling	./src/pcm/pcm_share.c	/^	int polling;$/;"	m	struct:__anon118	file:
poly_aftertouch	./test/midifile.h	56;"	d
port	./include/seq_event.h	/^	unsigned char port;	\/**< Port id *\/$/;"	m	struct:snd_seq_addr
port	./include/sound/asequencer.h	/^	unsigned char port;	\/**< Port within client:    0..255, 255 = broadcast to all ports *\/$/;"	m	struct:sndrv_seq_addr
port	./src/rawmidi/rawmidi_virt.c	/^	int port;$/;"	m	struct:__anon101	file:
port_bindings	./src/pcm/pcm_ladspa.c	/^	unsigned int *port_bindings;		\/* index = channel number, value = LADSPA port *\/$/;"	m	struct:__anon116	file:
port_bindings_size	./src/pcm/pcm_ladspa.c	/^	unsigned int port_bindings_size;	\/* size of array *\/$/;"	m	struct:__anon116	file:
portamento	./test/midifile.h	66;"	d
ports	./include/sound/asequencer.h	/^	int ports;			\/* maximum ports per client *\/$/;"	m	struct:sndrv_seq_system_info
ports	./src/pcm/pcm_ladspa.c	/^        snd_pcm_ladspa_array_t ports;$/;"	m	struct:__anon115	file:
position	./include/seq_event.h	/^		unsigned int position;		\/**< sync position *\/$/;"	m	union:snd_seq_ev_queue_control::__anon45
position	./include/sound/asequencer.h	/^		unsigned int position;		\/* sync position *\/$/;"	m	union:sndrv_seq_ev_queue_control::__anon10
postorder	./include/search.h	/^  postorder,$/;"	e	enum:__anon44
power_state	./include/aserver.h	/^		unsigned int power_state;$/;"	m	union:__anon64::__anon65
pplugins	./src/pcm/pcm_ladspa.c	/^	struct list_head pplugins;$/;"	m	struct:__anon113	typeref:struct:__anon113::list_head	file:
ppq	./include/sound/asequencer.h	/^	int ppq;			\/* time resolution, ticks\/quarter *\/$/;"	m	struct:sndrv_seq_queue_tempo
ppq	./test/playmidi1.c	/^static int ppq = 96;$/;"	v	file:
preamble	./src/pcm/pcm_iec958.c	/^	unsigned char preamble[3];	\/* B\/M\/W or Z\/X\/Y *\/$/;"	m	struct:snd_pcm_iec958	file:
pred_val	./src/pcm/pcm_plugin.h	/^	int pred_val;		\/* Calculated predicted value *\/$/;"	m	struct:_snd_pcm_adpcm_state
pref_sync_ref	./include/sound/hdsp.h	/^	unsigned char pref_sync_ref;$/;"	m	struct:_snd_hdsp_config_info
pref_sync_ref	./include/sound/hdspm.h	/^	unsigned char pref_sync_ref;$/;"	m	struct:hdspm_config
prefix	./src/alisp/alisp_snd.c	/^	const char *prefix;$/;"	m	struct:acall_table	file:
preorder	./include/search.h	/^  preorder,$/;"	e	enum:__anon44
prepare	./include/pcm_ioplug.h	/^	int (*prepare)(snd_pcm_ioplug_t *io);$/;"	m	struct:snd_pcm_ioplug_callback
prepare	./src/pcm/pcm_local.h	/^	int (*prepare)(snd_pcm_t *pcm);$/;"	m	struct:__anon138
prepared_count	./src/pcm/pcm_share.c	/^	unsigned int prepared_count;$/;"	m	struct:__anon118	file:
preserve	./src/control/setup.c	/^	unsigned int preserve: 1;$/;"	m	struct:__anon96	file:
preset_dB_value	./src/pcm/pcm_softvol.c	/^static const unsigned int preset_dB_value[PRESET_RESOLUTION] = {$/;"	v	file:
prev	./include/list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::
prev	./src/pcm/pcm_ladspa.c	/^	struct snd_pcm_ladspa_instance *prev;$/;"	m	struct:snd_pcm_ladspa_instance	typeref:struct:snd_pcm_ladspa_instance::snd_pcm_ladspa_instance	file:
princ_cons	./src/alisp/alisp.c	/^static void princ_cons(snd_output_t *out, struct alisp_object * p)$/;"	f	file:
princ_object	./src/alisp/alisp.c	/^static void princ_object(snd_output_t *out, struct alisp_object * p)$/;"	f	file:
princ_string	./src/alisp/alisp.c	/^static void princ_string(snd_output_t *out, char *s)$/;"	f	file:
print	./src/output.c	/^	int (*print)(snd_output_t *output, const char *format, va_list args);$/;"	m	struct:_snd_output_ops	file:
print_obj_lists	./src/alisp/alisp.c	/^static void print_obj_lists(struct alisp_instance *instance, snd_output_t *out)$/;"	f	file:
private_data	./aserver/aserver.c	/^	void *private_data;$/;"	m	struct:waiter	file:
private_data	./include/control_external.h	/^	void *private_data;$/;"	m	struct:snd_ctl_ext
private_data	./include/local.h	/^	void *private_data;$/;"	m	struct:_snd_async_handler
private_data	./include/pcm_extplug.h	/^	void *private_data;$/;"	m	struct:snd_pcm_extplug
private_data	./include/pcm_ioplug.h	/^	void *private_data;$/;"	m	struct:snd_pcm_ioplug
private_data	./src/control/control_local.h	/^	void *private_data;$/;"	m	struct:_snd_ctl
private_data	./src/hwdep/hwdep_local.h	/^	void *private_data;$/;"	m	struct:_snd_hwdep
private_data	./src/input.c	/^	void *private_data;$/;"	m	struct:_snd_input	file:
private_data	./src/mixer/mixer_local.h	/^	void *private_data;		$/;"	m	struct:_snd_mixer_class
private_data	./src/mixer/mixer_local.h	/^	void *private_data;$/;"	m	struct:_snd_mixer_elem
private_data	./src/mixer/simple_abst.c	/^	void *private_data;$/;"	m	struct:_class_priv	file:
private_data	./src/output.c	/^	void *private_data;$/;"	m	struct:_snd_output	file:
private_data	./src/pcm/pcm_hooks.c	/^	void *private_data;$/;"	m	struct:_snd_pcm_hook	file:
private_data	./src/pcm/pcm_local.h	/^	void *private_data;$/;"	m	struct:_snd_pcm
private_data	./src/pcm/pcm_local.h	/^	void *private_data;$/;"	m	struct:_snd_pcm_rbptr
private_data	./src/pcm/pcm_meter.c	/^	void *private_data;$/;"	m	struct:_snd_pcm_scope	file:
private_data	./src/pcm/pcm_params.c	/^	void *private_data;$/;"	m	struct:_snd_pcm_hw_rule	file:
private_data	./src/rawmidi/rawmidi_local.h	/^	void *private_data;$/;"	m	struct:_snd_rawmidi
private_data	./src/seq/seq_local.h	/^	void *private_data;$/;"	m	struct:_snd_seq
private_data	./src/timer/timer_local.h	/^	void *private_data;$/;"	m	struct:_snd_timer
private_data	./src/timer/timer_local.h	/^	void *private_data;$/;"	m	struct:_snd_timer_query
private_free	./src/mixer/mixer_local.h	/^	void (*private_free)(snd_mixer_class_t *class);$/;"	m	struct:_snd_mixer_class
private_free	./src/mixer/mixer_local.h	/^	void (*private_free)(snd_mixer_elem_t *elem);$/;"	m	struct:_snd_mixer_elem
private_free	./src/mixer/simple_abst.c	/^	void (*private_free)(snd_mixer_class_t *class);$/;"	m	struct:_class_priv	file:
private_free	./src/mixer/simple_abst.c	/^static void private_free(snd_mixer_class_t *class)$/;"	f	file:
prog	./include/sound/asound_fm.h	/^	unsigned char prog;$/;"	m	struct:sbi_patch
program_chng	./test/midifile.h	58;"	d
protocol	./src/control/control_hw.c	/^	unsigned int protocol;$/;"	m	struct:__anon95	file:
prototypes	./configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
ptr	./include/aserver.h	/^	snd_pcm_uframes_t ptr;$/;"	m	struct:__anon52
ptr	./include/seq_event.h	/^	void *ptr;			\/**< pointer to data (note: can be 64-bit) *\/$/;"	m	struct:snd_seq_ev_ext
ptr	./include/sound/asequencer.h	/^	void *ptr;		\/* pointer to data (note: maybe 64-bit) *\/$/;"	m	struct:sndrv_seq_ev_ext
ptr	./src/alisp/alisp_local.h	/^		const void *ptr;$/;"	m	union:alisp_object::__anon92
ptr	./src/conf.c	/^		const void *ptr;$/;"	m	union:_snd_config::__anon85	file:
ptr	./src/input.c	/^	unsigned char *ptr;$/;"	m	struct:_snd_input_buffer	file:
ptr	./src/mixer/mixer_local.h	/^	void *ptr;$/;"	m	struct:_bag1
ptr	./src/pcm/pcm_local.h	/^	volatile snd_pcm_uframes_t *ptr;$/;"	m	struct:_snd_pcm_rbptr
ptr	./src/shmarea.c	/^	void *ptr;$/;"	m	struct:snd_shm_area	file:
purpose	./modules/mixer/simple/sbase.h	/^	unsigned short purpose;$/;"	m	struct:helem_base
purpose	./modules/mixer/simple/sbase.h	/^	unsigned short purpose;$/;"	m	struct:helem_selector
put16_labels	./src/pcm/plugin_ops.h	/^static void *const put16_labels[4 * 2 * 2 + 4 * 3] = {$/;"	v
put32_labels	./src/pcm/plugin_ops.h	/^static void *const put32_labels[4 * 2 * 2 + 4 * 3] = {$/;"	v
put32float_labels	./src/pcm/plugin_ops.h	/^static void *const put32float_labels[2 * 2] = {$/;"	v
put_idx	./src/pcm/pcm_linear.c	/^	unsigned int get_idx, put_idx;$/;"	m	struct:__anon105	file:
put_idx	./src/pcm/pcm_rate.c	/^	unsigned int put_idx;$/;"	m	struct:_snd_pcm_rate	file:
put_idx	./src/pcm/pcm_rate_linear.c	/^	unsigned int put_idx;$/;"	m	struct:rate_linear	file:
put_idx	./src/pcm/pcm_route.c	/^	unsigned int put_idx;$/;"	m	struct:__anon141	file:
put_labels	./src/pcm/plugin_ops.h	/^static void *const put_labels[4 * 2 * 2] = {$/;"	v
putch	./src/output.c	/^	int (*putch)(snd_output_t *output, int c);$/;"	m	struct:_snd_output_ops	file:
puts	./src/output.c	/^	int (*puts)(snd_output_t *output, const char *str);$/;"	m	struct:_snd_output_ops	file:
py_event_func	./modules/mixer/simple/python.c	/^	PyObject *py_event_func;$/;"	m	struct:python_priv	file:
py_initialized	./modules/mixer/simple/python.c	/^	int py_initialized;$/;"	m	struct:python_priv	file:
py_mdict	./modules/mixer/simple/python.c	/^	PyObject *py_mdict;$/;"	m	struct:python_priv	file:
py_mixer	./modules/mixer/simple/python.c	/^	PyObject *py_mixer;$/;"	m	struct:pymelem	file:
py_mixer	./modules/mixer/simple/python.c	/^	PyObject *py_mixer;$/;"	m	struct:python_priv	file:
pymelem	./modules/mixer/simple/python.c	/^struct pymelem {$/;"	s	file:
pymelem_attach	./modules/mixer/simple/python.c	/^pymelem_attach(struct pymelem *pymelem, PyObject *args)$/;"	f	file:
pymelem_cap	./modules/mixer/simple/python.c	/^pymelem_cap(struct pymelem *pymelem ATTRIBUTE_UNUSED, void *priv)$/;"	f	file:
pymelem_dealloc	./modules/mixer/simple/python.c	/^pymelem_dealloc(struct pymelem *self)$/;"	f	file:
pymelem_detach	./modules/mixer/simple/python.c	/^pymelem_detach(struct pymelem *pymelem, PyObject *args)$/;"	f	file:
pymelem_error	./modules/mixer/simple/python.c	/^pymelem_error(struct pymelem *pymelem ATTRIBUTE_UNUSED, PyObject *args ATTRIBUTE_UNUSED)$/;"	f	file:
pymelem_event_info	./modules/mixer/simple/python.c	/^pymelem_event_info(struct pymelem *pymelem, PyObject *args)$/;"	f	file:
pymelem_event_value	./modules/mixer/simple/python.c	/^pymelem_event_value(struct pymelem *pymelem, PyObject *args)$/;"	f	file:
pymelem_get_caps	./modules/mixer/simple/python.c	/^pymelem_get_caps(struct pymelem *pymelem, void *priv ATTRIBUTE_UNUSED)$/;"	f	file:
pymelem_get_index	./modules/mixer/simple/python.c	/^pymelem_get_index(struct pymelem *pymelem, void *priv ATTRIBUTE_UNUSED)$/;"	f	file:
pymelem_get_name	./modules/mixer/simple/python.c	/^pymelem_get_name(struct pymelem *pymelem, void *priv ATTRIBUTE_UNUSED)$/;"	f	file:
pymelem_getseters	./modules/mixer/simple/python.c	/^static PyGetSetDef pymelem_getseters[] = {$/;"	v	file:
pymelem_ignore	./modules/mixer/simple/python.c	/^pymelem_ignore(struct pymelem *pymelem ATTRIBUTE_UNUSED, PyObject *args ATTRIBUTE_UNUSED)$/;"	f	file:
pymelem_ignore1	./modules/mixer/simple/python.c	/^pymelem_ignore1(struct pymelem *pymelem ATTRIBUTE_UNUSED, PyObject *args ATTRIBUTE_UNUSED)$/;"	f	file:
pymelem_init	./modules/mixer/simple/python.c	/^pymelem_init(struct pymelem *pymelem, PyObject *args, PyObject *kwds ATTRIBUTE_UNUSED)$/;"	f	file:
pymelem_methods	./modules/mixer/simple/python.c	/^static PyMethodDef pymelem_methods[] = {$/;"	v	file:
pymelem_set_caps	./modules/mixer/simple/python.c	/^pymelem_set_caps(struct pymelem *pymelem, PyObject *val, void *priv ATTRIBUTE_UNUSED)$/;"	f	file:
pymelem_type	./modules/mixer/simple/python.c	/^static PyTypeObject pymelem_type = {$/;"	v	file:
pymixer	./modules/mixer/simple/python.c	/^struct pymixer {$/;"	s	file:
pymixer_attach_hctl	./modules/mixer/simple/python.c	/^pymixer_attach_hctl(struct pymixer *pymixer, PyObject *args)$/;"	f	file:
pymixer_dealloc	./modules/mixer/simple/python.c	/^pymixer_dealloc(struct pymixer *self)$/;"	f	file:
pymixer_free	./modules/mixer/simple/python.c	/^pymixer_free(struct pymixer *self)$/;"	f	file:
pymixer_getseters	./modules/mixer/simple/python.c	/^static PyGetSetDef pymixer_getseters[] = {$/;"	v	file:
pymixer_init	./modules/mixer/simple/python.c	/^pymixer_init(struct pymixer *pymixer, PyObject *args, PyObject *kwds ATTRIBUTE_UNUSED)$/;"	f	file:
pymixer_melement_add	./modules/mixer/simple/python.c	/^pymixer_melement_add(struct pymixer *pymixer, PyObject *args)$/;"	f	file:
pymixer_melement_new	./modules/mixer/simple/python.c	/^pymixer_melement_new(struct pymixer *pymixer, PyObject *args)$/;"	f	file:
pymixer_methods	./modules/mixer/simple/python.c	/^static PyMethodDef pymixer_methods[] = {$/;"	v	file:
pymixer_register	./modules/mixer/simple/python.c	/^pymixer_register(struct pymixer *pymixer, PyObject *args)$/;"	f	file:
pymixer_type	./modules/mixer/simple/python.c	/^static PyTypeObject pymixer_type = {$/;"	v	file:
python_methods	./modules/mixer/simple/python.c	/^static PyMethodDef python_methods[] = {$/;"	v	file:
python_priv	./modules/mixer/simple/python.c	/^struct python_priv {$/;"	s	file:
q_back	./include/search.h	/^    struct qelem *q_back;$/;"	m	struct:qelem	typeref:struct:qelem::qelem
q_data	./include/search.h	/^    char q_data[1];$/;"	m	struct:qelem
q_forw	./include/search.h	/^    struct qelem *q_forw;$/;"	m	struct:qelem	typeref:struct:qelem::qelem
qelem	./include/search.h	/^struct qelem$/;"	s
qlen	./src/seq/seq_midi_event.c	/^	int qlen;$/;"	m	struct:status_event_list_t	file:
qlen	./src/seq/seq_midi_event.c	/^	size_t qlen;	\/* queue length *\/$/;"	m	struct:snd_midi_event	file:
qs	./include/sound/hdspm.h	/^	qs$/;"	e	enum:hdspm_speed
query_next_client	./src/seq/seq_local.h	/^	int (*query_next_client)(snd_seq_t *seq, snd_seq_client_info_t *info);$/;"	m	struct:__anon97
query_next_port	./src/seq/seq_local.h	/^	int (*query_next_port)(snd_seq_t *seq, snd_seq_port_info_t *info);$/;"	m	struct:__anon97
query_port_subscribers	./src/seq/seq_local.h	/^	int (*query_port_subscribers)(snd_seq_t *seq, snd_seq_query_subscribe_t * subs);$/;"	m	struct:__anon97
queue	./include/seq_event.h	/^		snd_seq_ev_queue_control_t queue; \/**< queue control *\/$/;"	m	union:snd_seq_event::__anon46
queue	./include/seq_event.h	/^	unsigned char queue;			\/**< affected queue *\/$/;"	m	struct:snd_seq_ev_queue_control
queue	./include/seq_event.h	/^	unsigned char queue;		\/**< schedule queue *\/$/;"	m	struct:snd_seq_event
queue	./include/sound/asequencer.h	/^		struct sndrv_seq_ev_queue_control queue;$/;"	m	union:sndrv_seq_event::__anon11	typeref:struct:sndrv_seq_event::__anon11::sndrv_seq_ev_queue_control
queue	./include/sound/asequencer.h	/^	int queue;			\/* queue id *\/$/;"	m	struct:sndrv_seq_queue_status
queue	./include/sound/asequencer.h	/^	int queue;			\/* sequencer queue *\/$/;"	m	struct:sndrv_seq_queue_tempo
queue	./include/sound/asequencer.h	/^	int queue;			\/* sequencer queue *\/$/;"	m	struct:sndrv_seq_queue_timer
queue	./include/sound/asequencer.h	/^	int queue;		\/* queue id *\/$/;"	m	struct:sndrv_seq_queue_info
queue	./include/sound/asequencer.h	/^	int queue;		\/* sequencer queue *\/$/;"	m	struct:sndrv_seq_queue_client
queue	./include/sound/asequencer.h	/^	unsigned char queue;			\/* affected queue *\/$/;"	m	struct:sndrv_seq_ev_queue_control
queue	./include/sound/asequencer.h	/^	unsigned char queue;		\/* input time-stamp queue (optional) *\/$/;"	m	struct:sndrv_seq_port_subscribe
queue	./include/sound/asequencer.h	/^	unsigned char queue;		\/* schedule queue *\/$/;"	m	struct:sndrv_seq_event
queue	./include/sound/asequencer.h	/^	unsigned char queue;	\/* Queue for REMOVE_DEST *\/$/;"	m	struct:sndrv_seq_remove_events
queue	./include/sound/asequencer.h	/^	unsigned char queue;	\/* R\/O: result *\/$/;"	m	struct:sndrv_seq_query_subs
queue	./include/sound/asound.h	/^	unsigned int queue;		\/* used queue size *\/$/;"	m	struct:sndrv_timer_status
queue_size	./include/sound/asound.h	/^	unsigned int queue_size;	\/* total size of queue (32-1024) *\/$/;"	m	struct:sndrv_timer_params
queues	./include/sound/asequencer.h	/^	int queues;			\/* maximum queues count *\/$/;"	m	struct:sndrv_seq_system_info
quote	./include/sound/asequencer.h	/^		struct sndrv_seq_ev_quote quote;$/;"	m	union:sndrv_seq_event::__anon11	typeref:struct:sndrv_seq_event::__anon11::sndrv_seq_ev_quote
quote_object	./src/alisp/alisp.c	/^static struct alisp_object * quote_object(struct alisp_instance *instance, struct alisp_object * obj)$/;"	f	file:
range	./src/mixer/simple_none.c	/^		unsigned int range: 1;	\/* Forced range *\/$/;"	m	struct:_selem_none::selem_str	file:
rate	./include/pcm_extplug.h	/^	unsigned int rate;$/;"	m	struct:snd_pcm_extplug
rate	./include/pcm_ioplug.h	/^	unsigned int rate;		\/**< rate; filled after hw_params is called *\/$/;"	m	struct:snd_pcm_ioplug
rate	./include/pcm_rate.h	/^	unsigned int rate;$/;"	m	struct:snd_pcm_rate_side_info
rate	./src/pcm/pcm_direct.h	/^		snd_interval_t rate;$/;"	m	struct:__anon123::__anon124
rate	./src/pcm/pcm_direct.h	/^		unsigned int rate;$/;"	m	struct:__anon123::__anon125
rate	./src/pcm/pcm_direct.h	/^	int rate;$/;"	m	struct:slave_params
rate	./src/pcm/pcm_file.c	/^	int rate;$/;"	m	struct:wav_fmt	file:
rate	./src/pcm/pcm_hw.c	/^	int rate;$/;"	m	struct:__anon107	file:
rate	./src/pcm/pcm_local.h	/^	unsigned int rate;		\/* rate in Hz *\/$/;"	m	struct:_snd_pcm
rate	./src/pcm/pcm_plug.c	/^	unsigned int rate;$/;"	m	struct:__anon146	file:
rate	./src/pcm/pcm_share.c	/^	int rate;$/;"	m	struct:__anon118	file:
rate	./test/latency.c	/^int rate = 22050;$/;"	v
rate	./test/pcm.c	/^static unsigned int rate = 44100;			\/* stream rate *\/$/;"	v	file:
rate_converter	./src/pcm/pcm_plug.c	/^	const snd_config_t *rate_converter;$/;"	m	struct:__anon145	file:
rate_den	./include/sound/asound.h	/^	unsigned int rate_den;		\/* R: rate denominator *\/$/;"	m	struct:sndrv_pcm_hw_params
rate_den	./src/pcm/pcm_direct.h	/^		unsigned int rate_den;$/;"	m	struct:__anon123::__anon125
rate_den	./src/pcm/pcm_hw.c	/^	unsigned int rate_den;$/;"	m	struct:sndrv_pcm_hw_params_old	file:
rate_den	./src/pcm/pcm_local.h	/^	unsigned int rate_den;		\/* rate denominator *\/$/;"	m	struct:_snd_pcm
rate_linear	./src/pcm/pcm_rate_linear.c	/^struct rate_linear {$/;"	s	file:
rate_max	./src/pcm/pcm_rate.c	/^	unsigned int rate_min, rate_max;$/;"	m	struct:_snd_pcm_rate	file:
rate_min	./src/pcm/pcm_rate.c	/^	unsigned int rate_min, rate_max;$/;"	m	struct:_snd_pcm_rate	file:
rate_num	./include/sound/asound.h	/^	unsigned int rate_num;		\/* R: rate numerator *\/$/;"	m	struct:sndrv_pcm_hw_params
rate_num	./src/pcm/pcm_direct.h	/^		unsigned int rate_num;$/;"	m	struct:__anon123::__anon125
rate_num	./src/pcm/pcm_hw.c	/^	unsigned int rate_num;$/;"	m	struct:sndrv_pcm_hw_params_old	file:
rate_num	./src/pcm/pcm_local.h	/^	unsigned int rate_num;		\/* rate numerator *\/$/;"	m	struct:_snd_pcm
rate_open_func	./src/pcm/pcm_rate.c	/^static int rate_open_func(snd_pcm_rate_t *rate, const char *type, int verbose)$/;"	f	file:
raw32	./include/seq_event.h	/^		snd_seq_ev_raw32_t raw32;	\/**< raw32 data *\/$/;"	m	union:snd_seq_event::__anon46
raw32	./include/sound/asequencer.h	/^		struct sndrv_seq_ev_raw32 raw32;$/;"	m	union:sndrv_seq_event::__anon11	typeref:struct:sndrv_seq_event::__anon11::sndrv_seq_ev_raw32
raw8	./include/seq_event.h	/^		snd_seq_ev_raw8_t raw8;		\/**< raw8 data *\/$/;"	m	union:snd_seq_event::__anon46
raw8	./include/sound/asequencer.h	/^		struct sndrv_seq_ev_raw8 raw8;$/;"	m	union:sndrv_seq_event::__anon11	typeref:struct:sndrv_seq_event::__anon11::sndrv_seq_ev_raw8
rawmidi_info	./include/aserver.h	/^		snd_rawmidi_info_t rawmidi_info;$/;"	m	union:__anon64::__anon65
rawmidi_info	./src/control/control_local.h	/^	int (*rawmidi_info)(snd_ctl_t *handle, snd_rawmidi_info_t * info);$/;"	m	struct:_snd_ctl_ops
rawmidi_next_device	./src/control/control_local.h	/^	int (*rawmidi_next_device)(snd_ctl_t *handle, int *device);$/;"	m	struct:_snd_ctl_ops
rawmidi_prefer_subdevice	./include/aserver.h	/^		int rawmidi_prefer_subdevice;$/;"	m	union:__anon64::__anon65
rawmidi_prefer_subdevice	./src/control/control_local.h	/^	int (*rawmidi_prefer_subdevice)(snd_ctl_t *handle, int subdev);$/;"	m	struct:_snd_ctl_ops
rbptr	./include/aserver.h	/^		} rbptr;$/;"	m	union:__anon53::__anon54	typeref:struct:__anon53::__anon54::__anon63
rbuf	./src/pcm/pcm_file.c	/^	char *rbuf;$/;"	m	struct:__anon121	file:
rbuf_size_bytes	./src/pcm/pcm_file.c	/^	size_t rbuf_size_bytes;$/;"	m	struct:__anon121	file:
rbuf_used_bytes	./src/pcm/pcm_file.c	/^	size_t rbuf_used_bytes;$/;"	m	struct:__anon121	file:
read	./include/aserver.h	/^		snd_ctl_event_t read;$/;"	m	union:__anon64::__anon65
read	./src/control/control_local.h	/^	int (*read)(snd_ctl_t *handle, snd_ctl_event_t *event);$/;"	m	struct:_snd_ctl_ops
read	./src/hwdep/hwdep_local.h	/^	ssize_t (*read)(snd_hwdep_t *hwdep, void *buffer, size_t size);$/;"	m	struct:__anon91
read	./src/pcm/pcm_plugin.h	/^	snd_pcm_slave_xfer_areas_func_t read;$/;"	m	struct:__anon106
read	./src/rawmidi/rawmidi_local.h	/^	ssize_t (*read)(snd_rawmidi_t *rawmidi, void *buffer, size_t size);$/;"	m	struct:__anon99
read	./src/seq/seq_local.h	/^	ssize_t (*read)(snd_seq_t *seq, void *buf, size_t len);$/;"	m	struct:__anon97
read	./src/seq/seq_midi_event.c	/^	size_t read;	\/* chars read *\/$/;"	m	struct:snd_midi_event	file:
read	./src/timer/timer_local.h	/^	ssize_t (*read)(snd_timer_t *timer, void *buffer, size_t size);$/;"	m	struct:__anon88
read16bit	./test/midifile.c	/^read16bit ()$/;"	f	file:
read32bit	./test/midifile.c	/^read32bit ()$/;"	f	file:
read_bytes	./include/control_external.h	/^	int (*read_bytes)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, unsigned char *data,$/;"	m	struct:snd_ctl_ext_callback
read_enumerated	./include/control_external.h	/^	int (*read_enumerated)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, unsigned int *items);$/;"	m	struct:snd_ctl_ext_callback
read_event	./include/control_external.h	/^	int (*read_event)(snd_ctl_ext_t *ext, snd_ctl_elem_id_t *id, unsigned int *event_mask);$/;"	m	struct:snd_ctl_ext_callback
read_iec958	./include/control_external.h	/^	int (*read_iec958)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, snd_aes_iec958_t *iec958);$/;"	m	struct:snd_ctl_ext_callback
read_integer	./include/control_external.h	/^	int (*read_integer)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, long *value);$/;"	m	struct:snd_ctl_ext_callback
read_integer64	./include/control_external.h	/^	int (*read_integer64)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, int64_t *value);$/;"	m	struct:snd_ctl_ext_callback
read_loop	./test/timer.c	/^void read_loop(void *handle, int master_ticks, int timeout)$/;"	f
read_use	./include/sound/asequencer.h	/^	int read_use;			\/* R\/O: subscribers for output (from this port) *\/$/;"	m	struct:sndrv_seq_port_info
readbuf	./test/latency.c	/^long readbuf(snd_pcm_t *handle, char *buf, long len, size_t *frames, size_t *max)$/;"	f
readheader	./test/midifile.c	/^readheader ()			\/* read a header chunk *\/$/;"	f	file:
readi	./src/pcm/pcm_local.h	/^	snd_pcm_sframes_t (*readi)(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size);$/;"	m	struct:__anon138
readmt	./test/midifile.c	/^readmt (s)			\/* read through the "MThd" or "MTrk" header string *\/$/;"	f	file:
readn	./src/pcm/pcm_local.h	/^	snd_pcm_sframes_t (*readn)(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size);$/;"	m	struct:__anon138
readtrack	./test/midifile.c	/^readtrack ()			\/* read a track chunk *\/$/;"	f	file:
readvarinum	./test/midifile.c	/^readvarinum ()$/;"	f	file:
ready	./src/pcm/pcm_share.c	/^	int ready;$/;"	m	struct:__anon119	file:
real	./src/conf.c	/^		double real;$/;"	m	union:_snd_config::__anon85	file:
recalc	./src/pcm/pcm_rate.c	/^static void recalc(snd_pcm_t *pcm, snd_pcm_uframes_t *val)$/;"	f	file:
recalc_boundary_size	./src/pcm/pcm_direct.c	/^static snd_pcm_uframes_t recalc_boundary_size(unsigned long long bsize, snd_pcm_uframes_t buffer_size)$/;"	f	file:
refcnt	./src/dlmisc.c	/^	unsigned int refcnt;$/;"	m	struct:dlobj_cache	file:
refine_back_time_and_size	./src/pcm/pcm_ioplug.c	/^static int refine_back_time_and_size(snd_pcm_hw_params_t *params,$/;"	f	file:
refine_intervals	./src/pcm/pcm_params.c	/^static const snd_interval_t refine_intervals[SND_PCM_HW_PARAM_LAST_INTERVAL - SND_PCM_HW_PARAM_FIRST_INTERVAL + 1] = {$/;"	v	file:
refine_masks	./src/pcm/pcm_params.c	/^static const snd_mask_t refine_masks[SND_PCM_HW_PARAM_LAST_MASK - SND_PCM_HW_PARAM_FIRST_MASK + 1] = {$/;"	v	file:
refine_rules	./src/pcm/pcm_params.c	/^static const snd_pcm_hw_rule_t refine_rules[] = {$/;"	v	file:
refine_time_and_size	./src/pcm/pcm_ioplug.c	/^static int refine_time_and_size(snd_pcm_hw_params_t *params,$/;"	f	file:
reg_lsb	./test/midifile.h	89;"	d
reg_msb	./test/midifile.h	90;"	d
release	./include/sound/asound_fm.h	/^	unsigned char release;		\/* 4 bits: release rate *\/$/;"	m	struct:snd_dm_fm_voice
remix_areas	./src/pcm/pcm_dmix.c	/^static void remix_areas(snd_pcm_direct_t *dmix,$/;"	f	file:
remix_areas_16	./src/pcm/pcm_direct.h	/^			mix_areas_16_t *remix_areas_16;$/;"	m	struct:snd_pcm_direct::__anon128::__anon129
remix_areas_24	./src/pcm/pcm_direct.h	/^			mix_areas_24_t *remix_areas_24;$/;"	m	struct:snd_pcm_direct::__anon128::__anon129
remix_areas_32	./src/pcm/pcm_direct.h	/^			mix_areas_32_t *remix_areas_32;$/;"	m	struct:snd_pcm_direct::__anon128::__anon129
remix_areas_u8	./src/pcm/pcm_direct.h	/^			mix_areas_u8_t *remix_areas_u8;$/;"	m	struct:snd_pcm_direct::__anon128::__anon129
remove_events	./src/seq/seq_local.h	/^	int (*remove_events)(snd_seq_t *seq, snd_seq_remove_events_t *rmp);$/;"	m	struct:__anon97
remove_match	./src/seq/seq.c	/^static int remove_match(snd_seq_remove_events_t *info, snd_seq_event_t *ev)$/;"	f	file:
remove_mode	./include/sound/asequencer.h	/^	unsigned int  remove_mode;	\/* Flags that determine what gets removed *\/$/;"	m	struct:sndrv_seq_remove_events
replace_object	./src/alisp/alisp.c	/^static struct alisp_object * replace_object(struct alisp_instance *instance, struct alisp_object * name, struct alisp_object * onew)$/;"	f	file:
req_slave	./src/pcm/pcm_plug.c	/^	snd_pcm_t *req_slave;$/;"	m	struct:__anon145	file:
res1	./include/sound/emu10k1.h	/^	unsigned int res1;		\/* reserved *\/$/;"	m	struct:__anon20
res2	./include/sound/emu10k1.h	/^	unsigned int res2;		\/* reserved *\/$/;"	m	struct:__anon20
resample	./test/latency.c	/^int resample = 1;$/;"	v
resample	./test/pcm.c	/^static int resample = 1;				\/* enable alsa-lib resampling *\/$/;"	v	file:
reserved	./include/sound/asequencer.h	/^	char reserved[24];		\/* for the future *\/$/;"	m	struct:sndrv_seq_queue_tempo
reserved	./include/sound/asequencer.h	/^	char reserved[24];$/;"	m	struct:sndrv_seq_system_info
reserved	./include/sound/asequencer.h	/^	char reserved[59];		\/* for future use *\/$/;"	m	struct:sndrv_seq_port_info
reserved	./include/sound/asequencer.h	/^	char reserved[60];	\/* for future use *\/$/;"	m	struct:sndrv_seq_queue_info
reserved	./include/sound/asequencer.h	/^	char reserved[64];		\/* for future use *\/$/;"	m	struct:sndrv_seq_client_info
reserved	./include/sound/asequencer.h	/^	char reserved[64];		\/* for the future *\/$/;"	m	struct:sndrv_seq_queue_status
reserved	./include/sound/asequencer.h	/^	char reserved[64];		\/* for the future use *\/$/;"	m	struct:sndrv_seq_queue_timer
reserved	./include/sound/asequencer.h	/^	char reserved[64];	\/* for future use *\/$/;"	m	struct:sndrv_seq_query_subs
reserved	./include/sound/asequencer.h	/^	char reserved[64];	\/* for future use *\/$/;"	m	struct:sndrv_seq_queue_client
reserved	./include/sound/asequencer.h	/^	char reserved[64];$/;"	m	struct:sndrv_seq_client_pool
reserved	./include/sound/asequencer.h	/^	char reserved[64];$/;"	m	struct:sndrv_seq_port_subscribe
reserved	./include/sound/asequencer.h	/^	int  reserved[10];	\/* To allow for future binary compatibility *\/$/;"	m	struct:sndrv_seq_remove_events
reserved	./include/sound/asequencer.h	/^	unsigned char reserved[12];$/;"	m	struct:sndrv_seq_running_info
reserved	./include/sound/asound.h	/^		unsigned char reserved[128];$/;"	m	union:sndrv_ctl_elem_info::__anon29
reserved	./include/sound/asound.h	/^		unsigned char reserved[64];$/;"	m	union:sndrv_pcm_sync_ptr::__anon23
reserved	./include/sound/asound.h	/^		unsigned char reserved[64];$/;"	m	union:sndrv_pcm_sync_ptr::__anon24
reserved	./include/sound/asound.h	/^	unsigned char reserved[16];	\/* reserved for future use *\/$/;"	m	struct:sndrv_hwdep_dsp_status
reserved	./include/sound/asound.h	/^	unsigned char reserved[16];	\/* reserved for future use *\/$/;"	m	struct:sndrv_rawmidi_params
reserved	./include/sound/asound.h	/^	unsigned char reserved[16];	\/* reserved for future use *\/$/;"	m	struct:sndrv_rawmidi_status
reserved	./include/sound/asound.h	/^	unsigned char reserved[32];	\/* reserved *\/$/;"	m	struct:sndrv_timer_select
reserved	./include/sound/asound.h	/^	unsigned char reserved[32];$/;"	m	struct:sndrv_timer_ginfo
reserved	./include/sound/asound.h	/^	unsigned char reserved[32];$/;"	m	struct:sndrv_timer_gparams
reserved	./include/sound/asound.h	/^	unsigned char reserved[32];$/;"	m	struct:sndrv_timer_gstatus
reserved	./include/sound/asound.h	/^	unsigned char reserved[50];$/;"	m	struct:sndrv_ctl_elem_list
reserved	./include/sound/asound.h	/^	unsigned char reserved[60];		\/* reserved for future *\/$/;"	m	struct:sndrv_pcm_sw_params
reserved	./include/sound/asound.h	/^	unsigned char reserved[60];	\/* must be filled with zero *\/$/;"	m	struct:sndrv_pcm_status
reserved	./include/sound/asound.h	/^	unsigned char reserved[60];	\/* reserved *\/$/;"	m	struct:sndrv_timer_params
reserved	./include/sound/asound.h	/^	unsigned char reserved[64-4*sizeof(unsigned short)];$/;"	m	struct:sndrv_ctl_elem_info
reserved	./include/sound/asound.h	/^	unsigned char reserved[64];	\/* reserved *\/$/;"	m	struct:sndrv_timer_info
reserved	./include/sound/asound.h	/^	unsigned char reserved[64];	\/* reserved *\/$/;"	m	struct:sndrv_timer_status
reserved	./include/sound/asound.h	/^	unsigned char reserved[64];	\/* reserved for future *\/$/;"	m	struct:sndrv_hwdep_info
reserved	./include/sound/asound.h	/^	unsigned char reserved[64];	\/* reserved for future *\/$/;"	m	struct:sndrv_pcm_hw_params
reserved	./include/sound/asound.h	/^	unsigned char reserved[64];	\/* reserved for future use *\/$/;"	m	struct:sndrv_rawmidi_info
reserved	./include/sound/asound.h	/^	unsigned char reserved[64];	\/* reserved for future... *\/$/;"	m	struct:sndrv_pcm_info
reserved	./include/sound/asound.h	/^        unsigned char reserved[128-sizeof(struct timespec)];$/;"	m	struct:sndrv_ctl_elem_value
reserved	./src/pcm/pcm_hw.c	/^	unsigned char reserved[64];$/;"	m	struct:sndrv_pcm_hw_params_old	file:
reserved	./src/pcm/pcm_local.h	/^	char reserved[64];$/;"	m	struct:_snd_pcm_channel_info
reserved0	./include/sound/asound.h	/^	unsigned int reserved0;		\/* reserved, was: failure locations *\/$/;"	m	struct:sndrv_timer_params
reserved0	./include/sound/asound.h	/^	unsigned long reserved0;	\/* reserved for future use *\/$/;"	m	struct:sndrv_timer_ginfo
reserved0	./include/sound/asound.h	/^	unsigned long reserved0;	\/* reserved for future use *\/$/;"	m	struct:sndrv_timer_info
reserved_	./include/sound/asound.h	/^	unsigned char reserved_[16];	\/* reserved for future (was ID of mixer) *\/$/;"	m	struct:sndrv_ctl_card_info
reset	./include/pcm.h	/^	void (*reset)(snd_pcm_scope_t *scope);$/;"	m	struct:_snd_pcm_scope_ops
reset	./include/pcm_rate.h	/^	void (*reset)(void *obj);$/;"	m	struct:snd_pcm_rate_old_ops
reset	./include/pcm_rate.h	/^	void (*reset)(void *obj);$/;"	m	struct:snd_pcm_rate_ops
reset	./src/pcm/pcm_local.h	/^	int (*reset)(snd_pcm_t *pcm);$/;"	m	struct:__anon138
reset	./src/pcm/pcm_meter.c	/^	atomic_t reset;$/;"	m	struct:_snd_pcm_meter	file:
reset_encode	./src/seq/seq_midi_event.c	/^inline static void reset_encode(snd_midi_event_t *dev)$/;"	f	file:
reset_links	./src/pcm/pcm_multi.c	/^static void reset_links(snd_pcm_multi_t *multi)$/;"	f	file:
reset_slave_ptr	./src/pcm/pcm_dmix.c	/^static void reset_slave_ptr(snd_pcm_t *pcm, snd_pcm_direct_t *dmix)$/;"	f	file:
resolution	./include/sound/asequencer.h	/^			unsigned int resolution;	\/* resolution in Hz *\/$/;"	m	struct:sndrv_seq_queue_timer::__anon12::__anon13
resolution	./include/sound/asound.h	/^	unsigned int resolution;	\/* current period resolution in ns *\/$/;"	m	struct:sndrv_timer_status
resolution	./include/sound/asound.h	/^	unsigned int resolution;$/;"	m	struct:sndrv_timer_read
resolution	./include/sound/asound.h	/^	unsigned long resolution;	\/* average period resolution in ns *\/$/;"	m	struct:sndrv_timer_ginfo
resolution	./include/sound/asound.h	/^	unsigned long resolution;	\/* average period resolution in ns *\/$/;"	m	struct:sndrv_timer_info
resolution	./include/sound/asound.h	/^	unsigned long resolution;	\/* current period resolution in ns *\/$/;"	m	struct:sndrv_timer_gstatus
resolution	./include/timer.h	/^	unsigned int resolution;	\/**< tick resolution in nanoseconds *\/$/;"	m	struct:_snd_timer_read
resolution_den	./include/sound/asound.h	/^	unsigned long resolution_den;	\/* precise current period resolution (in seconds) - denominator *\/$/;"	m	struct:sndrv_timer_gstatus
resolution_max	./include/sound/asound.h	/^	unsigned long resolution_max;	\/* maximal period resolution in ns *\/$/;"	m	struct:sndrv_timer_ginfo
resolution_min	./include/sound/asound.h	/^	unsigned long resolution_min;	\/* minimal period resolution in ns *\/$/;"	m	struct:sndrv_timer_ginfo
resolution_num	./include/sound/asound.h	/^	unsigned long resolution_num;	\/* precise current period resolution (in seconds) - numerator *\/$/;"	m	struct:sndrv_timer_gstatus
result	./include/aserver.h	/^	int result;$/;"	m	struct:__anon64
result	./include/aserver.h	/^	long result;$/;"	m	struct:__anon53
result	./include/aserver.h	/^	long result;$/;"	m	struct:__anon68
result	./include/seq_event.h	/^		snd_seq_result_t result;	\/**< operation result code *\/$/;"	m	union:snd_seq_event::__anon46
result	./include/seq_event.h	/^	int result;		\/**< status *\/$/;"	m	struct:snd_seq_result
result	./include/sound/asequencer.h	/^		struct sndrv_seq_result result;$/;"	m	union:sndrv_seq_event::__anon11	typeref:struct:sndrv_seq_event::__anon11::sndrv_seq_result
result	./include/sound/asequencer.h	/^	int result;$/;"	m	struct:sndrv_seq_result
result	./include/sound/asound.h	/^	sndrv_pcm_sframes_t result;$/;"	m	struct:sndrv_xferi
result	./include/sound/asound.h	/^	sndrv_pcm_sframes_t result;$/;"	m	struct:sndrv_xfern
resume	./include/pcm_ioplug.h	/^	int (*resume)(snd_pcm_ioplug_t *io);$/;"	m	struct:snd_pcm_ioplug_callback
resume	./src/pcm/pcm_local.h	/^	int (*resume)(snd_pcm_t *pcm);$/;"	m	struct:__anon138
revised_time	./test/midifile.c	/^static unsigned long revised_time = 0;$/;"	v	file:
rewind	./include/aserver.h	/^		} rewind;$/;"	m	union:__anon53::__anon54	typeref:struct:__anon53::__anon54::__anon59
rewind	./src/pcm/pcm_local.h	/^	snd_pcm_sframes_t (*rewind)(snd_pcm_t *pcm, snd_pcm_uframes_t frames);$/;"	m	struct:__anon138
rewindable	./src/pcm/pcm_local.h	/^	snd_pcm_sframes_t (*rewindable)(snd_pcm_t *pcm);$/;"	m	struct:__anon138
rhythm	./include/sound/asound_fm.h	/^	unsigned char rhythm;		\/* percussion mode flag *\/$/;"	m	struct:snd_dm_fm_info
rhythm	./include/sound/asound_fm.h	/^	unsigned char rhythm;		\/* percussion mode select *\/$/;"	m	struct:snd_dm_fm_params
right	./include/sound/asound_fm.h	/^	unsigned char right;		\/* stereo right *\/$/;"	m	struct:snd_dm_fm_voice
rmask	./include/sound/asound.h	/^	unsigned int rmask;		\/* W: requested masks *\/$/;"	m	struct:sndrv_pcm_hw_params
rmask	./src/pcm/pcm_hw.c	/^	unsigned int rmask;$/;"	m	struct:sndrv_pcm_hw_params_old	file:
rmb	./include/iatomic.h	1006;"	d
rmb	./include/iatomic.h	1075;"	d
rmb	./include/iatomic.h	1098;"	d
rmb	./include/iatomic.h	1123;"	d
rmb	./include/iatomic.h	211;"	d
rmb	./include/iatomic.h	215;"	d
rmb	./include/iatomic.h	370;"	d
rmb	./include/iatomic.h	487;"	d
rmb	./include/iatomic.h	678;"	d
rmb	./include/iatomic.h	886;"	d
root	./include/sound/asequencer.h	/^	struct sndrv_seq_addr root;	\/* client\/port id to be searched *\/$/;"	m	struct:sndrv_seq_query_subs	typeref:struct:sndrv_seq_query_subs::sndrv_seq_addr
route_f	./src/pcm/pcm_route.c	/^typedef void (*route_f)(const snd_pcm_channel_area_t *dst_area,$/;"	t	file:
route_load_ttable	./src/pcm/pcm_route.c	/^static int route_load_ttable(snd_pcm_route_params_t *params, snd_pcm_stream_t stream,$/;"	f	file:
route_policy	./src/pcm/pcm_plug.c	/^	enum snd_pcm_plug_route_policy route_policy;$/;"	m	struct:__anon145	typeref:enum:__anon145::snd_pcm_plug_route_policy	file:
rptr	./src/pcm/pcm_meter.c	/^	snd_pcm_uframes_t rptr;$/;"	m	struct:_snd_pcm_meter	file:
rt_continue	./src/timer/timer_local.h	/^	int (*rt_continue)(snd_timer_t *timer);$/;"	m	struct:__anon88
rt_start	./src/timer/timer_local.h	/^	int (*rt_start)(snd_timer_t *timer);$/;"	m	struct:__anon88
rt_stop	./src/timer/timer_local.h	/^	int (*rt_stop)(snd_timer_t *timer);$/;"	m	struct:__anon88
rule_div	./src/pcm/pcm_ioplug.c	/^static int rule_div(snd_pcm_hw_params_t *params, int x, int a, int b)$/;"	f	file:
rule_mul	./src/pcm/pcm_ioplug.c	/^static int rule_mul(snd_pcm_hw_params_t *params, int x, int a, int b)$/;"	f	file:
rule_muldivk	./src/pcm/pcm_ioplug.c	/^static int rule_muldivk(snd_pcm_hw_params_t *params, int x, int a, int b, int k)$/;"	f	file:
rule_mulkdiv	./src/pcm/pcm_ioplug.c	/^static int rule_mulkdiv(snd_pcm_hw_params_t *params, int x, int a, int k, int b)$/;"	f	file:
run	./src/pcm/ladspa.h	/^  void (*run)(LADSPA_Handle Instance,$/;"	m	struct:_LADSPA_Descriptor
run_adding	./src/pcm/ladspa.h	/^  void (*run_adding)(LADSPA_Handle Instance,$/;"	m	struct:_LADSPA_Descriptor
run_channels	./include/sound/sb16_csp.h	/^	unsigned short run_channels;	\/* current channels  *\/$/;"	m	struct:snd_sb_csp_info
run_width	./include/sound/sb16_csp.h	/^	unsigned short run_width;	\/* current sample width *\/$/;"	m	struct:snd_sb_csp_info
running	./include/sound/asequencer.h	/^	int running;			\/* running state of queue *\/$/;"	m	struct:sndrv_seq_queue_status
running	./src/pcm/pcm_meter.c	/^	int running;$/;"	m	struct:_snd_pcm_meter	file:
running_areas	./src/pcm/pcm_local.h	/^	snd_pcm_channel_area_t *running_areas;$/;"	m	struct:_snd_pcm
running_cond	./src/pcm/pcm_meter.c	/^	pthread_cond_t running_cond;$/;"	m	struct:_snd_pcm_meter	file:
running_count	./src/pcm/pcm_share.c	/^	unsigned int running_count;$/;"	m	struct:__anon118	file:
running_mutex	./src/pcm/pcm_meter.c	/^	pthread_mutex_t running_mutex;$/;"	m	struct:_snd_pcm_meter	file:
s	./include/sound/asound.h	/^	} s;$/;"	m	struct:sndrv_pcm_sync_ptr	typeref:union:sndrv_pcm_sync_ptr::__anon23
s	./src/alisp/alisp_local.h	/^		char	*s;$/;"	m	union:alisp_object::__anon92
s	./src/pcm/pcm_direct.h	/^	} s;$/;"	m	struct:__anon123	typeref:struct:__anon123::__anon125
s	./src/pcm/pcm_softvol.c	/^	short s[2];$/;"	m	union:__anon110	file:
s16	./src/pcm/scopes/level.c	/^	snd_pcm_scope_t *s16;$/;"	m	struct:_snd_pcm_scope_level	file:
s16_close	./src/pcm/pcm_meter.c	/^static void s16_close(snd_pcm_scope_t *scope)$/;"	f	file:
s16_disable	./src/pcm/pcm_meter.c	/^static void s16_disable(snd_pcm_scope_t *scope)$/;"	f	file:
s16_enable	./src/pcm/pcm_meter.c	/^static int s16_enable(snd_pcm_scope_t *scope)$/;"	f	file:
s16_ops	./src/pcm/pcm_meter.c	/^static const snd_pcm_scope_ops_t s16_ops = {$/;"	v	file:
s16_reset	./src/pcm/pcm_meter.c	/^static void s16_reset(snd_pcm_scope_t *scope)$/;"	f	file:
s16_start	./src/pcm/pcm_meter.c	/^static void s16_start(snd_pcm_scope_t *scope ATTRIBUTE_UNUSED)$/;"	f	file:
s16_stop	./src/pcm/pcm_meter.c	/^static void s16_stop(snd_pcm_scope_t *scope ATTRIBUTE_UNUSED)$/;"	f	file:
s16_to_alaw	./src/pcm/pcm_alaw.c	/^static unsigned char s16_to_alaw(int pcm_val)$/;"	f	file:
s16_to_ulaw	./src/pcm/pcm_mulaw.c	/^static unsigned char s16_to_ulaw(int pcm_val)	\/* 2's complement (16-bit range) *\/$/;"	f	file:
s16_update	./src/pcm/pcm_meter.c	/^static void s16_update(snd_pcm_scope_t *scope)$/;"	f	file:
safe_strtod	./src/conf.c	/^static int safe_strtod(const char *str, double *val)$/;"	f	file:
safe_strtol	./src/conf.c	/^int safe_strtol(const char *str, long *val)$/;"	f
safe_strtoll	./src/conf.c	/^static int safe_strtoll(const char *str, long long *val)$/;"	f	file:
safety_threshold	./src/pcm/pcm_share.c	/^	snd_pcm_uframes_t safety_threshold;$/;"	m	struct:__anon118	file:
sample_bits	./src/pcm/pcm_direct.h	/^		unsigned int sample_bits;$/;"	m	struct:__anon123::__anon125
sample_bits	./src/pcm/pcm_local.h	/^	unsigned int sample_bits;$/;"	m	struct:_snd_pcm
sample_width	./include/sound/sb16_csp.h	/^	int sample_width;	\/* sample width, look above *\/$/;"	m	struct:snd_sb_csp_start
samples	./include/sound/emu10k1.h	/^	unsigned int *samples;		\/* pointer to samples (20-bit) *\/$/;"	m	struct:__anon19
samples	./test/pcm.c	/^	signed short *samples;$/;"	m	struct:async_private_data	file:
sareas	./src/pcm/pcm_rate.c	/^	snd_pcm_channel_area_t *sareas;	\/* areas for splitted period (slave pcm) *\/$/;"	m	struct:_snd_pcm_rate	file:
save_slave_setting	./src/pcm/pcm_direct.c	/^static void save_slave_setting(snd_pcm_direct_t *dmix, snd_pcm_t *spcm)$/;"	f	file:
sbasic_cpriv_free	./modules/mixer/simple/sbase.c	/^static void sbasic_cpriv_free(snd_mixer_class_t *class)$/;"	f	file:
sbi_patch	./include/sound/asound_fm.h	/^struct sbi_patch {$/;"	s
scale_level	./include/sound/asound_fm.h	/^	unsigned char scale_level;	\/* 2 bits: decrease output freq rises *\/$/;"	m	struct:snd_dm_fm_voice
scan	./src/input.c	/^	int (*scan)(snd_input_t *input, const char *format, va_list args);$/;"	m	struct:_snd_input_ops	file:
schannels	./src/pcm/pcm_plug.c	/^	int schannels;$/;"	m	struct:__anon145	file:
schannels	./src/pcm/pcm_route.c	/^	int schannels;$/;"	m	struct:__anon144	file:
scopes	./src/pcm/pcm_meter.c	/^	struct list_head scopes;$/;"	m	struct:_snd_pcm_meter	typeref:struct:_snd_pcm_meter::list_head	file:
search_object_float	./src/alisp/alisp.c	/^static struct alisp_object * search_object_float(struct alisp_instance *instance, double in)$/;"	f	file:
search_object_identifier	./src/alisp/alisp.c	/^static struct alisp_object * search_object_identifier(struct alisp_instance *instance, const char *s)$/;"	f	file:
search_object_integer	./src/alisp/alisp.c	/^static struct alisp_object * search_object_integer(struct alisp_instance *instance, long in)$/;"	f	file:
search_object_pointer	./src/alisp/alisp.c	/^static struct alisp_object * search_object_pointer(struct alisp_instance *instance, const void *ptr)$/;"	f	file:
search_object_string	./src/alisp/alisp.c	/^static struct alisp_object * search_object_string(struct alisp_instance *instance, const char *s)$/;"	f	file:
selectors	./modules/mixer/simple/ac97.c	/^struct helem_selector selectors[] = {$/;"	v	typeref:struct:helem_selector
selectors	./modules/mixer/simple/hda.c	/^struct helem_selector selectors[] = {$/;"	v	typeref:struct:helem_selector
selectors	./modules/mixer/simple/sbase.h	/^	struct helem_selector *selectors;$/;"	m	struct:bclass_selector	typeref:struct:bclass_selector::helem_selector
selectors	./modules/mixer/simple/sbase.h	/^	struct list_head selectors;$/;"	m	struct:bclass_private	typeref:struct:bclass_private::list_head
selem	./modules/mixer/simple/python.c	/^	sm_selem_t selem;$/;"	m	struct:pymelem	file:
selem	./modules/mixer/simple/sbase.h	/^	sm_selem_t selem;$/;"	m	struct:selem_base
selem	./src/mixer/simple_none.c	/^	sm_selem_t selem;$/;"	m	struct:_selem_none	file:
selem_base	./modules/mixer/simple/sbase.h	/^struct selem_base {$/;"	s
selem_ctl_t	./src/mixer/simple_none.c	/^} selem_ctl_t;$/;"	t	typeref:struct:_selem_ctl	file:
selem_ctl_type_t	./src/mixer/simple_none.c	/^} selem_ctl_type_t;$/;"	t	typeref:enum:_selem_ctl_type	file:
selem_free	./modules/mixer/simple/python.c	/^static void selem_free(snd_mixer_elem_t *elem)$/;"	f	file:
selem_free	./modules/mixer/simple/sbase.c	/^static void selem_free(snd_mixer_elem_t *elem)$/;"	f	file:
selem_free	./src/mixer/simple_none.c	/^static void selem_free(snd_mixer_elem_t *elem)$/;"	f	file:
selem_none_t	./src/mixer/simple_none.c	/^} selem_none_t;$/;"	t	typeref:struct:_selem_none	file:
selem_read	./modules/mixer/simple/sbase.c	/^static int selem_read(snd_mixer_elem_t *elem)$/;"	f	file:
selem_read	./src/mixer/simple_none.c	/^static int selem_read(snd_mixer_elem_t *elem)$/;"	f	file:
selem_str	./src/mixer/simple_none.c	/^	struct selem_str {$/;"	s	struct:_selem_none	file:
selem_write	./src/mixer/simple_none.c	/^static int selem_write(snd_mixer_elem_t *elem)$/;"	f	file:
selem_write_main	./src/mixer/simple_none.c	/^static int selem_write_main(snd_mixer_elem_t *elem)$/;"	f	file:
selreg	./modules/mixer/simple/sbase.h	/^	int (*selreg)(snd_mixer_class_t *class,$/;"	m	struct:bclass_base_ops
semid	./src/pcm/pcm_direct.h	/^	int semid;			\/* IPC global semaphore identification *\/$/;"	m	struct:snd_pcm_direct
semun	./src/pcm/pcm_direct.c	/^union semun {$/;"	u	file:
send_event	./test/seq-sender.c	/^void send_event(snd_seq_t *handle, int queue, int client, int port,$/;"	f
sender	./include/seq_event.h	/^	snd_seq_addr_t sender;	\/**< sender address *\/$/;"	m	struct:snd_seq_connect
sender	./include/sound/asequencer.h	/^	struct sndrv_seq_addr sender;	\/* sender address *\/$/;"	m	struct:sndrv_seq_port_subscribe	typeref:struct:sndrv_seq_port_subscribe::sndrv_seq_addr
sender	./include/sound/asequencer.h	/^	struct sndrv_seq_addr sender;$/;"	m	struct:sndrv_seq_connect	typeref:struct:sndrv_seq_connect::sndrv_seq_addr
seq_handle	./test/playmidi1.c	/^static snd_seq_t *seq_handle = NULL;$/;"	v	file:
sequence_element	./src/ucm/ucm_local.h	/^struct sequence_element {$/;"	s
sequence_name	./test/midifile.h	97;"	d
sequence_number	./test/midifile.h	94;"	d
sequencer_specific	./test/midifile.h	108;"	d
serial	./include/sound/hdspm.h	/^	unsigned int serial;$/;"	m	struct:hdspm_version
server	./aserver/aserver.c	/^static int server(const char *sockname, int port)$/;"	f	file:
server	./src/pcm/pcm_direct.h	/^	int server, client;$/;"	m	struct:snd_pcm_direct
server_cleanup	./src/pcm/pcm_direct.c	/^static void server_cleanup(snd_pcm_direct_t *dmix)$/;"	f	file:
server_fd	./src/pcm/pcm_direct.h	/^	int server_fd;$/;"	m	struct:snd_pcm_direct
server_free	./src/pcm/pcm_direct.h	/^	void (*server_free)(snd_pcm_direct_t *direct);$/;"	m	struct:snd_pcm_direct
server_job	./src/pcm/pcm_direct.c	/^static void server_job(snd_pcm_direct_t *dmix)$/;"	f	file:
server_job_dmix	./src/pcm/pcm_direct.c	/^static snd_pcm_direct_t *server_job_dmix;$/;"	v	file:
server_job_signal	./src/pcm/pcm_direct.c	/^static void server_job_signal(int sig ATTRIBUTE_UNUSED)$/;"	f	file:
server_pid	./src/pcm/pcm_direct.h	/^	pid_t server_pid;$/;"	m	struct:snd_pcm_direct
server_printf	./src/pcm/pcm_direct.c	247;"	d	file:
set_buffer_time	./src/pcm/pcm_simple.c	/^static int set_buffer_time(snd_spcm_latency_t latency,$/;"	f	file:
set_client_info	./src/seq/seq_local.h	/^	int (*set_client_info)(snd_seq_t *seq, snd_seq_client_info_t * info);$/;"	m	struct:__anon97
set_client_pool	./src/seq/seq_local.h	/^	int (*set_client_pool)(snd_seq_t *seq, snd_seq_client_pool_t *info);$/;"	m	struct:__anon97
set_dB	./include/mixer_abst.h	/^	int (*set_dB)(snd_mixer_elem_t *elem, int dir, snd_mixer_selem_channel_id_t channel, long value, int xdir);$/;"	m	struct:sm_elem_ops
set_dB_ops	./modules/mixer/simple/python.c	/^static int set_dB_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
set_dB_ops	./modules/mixer/simple/sbase.c	/^static int set_dB_ops(snd_mixer_elem_t *elem ATTRIBUTE_UNUSED,$/;"	f	file:
set_dB_ops	./src/mixer/simple_none.c	/^static int set_dB_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
set_device	./src/ucm/main.c	/^static int set_device(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
set_device_user	./src/ucm/main.c	/^static int set_device_user(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
set_enum_item	./include/mixer_abst.h	/^	int (*set_enum_item)(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, unsigned int item);$/;"	m	struct:sm_elem_ops
set_enum_item_ops	./modules/mixer/simple/python.c	/^static int set_enum_item_ops(snd_mixer_elem_t *elem,$/;"	f	file:
set_enum_item_ops	./modules/mixer/simple/sbase.c	/^static int set_enum_item_ops(snd_mixer_elem_t *elem ATTRIBUTE_UNUSED,$/;"	f	file:
set_enum_item_ops	./src/mixer/simple_none.c	/^static int set_enum_item_ops(snd_mixer_elem_t *elem,$/;"	f	file:
set_event_header	./test/playmidi1.c	/^static void set_event_header(snd_seq_event_t *ev)$/;"	f	file:
set_event_time	./test/playmidi1.c	/^static void set_event_time(snd_seq_event_t *ev, unsigned int currtime)$/;"	f	file:
set_hw_params	./src/pcm/pcm_simple.c	/^static int set_hw_params(snd_pcm_t *pcm,$/;"	f	file:
set_hwparams	./test/pcm.c	/^static int set_hwparams(snd_pcm_t *handle,$/;"	f	file:
set_hwparams	./test/seq-sender.c	/^void set_hwparams(snd_pcm_t *phandle)$/;"	f
set_modifier	./src/ucm/main.c	/^static int set_modifier(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
set_modifier_user	./src/ucm/main.c	/^static int set_modifier_user(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
set_name	./test/seq.c	/^void set_name(snd_seq_t *handle)$/;"	f
set_object	./src/alisp/alisp.c	/^static struct alisp_object_pair * set_object(struct alisp_instance *instance, struct alisp_object * name, struct alisp_object * value)$/;"	f	file:
set_object_direct	./src/alisp/alisp.c	/^static struct alisp_object_pair * set_object_direct(struct alisp_instance *instance, struct alisp_object * name, struct alisp_object * value)$/;"	f	file:
set_port_info	./src/seq/seq_local.h	/^	int (*set_port_info)(snd_seq_t *seq, snd_seq_port_info_t * info);$/;"	m	struct:__anon97
set_power_state	./src/control/control_local.h	/^	int (*set_power_state)(snd_ctl_t *handle, unsigned int state);$/;"	m	struct:_snd_ctl_ops
set_queue_client	./src/seq/seq_local.h	/^	int (*set_queue_client)(snd_seq_t *seq, snd_seq_queue_client_t * client);$/;"	m	struct:__anon97
set_queue_info	./src/seq/seq_local.h	/^	int (*set_queue_info)(snd_seq_t *seq, snd_seq_queue_info_t *info);$/;"	m	struct:__anon97
set_queue_tempo	./src/seq/seq_local.h	/^	int (*set_queue_tempo)(snd_seq_t *seq, snd_seq_queue_tempo_t * tempo);$/;"	m	struct:__anon97
set_queue_timer	./src/seq/seq_local.h	/^	int (*set_queue_timer)(snd_seq_t *seq, snd_seq_queue_timer_t * timer);$/;"	m	struct:__anon97
set_range	./include/mixer_abst.h	/^	int (*set_range)(snd_mixer_elem_t *elem, int dir, long min, long max);$/;"	m	struct:sm_elem_ops
set_range_ops	./modules/mixer/simple/python.c	/^static int set_range_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
set_range_ops	./modules/mixer/simple/sbase.c	/^static int set_range_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
set_range_ops	./src/mixer/simple_none.c	/^static int set_range_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
set_run_adding_gain	./src/pcm/ladspa.h	/^  void (*set_run_adding_gain)(LADSPA_Handle Instance,$/;"	m	struct:_LADSPA_Descriptor
set_sw_params	./src/pcm/pcm_simple.c	/^static int set_sw_params(snd_pcm_t *pcm,$/;"	f	file:
set_switch	./include/mixer_abst.h	/^	int (*set_switch)(snd_mixer_elem_t *elem, int dir, snd_mixer_selem_channel_id_t channel, int value);$/;"	m	struct:sm_elem_ops
set_switch_ops	./modules/mixer/simple/python.c	/^static int set_switch_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
set_switch_ops	./modules/mixer/simple/sbase.c	/^static int set_switch_ops(snd_mixer_elem_t *elem ATTRIBUTE_UNUSED,$/;"	f	file:
set_switch_ops	./src/mixer/simple_none.c	/^static int set_switch_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
set_swparams	./test/pcm.c	/^static int set_swparams(snd_pcm_t *handle, snd_pcm_sw_params_t *swparams)$/;"	f	file:
set_tempo	./test/midifile.c	57;"	d	file:
set_tempo	./test/midifile.h	104;"	d
set_verb	./src/ucm/main.c	/^static int set_verb(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
set_verb_user	./src/ucm/main.c	/^static int set_verb_user(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
set_volume	./include/mixer_abst.h	/^	int (*set_volume)(snd_mixer_elem_t *elem, int dir, snd_mixer_selem_channel_id_t channel, long value);$/;"	m	struct:sm_elem_ops
set_volume_ops	./modules/mixer/simple/python.c	/^static int set_volume_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
set_volume_ops	./modules/mixer/simple/sbase.c	/^static int set_volume_ops(snd_mixer_elem_t *elem ATTRIBUTE_UNUSED,$/;"	f	file:
set_volume_ops	./src/mixer/simple_none.c	/^static int set_volume_ops(snd_mixer_elem_t *elem, int dir,$/;"	f	file:
setobjs_list	./src/alisp/alisp_local.h	/^	struct list_head setobjs_list[ALISP_OBJ_PAIR_HASH_SIZE];$/;"	m	struct:alisp_instance	typeref:struct:alisp_instance::list_head
setparams	./test/latency.c	/^int setparams(snd_pcm_t *phandle, snd_pcm_t *chandle, int *bufsize)$/;"	f
setparams_bufsize	./test/latency.c	/^int setparams_bufsize(snd_pcm_t *handle,$/;"	f
setparams_set	./test/latency.c	/^int setparams_set(snd_pcm_t *handle,$/;"	f
setparams_stream	./test/latency.c	/^int setparams_stream(snd_pcm_t *handle,$/;"	f
setscheduler	./test/latency.c	/^void setscheduler(void)$/;"	f
setup	./src/pcm/pcm_local.h	/^	int setup: 1,$/;"	m	struct:_snd_pcm
setup_count	./src/pcm/pcm_share.c	/^	unsigned int setup_count;$/;"	m	struct:__anon118	file:
setup_wav_header	./src/pcm/pcm_file.c	/^static void setup_wav_header(snd_pcm_t *pcm, struct wav_fmt *fmt)$/;"	f	file:
sformat	./src/pcm/pcm_adpcm.c	/^	snd_pcm_format_t sformat;$/;"	m	struct:__anon104	file:
sformat	./src/pcm/pcm_alaw.c	/^	snd_pcm_format_t sformat;$/;"	m	struct:__anon102	file:
sformat	./src/pcm/pcm_iec958.c	/^	snd_pcm_format_t sformat;$/;"	m	struct:snd_pcm_iec958	file:
sformat	./src/pcm/pcm_lfloat.c	/^	snd_pcm_format_t sformat;$/;"	m	struct:__anon112	file:
sformat	./src/pcm/pcm_linear.c	/^	snd_pcm_format_t sformat;$/;"	m	struct:__anon105	file:
sformat	./src/pcm/pcm_mulaw.c	/^	snd_pcm_format_t sformat;$/;"	m	struct:__anon147	file:
sformat	./src/pcm/pcm_plug.c	/^	snd_pcm_format_t sformat;$/;"	m	struct:__anon145	file:
sformat	./src/pcm/pcm_rate.c	/^	snd_pcm_format_t sformat;$/;"	m	struct:_snd_pcm_rate	file:
sformat	./src/pcm/pcm_route.c	/^	snd_pcm_format_t sformat;$/;"	m	struct:__anon144	file:
sformat	./src/pcm/pcm_softvol.c	/^	snd_pcm_format_t sformat;$/;"	m	struct:__anon109	file:
share	./src/shmarea.c	/^	int share;$/;"	m	struct:snd_shm_area	file:
share_areas	./src/pcm/pcm_dshare.c	/^static void share_areas(snd_pcm_direct_t *dshare,$/;"	f	file:
shared_queue	./test/playmidi1.c	/^static int shared_queue = 0;$/;"	v	file:
shm	./aserver/aserver.c	/^		} shm;$/;"	m	union:client::__anon5	typeref:struct:client::__anon5::__anon6	file:
shm	./src/pcm/pcm_local.h	/^		} shm;$/;"	m	union:_snd_pcm_channel_info::__anon134	typeref:struct:_snd_pcm_channel_info::__anon134::__anon135
shm_ack	./aserver/aserver.c	/^static int shm_ack(client_t *client)$/;"	f	file:
shm_ack_fd	./aserver/aserver.c	/^static int shm_ack_fd(client_t *client, int fd)$/;"	f	file:
shm_rbptr_fd	./aserver/aserver.c	/^static int shm_rbptr_fd(client_t *client, snd_pcm_rbptr_t *rbptr)$/;"	f	file:
shm_sum_create_or_connect	./src/pcm/pcm_dmix.c	/^static int shm_sum_create_or_connect(snd_pcm_direct_t *dmix)$/;"	f	file:
shm_sum_discard	./src/pcm/pcm_dmix.c	/^static int shm_sum_discard(snd_pcm_direct_t *dmix)$/;"	f	file:
shmid	./include/aserver.h	/^			int shmid;$/;"	m	struct:__anon53::__anon54::__anon63
shmid	./src/pcm/pcm_direct.h	/^	int shmid;			\/* IPC global shared memory identification *\/$/;"	m	struct:snd_pcm_direct
shmid	./src/pcm/pcm_local.h	/^			int shmid;$/;"	m	struct:_snd_pcm_channel_info::__anon134::__anon135
shmid	./src/shmarea.c	/^	int shmid;$/;"	m	struct:snd_shm_area	file:
shmid_sum	./src/pcm/pcm_direct.h	/^			int shmid_sum;			\/* IPC global sum ring buffer memory identification *\/$/;"	m	struct:snd_pcm_direct::__anon128::__anon129
shmptr	./src/pcm/pcm_direct.h	/^	snd_pcm_direct_share_t *shmptr;	\/* pointer to shared memory area *\/$/;"	m	struct:snd_pcm_direct
shortname	./src/mixer/simple_none.c	/^	const char *shortname;$/;"	m	struct:mixer_name_table	file:
show_all	./src/control/namehint.c	/^	int show_all;$/;"	m	struct:hint_list	file:
show_client_info	./test/seq.c	/^void show_client_info(snd_seq_t *handle, int client)$/;"	f
show_port_info	./test/seq.c	/^void show_port_info(snd_seq_t *handle, int client, int port)$/;"	f
show_queue_status	./test/seq.c	/^void show_queue_status(snd_seq_t *handle, int queue)$/;"	f
show_status	./test/timer.c	/^void show_status(void *handle)$/;"	f
show_system_info	./test/seq.c	/^void show_system_info(snd_seq_t *handle ATTRIBUTE_UNUSED)$/;"	f
showinmax	./test/latency.c	/^void showinmax(size_t in_max)$/;"	f
showlatency	./test/latency.c	/^void showlatency(size_t latency)$/;"	f
showstat	./test/latency.c	/^void showstat(snd_pcm_t *handle, size_t frames)$/;"	f
sid	./modules/mixer/simple/sbase.h	/^	unsigned short sid;$/;"	m	struct:helem_selector
sid	./modules/mixer/simple/sbase.h	/^	unsigned short sid;$/;"	m	struct:melem_sids
sid	./modules/mixer/simple/sbase.h	/^	unsigned short sid;$/;"	m	struct:selem_base
sidreg	./modules/mixer/simple/sbase.h	/^	int (*sidreg)(snd_mixer_class_t *class,$/;"	m	struct:bclass_base_ops
sids	./modules/mixer/simple/ac97.c	/^struct melem_sids sids[] = {$/;"	v	typeref:struct:melem_sids
sids	./modules/mixer/simple/hda.c	/^struct melem_sids sids[] = {$/;"	v	typeref:struct:melem_sids
sids	./modules/mixer/simple/sbase.h	/^	struct list_head sids;$/;"	m	struct:bclass_private	typeref:struct:bclass_private::list_head
sids	./modules/mixer/simple/sbase.h	/^	struct melem_sids *sids;$/;"	m	struct:bclass_sid	typeref:struct:bclass_sid::melem_sids
siface	./src/control/namehint.c	/^	const char *siface;$/;"	m	struct:hint_list	file:
sig	./include/aserver.h	/^			int sig;$/;"	m	struct:__anon53::__anon54::__anon55
sig	./include/aserver.h	/^			int sig;$/;"	m	struct:__anon64::__anon65::__anon66
sighandler	./test/midiloop.c	/^void sighandler(int dummy ATTRIBUTE_UNUSED)$/;"	f
sighandler	./test/rawmidi.c	/^void sighandler(int dum)$/;"	f
silence_frames	./src/pcm/pcm_share.c	/^	snd_pcm_uframes_t silence_frames;$/;"	m	struct:__anon118	file:
silence_size	./include/sound/asound.h	/^	sndrv_pcm_uframes_t silence_size;	\/* silence block size *\/$/;"	m	struct:sndrv_pcm_sw_params
silence_size	./src/pcm/pcm_direct.h	/^		unsigned int silence_size;$/;"	m	struct:__anon123::__anon125
silence_size	./src/pcm/pcm_local.h	/^	snd_pcm_uframes_t silence_size;	\/* Silence filling size *\/$/;"	m	struct:_snd_pcm
silence_threshold	./include/sound/asound.h	/^	sndrv_pcm_uframes_t silence_threshold;	\/* min distance from noise for silence filling *\/$/;"	m	struct:sndrv_pcm_sw_params
silence_threshold	./src/pcm/pcm_direct.h	/^		unsigned int silence_threshold;$/;"	m	struct:__anon123::__anon125
silence_threshold	./src/pcm/pcm_local.h	/^	snd_pcm_uframes_t silence_threshold;	\/* Silence filling happens when$/;"	m	struct:_snd_pcm
simple_ac97_ops	./modules/mixer/simple/ac97.c	/^static struct sm_elem_ops simple_ac97_ops;$/;"	v	typeref:struct:sm_elem_ops	file:
simple_ac97_ops	./modules/mixer/simple/sbase.c	/^static struct sm_elem_ops simple_ac97_ops = {$/;"	v	typeref:struct:sm_elem_ops	file:
simple_add1	./src/mixer/simple_none.c	/^static int simple_add1(snd_mixer_class_t *class, const char *name,$/;"	f	file:
simple_event	./src/mixer/simple_none.c	/^static int simple_event(snd_mixer_class_t *class, unsigned int mask,$/;"	f	file:
simple_event_add	./modules/mixer/simple/sbase.c	/^static int simple_event_add(snd_mixer_class_t *class, snd_hctl_elem_t *helem)$/;"	f	file:
simple_event_add	./src/mixer/simple_none.c	/^static int simple_event_add(snd_mixer_class_t *class, snd_hctl_elem_t *helem)$/;"	f	file:
simple_event_add1	./modules/mixer/simple/sbase.c	/^static int simple_event_add1(snd_mixer_class_t *class,$/;"	f	file:
simple_event_remove	./modules/mixer/simple/sbase.c	/^static int simple_event_remove(snd_hctl_elem_t *helem,$/;"	f	file:
simple_event_remove	./src/mixer/simple_none.c	/^static int simple_event_remove(snd_hctl_elem_t *helem,$/;"	f	file:
simple_hda_ops	./modules/mixer/simple/hda.c	/^static struct sm_elem_ops simple_hda_ops;$/;"	v	typeref:struct:sm_elem_ops	file:
simple_none_ops	./src/mixer/simple_none.c	/^static struct sm_elem_ops simple_none_ops = {$/;"	v	typeref:struct:sm_elem_ops	file:
simple_python_ops	./modules/mixer/simple/python.c	/^static struct sm_elem_ops simple_python_ops = {$/;"	v	typeref:struct:sm_elem_ops	file:
simple_update	./src/mixer/simple_none.c	/^static int simple_update(snd_mixer_elem_t *melem)$/;"	f	file:
sindex	./modules/mixer/simple/sbase.h	/^	unsigned short sindex;$/;"	m	struct:melem_sids
size	./include/search.h	/^    unsigned int size;$/;"	m	struct:hsearch_data
size	./include/sound/emu10k1.h	/^	unsigned int size;		\/* size in samples (4 bytes) *\/$/;"	m	struct:__anon19
size	./src/input.c	/^	size_t size;$/;"	m	struct:_snd_input_buffer	file:
size	./src/output.c	/^	size_t size;$/;"	m	struct:_snd_output_buffer	file:
size	./src/pcm/pcm_ladspa.c	/^        unsigned int size;$/;"	m	struct:__anon114	file:
skew	./include/seq_event.h	/^		snd_seq_queue_skew_t skew;	\/**< queue skew *\/$/;"	m	union:snd_seq_ev_queue_control::__anon45
skew	./include/sound/asequencer.h	/^		struct sndrv_seq_queue_skew skew;$/;"	m	union:sndrv_seq_ev_queue_control::__anon10	typeref:struct:sndrv_seq_ev_queue_control::__anon10::sndrv_seq_queue_skew
skew_base	./include/sound/asequencer.h	/^	unsigned int skew_base;		\/* queue skew base *\/$/;"	m	struct:sndrv_seq_queue_tempo
skew_value	./include/sound/asequencer.h	/^	unsigned int skew_value;	\/* queue skew *\/$/;"	m	struct:sndrv_seq_queue_tempo
skip_blank	./src/conf.c	/^static void skip_blank(const char **ptr)$/;"	f	file:
slave	./src/pcm/pcm_direct.h	/^	snd_config_t *slave;$/;"	m	struct:snd_pcm_direct_open_conf
slave	./src/pcm/pcm_generic.h	/^	snd_pcm_t *slave;$/;"	m	struct:__anon103
slave	./src/pcm/pcm_share.c	/^	snd_pcm_share_slave_t *slave;$/;"	m	struct:__anon119	file:
slave	./test/playmidi1.c	/^static int slave   = 0;		\/* allow external sync *\/$/;"	v	file:
slave_appl_ptr	./src/pcm/pcm_direct.h	/^	snd_pcm_uframes_t slave_appl_ptr;$/;"	m	struct:snd_pcm_direct
slave_boundary	./src/pcm/pcm_direct.h	/^	snd_pcm_uframes_t slave_boundary;$/;"	m	struct:snd_pcm_direct
slave_buffer_size	./src/pcm/pcm_direct.h	/^	snd_pcm_uframes_t slave_buffer_size;$/;"	m	struct:snd_pcm_direct
slave_channel	./src/pcm/pcm_multi.c	/^	unsigned int slave_channel;$/;"	m	struct:__anon149	file:
slave_channels	./include/pcm_extplug.h	/^	unsigned int slave_channels;$/;"	m	struct:snd_pcm_extplug
slave_channels	./src/pcm/pcm_share.c	/^	unsigned int *slave_channels;$/;"	m	struct:__anon119	file:
slave_format	./include/pcm_extplug.h	/^	snd_pcm_format_t slave_format;$/;"	m	struct:snd_pcm_extplug
slave_hw_ptr	./src/pcm/pcm_direct.h	/^	snd_pcm_uframes_t slave_hw_ptr;$/;"	m	struct:snd_pcm_direct
slave_idx	./src/pcm/pcm_multi.c	/^	int slave_idx;$/;"	m	struct:__anon149	file:
slave_params	./src/pcm/pcm_direct.h	/^struct slave_params {$/;"	s
slave_period_size	./src/pcm/pcm_direct.h	/^	snd_pcm_uframes_t slave_period_size;$/;"	m	struct:snd_pcm_direct
slave_ppq	./test/playmidi1.c	/^static int slave_ppq = 96;$/;"	v	file:
slave_socket	./src/pcm/pcm_share.c	/^	int slave_socket;$/;"	m	struct:__anon119	file:
slave_subformat	./include/pcm_extplug.h	/^	snd_pcm_subformat_t slave_subformat;$/;"	m	struct:snd_pcm_extplug
slaves	./src/mixer/mixer_local.h	/^	struct list_head slaves;	\/* list of all slaves *\/$/;"	m	struct:_snd_mixer	typeref:struct:_snd_mixer::list_head
slaves	./src/pcm/pcm_multi.c	/^	snd_pcm_multi_slave_t *slaves;$/;"	m	struct:__anon150	file:
slaves_count	./src/pcm/pcm_multi.c	/^	unsigned int slaves_count;$/;"	m	struct:__anon150	file:
sleep	./src/ucm/ucm_local.h	/^		long sleep; \/* Sleep time in msecs if sleep element, else 0 *\/$/;"	m	union:sequence_element::__anon151
sleep_min	./include/sound/asound.h	/^	unsigned int sleep_min;			\/* min ticks to sleep *\/$/;"	m	struct:sndrv_pcm_sw_params
sleep_min	./src/pcm/pcm_direct.h	/^		unsigned int sleep_min; \/* not used *\/$/;"	m	struct:__anon123::__anon125
slowptr	./src/pcm/pcm_direct.h	/^	int slowptr;			\/* use slow but more precise ptr updates *\/$/;"	m	struct:snd_pcm_direct
slowptr	./src/pcm/pcm_direct.h	/^	int slowptr;$/;"	m	struct:snd_pcm_direct_open_conf
sm_class_basic_t	./include/mixer_abst.h	/^} sm_class_basic_t;$/;"	t	typeref:struct:_sm_class_basic
sm_elem_ops	./include/mixer_abst.h	/^struct sm_elem_ops {	$/;"	s
sm_selem	./include/mixer_abst.h	63;"	d
sm_selem_ops	./include/mixer_abst.h	64;"	d
sm_selem_t	./include/mixer_abst.h	/^} sm_selem_t;$/;"	t	typeref:struct:_sm_selem
smpte_offset	./test/midifile.h	105;"	d
sname	./modules/mixer/simple/sbase.h	/^	const char *sname;$/;"	m	struct:melem_sids
snare	./include/sound/asound_fm.h	/^	unsigned char snare;$/;"	m	struct:snd_dm_fm_params
snd_aes_iec958	./include/control.h	/^typedef struct snd_aes_iec958 {$/;"	s
snd_aes_iec958_t	./include/control.h	/^} snd_aes_iec958_t;$/;"	t	typeref:struct:snd_aes_iec958
snd_asoundlib_version	./src/error.c	/^const char *snd_asoundlib_version(void)$/;"	f
snd_async_add_ctl_handler	./src/control/control.c	/^int snd_async_add_ctl_handler(snd_async_handler_t **handler, snd_ctl_t *ctl, $/;"	f
snd_async_add_handler	./src/async.c	/^int snd_async_add_handler(snd_async_handler_t **handler, int fd, $/;"	f
snd_async_add_pcm_handler	./src/pcm/pcm.c	/^int snd_async_add_pcm_handler(snd_async_handler_t **handler, snd_pcm_t *pcm, $/;"	f
snd_async_add_timer_handler	./src/timer/timer.c	/^int snd_async_add_timer_handler(snd_async_handler_t **handler, snd_timer_t *timer,$/;"	f
snd_async_callback_t	./include/global.h	/^typedef void (*snd_async_callback_t)(snd_async_handler_t *handler);$/;"	t
snd_async_del_handler	./src/async.c	/^int snd_async_del_handler(snd_async_handler_t *handler)$/;"	f
snd_async_handler	./src/async.c	/^static void snd_async_handler(int signo ATTRIBUTE_UNUSED, siginfo_t *siginfo, void *context ATTRIBUTE_UNUSED)$/;"	f	file:
snd_async_handler_get_callback_private	./src/async.c	/^void *snd_async_handler_get_callback_private(snd_async_handler_t *handler)$/;"	f
snd_async_handler_get_ctl	./src/control/control.c	/^snd_ctl_t *snd_async_handler_get_ctl(snd_async_handler_t *handler)$/;"	f
snd_async_handler_get_fd	./src/async.c	/^int snd_async_handler_get_fd(snd_async_handler_t *handler)$/;"	f
snd_async_handler_get_pcm	./src/pcm/pcm.c	/^snd_pcm_t *snd_async_handler_get_pcm(snd_async_handler_t *handler)$/;"	f
snd_async_handler_get_signo	./src/async.c	/^int snd_async_handler_get_signo(snd_async_handler_t *handler)$/;"	f
snd_async_handler_get_timer	./src/timer/timer.c	/^snd_timer_t *snd_async_handler_get_timer(snd_async_handler_t *handler)$/;"	f
snd_async_handler_t	./include/global.h	/^typedef struct _snd_async_handler snd_async_handler_t;$/;"	t	typeref:struct:_snd_async_handler
snd_async_init	./src/async.c	/^void snd_async_init(void)$/;"	f
snd_async_signo	./src/async.c	/^static const int snd_async_signo = SIGIO;$/;"	v	file:
snd_async_signo	./src/async.c	/^static int snd_async_signo;$/;"	v	file:
snd_atomic_read_begin	./include/iatomic.h	/^static inline void snd_atomic_read_begin(snd_atomic_read_t *r)$/;"	f
snd_atomic_read_init	./include/iatomic.h	/^static inline void snd_atomic_read_init(snd_atomic_read_t *r, snd_atomic_write_t *w)$/;"	f
snd_atomic_read_ok	./include/iatomic.h	/^static inline int snd_atomic_read_ok(snd_atomic_read_t *r)$/;"	f
snd_atomic_read_t	./include/iatomic.h	/^} snd_atomic_read_t;$/;"	t	typeref:struct:__anon79
snd_atomic_read_wait	./src/pcm/atomic.c	/^void snd_atomic_read_wait(snd_atomic_read_t *t)$/;"	f
snd_atomic_write_begin	./include/iatomic.h	/^static inline void snd_atomic_write_begin(snd_atomic_write_t *w)$/;"	f
snd_atomic_write_end	./include/iatomic.h	/^static inline void snd_atomic_write_end(snd_atomic_write_t *w)$/;"	f
snd_atomic_write_init	./include/iatomic.h	/^static inline void snd_atomic_write_init(snd_atomic_write_t *w)$/;"	f
snd_atomic_write_t	./include/iatomic.h	/^} snd_atomic_write_t;$/;"	t	typeref:struct:__anon78
snd_card_get_index	./src/control/cards.c	/^int snd_card_get_index(const char *string)$/;"	f
snd_card_get_longname	./src/control/cards.c	/^int snd_card_get_longname(int card, char **name)$/;"	f
snd_card_get_name	./src/control/cards.c	/^int snd_card_get_name(int card, char **name)$/;"	f
snd_card_load	./src/control/cards.c	/^int snd_card_load(int card)$/;"	f
snd_card_load1	./src/control/cards.c	/^static int snd_card_load1(int card)$/;"	f	file:
snd_card_load2	./src/control/cards.c	/^static int snd_card_load2(const char *control)$/;"	f	file:
snd_card_next	./src/control/cards.c	/^int snd_card_next(int *rcard)$/;"	f
snd_client_open	./aserver/aserver.c	/^static int snd_client_open(client_t *client)$/;"	f	file:
snd_client_open_answer_t	./include/aserver.h	/^} snd_client_open_answer_t;$/;"	t	typeref:struct:__anon68
snd_client_open_request_t	./include/aserver.h	/^} snd_client_open_request_t;$/;"	t	typeref:struct:__anon67
snd_config	./src/conf.c	/^snd_config_t *snd_config = NULL;$/;"	v
snd_config_add	./src/conf.c	/^int snd_config_add(snd_config_t *parent, snd_config_t *child)$/;"	f
snd_config_check_hop	./include/local.h	265;"	d
snd_config_check_hop	./src/conf.c	/^int snd_config_check_hop(snd_config_t *conf)$/;"	f
snd_config_copy	./src/conf.c	/^int snd_config_copy(snd_config_t **dst,$/;"	f
snd_config_delete	./src/conf.c	/^int snd_config_delete(snd_config_t *config)$/;"	f
snd_config_delete_compound_members	./src/conf.c	/^int snd_config_delete_compound_members(const snd_config_t *config)$/;"	f
snd_config_evaluate	./src/conf.c	/^int snd_config_evaluate(snd_config_t *config, snd_config_t *root,$/;"	f
snd_config_expand	./src/conf.c	/^int snd_config_expand(snd_config_t *config, snd_config_t *root, const char *args,$/;"	f
snd_config_for_each	./include/conf.h	172;"	d
snd_config_get_ascii	./src/conf.c	/^int snd_config_get_ascii(const snd_config_t *config, char **ascii)$/;"	f
snd_config_get_bool	./src/confmisc.c	/^int snd_config_get_bool(const snd_config_t *conf)$/;"	f
snd_config_get_bool_ascii	./src/confmisc.c	/^int snd_config_get_bool_ascii(const char *ascii)$/;"	f
snd_config_get_ctl_elem_enumerated	./src/control/setup.c	/^static int snd_config_get_ctl_elem_enumerated(snd_config_t *n, snd_ctl_t *ctl,$/;"	f	file:
snd_config_get_ctl_elem_value	./src/control/setup.c	/^static int snd_config_get_ctl_elem_value(snd_config_t *conf,$/;"	f	file:
snd_config_get_ctl_iface	./src/confmisc.c	/^int snd_config_get_ctl_iface(const snd_config_t *conf)$/;"	f
snd_config_get_ctl_iface_ascii	./src/confmisc.c	/^int snd_config_get_ctl_iface_ascii(const char *ascii)$/;"	f
snd_config_get_id	./src/conf.c	/^int snd_config_get_id(const snd_config_t *config, const char **id)$/;"	f
snd_config_get_integer	./src/conf.c	/^int snd_config_get_integer(const snd_config_t *config, long *ptr)$/;"	f
snd_config_get_integer64	./src/conf.c	/^int snd_config_get_integer64(const snd_config_t *config, long long *ptr)$/;"	f
snd_config_get_ireal	./src/conf.c	/^int snd_config_get_ireal(const snd_config_t *config, double *ptr)$/;"	f
snd_config_get_pointer	./src/conf.c	/^int snd_config_get_pointer(const snd_config_t *config, const void **ptr)$/;"	f
snd_config_get_real	./src/conf.c	/^int snd_config_get_real(const snd_config_t *config, double *ptr)$/;"	f
snd_config_get_string	./src/conf.c	/^int snd_config_get_string(const snd_config_t *config, const char **ptr)$/;"	f
snd_config_get_type	./src/conf.c	/^snd_config_type_t snd_config_get_type(const snd_config_t *config)$/;"	f
snd_config_get_type_ascii	./src/conf.c	/^int snd_config_get_type_ascii(const char *ascii, snd_config_type_t *type)$/;"	f
snd_config_global_update	./src/conf.c	/^static snd_config_update_t *snd_config_global_update = NULL;$/;"	v	file:
snd_config_hook_load	./src/conf.c	/^int snd_config_hook_load(snd_config_t *root, snd_config_t *config, snd_config_t **dst, snd_config_t *private_data)$/;"	f
snd_config_hook_load_for_all_cards	./src/conf.c	/^int snd_config_hook_load_for_all_cards(snd_config_t *root, snd_config_t *config, snd_config_t **dst, snd_config_t *private_data ATTRIBUTE_UNUSED)$/;"	f
snd_config_hooks	./src/conf.c	/^static int snd_config_hooks(snd_config_t *config, snd_config_t *private_data)$/;"	f	file:
snd_config_hooks_call	./src/conf.c	/^static int snd_config_hooks_call(snd_config_t *root, snd_config_t *config, snd_config_t *private_data)$/;"	f	file:
snd_config_imake_integer	./src/conf.c	/^int snd_config_imake_integer(snd_config_t **config, const char *id, const long value)$/;"	f
snd_config_imake_integer64	./src/conf.c	/^int snd_config_imake_integer64(snd_config_t **config, const char *id, const long long value)$/;"	f
snd_config_imake_pointer	./src/conf.c	/^int snd_config_imake_pointer(snd_config_t **config, const char *id, const void *value)$/;"	f
snd_config_imake_real	./src/conf.c	/^int snd_config_imake_real(snd_config_t **config, const char *id, const double value)$/;"	f
snd_config_imake_string	./src/conf.c	/^int snd_config_imake_string(snd_config_t **config, const char *id, const char *value)$/;"	f
snd_config_iterator_end	./src/conf.c	/^snd_config_iterator_t snd_config_iterator_end(const snd_config_t *config)$/;"	f
snd_config_iterator_entry	./src/conf.c	/^snd_config_t *snd_config_iterator_entry(const snd_config_iterator_t iterator)$/;"	f
snd_config_iterator_first	./src/conf.c	/^snd_config_iterator_t snd_config_iterator_first(const snd_config_t *config)$/;"	f
snd_config_iterator_next	./src/conf.c	/^snd_config_iterator_t snd_config_iterator_next(const snd_config_iterator_t iterator)$/;"	f
snd_config_iterator_t	./include/conf.h	/^typedef struct _snd_config_iterator *snd_config_iterator_t;$/;"	t	typeref:struct:_snd_config_iterator
snd_config_load	./src/conf.c	/^int snd_config_load(snd_config_t *config, snd_input_t *in)$/;"	f
snd_config_load1	./src/conf.c	/^static int snd_config_load1(snd_config_t *config, snd_input_t *in, int override)$/;"	f	file:
snd_config_load_override	./src/conf.c	/^int snd_config_load_override(snd_config_t *config, snd_input_t *in)$/;"	f
snd_config_lock	./src/conf.c	/^static inline void snd_config_lock(void) { }$/;"	f	file:
snd_config_lock	./src/conf.c	/^static inline void snd_config_lock(void)$/;"	f	file:
snd_config_make	./src/conf.c	/^int snd_config_make(snd_config_t **config, const char *id,$/;"	f
snd_config_make_compound	./src/conf.c	/^int snd_config_make_compound(snd_config_t **config, const char *id,$/;"	f
snd_config_make_integer	./src/conf.c	/^int snd_config_make_integer(snd_config_t **config, const char *id)$/;"	f
snd_config_make_integer64	./src/conf.c	/^int snd_config_make_integer64(snd_config_t **config, const char *id)$/;"	f
snd_config_make_pointer	./src/conf.c	/^int snd_config_make_pointer(snd_config_t **config, const char *id)$/;"	f
snd_config_make_real	./src/conf.c	/^int snd_config_make_real(snd_config_t **config, const char *id)$/;"	f
snd_config_make_string	./src/conf.c	/^int snd_config_make_string(snd_config_t **config, const char *id)$/;"	f
snd_config_remove	./src/conf.c	/^int snd_config_remove(snd_config_t *config)$/;"	f
snd_config_save	./src/conf.c	/^int snd_config_save(snd_config_t *config, snd_output_t *out)$/;"	f
snd_config_search	./src/conf.c	/^int snd_config_search(snd_config_t *config, const char *key, snd_config_t **result)$/;"	f
snd_config_search_alias	./src/conf.c	/^int snd_config_search_alias(snd_config_t *config,$/;"	f
snd_config_search_alias_hooks	./include/local.h	267;"	d
snd_config_search_alias_hooks	./src/conf.c	/^int snd_config_search_alias_hooks(snd_config_t *config,$/;"	f
snd_config_search_definition	./src/conf.c	/^int snd_config_search_definition(snd_config_t *config,$/;"	f
snd_config_search_hooks	./src/conf.c	/^int snd_config_search_hooks(snd_config_t *config, const char *key, snd_config_t **result)$/;"	f
snd_config_searcha	./src/conf.c	/^int snd_config_searcha(snd_config_t *root, snd_config_t *config, const char *key, snd_config_t **result)$/;"	f
snd_config_searcha_hooks	./src/conf.c	/^int snd_config_searcha_hooks(snd_config_t *root, snd_config_t *config, const char *key, snd_config_t **result)$/;"	f
snd_config_searchv	./src/conf.c	/^int snd_config_searchv(snd_config_t *config, snd_config_t **result, ...)$/;"	f
snd_config_searchva	./src/conf.c	/^int snd_config_searchva(snd_config_t *root, snd_config_t *config, snd_config_t **result, ...)$/;"	f
snd_config_searchva_hooks	./src/conf.c	/^int snd_config_searchva_hooks(snd_config_t *root, snd_config_t *config,$/;"	f
snd_config_set_ascii	./src/conf.c	/^int snd_config_set_ascii(snd_config_t *config, const char *ascii)$/;"	f
snd_config_set_hop	./include/local.h	263;"	d
snd_config_set_hop	./src/conf.c	/^void snd_config_set_hop(snd_config_t *conf, int hop)$/;"	f
snd_config_set_id	./src/conf.c	/^int snd_config_set_id(snd_config_t *config, const char *id)$/;"	f
snd_config_set_integer	./src/conf.c	/^int snd_config_set_integer(snd_config_t *config, long value)$/;"	f
snd_config_set_integer64	./src/conf.c	/^int snd_config_set_integer64(snd_config_t *config, long long value)$/;"	f
snd_config_set_pointer	./src/conf.c	/^int snd_config_set_pointer(snd_config_t *config, const void *value)$/;"	f
snd_config_set_real	./src/conf.c	/^int snd_config_set_real(snd_config_t *config, double value)$/;"	f
snd_config_set_string	./src/conf.c	/^int snd_config_set_string(snd_config_t *config, const char *value)$/;"	f
snd_config_substitute	./src/conf.c	/^int snd_config_substitute(snd_config_t *dst, snd_config_t *src)$/;"	f
snd_config_t	./include/conf.h	/^typedef struct _snd_config snd_config_t;$/;"	t	typeref:struct:_snd_config
snd_config_test_id	./src/conf.c	/^int snd_config_test_id(const snd_config_t *config, const char *id)$/;"	f
snd_config_top	./src/conf.c	/^int snd_config_top(snd_config_t **config)$/;"	f
snd_config_type_t	./include/conf.h	/^} snd_config_type_t;$/;"	t	typeref:enum:_snd_config_type
snd_config_unlock	./src/conf.c	/^static inline void snd_config_unlock(void) { }$/;"	f	file:
snd_config_unlock	./src/conf.c	/^static inline void snd_config_unlock(void)$/;"	f	file:
snd_config_update	./src/conf.c	/^int snd_config_update(void)$/;"	f
snd_config_update_free	./src/conf.c	/^int snd_config_update_free(snd_config_update_t *update)$/;"	f
snd_config_update_free_global	./src/conf.c	/^int snd_config_update_free_global(void)$/;"	f
snd_config_update_mutex	./src/conf.c	/^static pthread_mutex_t snd_config_update_mutex =$/;"	v	file:
snd_config_update_r	./src/conf.c	/^int snd_config_update_r(snd_config_t **_top, snd_config_update_t **_update, const char *cfgs)$/;"	f
snd_config_update_t	./include/conf.h	/^typedef struct _snd_config_update snd_config_update_t;$/;"	t	typeref:struct:_snd_config_update
snd_config_walk	./src/conf.c	/^static int snd_config_walk(snd_config_t *src,$/;"	f	file:
snd_config_walk_callback_t	./src/conf.c	/^typedef int (*snd_config_walk_callback_t)(snd_config_t *src,$/;"	t	file:
snd_config_walk_pass_t	./src/conf.c	/^} snd_config_walk_pass_t;$/;"	t	typeref:enum:_snd_config_walk_pass	file:
snd_control_open_objects	./src/control/control_symbols.c	/^static const char **snd_control_open_objects[] = {$/;"	v	file:
snd_control_open_symbols	./src/control/control_symbols.c	/^void *snd_control_open_symbols(void)$/;"	f
snd_ctl_ascii_elem_id_get	./src/control/ctlparse.c	/^char *snd_ctl_ascii_elem_id_get(snd_ctl_elem_id_t *id)$/;"	f
snd_ctl_ascii_elem_id_parse	./src/control/ctlparse.c	/^int snd_ctl_ascii_elem_id_parse(snd_ctl_elem_id_t *dst, const char *str)$/;"	f
snd_ctl_ascii_value_parse	./src/control/ctlparse.c	/^int snd_ctl_ascii_value_parse(snd_ctl_t *handle,$/;"	f
snd_ctl_async	./src/control/control.c	/^int snd_ctl_async(snd_ctl_t *ctl, int sig, pid_t pid)$/;"	f
snd_ctl_card_info	./src/control/control.c	/^int snd_ctl_card_info(snd_ctl_t *ctl, snd_ctl_card_info_t *info)$/;"	f
snd_ctl_card_info_alloca	./include/control.h	322;"	d
snd_ctl_card_info_clear	./src/control/control.c	/^void snd_ctl_card_info_clear(snd_ctl_card_info_t *obj)$/;"	f
snd_ctl_card_info_copy	./src/control/control.c	/^void snd_ctl_card_info_copy(snd_ctl_card_info_t *dst, const snd_ctl_card_info_t *src)$/;"	f
snd_ctl_card_info_free	./src/control/control.c	/^void snd_ctl_card_info_free(snd_ctl_card_info_t *obj)$/;"	f
snd_ctl_card_info_get_card	./src/control/control.c	/^int snd_ctl_card_info_get_card(const snd_ctl_card_info_t *obj)$/;"	f
snd_ctl_card_info_get_components	./src/control/control.c	/^const char *snd_ctl_card_info_get_components(const snd_ctl_card_info_t *obj)$/;"	f
snd_ctl_card_info_get_driver	./src/control/control.c	/^const char *snd_ctl_card_info_get_driver(const snd_ctl_card_info_t *obj)$/;"	f
snd_ctl_card_info_get_id	./src/control/control.c	/^const char *snd_ctl_card_info_get_id(const snd_ctl_card_info_t *obj)$/;"	f
snd_ctl_card_info_get_longname	./src/control/control.c	/^const char *snd_ctl_card_info_get_longname(const snd_ctl_card_info_t *obj)$/;"	f
snd_ctl_card_info_get_mixername	./src/control/control.c	/^const char *snd_ctl_card_info_get_mixername(const snd_ctl_card_info_t *obj)$/;"	f
snd_ctl_card_info_get_name	./src/control/control.c	/^const char *snd_ctl_card_info_get_name(const snd_ctl_card_info_t *obj)$/;"	f
snd_ctl_card_info_malloc	./src/control/control.c	/^int snd_ctl_card_info_malloc(snd_ctl_card_info_t **ptr)$/;"	f
snd_ctl_card_info_sizeof	./src/control/control.c	/^size_t snd_ctl_card_info_sizeof()$/;"	f
snd_ctl_card_info_t	./include/control.h	/^typedef struct _snd_ctl_card_info snd_ctl_card_info_t;$/;"	t	typeref:struct:_snd_ctl_card_info
snd_ctl_close	./src/control/control.c	/^int snd_ctl_close(snd_ctl_t *ctl)$/;"	f
snd_ctl_convert_from_dB	./src/control/tlv.c	/^int snd_ctl_convert_from_dB(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id,$/;"	f
snd_ctl_convert_to_dB	./src/control/tlv.c	/^int snd_ctl_convert_to_dB(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id,$/;"	f
snd_ctl_elem_add_boolean	./src/control/control.c	/^int snd_ctl_elem_add_boolean(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id,$/;"	f
snd_ctl_elem_add_iec958	./src/control/control.c	/^int snd_ctl_elem_add_iec958(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id)$/;"	f
snd_ctl_elem_add_integer	./src/control/control.c	/^int snd_ctl_elem_add_integer(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id,$/;"	f
snd_ctl_elem_add_integer64	./src/control/control.c	/^int snd_ctl_elem_add_integer64(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id,$/;"	f
snd_ctl_elem_id_alloca	./include/control.h	299;"	d
snd_ctl_elem_id_clear	./src/control/control.c	/^void snd_ctl_elem_id_clear(snd_ctl_elem_id_t *obj)$/;"	f
snd_ctl_elem_id_copy	./src/control/control.c	/^void snd_ctl_elem_id_copy(snd_ctl_elem_id_t *dst, const snd_ctl_elem_id_t *src)$/;"	f
snd_ctl_elem_id_free	./src/control/control.c	/^void snd_ctl_elem_id_free(snd_ctl_elem_id_t *obj)$/;"	f
snd_ctl_elem_id_get_device	./src/control/control.c	/^unsigned int snd_ctl_elem_id_get_device(const snd_ctl_elem_id_t *obj)$/;"	f
snd_ctl_elem_id_get_index	./src/control/control.c	/^unsigned int snd_ctl_elem_id_get_index(const snd_ctl_elem_id_t *obj)$/;"	f
snd_ctl_elem_id_get_interface	./src/control/control.c	/^snd_ctl_elem_iface_t snd_ctl_elem_id_get_interface(const snd_ctl_elem_id_t *obj)$/;"	f
snd_ctl_elem_id_get_name	./src/control/control.c	/^const char *snd_ctl_elem_id_get_name(const snd_ctl_elem_id_t *obj)$/;"	f
snd_ctl_elem_id_get_numid	./src/control/control.c	/^unsigned int snd_ctl_elem_id_get_numid(const snd_ctl_elem_id_t *obj)$/;"	f
snd_ctl_elem_id_get_subdevice	./src/control/control.c	/^unsigned int snd_ctl_elem_id_get_subdevice(const snd_ctl_elem_id_t *obj)$/;"	f
snd_ctl_elem_id_malloc	./src/control/control.c	/^int snd_ctl_elem_id_malloc(snd_ctl_elem_id_t **ptr)$/;"	f
snd_ctl_elem_id_set_device	./src/control/control.c	/^void snd_ctl_elem_id_set_device(snd_ctl_elem_id_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_id_set_index	./src/control/control.c	/^void snd_ctl_elem_id_set_index(snd_ctl_elem_id_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_id_set_interface	./src/control/control.c	/^void snd_ctl_elem_id_set_interface(snd_ctl_elem_id_t *obj, snd_ctl_elem_iface_t val)$/;"	f
snd_ctl_elem_id_set_name	./src/control/control.c	/^void snd_ctl_elem_id_set_name(snd_ctl_elem_id_t *obj, const char *val)$/;"	f
snd_ctl_elem_id_set_numid	./src/control/control.c	/^void snd_ctl_elem_id_set_numid(snd_ctl_elem_id_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_id_set_subdevice	./src/control/control.c	/^void snd_ctl_elem_id_set_subdevice(snd_ctl_elem_id_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_id_sizeof	./src/control/control.c	/^size_t snd_ctl_elem_id_sizeof()$/;"	f
snd_ctl_elem_id_t	./include/control.h	/^typedef struct _snd_ctl_elem_id snd_ctl_elem_id_t;$/;"	t	typeref:struct:_snd_ctl_elem_id
snd_ctl_elem_iface_name	./src/control/control.c	/^const char *snd_ctl_elem_iface_name(snd_ctl_elem_iface_t iface)$/;"	f
snd_ctl_elem_iface_names	./src/control/control.c	/^static const char *const snd_ctl_elem_iface_names[] = {$/;"	v	file:
snd_ctl_elem_iface_t	./include/control.h	/^} snd_ctl_elem_iface_t;$/;"	t	typeref:enum:_snd_ctl_elem_iface
snd_ctl_elem_info	./src/control/control.c	/^int snd_ctl_elem_info(snd_ctl_t *ctl, snd_ctl_elem_info_t *info)$/;"	f
snd_ctl_elem_info_alloca	./include/control.h	373;"	d
snd_ctl_elem_info_clear	./src/control/control.c	/^void snd_ctl_elem_info_clear(snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_copy	./src/control/control.c	/^void snd_ctl_elem_info_copy(snd_ctl_elem_info_t *dst, const snd_ctl_elem_info_t *src)$/;"	f
snd_ctl_elem_info_free	./src/control/control.c	/^void snd_ctl_elem_info_free(snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_count	./src/control/control.c	/^unsigned int snd_ctl_elem_info_get_count(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_device	./src/control/control.c	/^unsigned int snd_ctl_elem_info_get_device(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_dimension	./src/control/control.c	/^int INTERNAL(snd_ctl_elem_info_get_dimension)(const snd_ctl_elem_info_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_info_get_dimensions	./src/control/control.c	/^int INTERNAL(snd_ctl_elem_info_get_dimensions)(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_id	./src/control/control.c	/^void snd_ctl_elem_info_get_id(const snd_ctl_elem_info_t *obj, snd_ctl_elem_id_t *ptr)$/;"	f
snd_ctl_elem_info_get_index	./src/control/control.c	/^unsigned int snd_ctl_elem_info_get_index(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_interface	./src/control/control.c	/^snd_ctl_elem_iface_t snd_ctl_elem_info_get_interface(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_item_name	./src/control/control.c	/^const char *snd_ctl_elem_info_get_item_name(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_items	./src/control/control.c	/^unsigned int snd_ctl_elem_info_get_items(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_max	./src/control/control.c	/^long snd_ctl_elem_info_get_max(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_max64	./src/control/control.c	/^long long snd_ctl_elem_info_get_max64(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_min	./src/control/control.c	/^long snd_ctl_elem_info_get_min(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_min64	./src/control/control.c	/^long long snd_ctl_elem_info_get_min64(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_name	./src/control/control.c	/^const char *snd_ctl_elem_info_get_name(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_numid	./src/control/control.c	/^unsigned int snd_ctl_elem_info_get_numid(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_owner	./src/control/control.c	/^pid_t snd_ctl_elem_info_get_owner(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_step	./src/control/control.c	/^long snd_ctl_elem_info_get_step(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_step64	./src/control/control.c	/^long long snd_ctl_elem_info_get_step64(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_subdevice	./src/control/control.c	/^unsigned int snd_ctl_elem_info_get_subdevice(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_get_type	./src/control/control.c	/^snd_ctl_elem_type_t snd_ctl_elem_info_get_type(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_inactive	./src/control/control.c	/^int snd_ctl_elem_info_is_inactive(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_indirect	./src/control/control.c	/^int snd_ctl_elem_info_is_indirect(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_locked	./src/control/control.c	/^int snd_ctl_elem_info_is_locked(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_owner	./src/control/control.c	/^int snd_ctl_elem_info_is_owner(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_readable	./src/control/control.c	/^int snd_ctl_elem_info_is_readable(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_tlv_commandable	./src/control/control.c	/^int snd_ctl_elem_info_is_tlv_commandable(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_tlv_readable	./src/control/control.c	/^int snd_ctl_elem_info_is_tlv_readable(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_tlv_writable	./src/control/control.c	/^int snd_ctl_elem_info_is_tlv_writable(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_user	./src/control/control.c	/^int snd_ctl_elem_info_is_user(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_volatile	./src/control/control.c	/^int snd_ctl_elem_info_is_volatile(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_is_writable	./src/control/control.c	/^int snd_ctl_elem_info_is_writable(const snd_ctl_elem_info_t *obj)$/;"	f
snd_ctl_elem_info_malloc	./src/control/control.c	/^int snd_ctl_elem_info_malloc(snd_ctl_elem_info_t **ptr)$/;"	f
snd_ctl_elem_info_set_device	./src/control/control.c	/^void snd_ctl_elem_info_set_device(snd_ctl_elem_info_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_info_set_id	./src/control/control.c	/^void snd_ctl_elem_info_set_id(snd_ctl_elem_info_t *obj, const snd_ctl_elem_id_t *ptr)$/;"	f
snd_ctl_elem_info_set_index	./src/control/control.c	/^void snd_ctl_elem_info_set_index(snd_ctl_elem_info_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_info_set_interface	./src/control/control.c	/^void snd_ctl_elem_info_set_interface(snd_ctl_elem_info_t *obj, snd_ctl_elem_iface_t val)$/;"	f
snd_ctl_elem_info_set_item	./src/control/control.c	/^void snd_ctl_elem_info_set_item(snd_ctl_elem_info_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_info_set_name	./src/control/control.c	/^void snd_ctl_elem_info_set_name(snd_ctl_elem_info_t *obj, const char *val)$/;"	f
snd_ctl_elem_info_set_numid	./src/control/control.c	/^void snd_ctl_elem_info_set_numid(snd_ctl_elem_info_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_info_set_subdevice	./src/control/control.c	/^void snd_ctl_elem_info_set_subdevice(snd_ctl_elem_info_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_info_sizeof	./src/control/control.c	/^size_t snd_ctl_elem_info_sizeof()$/;"	f
snd_ctl_elem_info_t	./include/control.h	/^typedef struct _snd_ctl_elem_info snd_ctl_elem_info_t;$/;"	t	typeref:struct:_snd_ctl_elem_info
snd_ctl_elem_list	./src/control/control.c	/^int snd_ctl_elem_list(snd_ctl_t *ctl, snd_ctl_elem_list_t *list)$/;"	f
snd_ctl_elem_list_alloc_space	./src/control/control.c	/^int snd_ctl_elem_list_alloc_space(snd_ctl_elem_list_t *obj, unsigned int entries)$/;"	f
snd_ctl_elem_list_alloca	./include/control.h	352;"	d
snd_ctl_elem_list_clear	./src/control/control.c	/^void snd_ctl_elem_list_clear(snd_ctl_elem_list_t *obj)$/;"	f
snd_ctl_elem_list_copy	./src/control/control.c	/^void snd_ctl_elem_list_copy(snd_ctl_elem_list_t *dst, const snd_ctl_elem_list_t *src)$/;"	f
snd_ctl_elem_list_free	./src/control/control.c	/^void snd_ctl_elem_list_free(snd_ctl_elem_list_t *obj)$/;"	f
snd_ctl_elem_list_free_space	./src/control/control.c	/^void snd_ctl_elem_list_free_space(snd_ctl_elem_list_t *obj)$/;"	f
snd_ctl_elem_list_get_count	./src/control/control.c	/^unsigned int snd_ctl_elem_list_get_count(const snd_ctl_elem_list_t *obj)$/;"	f
snd_ctl_elem_list_get_device	./src/control/control.c	/^unsigned int snd_ctl_elem_list_get_device(const snd_ctl_elem_list_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_list_get_id	./src/control/control.c	/^void snd_ctl_elem_list_get_id(const snd_ctl_elem_list_t *obj, unsigned int idx, snd_ctl_elem_id_t *ptr)$/;"	f
snd_ctl_elem_list_get_index	./src/control/control.c	/^unsigned int snd_ctl_elem_list_get_index(const snd_ctl_elem_list_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_list_get_interface	./src/control/control.c	/^snd_ctl_elem_iface_t snd_ctl_elem_list_get_interface(const snd_ctl_elem_list_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_list_get_name	./src/control/control.c	/^const char *snd_ctl_elem_list_get_name(const snd_ctl_elem_list_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_list_get_numid	./src/control/control.c	/^unsigned int snd_ctl_elem_list_get_numid(const snd_ctl_elem_list_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_list_get_subdevice	./src/control/control.c	/^unsigned int snd_ctl_elem_list_get_subdevice(const snd_ctl_elem_list_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_list_get_used	./src/control/control.c	/^unsigned int snd_ctl_elem_list_get_used(const snd_ctl_elem_list_t *obj)$/;"	f
snd_ctl_elem_list_malloc	./src/control/control.c	/^int snd_ctl_elem_list_malloc(snd_ctl_elem_list_t **ptr)$/;"	f
snd_ctl_elem_list_set_offset	./src/control/control.c	/^void snd_ctl_elem_list_set_offset(snd_ctl_elem_list_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_list_sizeof	./src/control/control.c	/^size_t snd_ctl_elem_list_sizeof()$/;"	f
snd_ctl_elem_list_t	./include/control.h	/^typedef struct _snd_ctl_elem_list snd_ctl_elem_list_t;$/;"	t	typeref:struct:_snd_ctl_elem_list
snd_ctl_elem_lock	./src/control/control.c	/^int snd_ctl_elem_lock(snd_ctl_t *ctl, snd_ctl_elem_id_t *id)$/;"	f
snd_ctl_elem_read	./src/control/control.c	/^int snd_ctl_elem_read(snd_ctl_t *ctl, snd_ctl_elem_value_t *control)$/;"	f
snd_ctl_elem_remove	./src/control/control.c	/^int snd_ctl_elem_remove(snd_ctl_t *ctl, snd_ctl_elem_id_t *id)$/;"	f
snd_ctl_elem_set_bytes	./src/control/control.c	/^void snd_ctl_elem_set_bytes(snd_ctl_elem_value_t *obj, void *data, size_t size)$/;"	f
snd_ctl_elem_tlv_command	./src/control/control.c	/^int snd_ctl_elem_tlv_command(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id,$/;"	f
snd_ctl_elem_tlv_read	./src/control/control.c	/^int snd_ctl_elem_tlv_read(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id,$/;"	f
snd_ctl_elem_tlv_write	./src/control/control.c	/^int snd_ctl_elem_tlv_write(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id,$/;"	f
snd_ctl_elem_type_name	./src/control/control.c	/^const char *snd_ctl_elem_type_name(snd_ctl_elem_type_t type)$/;"	f
snd_ctl_elem_type_names	./src/control/control.c	/^static const char *const snd_ctl_elem_type_names[] = {$/;"	v	file:
snd_ctl_elem_type_t	./include/control.h	/^} snd_ctl_elem_type_t;$/;"	t	typeref:enum:_snd_ctl_elem_type
snd_ctl_elem_unlock	./src/control/control.c	/^int snd_ctl_elem_unlock(snd_ctl_t *ctl, snd_ctl_elem_id_t *id)$/;"	f
snd_ctl_elem_value_alloca	./include/control.h	428;"	d
snd_ctl_elem_value_clear	./src/control/control.c	/^void snd_ctl_elem_value_clear(snd_ctl_elem_value_t *obj)$/;"	f
snd_ctl_elem_value_compare	./src/control/control.c	/^int snd_ctl_elem_value_compare(snd_ctl_elem_value_t *left, const snd_ctl_elem_value_t *right)$/;"	f
snd_ctl_elem_value_copy	./src/control/control.c	/^void snd_ctl_elem_value_copy(snd_ctl_elem_value_t *dst, const snd_ctl_elem_value_t *src)$/;"	f
snd_ctl_elem_value_free	./src/control/control.c	/^void snd_ctl_elem_value_free(snd_ctl_elem_value_t *obj)$/;"	f
snd_ctl_elem_value_get_boolean	./src/control/control.c	/^int snd_ctl_elem_value_get_boolean(const snd_ctl_elem_value_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_value_get_byte	./src/control/control.c	/^unsigned char snd_ctl_elem_value_get_byte(const snd_ctl_elem_value_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_value_get_bytes	./src/control/control.c	/^const void * snd_ctl_elem_value_get_bytes(const snd_ctl_elem_value_t *obj)$/;"	f
snd_ctl_elem_value_get_device	./src/control/control.c	/^unsigned int snd_ctl_elem_value_get_device(const snd_ctl_elem_value_t *obj)$/;"	f
snd_ctl_elem_value_get_enumerated	./src/control/control.c	/^unsigned int snd_ctl_elem_value_get_enumerated(const snd_ctl_elem_value_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_value_get_id	./src/control/control.c	/^void snd_ctl_elem_value_get_id(const snd_ctl_elem_value_t *obj, snd_ctl_elem_id_t *ptr)$/;"	f
snd_ctl_elem_value_get_iec958	./src/control/control.c	/^void snd_ctl_elem_value_get_iec958(const snd_ctl_elem_value_t *obj, snd_aes_iec958_t *ptr)$/;"	f
snd_ctl_elem_value_get_index	./src/control/control.c	/^unsigned int snd_ctl_elem_value_get_index(const snd_ctl_elem_value_t *obj)$/;"	f
snd_ctl_elem_value_get_integer	./src/control/control.c	/^long snd_ctl_elem_value_get_integer(const snd_ctl_elem_value_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_value_get_integer64	./src/control/control.c	/^long long snd_ctl_elem_value_get_integer64(const snd_ctl_elem_value_t *obj, unsigned int idx)$/;"	f
snd_ctl_elem_value_get_interface	./src/control/control.c	/^snd_ctl_elem_iface_t snd_ctl_elem_value_get_interface(const snd_ctl_elem_value_t *obj)$/;"	f
snd_ctl_elem_value_get_name	./src/control/control.c	/^const char *snd_ctl_elem_value_get_name(const snd_ctl_elem_value_t *obj)$/;"	f
snd_ctl_elem_value_get_numid	./src/control/control.c	/^unsigned int snd_ctl_elem_value_get_numid(const snd_ctl_elem_value_t *obj)$/;"	f
snd_ctl_elem_value_get_subdevice	./src/control/control.c	/^unsigned int snd_ctl_elem_value_get_subdevice(const snd_ctl_elem_value_t *obj)$/;"	f
snd_ctl_elem_value_malloc	./src/control/control.c	/^int snd_ctl_elem_value_malloc(snd_ctl_elem_value_t **ptr)$/;"	f
snd_ctl_elem_value_set_boolean	./src/control/control.c	/^void snd_ctl_elem_value_set_boolean(snd_ctl_elem_value_t *obj, unsigned int idx, long val)$/;"	f
snd_ctl_elem_value_set_byte	./src/control/control.c	/^void snd_ctl_elem_value_set_byte(snd_ctl_elem_value_t *obj, unsigned int idx, unsigned char val)$/;"	f
snd_ctl_elem_value_set_device	./src/control/control.c	/^void snd_ctl_elem_value_set_device(snd_ctl_elem_value_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_value_set_enumerated	./src/control/control.c	/^void snd_ctl_elem_value_set_enumerated(snd_ctl_elem_value_t *obj, unsigned int idx, unsigned int val)$/;"	f
snd_ctl_elem_value_set_id	./src/control/control.c	/^void snd_ctl_elem_value_set_id(snd_ctl_elem_value_t *obj, const snd_ctl_elem_id_t *ptr)$/;"	f
snd_ctl_elem_value_set_iec958	./src/control/control.c	/^void snd_ctl_elem_value_set_iec958(snd_ctl_elem_value_t *obj, const snd_aes_iec958_t *ptr)$/;"	f
snd_ctl_elem_value_set_index	./src/control/control.c	/^void snd_ctl_elem_value_set_index(snd_ctl_elem_value_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_value_set_integer	./src/control/control.c	/^void snd_ctl_elem_value_set_integer(snd_ctl_elem_value_t *obj, unsigned int idx, long val)$/;"	f
snd_ctl_elem_value_set_integer64	./src/control/control.c	/^void snd_ctl_elem_value_set_integer64(snd_ctl_elem_value_t *obj, unsigned int idx, long long val)$/;"	f
snd_ctl_elem_value_set_interface	./src/control/control.c	/^void snd_ctl_elem_value_set_interface(snd_ctl_elem_value_t *obj, snd_ctl_elem_iface_t val)$/;"	f
snd_ctl_elem_value_set_name	./src/control/control.c	/^void snd_ctl_elem_value_set_name(snd_ctl_elem_value_t *obj, const char *val)$/;"	f
snd_ctl_elem_value_set_numid	./src/control/control.c	/^void snd_ctl_elem_value_set_numid(snd_ctl_elem_value_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_value_set_subdevice	./src/control/control.c	/^void snd_ctl_elem_value_set_subdevice(snd_ctl_elem_value_t *obj, unsigned int val)$/;"	f
snd_ctl_elem_value_sizeof	./src/control/control.c	/^size_t snd_ctl_elem_value_sizeof()$/;"	f
snd_ctl_elem_value_t	./include/control.h	/^typedef struct _snd_ctl_elem_value snd_ctl_elem_value_t;$/;"	t	typeref:struct:_snd_ctl_elem_value
snd_ctl_elem_write	./src/control/control.c	/^int snd_ctl_elem_write(snd_ctl_t *ctl, snd_ctl_elem_value_t *control)$/;"	f
snd_ctl_event_alloca	./include/control.h	340;"	d
snd_ctl_event_clear	./src/control/control.c	/^void snd_ctl_event_clear(snd_ctl_event_t *obj)$/;"	f
snd_ctl_event_copy	./src/control/control.c	/^void snd_ctl_event_copy(snd_ctl_event_t *dst, const snd_ctl_event_t *src)$/;"	f
snd_ctl_event_elem_get_device	./src/control/control.c	/^unsigned int snd_ctl_event_elem_get_device(const snd_ctl_event_t *obj)$/;"	f
snd_ctl_event_elem_get_id	./src/control/control.c	/^void snd_ctl_event_elem_get_id(const snd_ctl_event_t *obj, snd_ctl_elem_id_t *ptr)$/;"	f
snd_ctl_event_elem_get_index	./src/control/control.c	/^unsigned int snd_ctl_event_elem_get_index(const snd_ctl_event_t *obj)$/;"	f
snd_ctl_event_elem_get_interface	./src/control/control.c	/^snd_ctl_elem_iface_t snd_ctl_event_elem_get_interface(const snd_ctl_event_t *obj)$/;"	f
snd_ctl_event_elem_get_mask	./src/control/control.c	/^unsigned int snd_ctl_event_elem_get_mask(const snd_ctl_event_t *obj)$/;"	f
snd_ctl_event_elem_get_name	./src/control/control.c	/^const char *snd_ctl_event_elem_get_name(const snd_ctl_event_t *obj)$/;"	f
snd_ctl_event_elem_get_numid	./src/control/control.c	/^unsigned int snd_ctl_event_elem_get_numid(const snd_ctl_event_t *obj)$/;"	f
snd_ctl_event_elem_get_subdevice	./src/control/control.c	/^unsigned int snd_ctl_event_elem_get_subdevice(const snd_ctl_event_t *obj)$/;"	f
snd_ctl_event_free	./src/control/control.c	/^void snd_ctl_event_free(snd_ctl_event_t *obj)$/;"	f
snd_ctl_event_get_type	./src/control/control.c	/^snd_ctl_event_type_t snd_ctl_event_get_type(const snd_ctl_event_t *obj)$/;"	f
snd_ctl_event_malloc	./src/control/control.c	/^int snd_ctl_event_malloc(snd_ctl_event_t **ptr)$/;"	f
snd_ctl_event_sizeof	./src/control/control.c	/^size_t snd_ctl_event_sizeof()$/;"	f
snd_ctl_event_t	./include/control.h	/^typedef struct _snd_ctl_event snd_ctl_event_t;$/;"	t	typeref:struct:_snd_ctl_event
snd_ctl_event_type_name	./src/control/control.c	/^const char *snd_ctl_event_type_name(snd_ctl_event_type_t type)$/;"	f
snd_ctl_event_type_names	./src/control/control.c	/^static const char *const snd_ctl_event_type_names[] = {$/;"	v	file:
snd_ctl_event_type_t	./include/control.h	/^}snd_ctl_event_type_t;$/;"	t	typeref:enum:_snd_ctl_event_type
snd_ctl_ext	./include/control_external.h	/^struct snd_ctl_ext {$/;"	s
snd_ctl_ext_access	./include/control_external.h	/^typedef enum snd_ctl_ext_access {$/;"	g
snd_ctl_ext_access_t	./include/control_external.h	/^} snd_ctl_ext_access_t;$/;"	t	typeref:enum:snd_ctl_ext_access
snd_ctl_ext_async	./src/control/control_ext.c	/^static int snd_ctl_ext_async(snd_ctl_t *ctl ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_callback	./include/control_external.h	/^struct snd_ctl_ext_callback {$/;"	s
snd_ctl_ext_callback_t	./include/control_external.h	/^typedef struct snd_ctl_ext_callback snd_ctl_ext_callback_t;$/;"	t	typeref:struct:snd_ctl_ext_callback
snd_ctl_ext_card_info	./src/control/control_ext.c	/^static int snd_ctl_ext_card_info(snd_ctl_t *handle, snd_ctl_card_info_t *info)$/;"	f	file:
snd_ctl_ext_close	./src/control/control_ext.c	/^static int snd_ctl_ext_close(snd_ctl_t *handle)$/;"	f	file:
snd_ctl_ext_create	./src/control/control_ext.c	/^int snd_ctl_ext_create(snd_ctl_ext_t *ext, const char *name, int mode)$/;"	f
snd_ctl_ext_delete	./src/control/control_ext.c	/^int snd_ctl_ext_delete(snd_ctl_ext_t *ext)$/;"	f
snd_ctl_ext_elem_add	./src/control/control_ext.c	/^static int snd_ctl_ext_elem_add(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_elem_info	./src/control/control_ext.c	/^static int snd_ctl_ext_elem_info(snd_ctl_t *handle, snd_ctl_elem_info_t *info)$/;"	f	file:
snd_ctl_ext_elem_list	./src/control/control_ext.c	/^static int snd_ctl_ext_elem_list(snd_ctl_t *handle, snd_ctl_elem_list_t *list)$/;"	f	file:
snd_ctl_ext_elem_lock	./src/control/control_ext.c	/^static int snd_ctl_ext_elem_lock(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_elem_read	./src/control/control_ext.c	/^static int snd_ctl_ext_elem_read(snd_ctl_t *handle, snd_ctl_elem_value_t *control)$/;"	f	file:
snd_ctl_ext_elem_remove	./src/control/control_ext.c	/^static int snd_ctl_ext_elem_remove(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_elem_replace	./src/control/control_ext.c	/^static int snd_ctl_ext_elem_replace(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_elem_unlock	./src/control/control_ext.c	/^static int snd_ctl_ext_elem_unlock(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_elem_write	./src/control/control_ext.c	/^static int snd_ctl_ext_elem_write(snd_ctl_t *handle, snd_ctl_elem_value_t *control)$/;"	f	file:
snd_ctl_ext_get_power_state	./src/control/control_ext.c	/^static int snd_ctl_ext_get_power_state(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_hwdep_info	./src/control/control_ext.c	/^static int snd_ctl_ext_hwdep_info(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_key_t	./include/control_external.h	/^typedef unsigned long snd_ctl_ext_key_t;$/;"	t
snd_ctl_ext_next_device	./src/control/control_ext.c	/^static int snd_ctl_ext_next_device(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_nonblock	./src/control/control_ext.c	/^static int snd_ctl_ext_nonblock(snd_ctl_t *handle, int nonblock)$/;"	f	file:
snd_ctl_ext_ops	./src/control/control_ext.c	/^static const snd_ctl_ops_t snd_ctl_ext_ops = {$/;"	v	file:
snd_ctl_ext_pcm_info	./src/control/control_ext.c	/^static int snd_ctl_ext_pcm_info(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_poll_descriptors	./src/control/control_ext.c	/^static int snd_ctl_ext_poll_descriptors(snd_ctl_t *handle, struct pollfd *pfds, unsigned int space)$/;"	f	file:
snd_ctl_ext_poll_descriptors_count	./src/control/control_ext.c	/^static int snd_ctl_ext_poll_descriptors_count(snd_ctl_t *handle)$/;"	f	file:
snd_ctl_ext_poll_revents	./src/control/control_ext.c	/^static int snd_ctl_ext_poll_revents(snd_ctl_t *handle, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f	file:
snd_ctl_ext_prefer_subdevice	./src/control/control_ext.c	/^static int snd_ctl_ext_prefer_subdevice(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_rawmidi_info	./src/control/control_ext.c	/^static int snd_ctl_ext_rawmidi_info(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_read	./src/control/control_ext.c	/^static int snd_ctl_ext_read(snd_ctl_t *handle, snd_ctl_event_t *event)$/;"	f	file:
snd_ctl_ext_set_power_state	./src/control/control_ext.c	/^static int snd_ctl_ext_set_power_state(snd_ctl_t *handle ATTRIBUTE_UNUSED,$/;"	f	file:
snd_ctl_ext_subscribe_events	./src/control/control_ext.c	/^static int snd_ctl_ext_subscribe_events(snd_ctl_t *handle, int subscribe)$/;"	f	file:
snd_ctl_ext_t	./include/control_external.h	/^typedef struct snd_ctl_ext snd_ctl_ext_t;$/;"	t	typeref:struct:snd_ctl_ext
snd_ctl_get_dB_range	./src/control/tlv.c	/^int snd_ctl_get_dB_range(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id,$/;"	f
snd_ctl_get_power_state	./src/control/control.c	/^int snd_ctl_get_power_state(snd_ctl_t *ctl, unsigned int *state)$/;"	f
snd_ctl_hw_async	./src/control/control_hw.c	/^static int snd_ctl_hw_async(snd_ctl_t *ctl, int sig, pid_t pid)$/;"	f	file:
snd_ctl_hw_card_info	./src/control/control_hw.c	/^static int snd_ctl_hw_card_info(snd_ctl_t *handle, snd_ctl_card_info_t *info)$/;"	f	file:
snd_ctl_hw_close	./src/control/control_hw.c	/^static int snd_ctl_hw_close(snd_ctl_t *handle)$/;"	f	file:
snd_ctl_hw_elem_add	./src/control/control_hw.c	/^static int snd_ctl_hw_elem_add(snd_ctl_t *handle, snd_ctl_elem_info_t *info)$/;"	f	file:
snd_ctl_hw_elem_info	./src/control/control_hw.c	/^static int snd_ctl_hw_elem_info(snd_ctl_t *handle, snd_ctl_elem_info_t *info)$/;"	f	file:
snd_ctl_hw_elem_list	./src/control/control_hw.c	/^static int snd_ctl_hw_elem_list(snd_ctl_t *handle, snd_ctl_elem_list_t *list)$/;"	f	file:
snd_ctl_hw_elem_lock	./src/control/control_hw.c	/^static int snd_ctl_hw_elem_lock(snd_ctl_t *handle, snd_ctl_elem_id_t *id)$/;"	f	file:
snd_ctl_hw_elem_read	./src/control/control_hw.c	/^static int snd_ctl_hw_elem_read(snd_ctl_t *handle, snd_ctl_elem_value_t *control)$/;"	f	file:
snd_ctl_hw_elem_remove	./src/control/control_hw.c	/^static int snd_ctl_hw_elem_remove(snd_ctl_t *handle, snd_ctl_elem_id_t *id)$/;"	f	file:
snd_ctl_hw_elem_replace	./src/control/control_hw.c	/^static int snd_ctl_hw_elem_replace(snd_ctl_t *handle, snd_ctl_elem_info_t *info)$/;"	f	file:
snd_ctl_hw_elem_tlv	./src/control/control_hw.c	/^static int snd_ctl_hw_elem_tlv(snd_ctl_t *handle, int op_flag,$/;"	f	file:
snd_ctl_hw_elem_unlock	./src/control/control_hw.c	/^static int snd_ctl_hw_elem_unlock(snd_ctl_t *handle, snd_ctl_elem_id_t *id)$/;"	f	file:
snd_ctl_hw_elem_write	./src/control/control_hw.c	/^static int snd_ctl_hw_elem_write(snd_ctl_t *handle, snd_ctl_elem_value_t *control)$/;"	f	file:
snd_ctl_hw_get_power_state	./src/control/control_hw.c	/^static int snd_ctl_hw_get_power_state(snd_ctl_t *handle, unsigned int *state)$/;"	f	file:
snd_ctl_hw_hwdep_info	./src/control/control_hw.c	/^static int snd_ctl_hw_hwdep_info(snd_ctl_t *handle, snd_hwdep_info_t * info)$/;"	f	file:
snd_ctl_hw_hwdep_next_device	./src/control/control_hw.c	/^static int snd_ctl_hw_hwdep_next_device(snd_ctl_t *handle, int * device)$/;"	f	file:
snd_ctl_hw_nonblock	./src/control/control_hw.c	/^static int snd_ctl_hw_nonblock(snd_ctl_t *handle, int nonblock)$/;"	f	file:
snd_ctl_hw_open	./src/control/control_hw.c	/^int snd_ctl_hw_open(snd_ctl_t **handle, const char *name, int card, int mode)$/;"	f
snd_ctl_hw_ops	./src/control/control_hw.c	/^static const snd_ctl_ops_t snd_ctl_hw_ops = {$/;"	v	file:
snd_ctl_hw_pcm_info	./src/control/control_hw.c	/^static int snd_ctl_hw_pcm_info(snd_ctl_t *handle, snd_pcm_info_t * info)$/;"	f	file:
snd_ctl_hw_pcm_next_device	./src/control/control_hw.c	/^static int snd_ctl_hw_pcm_next_device(snd_ctl_t *handle, int * device)$/;"	f	file:
snd_ctl_hw_pcm_prefer_subdevice	./src/control/control_hw.c	/^static int snd_ctl_hw_pcm_prefer_subdevice(snd_ctl_t *handle, int subdev)$/;"	f	file:
snd_ctl_hw_rawmidi_info	./src/control/control_hw.c	/^static int snd_ctl_hw_rawmidi_info(snd_ctl_t *handle, snd_rawmidi_info_t * info)$/;"	f	file:
snd_ctl_hw_rawmidi_next_device	./src/control/control_hw.c	/^static int snd_ctl_hw_rawmidi_next_device(snd_ctl_t *handle, int * device)$/;"	f	file:
snd_ctl_hw_rawmidi_prefer_subdevice	./src/control/control_hw.c	/^static int snd_ctl_hw_rawmidi_prefer_subdevice(snd_ctl_t *handle, int subdev)$/;"	f	file:
snd_ctl_hw_read	./src/control/control_hw.c	/^static int snd_ctl_hw_read(snd_ctl_t *handle, snd_ctl_event_t *event)$/;"	f	file:
snd_ctl_hw_set_power_state	./src/control/control_hw.c	/^static int snd_ctl_hw_set_power_state(snd_ctl_t *handle, unsigned int state)$/;"	f	file:
snd_ctl_hw_subscribe_events	./src/control/control_hw.c	/^static int snd_ctl_hw_subscribe_events(snd_ctl_t *handle, int subscribe)$/;"	f	file:
snd_ctl_hw_t	./src/control/control_hw.c	/^} snd_ctl_hw_t;$/;"	t	typeref:struct:__anon95	file:
snd_ctl_hwdep_info	./src/control/control.c	/^int snd_ctl_hwdep_info(snd_ctl_t *ctl, snd_hwdep_info_t * info)$/;"	f
snd_ctl_hwdep_next_device	./src/control/control.c	/^int snd_ctl_hwdep_next_device(snd_ctl_t *ctl, int *device)$/;"	f
snd_ctl_name	./src/control/control.c	/^const char *snd_ctl_name(snd_ctl_t *ctl)$/;"	f
snd_ctl_new	./src/control/control.c	/^int snd_ctl_new(snd_ctl_t **ctlp, snd_ctl_type_t type, const char *name)$/;"	f
snd_ctl_new	./src/control/control_local.h	93;"	d
snd_ctl_nonblock	./src/control/control.c	/^int snd_ctl_nonblock(snd_ctl_t *ctl, int nonblock)$/;"	f
snd_ctl_open	./src/control/control.c	/^int snd_ctl_open(snd_ctl_t **ctlp, const char *name, int mode)$/;"	f
snd_ctl_open_conf	./src/control/control.c	/^static int snd_ctl_open_conf(snd_ctl_t **ctlp, const char *name,$/;"	f	file:
snd_ctl_open_lconf	./src/control/control.c	/^int snd_ctl_open_lconf(snd_ctl_t **ctlp, const char *name,$/;"	f
snd_ctl_open_noupdate	./src/control/control.c	/^static int snd_ctl_open_noupdate(snd_ctl_t **ctlp, snd_config_t *root, const char *name, int mode)$/;"	f	file:
snd_ctl_ops_t	./src/control/control_local.h	/^} snd_ctl_ops_t;$/;"	t	typeref:struct:_snd_ctl_ops
snd_ctl_pcm_info	./src/control/control.c	/^int snd_ctl_pcm_info(snd_ctl_t *ctl, snd_pcm_info_t * info)$/;"	f
snd_ctl_pcm_next_device	./src/control/control.c	/^int snd_ctl_pcm_next_device(snd_ctl_t *ctl, int * device)$/;"	f
snd_ctl_pcm_prefer_subdevice	./src/control/control.c	/^int snd_ctl_pcm_prefer_subdevice(snd_ctl_t *ctl, int subdev)$/;"	f
snd_ctl_poll_descriptors	./src/control/control.c	/^int snd_ctl_poll_descriptors(snd_ctl_t *ctl, struct pollfd *pfds, unsigned int space)$/;"	f
snd_ctl_poll_descriptors_count	./src/control/control.c	/^int snd_ctl_poll_descriptors_count(snd_ctl_t *ctl)$/;"	f
snd_ctl_poll_descriptors_revents	./src/control/control.c	/^int snd_ctl_poll_descriptors_revents(snd_ctl_t *ctl, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f
snd_ctl_rawmidi_info	./src/control/control.c	/^int snd_ctl_rawmidi_info(snd_ctl_t *ctl, snd_rawmidi_info_t * info)$/;"	f
snd_ctl_rawmidi_next_device	./src/control/control.c	/^int snd_ctl_rawmidi_next_device(snd_ctl_t *ctl, int * device)$/;"	f
snd_ctl_rawmidi_prefer_subdevice	./src/control/control.c	/^int snd_ctl_rawmidi_prefer_subdevice(snd_ctl_t *ctl, int subdev)$/;"	f
snd_ctl_read	./src/control/control.c	/^int snd_ctl_read(snd_ctl_t *ctl, snd_ctl_event_t *event)$/;"	f
snd_ctl_set_power_state	./src/control/control.c	/^int snd_ctl_set_power_state(snd_ctl_t *ctl, unsigned int state)$/;"	f
snd_ctl_shm_action	./src/control/control_shm.c	/^static int snd_ctl_shm_action(snd_ctl_t *ctl)$/;"	f	file:
snd_ctl_shm_action_fd	./src/control/control_shm.c	/^static int snd_ctl_shm_action_fd(snd_ctl_t *ctl, int *fd)$/;"	f	file:
snd_ctl_shm_async	./src/control/control_shm.c	/^static int snd_ctl_shm_async(snd_ctl_t *ctl, int sig, pid_t pid)$/;"	f	file:
snd_ctl_shm_card_info	./src/control/control_shm.c	/^static int snd_ctl_shm_card_info(snd_ctl_t *ctl, snd_ctl_card_info_t *info)$/;"	f	file:
snd_ctl_shm_close	./src/control/control_shm.c	/^static int snd_ctl_shm_close(snd_ctl_t *ctl)$/;"	f	file:
snd_ctl_shm_ctrl_t	./include/aserver.h	/^} snd_ctl_shm_ctrl_t;$/;"	t	typeref:struct:__anon64
snd_ctl_shm_elem_info	./src/control/control_shm.c	/^static int snd_ctl_shm_elem_info(snd_ctl_t *ctl, snd_ctl_elem_info_t *info)$/;"	f	file:
snd_ctl_shm_elem_list	./src/control/control_shm.c	/^static int snd_ctl_shm_elem_list(snd_ctl_t *ctl, snd_ctl_elem_list_t *list)$/;"	f	file:
snd_ctl_shm_elem_lock	./src/control/control_shm.c	/^static int snd_ctl_shm_elem_lock(snd_ctl_t *ctl, snd_ctl_elem_id_t *id)$/;"	f	file:
snd_ctl_shm_elem_read	./src/control/control_shm.c	/^static int snd_ctl_shm_elem_read(snd_ctl_t *ctl, snd_ctl_elem_value_t *control)$/;"	f	file:
snd_ctl_shm_elem_unlock	./src/control/control_shm.c	/^static int snd_ctl_shm_elem_unlock(snd_ctl_t *ctl, snd_ctl_elem_id_t *id)$/;"	f	file:
snd_ctl_shm_elem_write	./src/control/control_shm.c	/^static int snd_ctl_shm_elem_write(snd_ctl_t *ctl, snd_ctl_elem_value_t *control)$/;"	f	file:
snd_ctl_shm_get_power_state	./src/control/control_shm.c	/^static int snd_ctl_shm_get_power_state(snd_ctl_t *ctl, unsigned int *state)$/;"	f	file:
snd_ctl_shm_hwdep_info	./src/control/control_shm.c	/^static int snd_ctl_shm_hwdep_info(snd_ctl_t *ctl, snd_hwdep_info_t * info)$/;"	f	file:
snd_ctl_shm_hwdep_next_device	./src/control/control_shm.c	/^static int snd_ctl_shm_hwdep_next_device(snd_ctl_t *ctl, int * device)$/;"	f	file:
snd_ctl_shm_nonblock	./src/control/control_shm.c	/^static int snd_ctl_shm_nonblock(snd_ctl_t *handle ATTRIBUTE_UNUSED, int nonblock ATTRIBUTE_UNUSED)$/;"	f	file:
snd_ctl_shm_open	./src/control/control_shm.c	/^int snd_ctl_shm_open(snd_ctl_t **handlep, const char *name, const char *sockname, const char *sname, int mode)$/;"	f
snd_ctl_shm_ops	./src/control/control_shm.c	/^static const snd_ctl_ops_t snd_ctl_shm_ops = {$/;"	v	file:
snd_ctl_shm_pcm_info	./src/control/control_shm.c	/^static int snd_ctl_shm_pcm_info(snd_ctl_t *ctl, snd_pcm_info_t * info)$/;"	f	file:
snd_ctl_shm_pcm_next_device	./src/control/control_shm.c	/^static int snd_ctl_shm_pcm_next_device(snd_ctl_t *ctl, int * device)$/;"	f	file:
snd_ctl_shm_pcm_prefer_subdevice	./src/control/control_shm.c	/^static int snd_ctl_shm_pcm_prefer_subdevice(snd_ctl_t *ctl, int subdev)$/;"	f	file:
snd_ctl_shm_poll_descriptor	./src/control/control_shm.c	/^static int snd_ctl_shm_poll_descriptor(snd_ctl_t *ctl)$/;"	f	file:
snd_ctl_shm_rawmidi_info	./src/control/control_shm.c	/^static int snd_ctl_shm_rawmidi_info(snd_ctl_t *ctl, snd_rawmidi_info_t * info)$/;"	f	file:
snd_ctl_shm_rawmidi_next_device	./src/control/control_shm.c	/^static int snd_ctl_shm_rawmidi_next_device(snd_ctl_t *ctl, int * device)$/;"	f	file:
snd_ctl_shm_rawmidi_prefer_subdevice	./src/control/control_shm.c	/^static int snd_ctl_shm_rawmidi_prefer_subdevice(snd_ctl_t *ctl, int subdev)$/;"	f	file:
snd_ctl_shm_read	./src/control/control_shm.c	/^static int snd_ctl_shm_read(snd_ctl_t *ctl, snd_ctl_event_t *event)$/;"	f	file:
snd_ctl_shm_set_power_state	./src/control/control_shm.c	/^static int snd_ctl_shm_set_power_state(snd_ctl_t *ctl, unsigned int state)$/;"	f	file:
snd_ctl_shm_subscribe_events	./src/control/control_shm.c	/^static int snd_ctl_shm_subscribe_events(snd_ctl_t *ctl, int subscribe)$/;"	f	file:
snd_ctl_shm_t	./src/control/control_shm.c	/^} snd_ctl_shm_t;$/;"	t	typeref:struct:__anon94	file:
snd_ctl_subscribe_events	./src/control/control.c	/^int snd_ctl_subscribe_events(snd_ctl_t *ctl, int subscribe)$/;"	f
snd_ctl_t	./include/control.h	/^typedef struct _snd_ctl snd_ctl_t;$/;"	t	typeref:struct:_snd_ctl
snd_ctl_tlv_do	./src/control/control.c	/^static int snd_ctl_tlv_do(snd_ctl_t *ctl, int op_flag,$/;"	f	file:
snd_ctl_type	./src/control/control.c	/^snd_ctl_type_t snd_ctl_type(snd_ctl_t *ctl)$/;"	f
snd_ctl_type_t	./include/control.h	/^} snd_ctl_type_t;$/;"	t	typeref:enum:_snd_ctl_type
snd_ctl_wait	./src/control/control.c	/^int snd_ctl_wait(snd_ctl_t *ctl, int timeout)$/;"	f
snd_determine_driver	./src/confmisc.c	/^int snd_determine_driver(int card, char **driver)$/;"	f
snd_dev_type_t	./include/aserver.h	/^} snd_dev_type_t;$/;"	t	typeref:enum:_snd_dev_type
snd_device_name_free_hint	./src/control/namehint.c	/^int snd_device_name_free_hint(void **hints)$/;"	f
snd_device_name_get_hint	./src/control/namehint.c	/^char *snd_device_name_get_hint(const void *hint, const char *id)$/;"	f
snd_device_name_hint	./src/control/namehint.c	/^int snd_device_name_hint(int card, const char *iface, void ***hints)$/;"	f
snd_devname	./include/conf.h	/^struct snd_devname {$/;"	s
snd_devname_t	./include/conf.h	/^typedef struct snd_devname snd_devname_t;$/;"	t	typeref:struct:snd_devname
snd_dlclose	./src/dlmisc.c	/^int snd_dlclose(void *handle)$/;"	f
snd_dlobj_cache_cleanup	./include/local.h	261;"	d
snd_dlobj_cache_cleanup	./src/dlmisc.c	/^void snd_dlobj_cache_cleanup(void)$/;"	f
snd_dlobj_cache_get	./include/local.h	257;"	d
snd_dlobj_cache_get	./src/dlmisc.c	/^void *snd_dlobj_cache_get(const char *lib, const char *name,$/;"	f
snd_dlobj_cache_put	./include/local.h	259;"	d
snd_dlobj_cache_put	./src/dlmisc.c	/^int snd_dlobj_cache_put(void *func)$/;"	f
snd_dlobj_lock	./src/dlmisc.c	/^static inline void snd_dlobj_lock(void) {}$/;"	f	file:
snd_dlobj_lock	./src/dlmisc.c	/^static inline void snd_dlobj_lock(void)$/;"	f	file:
snd_dlobj_mutex	./src/dlmisc.c	/^static pthread_mutex_t snd_dlobj_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
snd_dlobj_unlock	./src/dlmisc.c	/^static inline void snd_dlobj_unlock(void) {}$/;"	f	file:
snd_dlobj_unlock	./src/dlmisc.c	/^static inline void snd_dlobj_unlock(void)$/;"	f	file:
snd_dlopen	./src/dlmisc.c	/^void *snd_dlopen(const char *name, int mode)$/;"	f
snd_dlsym	./src/dlmisc.c	/^void *snd_dlsym(void *handle, const char *name, const char *version)$/;"	f
snd_dlsym_link	./include/global.h	/^struct snd_dlsym_link {$/;"	s
snd_dlsym_start	./src/dlmisc.c	/^struct snd_dlsym_link *snd_dlsym_start = NULL;$/;"	v	typeref:struct:snd_dlsym_link
snd_dlsym_verify	./src/dlmisc.c	/^static int snd_dlsym_verify(void *handle, const char *name, const char *version)$/;"	f	file:
snd_dm_fm_info	./include/sound/asound_fm.h	/^struct snd_dm_fm_info {$/;"	s
snd_dm_fm_note	./include/sound/asound_fm.h	/^struct snd_dm_fm_note {$/;"	s
snd_dm_fm_params	./include/sound/asound_fm.h	/^struct snd_dm_fm_params {$/;"	s
snd_dm_fm_voice	./include/sound/asound_fm.h	/^struct snd_dm_fm_voice {$/;"	s
snd_err_msg	./src/error.c	/^snd_lib_error_handler_t snd_err_msg = snd_err_msg_default;$/;"	v
snd_err_msg_default	./src/error.c	/^static void snd_err_msg_default(const char *file, int line, const char *function, int err, const char *fmt, ...)$/;"	f	file:
snd_error_codes	./src/error.c	/^static const char *snd_error_codes[] =$/;"	v	file:
snd_ext_parm	./src/pcm/pcm_ext_parm.h	/^struct snd_ext_parm {$/;"	s
snd_ext_parm_clear	./src/pcm/pcm_ext_parm.h	27;"	d
snd_ext_parm_clear	./src/pcm/pcm_extplug.c	/^void snd_ext_parm_clear(struct snd_ext_parm *parm)$/;"	f
snd_ext_parm_interval_refine	./src/pcm/pcm_ext_parm.h	31;"	d
snd_ext_parm_interval_refine	./src/pcm/pcm_extplug.c	/^int snd_ext_parm_interval_refine(snd_interval_t *ival, struct snd_ext_parm *parm, int type)$/;"	f
snd_ext_parm_mask_refine	./src/pcm/pcm_ext_parm.h	33;"	d
snd_ext_parm_mask_refine	./src/pcm/pcm_extplug.c	/^int snd_ext_parm_mask_refine(snd_mask_t *mask, struct snd_ext_parm *parm, int type)$/;"	f
snd_ext_parm_set_list	./src/pcm/pcm_ext_parm.h	25;"	d
snd_ext_parm_set_list	./src/pcm/pcm_extplug.c	/^int snd_ext_parm_set_list(struct snd_ext_parm *parm, unsigned int num_list, const unsigned int *list)$/;"	f
snd_ext_parm_set_minmax	./src/pcm/pcm_ext_parm.h	23;"	d
snd_ext_parm_set_minmax	./src/pcm/pcm_extplug.c	/^int snd_ext_parm_set_minmax(struct snd_ext_parm *parm, unsigned int min, unsigned int max)$/;"	f
snd_func_card_driver	./src/confmisc.c	/^int snd_func_card_driver(snd_config_t **dst, snd_config_t *root, snd_config_t *src,$/;"	f
snd_func_card_id	./src/confmisc.c	/^int snd_func_card_id(snd_config_t **dst, snd_config_t *root, snd_config_t *src,$/;"	f
snd_func_card_inum	./src/confmisc.c	/^int snd_func_card_inum(snd_config_t **dst, snd_config_t *root, snd_config_t *src,$/;"	f
snd_func_card_name	./src/confmisc.c	/^int snd_func_card_name(snd_config_t **dst, snd_config_t *root,$/;"	f
snd_func_concat	./src/confmisc.c	/^int snd_func_concat(snd_config_t **dst, snd_config_t *root, snd_config_t *src,$/;"	f
snd_func_datadir	./src/confmisc.c	/^int snd_func_datadir(snd_config_t **dst, snd_config_t *root ATTRIBUTE_UNUSED,$/;"	f
snd_func_getenv	./src/confmisc.c	/^int snd_func_getenv(snd_config_t **dst, snd_config_t *root, snd_config_t *src,$/;"	f
snd_func_iadd	./src/confmisc.c	/^int snd_func_iadd(snd_config_t **dst, snd_config_t *root,$/;"	f
snd_func_igetenv	./src/confmisc.c	/^int snd_func_igetenv(snd_config_t **dst, snd_config_t *root, snd_config_t *src,$/;"	f
snd_func_imul	./src/confmisc.c	/^int snd_func_imul(snd_config_t **dst, snd_config_t *root,$/;"	f
snd_func_iops	./src/confmisc.c	/^static int snd_func_iops(snd_config_t **dst,$/;"	f	file:
snd_func_pcm_args_by_class	./src/confmisc.c	/^int snd_func_pcm_args_by_class(snd_config_t **dst, snd_config_t *root, snd_config_t *src, void *private_data)$/;"	f
snd_func_pcm_id	./src/confmisc.c	/^int snd_func_pcm_id(snd_config_t **dst, snd_config_t *root, snd_config_t *src, void *private_data)$/;"	f
snd_func_private_card_driver	./src/confmisc.c	/^int snd_func_private_card_driver(snd_config_t **dst, snd_config_t *root ATTRIBUTE_UNUSED, snd_config_t *src,$/;"	f
snd_func_private_pcm_subdevice	./src/confmisc.c	/^int snd_func_private_pcm_subdevice(snd_config_t **dst, snd_config_t *root ATTRIBUTE_UNUSED,$/;"	f
snd_func_private_string	./src/confmisc.c	/^int snd_func_private_string(snd_config_t **dst, snd_config_t *root ATTRIBUTE_UNUSED,$/;"	f
snd_func_refer	./src/confmisc.c	/^int snd_func_refer(snd_config_t **dst, snd_config_t *root, snd_config_t *src,$/;"	f
snd_hctl_async	./src/control/hcontrol.c	/^int snd_hctl_async(snd_hctl_t *hctl, int sig, pid_t pid)$/;"	f
snd_hctl_callback_t	./include/control.h	/^typedef int (*snd_hctl_callback_t)(snd_hctl_t *hctl,$/;"	t
snd_hctl_close	./src/control/hcontrol.c	/^int snd_hctl_close(snd_hctl_t *hctl)$/;"	f
snd_hctl_compare_default	./src/control/hcontrol.c	/^static int snd_hctl_compare_default(const snd_hctl_elem_t *c1,$/;"	f	file:
snd_hctl_compare_fast	./src/control/hcontrol.c	/^int snd_hctl_compare_fast(const snd_hctl_elem_t *c1,$/;"	f
snd_hctl_compare_mixer_priority_lookup	./src/control/hcontrol.c	/^static int snd_hctl_compare_mixer_priority_lookup(const char **name, const char * const *names, int coef)$/;"	f	file:
snd_hctl_compare_t	./include/control.h	/^typedef int (*snd_hctl_compare_t)(const snd_hctl_elem_t *e1,$/;"	t
snd_hctl_ctl	./src/control/hcontrol.c	/^snd_ctl_t *snd_hctl_ctl(snd_hctl_t *hctl)$/;"	f
snd_hctl_elem_add	./src/control/hcontrol.c	/^static int snd_hctl_elem_add(snd_hctl_t *hctl, snd_hctl_elem_t *elem)$/;"	f	file:
snd_hctl_elem_callback_t	./include/control.h	/^typedef int (*snd_hctl_elem_callback_t)(snd_hctl_elem_t *elem,$/;"	t
snd_hctl_elem_get_callback_private	./src/control/hcontrol.c	/^void * snd_hctl_elem_get_callback_private(const snd_hctl_elem_t *obj)$/;"	f
snd_hctl_elem_get_device	./src/control/hcontrol.c	/^unsigned int snd_hctl_elem_get_device(const snd_hctl_elem_t *obj)$/;"	f
snd_hctl_elem_get_hctl	./src/control/hcontrol.c	/^snd_hctl_t *snd_hctl_elem_get_hctl(snd_hctl_elem_t *elem)$/;"	f
snd_hctl_elem_get_id	./src/control/hcontrol.c	/^void snd_hctl_elem_get_id(const snd_hctl_elem_t *obj, snd_ctl_elem_id_t *ptr)$/;"	f
snd_hctl_elem_get_index	./src/control/hcontrol.c	/^unsigned int snd_hctl_elem_get_index(const snd_hctl_elem_t *obj)$/;"	f
snd_hctl_elem_get_interface	./src/control/hcontrol.c	/^snd_ctl_elem_iface_t snd_hctl_elem_get_interface(const snd_hctl_elem_t *obj)$/;"	f
snd_hctl_elem_get_name	./src/control/hcontrol.c	/^const char *snd_hctl_elem_get_name(const snd_hctl_elem_t *obj)$/;"	f
snd_hctl_elem_get_numid	./src/control/hcontrol.c	/^unsigned int snd_hctl_elem_get_numid(const snd_hctl_elem_t *obj)$/;"	f
snd_hctl_elem_get_subdevice	./src/control/hcontrol.c	/^unsigned int snd_hctl_elem_get_subdevice(const snd_hctl_elem_t *obj)$/;"	f
snd_hctl_elem_info	./src/control/hcontrol.c	/^int snd_hctl_elem_info(snd_hctl_elem_t *elem, snd_ctl_elem_info_t *info)$/;"	f
snd_hctl_elem_next	./src/control/hcontrol.c	/^snd_hctl_elem_t *snd_hctl_elem_next(snd_hctl_elem_t *elem)$/;"	f
snd_hctl_elem_prev	./src/control/hcontrol.c	/^snd_hctl_elem_t *snd_hctl_elem_prev(snd_hctl_elem_t *elem)$/;"	f
snd_hctl_elem_read	./src/control/hcontrol.c	/^int snd_hctl_elem_read(snd_hctl_elem_t *elem, snd_ctl_elem_value_t * value)$/;"	f
snd_hctl_elem_remove	./src/control/hcontrol.c	/^static void snd_hctl_elem_remove(snd_hctl_t *hctl, unsigned int idx)$/;"	f	file:
snd_hctl_elem_set_callback	./src/control/hcontrol.c	/^void snd_hctl_elem_set_callback(snd_hctl_elem_t *obj, snd_hctl_elem_callback_t val)$/;"	f
snd_hctl_elem_set_callback_private	./src/control/hcontrol.c	/^void snd_hctl_elem_set_callback_private(snd_hctl_elem_t *obj, void * val)$/;"	f
snd_hctl_elem_t	./include/control.h	/^typedef struct _snd_hctl_elem snd_hctl_elem_t;$/;"	t	typeref:struct:_snd_hctl_elem
snd_hctl_elem_throw_event	./src/control/hcontrol.c	/^static int snd_hctl_elem_throw_event(snd_hctl_elem_t *elem,$/;"	f	file:
snd_hctl_elem_tlv_command	./src/control/hcontrol.c	/^int snd_hctl_elem_tlv_command(snd_hctl_elem_t *elem, const unsigned int *tlv)$/;"	f
snd_hctl_elem_tlv_read	./src/control/hcontrol.c	/^int snd_hctl_elem_tlv_read(snd_hctl_elem_t *elem, unsigned int *tlv, unsigned int tlv_size)$/;"	f
snd_hctl_elem_tlv_write	./src/control/hcontrol.c	/^int snd_hctl_elem_tlv_write(snd_hctl_elem_t *elem, const unsigned int *tlv)$/;"	f
snd_hctl_elem_write	./src/control/hcontrol.c	/^int snd_hctl_elem_write(snd_hctl_elem_t *elem, snd_ctl_elem_value_t * value)$/;"	f
snd_hctl_find_elem	./src/control/hcontrol.c	/^snd_hctl_elem_t *snd_hctl_find_elem(snd_hctl_t *hctl, const snd_ctl_elem_id_t *id)$/;"	f
snd_hctl_first_elem	./src/control/hcontrol.c	/^snd_hctl_elem_t *snd_hctl_first_elem(snd_hctl_t *hctl)$/;"	f
snd_hctl_free	./src/control/hcontrol.c	/^int snd_hctl_free(snd_hctl_t *hctl)$/;"	f
snd_hctl_get_callback_private	./src/control/hcontrol.c	/^void *snd_hctl_get_callback_private(snd_hctl_t *hctl)$/;"	f
snd_hctl_get_count	./src/control/hcontrol.c	/^unsigned int snd_hctl_get_count(snd_hctl_t *hctl)$/;"	f
snd_hctl_handle_event	./src/control/hcontrol.c	/^static int snd_hctl_handle_event(snd_hctl_t *hctl, snd_ctl_event_t *event)$/;"	f	file:
snd_hctl_handle_events	./src/control/hcontrol.c	/^int snd_hctl_handle_events(snd_hctl_t *hctl)$/;"	f
snd_hctl_last_elem	./src/control/hcontrol.c	/^snd_hctl_elem_t *snd_hctl_last_elem(snd_hctl_t *hctl)$/;"	f
snd_hctl_load	./src/control/hcontrol.c	/^int snd_hctl_load(snd_hctl_t *hctl)$/;"	f
snd_hctl_name	./src/control/hcontrol.c	/^const char *snd_hctl_name(snd_hctl_t *hctl)$/;"	f
snd_hctl_nonblock	./src/control/hcontrol.c	/^int snd_hctl_nonblock(snd_hctl_t *hctl, int nonblock)$/;"	f
snd_hctl_open	./src/control/hcontrol.c	/^int snd_hctl_open(snd_hctl_t **hctlp, const char *name, int mode)$/;"	f
snd_hctl_open_ctl	./src/control/hcontrol.c	/^int snd_hctl_open_ctl(snd_hctl_t **hctlp, snd_ctl_t *ctl)$/;"	f
snd_hctl_poll_descriptors	./src/control/hcontrol.c	/^int snd_hctl_poll_descriptors(snd_hctl_t *hctl, struct pollfd *pfds, unsigned int space)$/;"	f
snd_hctl_poll_descriptors_count	./src/control/hcontrol.c	/^int snd_hctl_poll_descriptors_count(snd_hctl_t *hctl)$/;"	f
snd_hctl_poll_descriptors_revents	./src/control/hcontrol.c	/^int snd_hctl_poll_descriptors_revents(snd_hctl_t *hctl, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f
snd_hctl_set_callback	./src/control/hcontrol.c	/^void snd_hctl_set_callback(snd_hctl_t *hctl, snd_hctl_callback_t callback)$/;"	f
snd_hctl_set_callback_private	./src/control/hcontrol.c	/^void snd_hctl_set_callback_private(snd_hctl_t *hctl, void *callback_private)$/;"	f
snd_hctl_set_compare	./src/control/hcontrol.c	/^int snd_hctl_set_compare(snd_hctl_t *hctl, snd_hctl_compare_t compare)$/;"	f
snd_hctl_sort	./src/control/hcontrol.c	/^static void snd_hctl_sort(snd_hctl_t *hctl)$/;"	f	file:
snd_hctl_t	./include/control.h	/^typedef struct _snd_hctl snd_hctl_t;$/;"	t	typeref:struct:_snd_hctl
snd_hctl_throw_event	./src/control/hcontrol.c	/^static int snd_hctl_throw_event(snd_hctl_t *hctl, unsigned int mask,$/;"	f	file:
snd_hctl_wait	./src/control/hcontrol.c	/^int snd_hctl_wait(snd_hctl_t *hctl, int timeout)$/;"	f
snd_hdspm_channelfader_t	./include/sound/hdspm.h	/^typedef struct hdspm_channelfader snd_hdspm_channelfader_t;$/;"	t	typeref:struct:hdspm_channelfader
snd_htimestamp_t	./include/global.h	/^typedef struct timespec snd_htimestamp_t;$/;"	t	typeref:struct:timespec
snd_hwdep_close	./src/hwdep/hwdep.c	/^int snd_hwdep_close(snd_hwdep_t *hwdep)$/;"	f
snd_hwdep_dsp_image_alloca	./include/hwdep.h	138;"	d
snd_hwdep_dsp_image_copy	./src/hwdep/hwdep.c	/^void snd_hwdep_dsp_image_copy(snd_hwdep_dsp_image_t *dst, const snd_hwdep_dsp_image_t *src)$/;"	f
snd_hwdep_dsp_image_free	./src/hwdep/hwdep.c	/^void snd_hwdep_dsp_image_free(snd_hwdep_dsp_image_t *info)$/;"	f
snd_hwdep_dsp_image_get_image	./src/hwdep/hwdep.c	/^const void *snd_hwdep_dsp_image_get_image(const snd_hwdep_dsp_image_t *obj)$/;"	f
snd_hwdep_dsp_image_get_index	./src/hwdep/hwdep.c	/^unsigned int snd_hwdep_dsp_image_get_index(const snd_hwdep_dsp_image_t *obj)$/;"	f
snd_hwdep_dsp_image_get_length	./src/hwdep/hwdep.c	/^size_t snd_hwdep_dsp_image_get_length(const snd_hwdep_dsp_image_t *obj)$/;"	f
snd_hwdep_dsp_image_get_name	./src/hwdep/hwdep.c	/^const char *snd_hwdep_dsp_image_get_name(const snd_hwdep_dsp_image_t *obj)$/;"	f
snd_hwdep_dsp_image_malloc	./src/hwdep/hwdep.c	/^int snd_hwdep_dsp_image_malloc(snd_hwdep_dsp_image_t **info)$/;"	f
snd_hwdep_dsp_image_set_image	./src/hwdep/hwdep.c	/^void snd_hwdep_dsp_image_set_image(snd_hwdep_dsp_image_t *obj, void *image)$/;"	f
snd_hwdep_dsp_image_set_index	./src/hwdep/hwdep.c	/^void snd_hwdep_dsp_image_set_index(snd_hwdep_dsp_image_t *obj, unsigned int index)$/;"	f
snd_hwdep_dsp_image_set_length	./src/hwdep/hwdep.c	/^void snd_hwdep_dsp_image_set_length(snd_hwdep_dsp_image_t *obj, size_t length)$/;"	f
snd_hwdep_dsp_image_set_name	./src/hwdep/hwdep.c	/^void snd_hwdep_dsp_image_set_name(snd_hwdep_dsp_image_t *obj, const char *name)$/;"	f
snd_hwdep_dsp_image_sizeof	./src/hwdep/hwdep.c	/^size_t snd_hwdep_dsp_image_sizeof()$/;"	f
snd_hwdep_dsp_image_t	./include/hwdep.h	/^typedef struct _snd_hwdep_dsp_image snd_hwdep_dsp_image_t;$/;"	t	typeref:struct:_snd_hwdep_dsp_image
snd_hwdep_dsp_load	./src/hwdep/hwdep.c	/^int snd_hwdep_dsp_load(snd_hwdep_t *hwdep, snd_hwdep_dsp_image_t *block)$/;"	f
snd_hwdep_dsp_status	./src/hwdep/hwdep.c	/^int snd_hwdep_dsp_status(snd_hwdep_t *hwdep, snd_hwdep_dsp_status_t *info)$/;"	f
snd_hwdep_dsp_status_alloca	./include/hwdep.h	125;"	d
snd_hwdep_dsp_status_copy	./src/hwdep/hwdep.c	/^void snd_hwdep_dsp_status_copy(snd_hwdep_dsp_status_t *dst, const snd_hwdep_dsp_status_t *src)$/;"	f
snd_hwdep_dsp_status_free	./src/hwdep/hwdep.c	/^void snd_hwdep_dsp_status_free(snd_hwdep_dsp_status_t *info)$/;"	f
snd_hwdep_dsp_status_get_chip_ready	./src/hwdep/hwdep.c	/^unsigned int snd_hwdep_dsp_status_get_chip_ready(const snd_hwdep_dsp_status_t *obj)$/;"	f
snd_hwdep_dsp_status_get_dsp_loaded	./src/hwdep/hwdep.c	/^unsigned int snd_hwdep_dsp_status_get_dsp_loaded(const snd_hwdep_dsp_status_t *info)$/;"	f
snd_hwdep_dsp_status_get_id	./src/hwdep/hwdep.c	/^const char *snd_hwdep_dsp_status_get_id(const snd_hwdep_dsp_status_t *obj)$/;"	f
snd_hwdep_dsp_status_get_num_dsps	./src/hwdep/hwdep.c	/^unsigned int snd_hwdep_dsp_status_get_num_dsps(const snd_hwdep_dsp_status_t *obj)$/;"	f
snd_hwdep_dsp_status_get_version	./src/hwdep/hwdep.c	/^unsigned int snd_hwdep_dsp_status_get_version(const snd_hwdep_dsp_status_t *obj)$/;"	f
snd_hwdep_dsp_status_malloc	./src/hwdep/hwdep.c	/^int snd_hwdep_dsp_status_malloc(snd_hwdep_dsp_status_t **info)$/;"	f
snd_hwdep_dsp_status_sizeof	./src/hwdep/hwdep.c	/^size_t snd_hwdep_dsp_status_sizeof()$/;"	f
snd_hwdep_dsp_status_t	./include/hwdep.h	/^typedef struct _snd_hwdep_dsp_status snd_hwdep_dsp_status_t;$/;"	t	typeref:struct:_snd_hwdep_dsp_status
snd_hwdep_hw_close	./src/hwdep/hwdep_hw.c	/^static int snd_hwdep_hw_close(snd_hwdep_t *hwdep)$/;"	f	file:
snd_hwdep_hw_info	./src/hwdep/hwdep_hw.c	/^static int snd_hwdep_hw_info(snd_hwdep_t *hwdep, snd_hwdep_info_t *info)$/;"	f	file:
snd_hwdep_hw_ioctl	./src/hwdep/hwdep_hw.c	/^static int snd_hwdep_hw_ioctl(snd_hwdep_t *hwdep, unsigned int request, void * arg)$/;"	f	file:
snd_hwdep_hw_nonblock	./src/hwdep/hwdep_hw.c	/^static int snd_hwdep_hw_nonblock(snd_hwdep_t *hwdep, int nonblock)$/;"	f	file:
snd_hwdep_hw_open	./src/hwdep/hwdep_hw.c	/^int snd_hwdep_hw_open(snd_hwdep_t **handle, const char *name, int card, int device, int mode)$/;"	f
snd_hwdep_hw_ops	./src/hwdep/hwdep_hw.c	/^static const snd_hwdep_ops_t snd_hwdep_hw_ops = {$/;"	v	file:
snd_hwdep_hw_read	./src/hwdep/hwdep_hw.c	/^static ssize_t snd_hwdep_hw_read(snd_hwdep_t *hwdep, void *buffer, size_t size)$/;"	f	file:
snd_hwdep_hw_write	./src/hwdep/hwdep_hw.c	/^static ssize_t snd_hwdep_hw_write(snd_hwdep_t *hwdep, const void *buffer, size_t size)$/;"	f	file:
snd_hwdep_iface_t	./include/hwdep.h	/^} snd_hwdep_iface_t;$/;"	t	typeref:enum:_snd_hwdep_iface
snd_hwdep_info	./src/hwdep/hwdep.c	/^int snd_hwdep_info(snd_hwdep_t *hwdep, snd_hwdep_info_t * info)$/;"	f
snd_hwdep_info_alloca	./include/hwdep.h	111;"	d
snd_hwdep_info_copy	./src/hwdep/hwdep.c	/^void snd_hwdep_info_copy(snd_hwdep_info_t *dst, const snd_hwdep_info_t *src)$/;"	f
snd_hwdep_info_free	./src/hwdep/hwdep.c	/^void snd_hwdep_info_free(snd_hwdep_info_t *info)$/;"	f
snd_hwdep_info_get_card	./src/hwdep/hwdep.c	/^int snd_hwdep_info_get_card(const snd_hwdep_info_t *obj)$/;"	f
snd_hwdep_info_get_device	./src/hwdep/hwdep.c	/^unsigned int snd_hwdep_info_get_device(const snd_hwdep_info_t *info)$/;"	f
snd_hwdep_info_get_id	./src/hwdep/hwdep.c	/^const char *snd_hwdep_info_get_id(const snd_hwdep_info_t *obj)$/;"	f
snd_hwdep_info_get_iface	./src/hwdep/hwdep.c	/^snd_hwdep_iface_t snd_hwdep_info_get_iface(const snd_hwdep_info_t *obj)$/;"	f
snd_hwdep_info_get_name	./src/hwdep/hwdep.c	/^const char *snd_hwdep_info_get_name(const snd_hwdep_info_t *obj)$/;"	f
snd_hwdep_info_malloc	./src/hwdep/hwdep.c	/^int snd_hwdep_info_malloc(snd_hwdep_info_t **info)$/;"	f
snd_hwdep_info_set_device	./src/hwdep/hwdep.c	/^void snd_hwdep_info_set_device(snd_hwdep_info_t *obj, unsigned int val)$/;"	f
snd_hwdep_info_sizeof	./src/hwdep/hwdep.c	/^size_t snd_hwdep_info_sizeof()$/;"	f
snd_hwdep_info_t	./include/hwdep.h	/^typedef struct _snd_hwdep_info snd_hwdep_info_t;$/;"	t	typeref:struct:_snd_hwdep_info
snd_hwdep_ioctl	./src/hwdep/hwdep.c	/^int snd_hwdep_ioctl(snd_hwdep_t *hwdep, unsigned int request, void * arg)$/;"	f
snd_hwdep_name	./src/hwdep/hwdep.c	/^const char *snd_hwdep_name(snd_hwdep_t *hwdep)$/;"	f
snd_hwdep_nonblock	./src/hwdep/hwdep.c	/^int snd_hwdep_nonblock(snd_hwdep_t *hwdep, int nonblock)$/;"	f
snd_hwdep_open	./src/hwdep/hwdep.c	/^int snd_hwdep_open(snd_hwdep_t **hwdep, const char *name, int mode)$/;"	f
snd_hwdep_open_conf	./src/hwdep/hwdep.c	/^static int snd_hwdep_open_conf(snd_hwdep_t **hwdep,$/;"	f	file:
snd_hwdep_open_lconf	./src/hwdep/hwdep.c	/^int snd_hwdep_open_lconf(snd_hwdep_t **hwdep, const char *name,$/;"	f
snd_hwdep_open_noupdate	./src/hwdep/hwdep.c	/^static int snd_hwdep_open_noupdate(snd_hwdep_t **hwdep, snd_config_t *root, const char *name, int mode)$/;"	f	file:
snd_hwdep_open_objects	./src/hwdep/hwdep_symbols.c	/^static const char **snd_hwdep_open_objects[] = {$/;"	v	file:
snd_hwdep_open_symbols	./src/hwdep/hwdep_symbols.c	/^void *snd_hwdep_open_symbols(void)$/;"	f
snd_hwdep_ops_t	./src/hwdep/hwdep_local.h	/^} snd_hwdep_ops_t;$/;"	t	typeref:struct:__anon91
snd_hwdep_poll_descriptors	./src/hwdep/hwdep.c	/^int snd_hwdep_poll_descriptors(snd_hwdep_t *hwdep, struct pollfd *pfds, unsigned int space)$/;"	f
snd_hwdep_poll_descriptors_count	./src/hwdep/hwdep.c	/^int snd_hwdep_poll_descriptors_count(snd_hwdep_t *hwdep)$/;"	f
snd_hwdep_poll_descriptors_revents	./src/hwdep/hwdep.c	/^int snd_hwdep_poll_descriptors_revents(snd_hwdep_t *hwdep, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f
snd_hwdep_read	./src/hwdep/hwdep.c	/^ssize_t snd_hwdep_read(snd_hwdep_t *hwdep, void *buffer, size_t size)$/;"	f
snd_hwdep_t	./include/hwdep.h	/^typedef struct _snd_hwdep snd_hwdep_t;$/;"	t	typeref:struct:_snd_hwdep
snd_hwdep_type	./src/hwdep/hwdep.c	/^snd_hwdep_type_t snd_hwdep_type(snd_hwdep_t *hwdep)$/;"	f
snd_hwdep_type_t	./include/hwdep.h	/^} snd_hwdep_type_t;$/;"	t	typeref:enum:_snd_hwdep_type
snd_hwdep_write	./src/hwdep/hwdep.c	/^ssize_t snd_hwdep_write(snd_hwdep_t *hwdep, const void *buffer, size_t size)$/;"	f
snd_input_buffer_close	./src/input.c	/^static int snd_input_buffer_close(snd_input_t *input)$/;"	f	file:
snd_input_buffer_getc	./src/input.c	/^static int snd_input_buffer_getc(snd_input_t *input)$/;"	f	file:
snd_input_buffer_gets	./src/input.c	/^static char *snd_input_buffer_gets(snd_input_t *input, char *str, size_t size)$/;"	f	file:
snd_input_buffer_open	./src/input.c	/^int snd_input_buffer_open(snd_input_t **inputp, const char *buf, ssize_t size)$/;"	f
snd_input_buffer_ops	./src/input.c	/^static const snd_input_ops_t snd_input_buffer_ops = {$/;"	v	file:
snd_input_buffer_scan	./src/input.c	/^static int snd_input_buffer_scan(snd_input_t *input, const char *format, va_list args)$/;"	f	file:
snd_input_buffer_t	./src/input.c	/^} snd_input_buffer_t;$/;"	t	typeref:struct:_snd_input_buffer	file:
snd_input_buffer_ungetc	./src/input.c	/^static int snd_input_buffer_ungetc(snd_input_t *input, int c)$/;"	f	file:
snd_input_close	./src/input.c	/^int snd_input_close(snd_input_t *input)$/;"	f
snd_input_getc	./src/input.c	/^int snd_input_getc(snd_input_t *input)$/;"	f
snd_input_gets	./src/input.c	/^char *snd_input_gets(snd_input_t *input, char *str, size_t size)$/;"	f
snd_input_ops_t	./src/input.c	/^} snd_input_ops_t;$/;"	t	typeref:struct:_snd_input_ops	file:
snd_input_scanf	./src/input.c	/^int snd_input_scanf(snd_input_t *input, const char *format, ...)$/;"	f
snd_input_stdio_attach	./src/input.c	/^int snd_input_stdio_attach(snd_input_t **inputp, FILE *fp, int _close)$/;"	f
snd_input_stdio_close	./src/input.c	/^static int snd_input_stdio_close(snd_input_t *input ATTRIBUTE_UNUSED)$/;"	f	file:
snd_input_stdio_getc	./src/input.c	/^static int snd_input_stdio_getc(snd_input_t *input)$/;"	f	file:
snd_input_stdio_gets	./src/input.c	/^static char *snd_input_stdio_gets(snd_input_t *input, char *str, size_t size)$/;"	f	file:
snd_input_stdio_open	./src/input.c	/^int snd_input_stdio_open(snd_input_t **inputp, const char *file, const char *mode)$/;"	f
snd_input_stdio_ops	./src/input.c	/^static const snd_input_ops_t snd_input_stdio_ops = {$/;"	v	file:
snd_input_stdio_scan	./src/input.c	/^static int snd_input_stdio_scan(snd_input_t *input, const char *format, va_list args)$/;"	f	file:
snd_input_stdio_t	./src/input.c	/^} snd_input_stdio_t;$/;"	t	typeref:struct:_snd_input_stdio	file:
snd_input_stdio_ungetc	./src/input.c	/^static int snd_input_stdio_ungetc(snd_input_t *input, int c)$/;"	f	file:
snd_input_t	./include/input.h	/^typedef struct _snd_input snd_input_t;$/;"	t	typeref:struct:_snd_input
snd_input_type_t	./include/input.h	/^} snd_input_type_t;$/;"	t	typeref:enum:_snd_input_type
snd_input_ungetc	./src/input.c	/^int snd_input_ungetc(snd_input_t *input, int c)$/;"	f
snd_instr_fm_convert_from_stream	./src/seq/seq_old.c	/^int snd_instr_fm_convert_from_stream(void *__data ATTRIBUTE_UNUSED,$/;"	f
snd_instr_fm_convert_to_stream	./src/seq/seq_old.c	/^int snd_instr_fm_convert_to_stream(void *fm ATTRIBUTE_UNUSED,$/;"	f
snd_instr_fm_free	./src/seq/seq_old.c	/^int snd_instr_fm_free(void *fm ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_copy	./src/seq/seq_old.c	/^void snd_instr_header_copy(void *dst ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_free	./src/seq/seq_old.c	/^void snd_instr_header_free(void *obj ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_get_alias	./src/seq/seq_old.c	/^const void *snd_instr_header_get_alias(const void *info ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_get_cluster	./src/seq/seq_old.c	/^int snd_instr_header_get_cluster(const void *info ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_get_cmd	./src/seq/seq_old.c	/^unsigned int snd_instr_header_get_cmd(const void *info ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_get_data	./src/seq/seq_old.c	/^void *snd_instr_header_get_data(const void *info ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_get_follow_alias	./src/seq/seq_old.c	/^int snd_instr_header_get_follow_alias(const void *info ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_get_format	./src/seq/seq_old.c	/^const char *snd_instr_header_get_format(const void *info ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_get_id	./src/seq/seq_old.c	/^const void *snd_instr_header_get_id(const void *info ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_get_len	./src/seq/seq_old.c	/^size_t snd_instr_header_get_len(const void *info ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_get_name	./src/seq/seq_old.c	/^const char *snd_instr_header_get_name(const void *info ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_get_type	./src/seq/seq_old.c	/^int snd_instr_header_get_type(const void *info ATTRIBUTE_UNUSED)$/;"	f
snd_instr_header_malloc	./src/seq/seq_old.c	/^int snd_instr_header_malloc(void **ptr ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_set_alias	./src/seq/seq_old.c	/^void snd_instr_header_set_alias(void *info ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_set_cluster	./src/seq/seq_old.c	/^void snd_instr_header_set_cluster(void *info ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_set_cmd	./src/seq/seq_old.c	/^void snd_instr_header_set_cmd(void *info ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_set_follow_alias	./src/seq/seq_old.c	/^void snd_instr_header_set_follow_alias(void *info ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_set_format	./src/seq/seq_old.c	/^void snd_instr_header_set_format(void *info ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_set_id	./src/seq/seq_old.c	/^void snd_instr_header_set_id(void *info ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_set_len	./src/seq/seq_old.c	/^void snd_instr_header_set_len(void *info ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_set_name	./src/seq/seq_old.c	/^void snd_instr_header_set_name(void *info ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_set_type	./src/seq/seq_old.c	/^void snd_instr_header_set_type(void *info ATTRIBUTE_UNUSED,$/;"	f
snd_instr_header_sizeof	./src/seq/seq_old.c	/^size_t snd_instr_header_sizeof(void)$/;"	f
snd_instr_iwffff_close	./src/seq/seq_old.c	/^int snd_instr_iwffff_close(void *handle ATTRIBUTE_UNUSED)$/;"	f
snd_instr_iwffff_convert_from_stream	./src/seq/seq_old.c	/^int snd_instr_iwffff_convert_from_stream(void *data ATTRIBUTE_UNUSED,$/;"	f
snd_instr_iwffff_convert_to_stream	./src/seq/seq_old.c	/^int snd_instr_iwffff_convert_to_stream(void *iwffff ATTRIBUTE_UNUSED,$/;"	f
snd_instr_iwffff_free	./src/seq/seq_old.c	/^int snd_instr_iwffff_free(void *__instr ATTRIBUTE_UNUSED)$/;"	f
snd_instr_iwffff_load	./src/seq/seq_old.c	/^int snd_instr_iwffff_load(void *iwf ATTRIBUTE_UNUSED,$/;"	f
snd_instr_iwffff_open	./src/seq/seq_old.c	/^int snd_instr_iwffff_open(void **handle ATTRIBUTE_UNUSED,$/;"	f
snd_instr_iwffff_open_rom	./src/seq/seq_old.c	/^int snd_instr_iwffff_open_rom(void **handle ATTRIBUTE_UNUSED,$/;"	f
snd_instr_iwffff_open_rom_file	./src/seq/seq_old.c	/^int snd_instr_iwffff_open_rom_file(void **handle ATTRIBUTE_UNUSED,$/;"	f
snd_instr_simple_convert_from_stream	./src/seq/seq_old.c	/^int snd_instr_simple_convert_from_stream(void *__data ATTRIBUTE_UNUSED,$/;"	f
snd_instr_simple_convert_to_stream	./src/seq/seq_old.c	/^int snd_instr_simple_convert_to_stream(void *simple ATTRIBUTE_UNUSED,$/;"	f
snd_instr_simple_free	./src/seq/seq_old.c	/^int snd_instr_simple_free(void *simple ATTRIBUTE_UNUSED)$/;"	f
snd_int_int_strp_t	./src/alisp/alisp_snd.c	/^typedef int (*snd_int_int_strp_t)(int val, char **str);$/;"	t	file:
snd_int_intp_t	./src/alisp/alisp_snd.c	/^typedef int (*snd_int_intp_t)(int *val);$/;"	t	file:
snd_int_p_t	./src/alisp/alisp_snd.c	/^typedef int (*snd_int_p_t)(void *rctl);$/;"	t	file:
snd_int_pp_p_t	./src/alisp/alisp_snd.c	/^typedef int (*snd_int_pp_p_t)(void **rctl, void *handle);$/;"	t	file:
snd_int_pp_strp_int_t	./src/alisp/alisp_snd.c	/^typedef int (*snd_int_pp_strp_int_t)(void **rctl, const char *name, int mode);$/;"	t	file:
snd_int_str_t	./src/alisp/alisp_snd.c	/^typedef int (*snd_int_str_t)(const char *str);$/;"	t	file:
snd_interval_add	./src/pcm/interval.c	/^void snd_interval_add(const snd_interval_t *a, const snd_interval_t *b, snd_interval_t *c)$/;"	f
snd_interval_add	./src/pcm/interval.h	46;"	d
snd_interval_always_eq	./src/pcm/interval_inline.h	/^INTERVAL_INLINE int snd_interval_always_eq(const snd_interval_t *i1, const snd_interval_t *i2)$/;"	f
snd_interval_any	./src/pcm/interval_inline.h	/^INTERVAL_INLINE void snd_interval_any(snd_interval_t *i)$/;"	f
snd_interval_checkempty	./src/pcm/interval_inline.h	/^INTERVAL_INLINE int snd_interval_checkempty(const snd_interval_t *i)$/;"	f
snd_interval_copy	./src/pcm/interval_inline.h	/^INTERVAL_INLINE void snd_interval_copy(snd_interval_t *d, const snd_interval_t *s)$/;"	f
snd_interval_div	./src/pcm/interval.c	/^void snd_interval_div(const snd_interval_t *a, const snd_interval_t *b, snd_interval_t *c)$/;"	f
snd_interval_div	./src/pcm/interval.h	49;"	d
snd_interval_empty	./src/pcm/interval_inline.h	/^INTERVAL_INLINE int snd_interval_empty(const snd_interval_t *i)$/;"	f
snd_interval_floor	./src/pcm/interval_inline.h	/^INTERVAL_INLINE void snd_interval_floor(snd_interval_t *i)$/;"	f
snd_interval_list	./src/pcm/pcm_ext_parm.h	29;"	d
snd_interval_list	./src/pcm/pcm_extplug.c	/^int snd_interval_list(snd_interval_t *ival, int num_list, unsigned int *list)$/;"	f
snd_interval_max	./src/pcm/interval_inline.h	/^INTERVAL_INLINE int snd_interval_max(const snd_interval_t *i)$/;"	f
snd_interval_min	./src/pcm/interval_inline.h	/^INTERVAL_INLINE int snd_interval_min(const snd_interval_t *i)$/;"	f
snd_interval_mul	./src/pcm/interval.c	/^void snd_interval_mul(const snd_interval_t *a, const snd_interval_t *b, snd_interval_t *c)$/;"	f
snd_interval_mul	./src/pcm/interval.h	48;"	d
snd_interval_muldiv	./src/pcm/interval.c	/^void snd_interval_muldiv(const snd_interval_t *a, const snd_interval_t *b,$/;"	f
snd_interval_muldiv	./src/pcm/interval.h	50;"	d
snd_interval_muldivk	./src/pcm/interval.c	/^void snd_interval_muldivk(const snd_interval_t *a, const snd_interval_t *b,$/;"	f
snd_interval_muldivk	./src/pcm/interval.h	51;"	d
snd_interval_mulkdiv	./src/pcm/interval.c	/^void snd_interval_mulkdiv(const snd_interval_t *a, unsigned int k,$/;"	f
snd_interval_mulkdiv	./src/pcm/interval.h	52;"	d
snd_interval_never_eq	./src/pcm/interval_inline.h	/^INTERVAL_INLINE int snd_interval_never_eq(const snd_interval_t *i1, const snd_interval_t *i2)$/;"	f
snd_interval_none	./src/pcm/interval_inline.h	/^INTERVAL_INLINE void snd_interval_none(snd_interval_t *i)$/;"	f
snd_interval_print	./src/pcm/interval.c	/^void snd_interval_print(const snd_interval_t *i, snd_output_t *out)$/;"	f
snd_interval_print	./src/pcm/interval.h	53;"	d
snd_interval_refine	./src/pcm/interval.c	/^int snd_interval_refine(snd_interval_t *i, const snd_interval_t *v)$/;"	f
snd_interval_refine	./src/pcm/interval.h	56;"	d
snd_interval_refine_first	./src/pcm/interval.c	/^int snd_interval_refine_first(snd_interval_t *i)$/;"	f
snd_interval_refine_first	./src/pcm/interval.h	57;"	d
snd_interval_refine_last	./src/pcm/interval.c	/^int snd_interval_refine_last(snd_interval_t *i)$/;"	f
snd_interval_refine_last	./src/pcm/interval.h	58;"	d
snd_interval_refine_max	./src/pcm/interval.c	/^int snd_interval_refine_max(snd_interval_t *i, unsigned int max, int openmax)$/;"	f
snd_interval_refine_max	./src/pcm/interval.h	55;"	d
snd_interval_refine_min	./src/pcm/interval.c	/^int snd_interval_refine_min(snd_interval_t *i, unsigned int min, int openmin)$/;"	f
snd_interval_refine_min	./src/pcm/interval.h	54;"	d
snd_interval_refine_set	./src/pcm/interval.c	/^int snd_interval_refine_set(snd_interval_t *i, unsigned int val)$/;"	f
snd_interval_refine_set	./src/pcm/interval.h	59;"	d
snd_interval_set_minmax	./src/pcm/interval_inline.h	/^INTERVAL_INLINE void snd_interval_set_minmax(snd_interval_t *i, unsigned int min, unsigned int max)$/;"	f
snd_interval_set_value	./src/pcm/interval_inline.h	/^INTERVAL_INLINE void snd_interval_set_value(snd_interval_t *i, unsigned int val)$/;"	f
snd_interval_setinteger	./src/pcm/interval_inline.h	/^INTERVAL_INLINE int snd_interval_setinteger(snd_interval_t *i)$/;"	f
snd_interval_single	./src/pcm/interval_inline.h	/^INTERVAL_INLINE int snd_interval_single(const snd_interval_t *i)$/;"	f
snd_interval_sub	./src/pcm/interval.c	/^void snd_interval_sub(const snd_interval_t *a, const snd_interval_t *b, snd_interval_t *c)$/;"	f
snd_interval_sub	./src/pcm/interval.h	47;"	d
snd_interval_t	./src/pcm/interval.h	/^typedef struct _snd_interval snd_interval_t;$/;"	t	typeref:struct:_snd_interval
snd_interval_test	./src/pcm/interval_inline.h	/^INTERVAL_INLINE int snd_interval_test(const snd_interval_t *i, unsigned int val)$/;"	f
snd_interval_unfloor	./src/pcm/interval_inline.h	/^INTERVAL_INLINE void snd_interval_unfloor(snd_interval_t *i)$/;"	f
snd_interval_value	./src/pcm/interval_inline.h	/^INTERVAL_INLINE int snd_interval_value(const snd_interval_t *i)$/;"	f
snd_intrinsics	./src/alisp/alisp_snd.c	/^static const struct intrinsic snd_intrinsics[] = {$/;"	v	typeref:struct:intrinsic	file:
snd_is_local	./src/socket.c	/^int snd_is_local(struct hostent *hent)$/;"	f
snd_lib_error	./src/error.c	/^snd_lib_error_handler_t snd_lib_error = snd_lib_error_default;$/;"	v
snd_lib_error_default	./src/error.c	/^static void snd_lib_error_default(const char *file, int line, const char *function, int err, const char *fmt, ...)$/;"	f	file:
snd_lib_error_handler_t	./include/error.h	/^typedef void (*snd_lib_error_handler_t)(const char *file, int line, const char *function, int err, const char *fmt, ...) \/* __attribute__ ((format (printf, 5, 6))) *\/;$/;"	t
snd_lib_error_set_handler	./src/error.c	/^int snd_lib_error_set_handler(snd_lib_error_handler_t handler)$/;"	f
snd_mask_always_eq	./src/pcm/mask_inline.h	/^MASK_INLINE int snd_mask_always_eq(const snd_mask_t *m1, const snd_mask_t *m2)$/;"	f
snd_mask_any	./src/pcm/mask_inline.h	/^MASK_INLINE void snd_mask_any(snd_mask_t *mask)$/;"	f
snd_mask_copy	./src/pcm/mask_inline.h	/^MASK_INLINE void snd_mask_copy(snd_mask_t *mask, const snd_mask_t *v)$/;"	f
snd_mask_count	./src/pcm/mask_inline.h	/^MASK_INLINE unsigned int snd_mask_count(const snd_mask_t *mask)$/;"	f
snd_mask_empty	./src/pcm/mask_inline.h	/^MASK_INLINE int snd_mask_empty(const snd_mask_t *mask)$/;"	f
snd_mask_eq	./src/pcm/mask_inline.h	/^MASK_INLINE int snd_mask_eq(const snd_mask_t *mask, const snd_mask_t *v)$/;"	f
snd_mask_full	./src/pcm/mask_inline.h	/^MASK_INLINE int snd_mask_full(const snd_mask_t *mask)$/;"	f
snd_mask_intersect	./src/pcm/mask_inline.h	/^MASK_INLINE void snd_mask_intersect(snd_mask_t *mask, const snd_mask_t *v)$/;"	f
snd_mask_leave	./src/pcm/mask_inline.h	/^MASK_INLINE void snd_mask_leave(snd_mask_t *mask, unsigned int val)$/;"	f
snd_mask_max	./src/pcm/mask_inline.h	/^MASK_INLINE unsigned int snd_mask_max(const snd_mask_t *mask)$/;"	f
snd_mask_min	./src/pcm/mask_inline.h	/^MASK_INLINE unsigned int snd_mask_min(const snd_mask_t *mask)$/;"	f
snd_mask_never_eq	./src/pcm/mask_inline.h	/^MASK_INLINE int snd_mask_never_eq(const snd_mask_t *m1, const snd_mask_t *m2)$/;"	f
snd_mask_none	./src/pcm/mask_inline.h	/^MASK_INLINE void snd_mask_none(snd_mask_t *mask)$/;"	f
snd_mask_refine	./src/pcm/mask_inline.h	/^MASK_INLINE int snd_mask_refine(snd_mask_t *mask, const snd_mask_t *v)$/;"	f
snd_mask_refine_first	./src/pcm/mask_inline.h	/^MASK_INLINE int snd_mask_refine_first(snd_mask_t *mask)$/;"	f
snd_mask_refine_last	./src/pcm/mask_inline.h	/^MASK_INLINE int snd_mask_refine_last(snd_mask_t *mask)$/;"	f
snd_mask_refine_max	./src/pcm/mask_inline.h	/^MASK_INLINE int snd_mask_refine_max(snd_mask_t *mask, unsigned int val)$/;"	f
snd_mask_refine_min	./src/pcm/mask_inline.h	/^MASK_INLINE int snd_mask_refine_min(snd_mask_t *mask, unsigned int val)$/;"	f
snd_mask_refine_set	./src/pcm/mask_inline.h	/^MASK_INLINE int snd_mask_refine_set(snd_mask_t *mask, unsigned int val)$/;"	f
snd_mask_reset	./src/pcm/mask_inline.h	/^MASK_INLINE void snd_mask_reset(snd_mask_t *mask, unsigned int val)$/;"	f
snd_mask_reset_range	./src/pcm/mask_inline.h	/^MASK_INLINE void snd_mask_reset_range(snd_mask_t *mask, unsigned int from, unsigned int to)$/;"	f
snd_mask_set	./src/pcm/mask_inline.h	/^MASK_INLINE void snd_mask_set(snd_mask_t *mask, unsigned int val)$/;"	f
snd_mask_set_range	./src/pcm/mask_inline.h	/^MASK_INLINE void snd_mask_set_range(snd_mask_t *mask, unsigned int from, unsigned int to)$/;"	f
snd_mask_single	./src/pcm/mask_inline.h	/^MASK_INLINE int snd_mask_single(const snd_mask_t *mask)$/;"	f
snd_mask_sizeof	./src/pcm/mask_inline.h	/^MASK_INLINE size_t snd_mask_sizeof(void)$/;"	f
snd_mask_t	./src/pcm/mask.h	/^typedef struct _snd_mask snd_mask_t;$/;"	t	typeref:struct:_snd_mask
snd_mask_test	./src/pcm/mask_inline.h	/^MASK_INLINE int snd_mask_test(const snd_mask_t *mask, unsigned int val)$/;"	f
snd_mask_union	./src/pcm/mask_inline.h	/^MASK_INLINE void snd_mask_union(snd_mask_t *mask, const snd_mask_t *v)$/;"	f
snd_mask_value	./src/pcm/mask_inline.h	/^MASK_INLINE int snd_mask_value(const snd_mask_t *mask)$/;"	f
snd_midi_event	./src/seq/seq_midi_event.c	/^struct snd_midi_event {$/;"	s	file:
snd_midi_event_decode	./src/seq/seq_midi_event.c	/^long snd_midi_event_decode(snd_midi_event_t *dev, unsigned char *buf, long count, const snd_seq_event_t *ev)$/;"	f
snd_midi_event_encode	./src/seq/seq_midi_event.c	/^long snd_midi_event_encode(snd_midi_event_t *dev, const unsigned char *buf, long count, snd_seq_event_t *ev)$/;"	f
snd_midi_event_encode_byte	./src/seq/seq_midi_event.c	/^int snd_midi_event_encode_byte(snd_midi_event_t *dev, int c, snd_seq_event_t *ev)$/;"	f
snd_midi_event_free	./src/seq/seq_midi_event.c	/^void snd_midi_event_free(snd_midi_event_t *dev)$/;"	f
snd_midi_event_init	./src/seq/seq_midi_event.c	/^void snd_midi_event_init(snd_midi_event_t *dev)$/;"	f
snd_midi_event_new	./src/seq/seq_midi_event.c	/^int snd_midi_event_new(size_t bufsize, snd_midi_event_t **rdev)$/;"	f
snd_midi_event_no_status	./src/seq/seq_midi_event.c	/^void snd_midi_event_no_status(snd_midi_event_t *dev, int on)$/;"	f
snd_midi_event_reset_decode	./src/seq/seq_midi_event.c	/^void snd_midi_event_reset_decode(snd_midi_event_t *dev)$/;"	f
snd_midi_event_reset_encode	./src/seq/seq_midi_event.c	/^void snd_midi_event_reset_encode(snd_midi_event_t *dev)$/;"	f
snd_midi_event_resize_buffer	./src/seq/seq_midi_event.c	/^int snd_midi_event_resize_buffer(snd_midi_event_t *dev, size_t bufsize)$/;"	f
snd_midi_event_t	./include/seq_midi_event.h	/^typedef struct snd_midi_event snd_midi_event_t;$/;"	t	typeref:struct:snd_midi_event
snd_mixer_attach	./src/mixer/mixer.c	/^int snd_mixer_attach(snd_mixer_t *mixer, const char *name)$/;"	f
snd_mixer_attach_hctl	./src/mixer/mixer.c	/^int snd_mixer_attach_hctl(snd_mixer_t *mixer, snd_hctl_t *hctl)$/;"	f
snd_mixer_callback_t	./include/mixer.h	/^typedef int (*snd_mixer_callback_t)(snd_mixer_t *ctl,$/;"	t
snd_mixer_class_alloca	./include/mixer.h	147;"	d
snd_mixer_class_copy	./src/mixer/mixer.c	/^void snd_mixer_class_copy(snd_mixer_class_t *dst, const snd_mixer_class_t *src)$/;"	f
snd_mixer_class_free	./src/mixer/mixer.c	/^void snd_mixer_class_free(snd_mixer_class_t *obj)$/;"	f
snd_mixer_class_get_compare	./src/mixer/mixer.c	/^snd_mixer_compare_t snd_mixer_class_get_compare(const snd_mixer_class_t *obj)$/;"	f
snd_mixer_class_get_event	./src/mixer/mixer.c	/^snd_mixer_event_t snd_mixer_class_get_event(const snd_mixer_class_t *obj)$/;"	f
snd_mixer_class_get_mixer	./src/mixer/mixer.c	/^snd_mixer_t *snd_mixer_class_get_mixer(const snd_mixer_class_t *obj)$/;"	f
snd_mixer_class_get_private	./src/mixer/mixer.c	/^void *snd_mixer_class_get_private(const snd_mixer_class_t *obj)$/;"	f
snd_mixer_class_malloc	./src/mixer/mixer.c	/^int snd_mixer_class_malloc(snd_mixer_class_t **ptr)$/;"	f
snd_mixer_class_register	./src/mixer/mixer.c	/^int snd_mixer_class_register(snd_mixer_class_t *class, snd_mixer_t *mixer)$/;"	f
snd_mixer_class_set_compare	./src/mixer/mixer.c	/^int snd_mixer_class_set_compare(snd_mixer_class_t *obj, snd_mixer_compare_t compare)$/;"	f
snd_mixer_class_set_event	./src/mixer/mixer.c	/^int snd_mixer_class_set_event(snd_mixer_class_t *obj, snd_mixer_event_t event)$/;"	f
snd_mixer_class_set_private	./src/mixer/mixer.c	/^int snd_mixer_class_set_private(snd_mixer_class_t *obj, void *private_data)$/;"	f
snd_mixer_class_set_private_free	./src/mixer/mixer.c	/^int snd_mixer_class_set_private_free(snd_mixer_class_t *obj, void (*private_free)(snd_mixer_class_t *class))$/;"	f
snd_mixer_class_sizeof	./src/mixer/mixer.c	/^size_t snd_mixer_class_sizeof()$/;"	f
snd_mixer_class_t	./include/mixer.h	/^typedef struct _snd_mixer_class snd_mixer_class_t;$/;"	t	typeref:struct:_snd_mixer_class
snd_mixer_class_unregister	./src/mixer/mixer.c	/^int snd_mixer_class_unregister(snd_mixer_class_t *class)$/;"	f
snd_mixer_close	./src/mixer/mixer.c	/^int snd_mixer_close(snd_mixer_t *mixer)$/;"	f
snd_mixer_compare_default	./src/mixer/mixer.c	/^static int snd_mixer_compare_default(const snd_mixer_elem_t *c1,$/;"	f	file:
snd_mixer_compare_t	./include/mixer.h	/^typedef int (*snd_mixer_compare_t)(const snd_mixer_elem_t *e1,$/;"	t
snd_mixer_detach	./src/mixer/mixer.c	/^int snd_mixer_detach(snd_mixer_t *mixer, const char *name)$/;"	f
snd_mixer_detach_hctl	./src/mixer/mixer.c	/^int snd_mixer_detach_hctl(snd_mixer_t *mixer, snd_hctl_t *hctl)$/;"	f
snd_mixer_elem_add	./src/mixer/mixer.c	/^int snd_mixer_elem_add(snd_mixer_elem_t *elem, snd_mixer_class_t *class)$/;"	f
snd_mixer_elem_attach	./src/mixer/mixer.c	/^int snd_mixer_elem_attach(snd_mixer_elem_t *melem,$/;"	f
snd_mixer_elem_callback_t	./include/mixer.h	/^typedef int (*snd_mixer_elem_callback_t)(snd_mixer_elem_t *elem,$/;"	t
snd_mixer_elem_detach	./src/mixer/mixer.c	/^int snd_mixer_elem_detach(snd_mixer_elem_t *melem,$/;"	f
snd_mixer_elem_empty	./src/mixer/mixer.c	/^int snd_mixer_elem_empty(snd_mixer_elem_t *melem)$/;"	f
snd_mixer_elem_free	./src/mixer/mixer.c	/^void snd_mixer_elem_free(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_elem_get_callback_private	./src/mixer/mixer.c	/^void * snd_mixer_elem_get_callback_private(const snd_mixer_elem_t *mixer)$/;"	f
snd_mixer_elem_get_private	./src/mixer/mixer.c	/^void *snd_mixer_elem_get_private(const snd_mixer_elem_t *elem)$/;"	f
snd_mixer_elem_get_type	./src/mixer/mixer.c	/^snd_mixer_elem_type_t snd_mixer_elem_get_type(const snd_mixer_elem_t *mixer)$/;"	f
snd_mixer_elem_info	./src/mixer/mixer.c	/^int snd_mixer_elem_info(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_elem_new	./src/mixer/mixer.c	/^int snd_mixer_elem_new(snd_mixer_elem_t **elem,$/;"	f
snd_mixer_elem_next	./src/mixer/mixer.c	/^snd_mixer_elem_t *snd_mixer_elem_next(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_elem_prev	./src/mixer/mixer.c	/^snd_mixer_elem_t *snd_mixer_elem_prev(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_elem_remove	./src/mixer/mixer.c	/^int snd_mixer_elem_remove(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_elem_set_callback	./src/mixer/mixer.c	/^void snd_mixer_elem_set_callback(snd_mixer_elem_t *mixer, snd_mixer_elem_callback_t val)$/;"	f
snd_mixer_elem_set_callback_private	./src/mixer/mixer.c	/^void snd_mixer_elem_set_callback_private(snd_mixer_elem_t *mixer, void * val)$/;"	f
snd_mixer_elem_t	./include/mixer.h	/^typedef struct _snd_mixer_elem snd_mixer_elem_t;$/;"	t	typeref:struct:_snd_mixer_elem
snd_mixer_elem_throw_event	./src/mixer/mixer.c	/^static int snd_mixer_elem_throw_event(snd_mixer_elem_t *elem, unsigned int mask)$/;"	f	file:
snd_mixer_elem_type_t	./include/mixer.h	/^} snd_mixer_elem_type_t;$/;"	t	typeref:enum:_snd_mixer_elem_type
snd_mixer_elem_value	./src/mixer/mixer.c	/^int snd_mixer_elem_value(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_event_t	./include/mixer.h	/^typedef int (*snd_mixer_event_t)(snd_mixer_class_t *class_, unsigned int mask,$/;"	t
snd_mixer_find_selem	./src/mixer/simple.c	/^snd_mixer_elem_t *snd_mixer_find_selem(snd_mixer_t *mixer,$/;"	f
snd_mixer_first_elem	./src/mixer/mixer.c	/^snd_mixer_elem_t *snd_mixer_first_elem(snd_mixer_t *mixer)$/;"	f
snd_mixer_free	./src/mixer/mixer.c	/^void snd_mixer_free(snd_mixer_t *mixer)$/;"	f
snd_mixer_get_callback_private	./src/mixer/mixer.c	/^void * snd_mixer_get_callback_private(const snd_mixer_t *mixer)$/;"	f
snd_mixer_get_count	./src/mixer/mixer.c	/^unsigned int snd_mixer_get_count(const snd_mixer_t *mixer)$/;"	f
snd_mixer_get_hctl	./src/mixer/mixer.c	/^int snd_mixer_get_hctl(snd_mixer_t *mixer, const char *name, snd_hctl_t **hctl)$/;"	f
snd_mixer_handle_events	./src/mixer/mixer.c	/^int snd_mixer_handle_events(snd_mixer_t *mixer)$/;"	f
snd_mixer_last_elem	./src/mixer/mixer.c	/^snd_mixer_elem_t *snd_mixer_last_elem(snd_mixer_t *mixer)$/;"	f
snd_mixer_load	./src/mixer/mixer.c	/^int snd_mixer_load(snd_mixer_t *mixer)$/;"	f
snd_mixer_open	./src/mixer/mixer.c	/^int snd_mixer_open(snd_mixer_t **mixerp, int mode ATTRIBUTE_UNUSED)$/;"	f
snd_mixer_poll_descriptors	./src/mixer/mixer.c	/^int snd_mixer_poll_descriptors(snd_mixer_t *mixer, struct pollfd *pfds, unsigned int space)$/;"	f
snd_mixer_poll_descriptors_count	./src/mixer/mixer.c	/^int snd_mixer_poll_descriptors_count(snd_mixer_t *mixer)$/;"	f
snd_mixer_poll_descriptors_revents	./src/mixer/mixer.c	/^int snd_mixer_poll_descriptors_revents(snd_mixer_t *mixer, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f
snd_mixer_sbasic_get_private	./src/mixer/simple_abst.c	/^void *snd_mixer_sbasic_get_private(const snd_mixer_class_t *class)$/;"	f
snd_mixer_sbasic_info	./src/mixer/simple_abst.c	/^int snd_mixer_sbasic_info(const snd_mixer_class_t *class, sm_class_basic_t *info)$/;"	f
snd_mixer_sbasic_init_t	./src/mixer/simple_abst.c	/^typedef int (*snd_mixer_sbasic_init_t)(snd_mixer_class_t *class);$/;"	t	file:
snd_mixer_sbasic_set_private	./src/mixer/simple_abst.c	/^void snd_mixer_sbasic_set_private(const snd_mixer_class_t *class, void *private_data)$/;"	f
snd_mixer_sbasic_set_private_free	./src/mixer/simple_abst.c	/^void snd_mixer_sbasic_set_private_free(const snd_mixer_class_t *class, void (*private_free)(snd_mixer_class_t *class))$/;"	f
snd_mixer_selem_ask_capture_dB_vol	./src/mixer/simple.c	/^int snd_mixer_selem_ask_capture_dB_vol(snd_mixer_elem_t *elem, long dBvalue, int dir, long *value)$/;"	f
snd_mixer_selem_ask_capture_vol_dB	./src/mixer/simple.c	/^int snd_mixer_selem_ask_capture_vol_dB(snd_mixer_elem_t *elem, long value, long *dBvalue)$/;"	f
snd_mixer_selem_ask_playback_dB_vol	./src/mixer/simple.c	/^int snd_mixer_selem_ask_playback_dB_vol(snd_mixer_elem_t *elem, long dBvalue, int dir, long *value)$/;"	f
snd_mixer_selem_ask_playback_vol_dB	./src/mixer/simple.c	/^int snd_mixer_selem_ask_playback_vol_dB(snd_mixer_elem_t *elem, long value, long *dBvalue)$/;"	f
snd_mixer_selem_channel_id_t	./include/mixer.h	/^} snd_mixer_selem_channel_id_t;$/;"	t	typeref:enum:_snd_mixer_selem_channel_id
snd_mixer_selem_channel_name	./src/mixer/simple.c	/^const char *snd_mixer_selem_channel_name(snd_mixer_selem_channel_id_t channel)$/;"	f
snd_mixer_selem_compare	./src/mixer/simple.c	/^int snd_mixer_selem_compare(const snd_mixer_elem_t *c1, const snd_mixer_elem_t *c2)$/;"	f
snd_mixer_selem_get_capture_dB	./src/mixer/simple.c	/^int snd_mixer_selem_get_capture_dB(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)$/;"	f
snd_mixer_selem_get_capture_dB_range	./src/mixer/simple.c	/^int snd_mixer_selem_get_capture_dB_range(snd_mixer_elem_t *elem,$/;"	f
snd_mixer_selem_get_capture_group	./src/mixer/simple.c	/^int snd_mixer_selem_get_capture_group(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_get_capture_switch	./src/mixer/simple.c	/^int snd_mixer_selem_get_capture_switch(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int *value)$/;"	f
snd_mixer_selem_get_capture_volume	./src/mixer/simple.c	/^int snd_mixer_selem_get_capture_volume(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)$/;"	f
snd_mixer_selem_get_capture_volume_range	./src/mixer/simple.c	/^int snd_mixer_selem_get_capture_volume_range(snd_mixer_elem_t *elem,$/;"	f
snd_mixer_selem_get_enum_item	./src/mixer/simple.c	/^int snd_mixer_selem_get_enum_item(snd_mixer_elem_t *elem,$/;"	f
snd_mixer_selem_get_enum_item_name	./src/mixer/simple.c	/^int snd_mixer_selem_get_enum_item_name(snd_mixer_elem_t *elem,$/;"	f
snd_mixer_selem_get_enum_items	./src/mixer/simple.c	/^int snd_mixer_selem_get_enum_items(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_get_id	./src/mixer/simple.c	/^void snd_mixer_selem_get_id(snd_mixer_elem_t *elem,$/;"	f
snd_mixer_selem_get_index	./src/mixer/simple.c	/^unsigned int snd_mixer_selem_get_index(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_get_name	./src/mixer/simple.c	/^const char *snd_mixer_selem_get_name(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_get_playback_dB	./src/mixer/simple.c	/^int snd_mixer_selem_get_playback_dB(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)$/;"	f
snd_mixer_selem_get_playback_dB_range	./src/mixer/simple.c	/^int snd_mixer_selem_get_playback_dB_range(snd_mixer_elem_t *elem,$/;"	f
snd_mixer_selem_get_playback_switch	./src/mixer/simple.c	/^int snd_mixer_selem_get_playback_switch(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int *value)$/;"	f
snd_mixer_selem_get_playback_volume	./src/mixer/simple.c	/^int snd_mixer_selem_get_playback_volume(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)$/;"	f
snd_mixer_selem_get_playback_volume_range	./src/mixer/simple.c	/^int snd_mixer_selem_get_playback_volume_range(snd_mixer_elem_t *elem,$/;"	f
snd_mixer_selem_has_capture_channel	./src/mixer/simple.c	/^int snd_mixer_selem_has_capture_channel(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel)$/;"	f
snd_mixer_selem_has_capture_switch	./src/mixer/simple.c	/^int snd_mixer_selem_has_capture_switch(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_has_capture_switch_exclusive	./src/mixer/simple.c	/^int snd_mixer_selem_has_capture_switch_exclusive(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_has_capture_switch_joined	./src/mixer/simple.c	/^int snd_mixer_selem_has_capture_switch_joined(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_has_capture_volume	./src/mixer/simple.c	/^int snd_mixer_selem_has_capture_volume(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_has_capture_volume_joined	./src/mixer/simple.c	/^int snd_mixer_selem_has_capture_volume_joined(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_has_common_switch	./src/mixer/simple.c	/^int snd_mixer_selem_has_common_switch(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_has_common_volume	./src/mixer/simple.c	/^int snd_mixer_selem_has_common_volume(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_has_playback_channel	./src/mixer/simple.c	/^int snd_mixer_selem_has_playback_channel(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel)$/;"	f
snd_mixer_selem_has_playback_switch	./src/mixer/simple.c	/^int snd_mixer_selem_has_playback_switch(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_has_playback_switch_joined	./src/mixer/simple.c	/^int snd_mixer_selem_has_playback_switch_joined(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_has_playback_volume	./src/mixer/simple.c	/^int snd_mixer_selem_has_playback_volume(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_has_playback_volume_joined	./src/mixer/simple.c	/^int snd_mixer_selem_has_playback_volume_joined(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_id_alloca	./include/mixer.h	299;"	d
snd_mixer_selem_id_copy	./src/mixer/simple.c	/^void snd_mixer_selem_id_copy(snd_mixer_selem_id_t *dst, const snd_mixer_selem_id_t *src)$/;"	f
snd_mixer_selem_id_free	./src/mixer/simple.c	/^void snd_mixer_selem_id_free(snd_mixer_selem_id_t *obj)$/;"	f
snd_mixer_selem_id_get_index	./src/mixer/simple.c	/^unsigned int snd_mixer_selem_id_get_index(const snd_mixer_selem_id_t *obj)$/;"	f
snd_mixer_selem_id_get_name	./src/mixer/simple.c	/^const char *snd_mixer_selem_id_get_name(const snd_mixer_selem_id_t *obj)$/;"	f
snd_mixer_selem_id_malloc	./src/mixer/simple.c	/^int snd_mixer_selem_id_malloc(snd_mixer_selem_id_t **ptr)$/;"	f
snd_mixer_selem_id_set_index	./src/mixer/simple.c	/^void snd_mixer_selem_id_set_index(snd_mixer_selem_id_t *obj, unsigned int val)$/;"	f
snd_mixer_selem_id_set_name	./src/mixer/simple.c	/^void snd_mixer_selem_id_set_name(snd_mixer_selem_id_t *obj, const char *val)$/;"	f
snd_mixer_selem_id_sizeof	./src/mixer/simple.c	/^size_t snd_mixer_selem_id_sizeof()$/;"	f
snd_mixer_selem_id_t	./include/mixer.h	/^typedef struct _snd_mixer_selem_id snd_mixer_selem_id_t;$/;"	t	typeref:struct:_snd_mixer_selem_id
snd_mixer_selem_is_active	./src/mixer/simple.c	/^int snd_mixer_selem_is_active(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_is_capture_mono	./src/mixer/simple.c	/^int snd_mixer_selem_is_capture_mono(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_is_enum_capture	./src/mixer/simple.c	/^int snd_mixer_selem_is_enum_capture(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_is_enum_playback	./src/mixer/simple.c	/^int snd_mixer_selem_is_enum_playback(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_is_enumerated	./src/mixer/simple.c	/^int snd_mixer_selem_is_enumerated(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_is_playback_mono	./src/mixer/simple.c	/^int snd_mixer_selem_is_playback_mono(snd_mixer_elem_t *elem)$/;"	f
snd_mixer_selem_register	./src/mixer/simple.c	/^int snd_mixer_selem_register(snd_mixer_t *mixer,$/;"	f
snd_mixer_selem_regopt	./include/mixer.h	/^struct snd_mixer_selem_regopt {$/;"	s
snd_mixer_selem_regopt_abstract	./include/mixer.h	/^enum snd_mixer_selem_regopt_abstract {$/;"	g
snd_mixer_selem_set_capture_dB	./src/mixer/simple.c	/^int snd_mixer_selem_set_capture_dB(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value, int dir)$/;"	f
snd_mixer_selem_set_capture_dB_all	./src/mixer/simple.c	/^int snd_mixer_selem_set_capture_dB_all(snd_mixer_elem_t *elem, long value, int dir)$/;"	f
snd_mixer_selem_set_capture_switch	./src/mixer/simple.c	/^int snd_mixer_selem_set_capture_switch(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int value)$/;"	f
snd_mixer_selem_set_capture_switch_all	./src/mixer/simple.c	/^int snd_mixer_selem_set_capture_switch_all(snd_mixer_elem_t *elem, int value)$/;"	f
snd_mixer_selem_set_capture_volume	./src/mixer/simple.c	/^int snd_mixer_selem_set_capture_volume(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value)$/;"	f
snd_mixer_selem_set_capture_volume_all	./src/mixer/simple.c	/^int snd_mixer_selem_set_capture_volume_all(snd_mixer_elem_t *elem, long value)$/;"	f
snd_mixer_selem_set_capture_volume_range	./src/mixer/simple.c	/^int snd_mixer_selem_set_capture_volume_range(snd_mixer_elem_t *elem, $/;"	f
snd_mixer_selem_set_enum_item	./src/mixer/simple.c	/^int snd_mixer_selem_set_enum_item(snd_mixer_elem_t *elem,$/;"	f
snd_mixer_selem_set_playback_dB	./src/mixer/simple.c	/^int snd_mixer_selem_set_playback_dB(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value, int dir)$/;"	f
snd_mixer_selem_set_playback_dB_all	./src/mixer/simple.c	/^int snd_mixer_selem_set_playback_dB_all(snd_mixer_elem_t *elem, long value, int dir)$/;"	f
snd_mixer_selem_set_playback_switch	./src/mixer/simple.c	/^int snd_mixer_selem_set_playback_switch(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int value)$/;"	f
snd_mixer_selem_set_playback_switch_all	./src/mixer/simple.c	/^int snd_mixer_selem_set_playback_switch_all(snd_mixer_elem_t *elem, int value)$/;"	f
snd_mixer_selem_set_playback_volume	./src/mixer/simple.c	/^int snd_mixer_selem_set_playback_volume(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value)$/;"	f
snd_mixer_selem_set_playback_volume_all	./src/mixer/simple.c	/^int snd_mixer_selem_set_playback_volume_all(snd_mixer_elem_t *elem, long value)$/;"	f
snd_mixer_selem_set_playback_volume_range	./src/mixer/simple.c	/^int snd_mixer_selem_set_playback_volume_range(snd_mixer_elem_t *elem, $/;"	f
snd_mixer_set_callback	./src/mixer/mixer.c	/^void snd_mixer_set_callback(snd_mixer_t *obj, snd_mixer_callback_t val)$/;"	f
snd_mixer_set_callback_private	./src/mixer/mixer.c	/^void snd_mixer_set_callback_private(snd_mixer_t *mixer, void * val)$/;"	f
snd_mixer_set_compare	./src/mixer/mixer.c	/^int snd_mixer_set_compare(snd_mixer_t *mixer, snd_mixer_compare_t compare)$/;"	f
snd_mixer_sfbasic_init_t	./src/mixer/simple_abst.c	/^typedef int (*snd_mixer_sfbasic_init_t)(snd_mixer_class_t *class,$/;"	t	file:
snd_mixer_simple_basic_register	./src/mixer/mixer_simple.h	27;"	d
snd_mixer_simple_basic_register	./src/mixer/simple_abst.c	/^int snd_mixer_simple_basic_register(snd_mixer_t *mixer,$/;"	f
snd_mixer_simple_none_register	./src/mixer/mixer_simple.h	25;"	d
snd_mixer_simple_none_register	./src/mixer/simple_none.c	/^int snd_mixer_simple_none_register(snd_mixer_t *mixer,$/;"	f
snd_mixer_slave_t	./src/mixer/mixer.c	/^} snd_mixer_slave_t;$/;"	t	typeref:struct:_snd_mixer_slave	file:
snd_mixer_sort	./src/mixer/mixer.c	/^static int snd_mixer_sort(snd_mixer_t *mixer)$/;"	f	file:
snd_mixer_t	./include/mixer.h	/^typedef struct _snd_mixer snd_mixer_t;$/;"	t	typeref:struct:_snd_mixer
snd_mixer_throw_event	./src/mixer/mixer.c	/^static int snd_mixer_throw_event(snd_mixer_t *mixer, unsigned int mask,$/;"	f	file:
snd_mixer_wait	./src/mixer/mixer.c	/^int snd_mixer_wait(snd_mixer_t *mixer, int timeout)$/;"	f
snd_names_list	./src/names.c	/^int snd_names_list(const char *iface ATTRIBUTE_UNUSED,$/;"	f
snd_names_list_free	./src/names.c	/^void snd_names_list_free(snd_devname_t *list ATTRIBUTE_UNUSED)$/;"	f
snd_open_device	./include/local.h	/^static inline int snd_open_device(const char *filename, int fmode)$/;"	f
snd_output_buffer_close	./src/output.c	/^static int snd_output_buffer_close(snd_output_t *output)$/;"	f	file:
snd_output_buffer_flush	./src/output.c	/^static int snd_output_buffer_flush(snd_output_t *output ATTRIBUTE_UNUSED)$/;"	f	file:
snd_output_buffer_need	./src/output.c	/^static int snd_output_buffer_need(snd_output_t *output, size_t size)$/;"	f	file:
snd_output_buffer_open	./src/output.c	/^int snd_output_buffer_open(snd_output_t **outputp)$/;"	f
snd_output_buffer_ops	./src/output.c	/^static const snd_output_ops_t snd_output_buffer_ops = {$/;"	v	file:
snd_output_buffer_print	./src/output.c	/^static int snd_output_buffer_print(snd_output_t *output, const char *format, va_list args)$/;"	f	file:
snd_output_buffer_putc	./src/output.c	/^static int snd_output_buffer_putc(snd_output_t *output, int c)$/;"	f	file:
snd_output_buffer_puts	./src/output.c	/^static int snd_output_buffer_puts(snd_output_t *output, const char *str)$/;"	f	file:
snd_output_buffer_string	./src/output.c	/^size_t snd_output_buffer_string(snd_output_t *output, char **buf)$/;"	f
snd_output_buffer_t	./src/output.c	/^} snd_output_buffer_t;$/;"	t	typeref:struct:_snd_output_buffer	file:
snd_output_close	./src/output.c	/^int snd_output_close(snd_output_t *output)$/;"	f
snd_output_flush	./src/output.c	/^int snd_output_flush(snd_output_t *output)$/;"	f
snd_output_ops_t	./src/output.c	/^} snd_output_ops_t;$/;"	t	typeref:struct:_snd_output_ops	file:
snd_output_printf	./src/output.c	/^int snd_output_printf(snd_output_t *output, const char *format, ...)$/;"	f
snd_output_putc	./src/output.c	/^int snd_output_putc(snd_output_t *output, int c)$/;"	f
snd_output_puts	./src/output.c	/^int snd_output_puts(snd_output_t *output, const char *str)$/;"	f
snd_output_stdio_attach	./src/output.c	/^int snd_output_stdio_attach(snd_output_t **outputp, FILE *fp, int _close)$/;"	f
snd_output_stdio_close	./src/output.c	/^static int snd_output_stdio_close(snd_output_t *output)$/;"	f	file:
snd_output_stdio_flush	./src/output.c	/^static int snd_output_stdio_flush(snd_output_t *output)$/;"	f	file:
snd_output_stdio_open	./src/output.c	/^int snd_output_stdio_open(snd_output_t **outputp, const char *file, const char *mode)$/;"	f
snd_output_stdio_ops	./src/output.c	/^static const snd_output_ops_t snd_output_stdio_ops = {$/;"	v	file:
snd_output_stdio_print	./src/output.c	/^static int snd_output_stdio_print(snd_output_t *output, const char *format, va_list args)$/;"	f	file:
snd_output_stdio_putc	./src/output.c	/^static int snd_output_stdio_putc(snd_output_t *output, int c)$/;"	f	file:
snd_output_stdio_puts	./src/output.c	/^static int snd_output_stdio_puts(snd_output_t *output, const char *str)$/;"	f	file:
snd_output_stdio_t	./src/output.c	/^} snd_output_stdio_t;$/;"	t	typeref:struct:_snd_output_stdio	file:
snd_output_t	./include/output.h	/^typedef struct _snd_output snd_output_t;$/;"	t	typeref:struct:_snd_output
snd_output_type_t	./include/output.h	/^} snd_output_type_t;$/;"	t	typeref:enum:_snd_output_type
snd_output_vprintf	./src/output.c	/^int snd_output_vprintf(snd_output_t *output, const char *format, va_list args)$/;"	f
snd_p_p_t	./src/alisp/alisp_snd.c	/^typedef void *(*snd_p_p_t)(void *handle);$/;"	t	file:
snd_pcm_access_mask_alloca	./include/pcm.h	759;"	d
snd_pcm_access_mask_any	./src/pcm/pcm.c	/^void snd_pcm_access_mask_any(snd_pcm_access_mask_t *mask)$/;"	f
snd_pcm_access_mask_copy	./src/pcm/pcm.c	/^void snd_pcm_access_mask_copy(snd_pcm_access_mask_t *dst, const snd_pcm_access_mask_t *src)$/;"	f
snd_pcm_access_mask_empty	./src/pcm/pcm.c	/^int snd_pcm_access_mask_empty(const snd_pcm_access_mask_t *mask)$/;"	f
snd_pcm_access_mask_free	./src/pcm/pcm.c	/^void snd_pcm_access_mask_free(snd_pcm_access_mask_t *obj)$/;"	f
snd_pcm_access_mask_malloc	./src/pcm/pcm.c	/^int snd_pcm_access_mask_malloc(snd_pcm_access_mask_t **ptr)$/;"	f
snd_pcm_access_mask_none	./src/pcm/pcm.c	/^void snd_pcm_access_mask_none(snd_pcm_access_mask_t *mask)$/;"	f
snd_pcm_access_mask_reset	./src/pcm/pcm.c	/^void snd_pcm_access_mask_reset(snd_pcm_access_mask_t *mask, snd_pcm_access_t val)$/;"	f
snd_pcm_access_mask_set	./src/pcm/pcm.c	/^void snd_pcm_access_mask_set(snd_pcm_access_mask_t *mask, snd_pcm_access_t val)$/;"	f
snd_pcm_access_mask_sizeof	./src/pcm/pcm.c	/^size_t snd_pcm_access_mask_sizeof()$/;"	f
snd_pcm_access_mask_t	./include/pcm.h	/^typedef struct _snd_pcm_access_mask snd_pcm_access_mask_t;$/;"	t	typeref:struct:_snd_pcm_access_mask
snd_pcm_access_mask_test	./src/pcm/pcm.c	/^int snd_pcm_access_mask_test(const snd_pcm_access_mask_t *mask, snd_pcm_access_t val)$/;"	f
snd_pcm_access_name	./src/pcm/pcm.c	/^const char *snd_pcm_access_name(snd_pcm_access_t acc)$/;"	f
snd_pcm_access_names	./src/pcm/pcm.c	/^static const char *const snd_pcm_access_names[] = {$/;"	v	file:
snd_pcm_access_t	./include/pcm.h	/^} snd_pcm_access_t;$/;"	t	typeref:enum:_snd_pcm_access
snd_pcm_adpcm_decode	./src/pcm/pcm_adpcm.c	/^void snd_pcm_adpcm_decode(const snd_pcm_channel_area_t *dst_areas,$/;"	f
snd_pcm_adpcm_decode	./src/pcm/pcm_plugin.h	92;"	d
snd_pcm_adpcm_dump	./src/pcm/pcm_adpcm.c	/^static void snd_pcm_adpcm_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_adpcm_encode	./src/pcm/pcm_adpcm.c	/^void snd_pcm_adpcm_encode(const snd_pcm_channel_area_t *dst_areas,$/;"	f
snd_pcm_adpcm_encode	./src/pcm/pcm_plugin.h	93;"	d
snd_pcm_adpcm_hw_free	./src/pcm/pcm_adpcm.c	/^static int snd_pcm_adpcm_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_adpcm_hw_params	./src/pcm/pcm_adpcm.c	/^static int snd_pcm_adpcm_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_adpcm_hw_refine	./src/pcm/pcm_adpcm.c	/^static int snd_pcm_adpcm_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_adpcm_hw_refine_cchange	./src/pcm/pcm_adpcm.c	/^static int snd_pcm_adpcm_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_adpcm_hw_refine_cprepare	./src/pcm/pcm_adpcm.c	/^static int snd_pcm_adpcm_hw_refine_cprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_adpcm_hw_refine_schange	./src/pcm/pcm_adpcm.c	/^static int snd_pcm_adpcm_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_adpcm_hw_refine_sprepare	./src/pcm/pcm_adpcm.c	/^static int snd_pcm_adpcm_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_adpcm_init	./src/pcm/pcm_adpcm.c	/^static int snd_pcm_adpcm_init(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_adpcm_open	./src/pcm/pcm_adpcm.c	/^int snd_pcm_adpcm_open(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat, snd_pcm_t *slave, int close_slave)$/;"	f
snd_pcm_adpcm_ops	./src/pcm/pcm_adpcm.c	/^static const snd_pcm_ops_t snd_pcm_adpcm_ops = {$/;"	v	file:
snd_pcm_adpcm_read_areas	./src/pcm/pcm_adpcm.c	/^snd_pcm_adpcm_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_adpcm_state_t	./src/pcm/pcm_plugin.h	/^} snd_pcm_adpcm_state_t;$/;"	t	typeref:struct:_snd_pcm_adpcm_state
snd_pcm_adpcm_t	./src/pcm/pcm_adpcm.c	/^} snd_pcm_adpcm_t;$/;"	t	typeref:struct:__anon104	file:
snd_pcm_adpcm_write_areas	./src/pcm/pcm_adpcm.c	/^snd_pcm_adpcm_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_alaw_decode	./src/pcm/pcm_alaw.c	/^void snd_pcm_alaw_decode(const snd_pcm_channel_area_t *dst_areas,$/;"	f
snd_pcm_alaw_decode	./src/pcm/pcm_plugin.h	88;"	d
snd_pcm_alaw_dump	./src/pcm/pcm_alaw.c	/^static void snd_pcm_alaw_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_alaw_encode	./src/pcm/pcm_alaw.c	/^void snd_pcm_alaw_encode(const snd_pcm_channel_area_t *dst_areas,$/;"	f
snd_pcm_alaw_encode	./src/pcm/pcm_plugin.h	89;"	d
snd_pcm_alaw_hw_params	./src/pcm/pcm_alaw.c	/^static int snd_pcm_alaw_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_alaw_hw_refine	./src/pcm/pcm_alaw.c	/^static int snd_pcm_alaw_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_alaw_hw_refine_cchange	./src/pcm/pcm_alaw.c	/^static int snd_pcm_alaw_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_alaw_hw_refine_cprepare	./src/pcm/pcm_alaw.c	/^static int snd_pcm_alaw_hw_refine_cprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_alaw_hw_refine_schange	./src/pcm/pcm_alaw.c	/^static int snd_pcm_alaw_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_alaw_hw_refine_sprepare	./src/pcm/pcm_alaw.c	/^static int snd_pcm_alaw_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_alaw_open	./src/pcm/pcm_alaw.c	/^int snd_pcm_alaw_open(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat, snd_pcm_t *slave, int close_slave)$/;"	f
snd_pcm_alaw_ops	./src/pcm/pcm_alaw.c	/^static const snd_pcm_ops_t snd_pcm_alaw_ops = {$/;"	v	file:
snd_pcm_alaw_read_areas	./src/pcm/pcm_alaw.c	/^snd_pcm_alaw_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_alaw_t	./src/pcm/pcm_alaw.c	/^} snd_pcm_alaw_t;$/;"	t	typeref:struct:__anon102	file:
snd_pcm_alaw_write_areas	./src/pcm/pcm_alaw.c	/^snd_pcm_alaw_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_area_copy	./src/pcm/pcm.c	/^int snd_pcm_area_copy(const snd_pcm_channel_area_t *dst_area, snd_pcm_uframes_t dst_offset,$/;"	f
snd_pcm_area_silence	./src/pcm/pcm.c	/^int snd_pcm_area_silence(const snd_pcm_channel_area_t *dst_area, snd_pcm_uframes_t dst_offset,$/;"	f
snd_pcm_areas_copy	./src/pcm/pcm.c	/^int snd_pcm_areas_copy(const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset,$/;"	f
snd_pcm_areas_from_buf	./src/pcm/pcm.c	/^void snd_pcm_areas_from_buf(snd_pcm_t *pcm, snd_pcm_channel_area_t *areas, $/;"	f
snd_pcm_areas_from_buf	./src/pcm/pcm_local.h	254;"	d
snd_pcm_areas_from_bufs	./src/pcm/pcm.c	/^void snd_pcm_areas_from_bufs(snd_pcm_t *pcm, snd_pcm_channel_area_t *areas, $/;"	f
snd_pcm_areas_from_bufs	./src/pcm/pcm_local.h	256;"	d
snd_pcm_areas_silence	./src/pcm/pcm.c	/^int snd_pcm_areas_silence(const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset,$/;"	f
snd_pcm_async	./src/pcm/pcm.c	/^int snd_pcm_async(snd_pcm_t *pcm, int sig, pid_t pid)$/;"	f
snd_pcm_avail	./src/pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_avail(snd_pcm_t *pcm)$/;"	f
snd_pcm_avail_delay	./src/pcm/pcm.c	/^int snd_pcm_avail_delay(snd_pcm_t *pcm,$/;"	f
snd_pcm_avail_update	./src/pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_avail_update(snd_pcm_t *pcm)$/;"	f
snd_pcm_build_linear_format	./src/pcm/pcm_misc.c	/^snd_pcm_format_t snd_pcm_build_linear_format(int width, int pwidth, int unsignd, int big_endian)$/;"	f
snd_pcm_bytes_to_frames	./src/pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_bytes_to_frames(snd_pcm_t *pcm, ssize_t bytes)$/;"	f
snd_pcm_bytes_to_samples	./src/pcm/pcm.c	/^long snd_pcm_bytes_to_samples(snd_pcm_t *pcm, ssize_t bytes)$/;"	f
snd_pcm_channel_area_addr	./src/pcm/pcm_local.h	/^static inline void *snd_pcm_channel_area_addr(const snd_pcm_channel_area_t *area, snd_pcm_uframes_t offset)$/;"	f
snd_pcm_channel_area_step	./src/pcm/pcm_local.h	/^static inline unsigned int snd_pcm_channel_area_step(const snd_pcm_channel_area_t *area)$/;"	f
snd_pcm_channel_area_t	./include/pcm.h	/^} snd_pcm_channel_area_t;$/;"	t	typeref:struct:_snd_pcm_channel_area
snd_pcm_channel_info	./src/pcm/pcm_local.h	/^static inline int snd_pcm_channel_info(snd_pcm_t *pcm, snd_pcm_channel_info_t *info)$/;"	f
snd_pcm_channel_info_shm	./src/pcm/pcm_local.h	298;"	d
snd_pcm_channel_info_shm	./src/pcm/pcm_mmap.c	/^int snd_pcm_channel_info_shm(snd_pcm_t *pcm, snd_pcm_channel_info_t *info, int shmid)$/;"	f
snd_pcm_channel_info_t	./src/pcm/pcm_local.h	/^} snd_pcm_channel_info_t;$/;"	t	typeref:struct:_snd_pcm_channel_info
snd_pcm_check_error	./src/pcm/pcm_local.h	/^static inline int snd_pcm_check_error(snd_pcm_t *pcm, int err)$/;"	f
snd_pcm_class_t	./include/pcm.h	/^} snd_pcm_class_t;$/;"	t	typeref:enum:_snd_pcm_class
snd_pcm_close	./src/pcm/pcm.c	/^int snd_pcm_close(snd_pcm_t *pcm)$/;"	f
snd_pcm_conf_generic_id	./src/pcm/pcm.c	/^int snd_pcm_conf_generic_id(const char *id)$/;"	f
snd_pcm_conf_generic_id	./src/pcm/pcm_local.h	260;"	d
snd_pcm_copy_dump	./src/pcm/pcm_copy.c	/^static void snd_pcm_copy_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_copy_hw_params	./src/pcm/pcm_copy.c	/^static int snd_pcm_copy_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_copy_hw_refine	./src/pcm/pcm_copy.c	/^static int snd_pcm_copy_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_copy_hw_refine_cchange	./src/pcm/pcm_copy.c	/^static int snd_pcm_copy_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_copy_hw_refine_cprepare	./src/pcm/pcm_copy.c	/^static int snd_pcm_copy_hw_refine_cprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_copy_hw_refine_schange	./src/pcm/pcm_copy.c	/^static int snd_pcm_copy_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_copy_hw_refine_sprepare	./src/pcm/pcm_copy.c	/^static int snd_pcm_copy_hw_refine_sprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_copy_open	./src/pcm/pcm_copy.c	/^int snd_pcm_copy_open(snd_pcm_t **pcmp, const char *name, snd_pcm_t *slave, int close_slave)$/;"	f
snd_pcm_copy_ops	./src/pcm/pcm_copy.c	/^static const snd_pcm_ops_t snd_pcm_copy_ops = {$/;"	v	file:
snd_pcm_copy_read_areas	./src/pcm/pcm_copy.c	/^snd_pcm_copy_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_copy_t	./src/pcm/pcm_copy.c	/^} snd_pcm_copy_t;$/;"	t	typeref:struct:__anon111	file:
snd_pcm_copy_write_areas	./src/pcm/pcm_copy.c	/^snd_pcm_copy_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_delay	./src/pcm/pcm.c	/^int snd_pcm_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f
snd_pcm_direct	./src/pcm/pcm_direct.h	/^struct snd_pcm_direct {$/;"	s
snd_pcm_direct_async	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_async(snd_pcm_t *pcm, int sig, pid_t pid)$/;"	f
snd_pcm_direct_async	./src/pcm/pcm_direct.h	206;"	d
snd_pcm_direct_channel_info	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_channel_info(snd_pcm_t *pcm, snd_pcm_channel_info_t * info)$/;"	f
snd_pcm_direct_channel_info	./src/pcm/pcm_direct.h	220;"	d
snd_pcm_direct_check_interleave	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_check_interleave(snd_pcm_direct_t *dmix, snd_pcm_t *pcm)$/;"	f
snd_pcm_direct_check_interleave	./src/pcm/pcm_direct.h	200;"	d
snd_pcm_direct_clear_timer_queue	./src/pcm/pcm_direct.c	/^void snd_pcm_direct_clear_timer_queue(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_clear_timer_queue	./src/pcm/pcm_direct.h	230;"	d
snd_pcm_direct_client_connect	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_client_connect(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_client_connect	./src/pcm/pcm_direct.h	190;"	d
snd_pcm_direct_client_discard	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_client_discard(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_client_discard	./src/pcm/pcm_direct.h	192;"	d
snd_pcm_direct_get_slave_ipc_offset	./src/pcm/pcm_direct.c	/^static int snd_pcm_direct_get_slave_ipc_offset(snd_config_t *root,$/;"	f	file:
snd_pcm_direct_hw_free	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_hw_free(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_direct_hw_free	./src/pcm/pcm_direct.h	216;"	d
snd_pcm_direct_hw_params	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f
snd_pcm_direct_hw_params	./src/pcm/pcm_direct.h	214;"	d
snd_pcm_direct_hw_refine	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_direct_hw_refine	./src/pcm/pcm_direct.h	212;"	d
snd_pcm_direct_info	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_info(snd_pcm_t *pcm, snd_pcm_info_t * info)$/;"	f
snd_pcm_direct_info	./src/pcm/pcm_direct.h	210;"	d
snd_pcm_direct_initialize_poll_fd	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_initialize_poll_fd(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_initialize_poll_fd	./src/pcm/pcm_direct.h	198;"	d
snd_pcm_direct_initialize_secondary_slave	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_initialize_secondary_slave(snd_pcm_direct_t *dmix,$/;"	f
snd_pcm_direct_initialize_secondary_slave	./src/pcm/pcm_direct.h	196;"	d
snd_pcm_direct_initialize_slave	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_initialize_slave(snd_pcm_direct_t *dmix, snd_pcm_t *spcm, struct slave_params *params)$/;"	f
snd_pcm_direct_initialize_slave	./src/pcm/pcm_direct.h	194;"	d
snd_pcm_direct_mmap	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_mmap(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_direct_mmap	./src/pcm/pcm_direct.h	222;"	d
snd_pcm_direct_munmap	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_munmap(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_direct_munmap	./src/pcm/pcm_direct.h	224;"	d
snd_pcm_direct_nonblock	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_nonblock(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int nonblock ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_direct_nonblock	./src/pcm/pcm_direct.h	204;"	d
snd_pcm_direct_open_conf	./src/pcm/pcm_direct.h	/^struct snd_pcm_direct_open_conf {$/;"	s
snd_pcm_direct_open_secondary_client	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_open_secondary_client(snd_pcm_t **spcmp, snd_pcm_direct_t *dmix, const char *client_name)$/;"	f
snd_pcm_direct_open_secondary_client	./src/pcm/pcm_direct.h	234;"	d
snd_pcm_direct_parse_bindings	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_parse_bindings(snd_pcm_direct_t *dmix,$/;"	f
snd_pcm_direct_parse_bindings	./src/pcm/pcm_direct.h	202;"	d
snd_pcm_direct_parse_open_conf	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_parse_open_conf(snd_config_t *root, snd_config_t *conf,$/;"	f
snd_pcm_direct_parse_open_conf	./src/pcm/pcm_direct.h	236;"	d
snd_pcm_direct_poll_revents	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_poll_revents(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f
snd_pcm_direct_poll_revents	./src/pcm/pcm_direct.h	208;"	d
snd_pcm_direct_resume	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_resume(snd_pcm_t *pcm)$/;"	f
snd_pcm_direct_resume	./src/pcm/pcm_direct.h	226;"	d
snd_pcm_direct_semaphore_create_or_connect	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_semaphore_create_or_connect(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_semaphore_create_or_connect	./src/pcm/pcm_direct.h	180;"	d
snd_pcm_direct_semaphore_discard	./src/pcm/pcm_direct.h	/^static inline int snd_pcm_direct_semaphore_discard(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_semaphore_down	./src/pcm/pcm_direct.h	/^static inline int snd_pcm_direct_semaphore_down(snd_pcm_direct_t *dmix, int sem_num)$/;"	f
snd_pcm_direct_semaphore_up	./src/pcm/pcm_direct.h	/^static inline int snd_pcm_direct_semaphore_up(snd_pcm_direct_t *dmix, int sem_num)$/;"	f
snd_pcm_direct_server_create	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_server_create(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_server_create	./src/pcm/pcm_direct.h	186;"	d
snd_pcm_direct_server_discard	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_server_discard(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_server_discard	./src/pcm/pcm_direct.h	188;"	d
snd_pcm_direct_set_timer_params	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_set_timer_params(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_set_timer_params	./src/pcm/pcm_direct.h	232;"	d
snd_pcm_direct_share_t	./src/pcm/pcm_direct.h	/^} snd_pcm_direct_share_t;$/;"	t	typeref:struct:__anon123
snd_pcm_direct_shm_create_or_connect	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_shm_create_or_connect(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_shm_create_or_connect	./src/pcm/pcm_direct.h	182;"	d
snd_pcm_direct_shm_discard	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_shm_discard(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_shm_discard	./src/pcm/pcm_direct.h	184;"	d
snd_pcm_direct_sw_params	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_sw_params(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t * params ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_direct_sw_params	./src/pcm/pcm_direct.h	218;"	d
snd_pcm_direct_t	./src/pcm/pcm_direct.h	/^typedef struct snd_pcm_direct snd_pcm_direct_t;$/;"	t	typeref:struct:snd_pcm_direct
snd_pcm_direct_timer_stop	./src/pcm/pcm_direct.c	/^int snd_pcm_direct_timer_stop(snd_pcm_direct_t *dmix)$/;"	f
snd_pcm_direct_timer_stop	./src/pcm/pcm_direct.h	228;"	d
snd_pcm_dmix_avail_update	./src/pcm/pcm_dmix.c	/^static snd_pcm_sframes_t snd_pcm_dmix_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_close	./src/pcm/pcm_dmix.c	/^static int snd_pcm_dmix_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_delay	./src/pcm/pcm_dmix.c	/^static int snd_pcm_dmix_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_dmix_drain	./src/pcm/pcm_dmix.c	/^static int snd_pcm_dmix_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_drop	./src/pcm/pcm_dmix.c	/^static int snd_pcm_dmix_drop(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_dump	./src/pcm/pcm_dmix.c	/^static void snd_pcm_dmix_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_dmix_fast_ops	./src/pcm/pcm_dmix.c	/^static const snd_pcm_fast_ops_t snd_pcm_dmix_fast_ops = {$/;"	v	file:
snd_pcm_dmix_forward	./src/pcm/pcm_dmix.c	/^static snd_pcm_sframes_t snd_pcm_dmix_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_dmix_forwardable	./src/pcm/pcm_dmix.c	/^static snd_pcm_sframes_t snd_pcm_dmix_forwardable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_htimestamp	./src/pcm/pcm_dmix.c	/^static int snd_pcm_dmix_htimestamp(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_dmix_hwsync	./src/pcm/pcm_dmix.c	/^static int snd_pcm_dmix_hwsync(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_mmap_commit	./src/pcm/pcm_dmix.c	/^static snd_pcm_sframes_t snd_pcm_dmix_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_dmix_open	./src/pcm/pcm_dmix.c	/^int snd_pcm_dmix_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_dmix_ops	./src/pcm/pcm_dmix.c	/^static const snd_pcm_ops_t snd_pcm_dmix_ops = {$/;"	v	file:
snd_pcm_dmix_pause	./src/pcm/pcm_dmix.c	/^static int snd_pcm_dmix_pause(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int enable ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_dmix_poll_revents	./src/pcm/pcm_dmix.c	/^static int snd_pcm_dmix_poll_revents(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f	file:
snd_pcm_dmix_prepare	./src/pcm/pcm_dmix.c	/^static int snd_pcm_dmix_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_readi	./src/pcm/pcm_dmix.c	/^static snd_pcm_sframes_t snd_pcm_dmix_readi(snd_pcm_t *pcm ATTRIBUTE_UNUSED, void *buffer ATTRIBUTE_UNUSED, snd_pcm_uframes_t size ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_dmix_readn	./src/pcm/pcm_dmix.c	/^static snd_pcm_sframes_t snd_pcm_dmix_readn(snd_pcm_t *pcm ATTRIBUTE_UNUSED, void **bufs ATTRIBUTE_UNUSED, snd_pcm_uframes_t size ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_dmix_reset	./src/pcm/pcm_dmix.c	/^static int snd_pcm_dmix_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_rewind	./src/pcm/pcm_dmix.c	/^static snd_pcm_sframes_t snd_pcm_dmix_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_dmix_rewindable	./src/pcm/pcm_dmix.c	/^static snd_pcm_sframes_t snd_pcm_dmix_rewindable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_start	./src/pcm/pcm_dmix.c	/^static int snd_pcm_dmix_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_start_timer	./src/pcm/pcm_dmix.c	/^static int snd_pcm_dmix_start_timer(snd_pcm_t *pcm, snd_pcm_direct_t *dmix)$/;"	f	file:
snd_pcm_dmix_state	./src/pcm/pcm_dmix.c	/^static snd_pcm_state_t snd_pcm_dmix_state(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_status	./src/pcm/pcm_dmix.c	/^static int snd_pcm_dmix_status(snd_pcm_t *pcm, snd_pcm_status_t * status)$/;"	f	file:
snd_pcm_dmix_sync_area	./src/pcm/pcm_dmix.c	/^static void snd_pcm_dmix_sync_area(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dmix_sync_ptr	./src/pcm/pcm_dmix.c	/^static int snd_pcm_dmix_sync_ptr(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_drain	./src/pcm/pcm.c	/^int snd_pcm_drain(snd_pcm_t *pcm)$/;"	f
snd_pcm_drop	./src/pcm/pcm.c	/^int snd_pcm_drop(snd_pcm_t *pcm)$/;"	f
snd_pcm_dshare_avail_update	./src/pcm/pcm_dshare.c	/^static snd_pcm_sframes_t snd_pcm_dshare_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_close	./src/pcm/pcm_dshare.c	/^static int snd_pcm_dshare_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_delay	./src/pcm/pcm_dshare.c	/^static int snd_pcm_dshare_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_dshare_drain	./src/pcm/pcm_dshare.c	/^static int snd_pcm_dshare_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_drop	./src/pcm/pcm_dshare.c	/^static int snd_pcm_dshare_drop(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_dump	./src/pcm/pcm_dshare.c	/^static void snd_pcm_dshare_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_dshare_fast_ops	./src/pcm/pcm_dshare.c	/^static const snd_pcm_fast_ops_t snd_pcm_dshare_fast_ops = {$/;"	v	file:
snd_pcm_dshare_forward	./src/pcm/pcm_dshare.c	/^static snd_pcm_sframes_t snd_pcm_dshare_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_dshare_forwardable	./src/pcm/pcm_dshare.c	/^static snd_pcm_sframes_t snd_pcm_dshare_forwardable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_htimestamp	./src/pcm/pcm_dshare.c	/^static int snd_pcm_dshare_htimestamp(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_dshare_hwsync	./src/pcm/pcm_dshare.c	/^static int snd_pcm_dshare_hwsync(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_mmap_commit	./src/pcm/pcm_dshare.c	/^static snd_pcm_sframes_t snd_pcm_dshare_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_dshare_open	./src/pcm/pcm_dshare.c	/^int snd_pcm_dshare_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_dshare_ops	./src/pcm/pcm_dshare.c	/^static const snd_pcm_ops_t snd_pcm_dshare_ops = {$/;"	v	file:
snd_pcm_dshare_pause	./src/pcm/pcm_dshare.c	/^static int snd_pcm_dshare_pause(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int enable ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_dshare_prepare	./src/pcm/pcm_dshare.c	/^static int snd_pcm_dshare_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_readi	./src/pcm/pcm_dshare.c	/^static snd_pcm_sframes_t snd_pcm_dshare_readi(snd_pcm_t *pcm ATTRIBUTE_UNUSED, void *buffer ATTRIBUTE_UNUSED, snd_pcm_uframes_t size ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_dshare_readn	./src/pcm/pcm_dshare.c	/^static snd_pcm_sframes_t snd_pcm_dshare_readn(snd_pcm_t *pcm ATTRIBUTE_UNUSED, void **bufs ATTRIBUTE_UNUSED, snd_pcm_uframes_t size ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_dshare_reset	./src/pcm/pcm_dshare.c	/^static int snd_pcm_dshare_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_rewind	./src/pcm/pcm_dshare.c	/^static snd_pcm_sframes_t snd_pcm_dshare_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_dshare_rewindable	./src/pcm/pcm_dshare.c	/^static snd_pcm_sframes_t snd_pcm_dshare_rewindable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_start	./src/pcm/pcm_dshare.c	/^static int snd_pcm_dshare_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_start_timer	./src/pcm/pcm_dshare.c	/^static int snd_pcm_dshare_start_timer(snd_pcm_direct_t *dshare)$/;"	f	file:
snd_pcm_dshare_state	./src/pcm/pcm_dshare.c	/^static snd_pcm_state_t snd_pcm_dshare_state(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_status	./src/pcm/pcm_dshare.c	/^static int snd_pcm_dshare_status(snd_pcm_t *pcm, snd_pcm_status_t * status)$/;"	f	file:
snd_pcm_dshare_sync_area	./src/pcm/pcm_dshare.c	/^static void snd_pcm_dshare_sync_area(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dshare_sync_ptr	./src/pcm/pcm_dshare.c	/^static int snd_pcm_dshare_sync_ptr(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_avail_update	./src/pcm/pcm_dsnoop.c	/^static snd_pcm_sframes_t snd_pcm_dsnoop_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_close	./src/pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_delay	./src/pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_dsnoop_drain	./src/pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_drop	./src/pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_drop(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_dump	./src/pcm/pcm_dsnoop.c	/^static void snd_pcm_dsnoop_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_dsnoop_fast_ops	./src/pcm/pcm_dsnoop.c	/^static const snd_pcm_fast_ops_t snd_pcm_dsnoop_fast_ops = {$/;"	v	file:
snd_pcm_dsnoop_forward	./src/pcm/pcm_dsnoop.c	/^static snd_pcm_sframes_t snd_pcm_dsnoop_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_dsnoop_forwardable	./src/pcm/pcm_dsnoop.c	/^static snd_pcm_sframes_t snd_pcm_dsnoop_forwardable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_htimestamp	./src/pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_htimestamp(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_dsnoop_hwsync	./src/pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_hwsync(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_mmap_commit	./src/pcm/pcm_dsnoop.c	/^static snd_pcm_sframes_t snd_pcm_dsnoop_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_dsnoop_open	./src/pcm/pcm_dsnoop.c	/^int snd_pcm_dsnoop_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_dsnoop_ops	./src/pcm/pcm_dsnoop.c	/^static const snd_pcm_ops_t snd_pcm_dsnoop_ops = {$/;"	v	file:
snd_pcm_dsnoop_pause	./src/pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_pause(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int enable ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_dsnoop_prepare	./src/pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_reset	./src/pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_rewind	./src/pcm/pcm_dsnoop.c	/^static snd_pcm_sframes_t snd_pcm_dsnoop_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_dsnoop_rewindable	./src/pcm/pcm_dsnoop.c	/^static snd_pcm_sframes_t snd_pcm_dsnoop_rewindable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_start	./src/pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_state	./src/pcm/pcm_dsnoop.c	/^static snd_pcm_state_t snd_pcm_dsnoop_state(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_status	./src/pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_status(snd_pcm_t *pcm, snd_pcm_status_t * status)$/;"	f	file:
snd_pcm_dsnoop_sync_area	./src/pcm/pcm_dsnoop.c	/^static void snd_pcm_dsnoop_sync_area(snd_pcm_t *pcm, snd_pcm_uframes_t slave_hw_ptr, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_dsnoop_sync_ptr	./src/pcm/pcm_dsnoop.c	/^static int snd_pcm_dsnoop_sync_ptr(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_dsnoop_writei	./src/pcm/pcm_dsnoop.c	/^static snd_pcm_sframes_t snd_pcm_dsnoop_writei(snd_pcm_t *pcm ATTRIBUTE_UNUSED, const void *buffer ATTRIBUTE_UNUSED, snd_pcm_uframes_t size ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_dsnoop_writen	./src/pcm/pcm_dsnoop.c	/^static snd_pcm_sframes_t snd_pcm_dsnoop_writen(snd_pcm_t *pcm ATTRIBUTE_UNUSED, void **bufs ATTRIBUTE_UNUSED, snd_pcm_uframes_t size ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_dump	./src/pcm/pcm.c	/^int snd_pcm_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f
snd_pcm_dump_hw_setup	./src/pcm/pcm.c	/^int snd_pcm_dump_hw_setup(snd_pcm_t *pcm, snd_output_t *out)$/;"	f
snd_pcm_dump_setup	./src/pcm/pcm.c	/^int snd_pcm_dump_setup(snd_pcm_t *pcm, snd_output_t *out)$/;"	f
snd_pcm_dump_sw_setup	./src/pcm/pcm.c	/^int snd_pcm_dump_sw_setup(snd_pcm_t *pcm, snd_output_t *out)$/;"	f
snd_pcm_extplug	./include/pcm_extplug.h	/^struct snd_pcm_extplug {$/;"	s
snd_pcm_extplug_callback	./include/pcm_extplug.h	/^struct snd_pcm_extplug_callback {$/;"	s
snd_pcm_extplug_callback_t	./include/pcm_extplug.h	/^typedef struct snd_pcm_extplug_callback snd_pcm_extplug_callback_t;$/;"	t	typeref:struct:snd_pcm_extplug_callback
snd_pcm_extplug_close	./src/pcm/pcm_extplug.c	/^static int snd_pcm_extplug_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_extplug_create	./src/pcm/pcm_extplug.c	/^int snd_pcm_extplug_create(snd_pcm_extplug_t *extplug, const char *name,$/;"	f
snd_pcm_extplug_delete	./src/pcm/pcm_extplug.c	/^int snd_pcm_extplug_delete(snd_pcm_extplug_t *extplug)$/;"	f
snd_pcm_extplug_dump	./src/pcm/pcm_extplug.c	/^static void snd_pcm_extplug_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_extplug_hw_free	./src/pcm/pcm_extplug.c	/^static int snd_pcm_extplug_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_extplug_hw_params	./src/pcm/pcm_extplug.c	/^static int snd_pcm_extplug_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_extplug_hw_refine	./src/pcm/pcm_extplug.c	/^static int snd_pcm_extplug_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_extplug_hw_refine_cchange	./src/pcm/pcm_extplug.c	/^static int snd_pcm_extplug_hw_refine_cchange(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_extplug_hw_refine_cprepare	./src/pcm/pcm_extplug.c	/^static int snd_pcm_extplug_hw_refine_cprepare(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_extplug_hw_refine_schange	./src/pcm/pcm_extplug.c	/^static int snd_pcm_extplug_hw_refine_schange(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_extplug_hw_refine_sprepare	./src/pcm/pcm_extplug.c	/^static int snd_pcm_extplug_hw_refine_sprepare(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_extplug_init	./src/pcm/pcm_extplug.c	/^static int snd_pcm_extplug_init(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_extplug_ops	./src/pcm/pcm_extplug.c	/^static const snd_pcm_ops_t snd_pcm_extplug_ops = {$/;"	v	file:
snd_pcm_extplug_params_reset	./src/pcm/pcm_extplug.c	/^void snd_pcm_extplug_params_reset(snd_pcm_extplug_t *extplug)$/;"	f
snd_pcm_extplug_priv	./src/pcm/pcm_extplug.c	/^typedef struct snd_pcm_extplug_priv {$/;"	s	file:
snd_pcm_extplug_read_areas	./src/pcm/pcm_extplug.c	/^snd_pcm_extplug_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_extplug_set_param	./include/pcm_extplug.h	/^static inline int snd_pcm_extplug_set_param(snd_pcm_extplug_t *extplug, int type, unsigned int val)$/;"	f
snd_pcm_extplug_set_param_list	./src/pcm/pcm_extplug.c	/^int snd_pcm_extplug_set_param_list(snd_pcm_extplug_t *extplug, int type, unsigned int num_list, const unsigned int *list)$/;"	f
snd_pcm_extplug_set_param_minmax	./src/pcm/pcm_extplug.c	/^int snd_pcm_extplug_set_param_minmax(snd_pcm_extplug_t *extplug, int type, unsigned int min, unsigned int max)$/;"	f
snd_pcm_extplug_set_slave_param	./include/pcm_extplug.h	/^static inline int snd_pcm_extplug_set_slave_param(snd_pcm_extplug_t *extplug, int type, unsigned int val)$/;"	f
snd_pcm_extplug_set_slave_param_list	./src/pcm/pcm_extplug.c	/^int snd_pcm_extplug_set_slave_param_list(snd_pcm_extplug_t *extplug, int type, unsigned int num_list, const unsigned int *list)$/;"	f
snd_pcm_extplug_set_slave_param_minmax	./src/pcm/pcm_extplug.c	/^int snd_pcm_extplug_set_slave_param_minmax(snd_pcm_extplug_t *extplug, int type, unsigned int min, unsigned int max)$/;"	f
snd_pcm_extplug_t	./include/pcm_extplug.h	/^typedef struct snd_pcm_extplug snd_pcm_extplug_t;$/;"	t	typeref:struct:snd_pcm_extplug
snd_pcm_extplug_write_areas	./src/pcm/pcm_extplug.c	/^snd_pcm_extplug_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_fast_ops_t	./src/pcm/pcm_local.h	/^} snd_pcm_fast_ops_t;$/;"	t	typeref:struct:__anon138
snd_pcm_file_add_frames	./src/pcm/pcm_file.c	/^static void snd_pcm_file_add_frames(snd_pcm_t *pcm, $/;"	f	file:
snd_pcm_file_append_value	./src/pcm/pcm_file.c	/^static int snd_pcm_file_append_value(char **string_p, char **index_ch_p,$/;"	f	file:
snd_pcm_file_close	./src/pcm/pcm_file.c	/^static int snd_pcm_file_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_file_drain	./src/pcm/pcm_file.c	/^static int snd_pcm_file_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_file_drop	./src/pcm/pcm_file.c	/^static int snd_pcm_file_drop(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_file_dump	./src/pcm/pcm_file.c	/^static void snd_pcm_file_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_file_fast_ops	./src/pcm/pcm_file.c	/^static const snd_pcm_fast_ops_t snd_pcm_file_fast_ops = {$/;"	v	file:
snd_pcm_file_format_t	./src/pcm/pcm_file.c	/^} snd_pcm_file_format_t;$/;"	t	typeref:enum:_snd_pcm_file_format	file:
snd_pcm_file_forward	./src/pcm/pcm_file.c	/^static snd_pcm_sframes_t snd_pcm_file_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_file_forwardable	./src/pcm/pcm_file.c	/^static snd_pcm_sframes_t snd_pcm_file_forwardable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_file_hw_free	./src/pcm/pcm_file.c	/^static int snd_pcm_file_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_file_hw_params	./src/pcm/pcm_file.c	/^static int snd_pcm_file_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_file_mmap_commit	./src/pcm/pcm_file.c	/^static snd_pcm_sframes_t snd_pcm_file_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_file_open	./src/pcm/pcm_file.c	/^int snd_pcm_file_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_file_open_output_file	./src/pcm/pcm_file.c	/^static int snd_pcm_file_open_output_file(snd_pcm_file_t *file)$/;"	f	file:
snd_pcm_file_ops	./src/pcm/pcm_file.c	/^static const snd_pcm_ops_t snd_pcm_file_ops = {$/;"	v	file:
snd_pcm_file_readi	./src/pcm/pcm_file.c	/^static snd_pcm_sframes_t snd_pcm_file_readi(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_file_readn	./src/pcm/pcm_file.c	/^static snd_pcm_sframes_t snd_pcm_file_readn(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_file_replace_fname	./src/pcm/pcm_file.c	/^static int snd_pcm_file_replace_fname(snd_pcm_file_t *file, char **new_fname_p)$/;"	f	file:
snd_pcm_file_reset	./src/pcm/pcm_file.c	/^static int snd_pcm_file_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_file_rewind	./src/pcm/pcm_file.c	/^static snd_pcm_sframes_t snd_pcm_file_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_file_rewindable	./src/pcm/pcm_file.c	/^static snd_pcm_sframes_t snd_pcm_file_rewindable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_file_t	./src/pcm/pcm_file.c	/^} snd_pcm_file_t;$/;"	t	typeref:struct:__anon121	file:
snd_pcm_file_write_bytes	./src/pcm/pcm_file.c	/^static void snd_pcm_file_write_bytes(snd_pcm_t *pcm, size_t bytes)$/;"	f	file:
snd_pcm_file_writei	./src/pcm/pcm_file.c	/^static snd_pcm_sframes_t snd_pcm_file_writei(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_file_writen	./src/pcm/pcm_file.c	/^static snd_pcm_sframes_t snd_pcm_file_writen(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_format_aliases	./src/pcm/pcm.c	/^static const char *const snd_pcm_format_aliases[SND_PCM_FORMAT_LAST+1] = {$/;"	v	file:
snd_pcm_format_big_endian	./src/pcm/pcm_misc.c	/^int snd_pcm_format_big_endian(snd_pcm_format_t format)$/;"	f
snd_pcm_format_cpu_endian	./src/pcm/pcm_misc.c	/^int snd_pcm_format_cpu_endian(snd_pcm_format_t format)$/;"	f
snd_pcm_format_description	./src/pcm/pcm.c	/^const char *snd_pcm_format_description(snd_pcm_format_t format)$/;"	f
snd_pcm_format_descriptions	./src/pcm/pcm.c	/^static const char *const snd_pcm_format_descriptions[] = {$/;"	v	file:
snd_pcm_format_float	./src/pcm/pcm_misc.c	/^int snd_pcm_format_float(snd_pcm_format_t format)$/;"	f
snd_pcm_format_linear	./src/pcm/pcm_misc.c	/^int snd_pcm_format_linear(snd_pcm_format_t format)$/;"	f
snd_pcm_format_little_endian	./src/pcm/pcm_misc.c	/^int snd_pcm_format_little_endian(snd_pcm_format_t format)$/;"	f
snd_pcm_format_mask_alloca	./include/pcm.h	784;"	d
snd_pcm_format_mask_any	./src/pcm/pcm.c	/^void snd_pcm_format_mask_any(snd_pcm_format_mask_t *mask)$/;"	f
snd_pcm_format_mask_copy	./src/pcm/pcm.c	/^void snd_pcm_format_mask_copy(snd_pcm_format_mask_t *dst, const snd_pcm_format_mask_t *src)$/;"	f
snd_pcm_format_mask_empty	./src/pcm/pcm.c	/^int snd_pcm_format_mask_empty(const snd_pcm_format_mask_t *mask)$/;"	f
snd_pcm_format_mask_free	./src/pcm/pcm.c	/^void snd_pcm_format_mask_free(snd_pcm_format_mask_t *obj)$/;"	f
snd_pcm_format_mask_malloc	./src/pcm/pcm.c	/^int snd_pcm_format_mask_malloc(snd_pcm_format_mask_t **ptr)$/;"	f
snd_pcm_format_mask_none	./src/pcm/pcm.c	/^void snd_pcm_format_mask_none(snd_pcm_format_mask_t *mask)$/;"	f
snd_pcm_format_mask_reset	./src/pcm/pcm.c	/^void snd_pcm_format_mask_reset(snd_pcm_format_mask_t *mask, snd_pcm_format_t val)$/;"	f
snd_pcm_format_mask_set	./src/pcm/pcm.c	/^void snd_pcm_format_mask_set(snd_pcm_format_mask_t *mask, snd_pcm_format_t val)$/;"	f
snd_pcm_format_mask_sizeof	./src/pcm/pcm.c	/^size_t snd_pcm_format_mask_sizeof()$/;"	f
snd_pcm_format_mask_t	./include/pcm.h	/^typedef struct _snd_pcm_format_mask snd_pcm_format_mask_t;$/;"	t	typeref:struct:_snd_pcm_format_mask
snd_pcm_format_mask_test	./src/pcm/pcm.c	/^int snd_pcm_format_mask_test(const snd_pcm_format_mask_t *mask, snd_pcm_format_t val)$/;"	f
snd_pcm_format_name	./src/pcm/pcm.c	/^const char *snd_pcm_format_name(snd_pcm_format_t format)$/;"	f
snd_pcm_format_names	./src/pcm/pcm.c	/^static const char *const snd_pcm_format_names[] = {$/;"	v	file:
snd_pcm_format_physical_width	./src/pcm/pcm_misc.c	/^int snd_pcm_format_physical_width(snd_pcm_format_t format)$/;"	f
snd_pcm_format_set_silence	./src/pcm/pcm_misc.c	/^int snd_pcm_format_set_silence(snd_pcm_format_t format, void *data, unsigned int samples)$/;"	f
snd_pcm_format_signed	./src/pcm/pcm_misc.c	/^int snd_pcm_format_signed(snd_pcm_format_t format)$/;"	f
snd_pcm_format_silence	./src/pcm/pcm_misc.c	/^u_int8_t snd_pcm_format_silence(snd_pcm_format_t format)$/;"	f
snd_pcm_format_silence_16	./src/pcm/pcm_misc.c	/^u_int16_t snd_pcm_format_silence_16(snd_pcm_format_t format)$/;"	f
snd_pcm_format_silence_32	./src/pcm/pcm_misc.c	/^u_int32_t snd_pcm_format_silence_32(snd_pcm_format_t format)$/;"	f
snd_pcm_format_silence_64	./src/pcm/pcm_misc.c	/^u_int64_t snd_pcm_format_silence_64(snd_pcm_format_t format)$/;"	f
snd_pcm_format_size	./src/pcm/pcm_misc.c	/^ssize_t snd_pcm_format_size(snd_pcm_format_t format, size_t samples)$/;"	f
snd_pcm_format_t	./include/pcm.h	/^} snd_pcm_format_t;$/;"	t	typeref:enum:_snd_pcm_format
snd_pcm_format_unsigned	./src/pcm/pcm_misc.c	/^int snd_pcm_format_unsigned(snd_pcm_format_t format)$/;"	f
snd_pcm_format_value	./src/pcm/pcm.c	/^snd_pcm_format_t snd_pcm_format_value(const char* name)$/;"	f
snd_pcm_format_width	./src/pcm/pcm_misc.c	/^int snd_pcm_format_width(snd_pcm_format_t format)$/;"	f
snd_pcm_forward	./src/pcm/pcm.c	/^snd_pcm_sframes_t INTERNAL(snd_pcm_forward)(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f
snd_pcm_forwardable	./src/pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_forwardable(snd_pcm_t *pcm)$/;"	f
snd_pcm_frames_to_bytes	./src/pcm/pcm.c	/^ssize_t snd_pcm_frames_to_bytes(snd_pcm_t *pcm, snd_pcm_sframes_t frames)$/;"	f
snd_pcm_free	./src/pcm/pcm.c	/^int snd_pcm_free(snd_pcm_t *pcm)$/;"	f
snd_pcm_free	./src/pcm/pcm_local.h	252;"	d
snd_pcm_generic_async	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_async(snd_pcm_t *pcm, int sig, pid_t pid)$/;"	f
snd_pcm_generic_async	./src/pcm/pcm_generic.h	32;"	d
snd_pcm_generic_avail_update	./src/pcm/pcm_generic.c	/^snd_pcm_sframes_t snd_pcm_generic_avail_update(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_avail_update	./src/pcm/pcm_generic.h	100;"	d
snd_pcm_generic_channel_info	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_channel_info(snd_pcm_t *pcm, snd_pcm_channel_info_t *info)$/;"	f
snd_pcm_generic_channel_info	./src/pcm/pcm_generic.h	50;"	d
snd_pcm_generic_channel_info_no_buffer	./src/pcm/pcm_generic.h	52;"	d
snd_pcm_generic_close	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_close(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_close	./src/pcm/pcm_generic.h	28;"	d
snd_pcm_generic_delay	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f
snd_pcm_generic_delay	./src/pcm/pcm_generic.h	74;"	d
snd_pcm_generic_drain	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_drain(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_drain	./src/pcm/pcm_generic.h	68;"	d
snd_pcm_generic_drop	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_drop(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_drop	./src/pcm/pcm_generic.h	66;"	d
snd_pcm_generic_forward	./src/pcm/pcm_generic.c	/^snd_pcm_sframes_t snd_pcm_generic_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f
snd_pcm_generic_forward	./src/pcm/pcm_generic.h	78;"	d
snd_pcm_generic_forwardable	./src/pcm/pcm_generic.c	/^snd_pcm_sframes_t snd_pcm_generic_forwardable(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_forwardable	./src/pcm/pcm_generic.h	76;"	d
snd_pcm_generic_htimestamp	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_htimestamp(snd_pcm_t *pcm, snd_pcm_uframes_t *avail,$/;"	f
snd_pcm_generic_hw_free	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_hw_free(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_hw_free	./src/pcm/pcm_generic.h	42;"	d
snd_pcm_generic_hw_params	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_generic_hw_params	./src/pcm/pcm_generic.h	48;"	d
snd_pcm_generic_hw_refine	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_generic_hw_refine	./src/pcm/pcm_generic.h	46;"	d
snd_pcm_generic_hwsync	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_hwsync(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_hwsync	./src/pcm/pcm_generic.h	60;"	d
snd_pcm_generic_info	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_info(snd_pcm_t *pcm, snd_pcm_info_t * info)$/;"	f
snd_pcm_generic_info	./src/pcm/pcm_generic.h	40;"	d
snd_pcm_generic_link	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_link(snd_pcm_t *pcm1, snd_pcm_t *pcm2)$/;"	f
snd_pcm_generic_link	./src/pcm/pcm_generic.h	84;"	d
snd_pcm_generic_link_slaves	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_link_slaves(snd_pcm_t *pcm, snd_pcm_t *master)$/;"	f
snd_pcm_generic_link_slaves	./src/pcm/pcm_generic.h	86;"	d
snd_pcm_generic_mmap	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_mmap(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_mmap	./src/pcm/pcm_generic.h	102;"	d
snd_pcm_generic_mmap_commit	./src/pcm/pcm_generic.c	/^snd_pcm_sframes_t snd_pcm_generic_mmap_commit(snd_pcm_t *pcm, $/;"	f
snd_pcm_generic_mmap_commit	./src/pcm/pcm_generic.h	98;"	d
snd_pcm_generic_munmap	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_munmap(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_munmap	./src/pcm/pcm_generic.h	104;"	d
snd_pcm_generic_nonblock	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_nonblock(snd_pcm_t *pcm, int nonblock)$/;"	f
snd_pcm_generic_nonblock	./src/pcm/pcm_generic.h	30;"	d
snd_pcm_generic_pause	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_pause(snd_pcm_t *pcm, int enable)$/;"	f
snd_pcm_generic_pause	./src/pcm/pcm_generic.h	70;"	d
snd_pcm_generic_poll_descriptors	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_poll_descriptors(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int space)$/;"	f
snd_pcm_generic_poll_descriptors	./src/pcm/pcm_generic.h	36;"	d
snd_pcm_generic_poll_descriptors_count	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_poll_descriptors_count(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_poll_descriptors_count	./src/pcm/pcm_generic.h	34;"	d
snd_pcm_generic_poll_revents	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_poll_revents(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f
snd_pcm_generic_poll_revents	./src/pcm/pcm_generic.h	38;"	d
snd_pcm_generic_prepare	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_prepare(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_prepare	./src/pcm/pcm_generic.h	58;"	d
snd_pcm_generic_readi	./src/pcm/pcm_generic.c	/^snd_pcm_sframes_t snd_pcm_generic_readi(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)$/;"	f
snd_pcm_generic_readi	./src/pcm/pcm_generic.h	94;"	d
snd_pcm_generic_readn	./src/pcm/pcm_generic.c	/^snd_pcm_sframes_t snd_pcm_generic_readn(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f
snd_pcm_generic_readn	./src/pcm/pcm_generic.h	96;"	d
snd_pcm_generic_real_htimestamp	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_real_htimestamp(snd_pcm_t *pcm, snd_pcm_uframes_t *avail,$/;"	f
snd_pcm_generic_reset	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_reset(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_reset	./src/pcm/pcm_generic.h	62;"	d
snd_pcm_generic_resume	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_resume(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_resume	./src/pcm/pcm_generic.h	72;"	d
snd_pcm_generic_rewind	./src/pcm/pcm_generic.c	/^snd_pcm_sframes_t snd_pcm_generic_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f
snd_pcm_generic_rewind	./src/pcm/pcm_generic.h	82;"	d
snd_pcm_generic_rewindable	./src/pcm/pcm_generic.c	/^snd_pcm_sframes_t snd_pcm_generic_rewindable(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_rewindable	./src/pcm/pcm_generic.h	80;"	d
snd_pcm_generic_start	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_start(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_start	./src/pcm/pcm_generic.h	64;"	d
snd_pcm_generic_state	./src/pcm/pcm_generic.c	/^snd_pcm_state_t snd_pcm_generic_state(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_state	./src/pcm/pcm_generic.h	56;"	d
snd_pcm_generic_status	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_status(snd_pcm_t *pcm, snd_pcm_status_t * status)$/;"	f
snd_pcm_generic_status	./src/pcm/pcm_generic.h	54;"	d
snd_pcm_generic_sw_params	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_sw_params(snd_pcm_t *pcm, snd_pcm_sw_params_t *params)$/;"	f
snd_pcm_generic_sw_params	./src/pcm/pcm_generic.h	44;"	d
snd_pcm_generic_t	./src/pcm/pcm_generic.h	/^} snd_pcm_generic_t;	$/;"	t	typeref:struct:__anon103
snd_pcm_generic_unlink	./src/pcm/pcm_generic.c	/^int snd_pcm_generic_unlink(snd_pcm_t *pcm)$/;"	f
snd_pcm_generic_unlink	./src/pcm/pcm_generic.h	88;"	d
snd_pcm_generic_writei	./src/pcm/pcm_generic.c	/^snd_pcm_sframes_t snd_pcm_generic_writei(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)$/;"	f
snd_pcm_generic_writei	./src/pcm/pcm_generic.h	90;"	d
snd_pcm_generic_writen	./src/pcm/pcm_generic.c	/^snd_pcm_sframes_t snd_pcm_generic_writen(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f
snd_pcm_generic_writen	./src/pcm/pcm_generic.h	92;"	d
snd_pcm_get_params	./src/pcm/pcm.c	/^int snd_pcm_get_params(snd_pcm_t *pcm,$/;"	f
snd_pcm_hook_add	./src/pcm/pcm_hooks.c	/^int snd_pcm_hook_add(snd_pcm_hook_t **hookp, snd_pcm_t *pcm,$/;"	f
snd_pcm_hook_add_conf	./src/pcm/pcm_hooks.c	/^static int snd_pcm_hook_add_conf(snd_pcm_t *pcm, snd_config_t *root, snd_config_t *conf)$/;"	f	file:
snd_pcm_hook_ctl_elems_close	./src/pcm/pcm_hooks.c	/^static int snd_pcm_hook_ctl_elems_close(snd_pcm_hook_t *hook)$/;"	f	file:
snd_pcm_hook_ctl_elems_hw_free	./src/pcm/pcm_hooks.c	/^static int snd_pcm_hook_ctl_elems_hw_free(snd_pcm_hook_t *hook)$/;"	f	file:
snd_pcm_hook_ctl_elems_hw_params	./src/pcm/pcm_hooks.c	/^static int snd_pcm_hook_ctl_elems_hw_params(snd_pcm_hook_t *hook)$/;"	f	file:
snd_pcm_hook_dllist	./src/pcm/pcm_hooks.c	/^struct snd_pcm_hook_dllist {$/;"	s	file:
snd_pcm_hook_func_t	./include/pcm.h	/^typedef int (*snd_pcm_hook_func_t)(snd_pcm_hook_t *hook);$/;"	t
snd_pcm_hook_get_pcm	./src/pcm/pcm_hooks.c	/^snd_pcm_t *snd_pcm_hook_get_pcm(snd_pcm_hook_t *hook)$/;"	f
snd_pcm_hook_get_private	./src/pcm/pcm_hooks.c	/^void *snd_pcm_hook_get_private(snd_pcm_hook_t *hook)$/;"	f
snd_pcm_hook_remove	./src/pcm/pcm_hooks.c	/^int snd_pcm_hook_remove(snd_pcm_hook_t *hook)$/;"	f
snd_pcm_hook_set_private	./src/pcm/pcm_hooks.c	/^void snd_pcm_hook_set_private(snd_pcm_hook_t *hook, void *private_data)$/;"	f
snd_pcm_hook_t	./include/pcm.h	/^typedef struct _snd_pcm_hook snd_pcm_hook_t;$/;"	t	typeref:struct:_snd_pcm_hook
snd_pcm_hook_type_t	./include/pcm.h	/^} snd_pcm_hook_type_t;$/;"	t	typeref:enum:_snd_pcm_hook_type
snd_pcm_hooks_close	./src/pcm/pcm_hooks.c	/^static int snd_pcm_hooks_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hooks_dump	./src/pcm/pcm_hooks.c	/^static void snd_pcm_hooks_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_hooks_fast_ops	./src/pcm/pcm_hooks.c	/^static const snd_pcm_fast_ops_t snd_pcm_hooks_fast_ops = {$/;"	v	file:
snd_pcm_hooks_hw_free	./src/pcm/pcm_hooks.c	/^static int snd_pcm_hooks_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hooks_hw_params	./src/pcm/pcm_hooks.c	/^static int snd_pcm_hooks_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_hooks_open	./src/pcm/pcm_hooks.c	/^int snd_pcm_hooks_open(snd_pcm_t **pcmp, const char *name, snd_pcm_t *slave, int close_slave)$/;"	f
snd_pcm_hooks_ops	./src/pcm/pcm_hooks.c	/^static const snd_pcm_ops_t snd_pcm_hooks_ops = {$/;"	v	file:
snd_pcm_hooks_t	./src/pcm/pcm_hooks.c	/^} snd_pcm_hooks_t;$/;"	t	typeref:struct:__anon122	file:
snd_pcm_htimestamp	./src/pcm/pcm.c	/^int snd_pcm_htimestamp(snd_pcm_t *pcm, snd_pcm_uframes_t *avail, snd_htimestamp_t *tstamp)$/;"	f
snd_pcm_hw_async	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_async(snd_pcm_t *pcm, int sig, pid_t pid)$/;"	f	file:
snd_pcm_hw_avail_update	./src/pcm/pcm_hw.c	/^static snd_pcm_sframes_t snd_pcm_hw_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_change_timer	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_change_timer(snd_pcm_t *pcm, int enable)$/;"	f	file:
snd_pcm_hw_channel_info	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_channel_info(snd_pcm_t *pcm, snd_pcm_channel_info_t * info)$/;"	f	file:
snd_pcm_hw_clear_timer_queue	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_clear_timer_queue(snd_pcm_hw_t *hw)$/;"	f	file:
snd_pcm_hw_close	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_close_timer	./src/pcm/pcm_hw.c	/^static void snd_pcm_hw_close_timer(snd_pcm_hw_t *hw)$/;"	f	file:
snd_pcm_hw_convert_from_old_params	./src/pcm/pcm_hw.c	/^static void snd_pcm_hw_convert_from_old_params(snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_hw_convert_to_old_params	./src/pcm/pcm_hw.c	/^static void snd_pcm_hw_convert_to_old_params(struct sndrv_pcm_hw_params_old *oparams,$/;"	f	file:
snd_pcm_hw_delay	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_hw_drain	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_drop	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_drop(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_dump	./src/pcm/pcm_hw.c	/^static void snd_pcm_hw_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_hw_fast_ops	./src/pcm/pcm_hw.c	/^static const snd_pcm_fast_ops_t snd_pcm_hw_fast_ops = {$/;"	v	file:
snd_pcm_hw_fast_ops	./src/pcm/pcm_hw.c	/^static const snd_pcm_fast_ops_t snd_pcm_hw_fast_ops;$/;"	v	file:
snd_pcm_hw_fast_ops_timer	./src/pcm/pcm_hw.c	/^static const snd_pcm_fast_ops_t snd_pcm_hw_fast_ops_timer = {$/;"	v	file:
snd_pcm_hw_fast_ops_timer	./src/pcm/pcm_hw.c	/^static const snd_pcm_fast_ops_t snd_pcm_hw_fast_ops_timer;$/;"	v	file:
snd_pcm_hw_fast_tstamp	./src/pcm/pcm_hw.c	/^struct timespec snd_pcm_hw_fast_tstamp(snd_pcm_t *pcm)$/;"	f
snd_pcm_hw_forward	./src/pcm/pcm_hw.c	/^static snd_pcm_sframes_t snd_pcm_hw_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_hw_forwardable	./src/pcm/pcm_hw.c	/^static snd_pcm_sframes_t snd_pcm_hw_forwardable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_free	./src/pcm/pcm.c	/^int snd_pcm_hw_free(snd_pcm_t *pcm)$/;"	f
snd_pcm_hw_htimestamp	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_htimestamp(snd_pcm_t *pcm, snd_pcm_uframes_t *avail,$/;"	f	file:
snd_pcm_hw_hw_free	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_hw_params	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_hw_hw_refine	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_hw_hwsync	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_hwsync(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_info	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_info(snd_pcm_t *pcm, snd_pcm_info_t * info)$/;"	f	file:
snd_pcm_hw_link	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_link(snd_pcm_t *pcm1, snd_pcm_t *pcm2)$/;"	f	file:
snd_pcm_hw_link_slaves	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_link_slaves(snd_pcm_t *pcm, snd_pcm_t *master)$/;"	f	file:
snd_pcm_hw_mmap	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_mmap(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_hw_mmap_commit	./src/pcm/pcm_hw.c	/^static snd_pcm_sframes_t snd_pcm_hw_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_hw_mmap_control	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_mmap_control(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_mmap_status	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_mmap_status(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_munmap	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_munmap(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_hw_munmap_control	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_munmap_control(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_munmap_status	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_munmap_status(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_nonblock	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_nonblock(snd_pcm_t *pcm, int nonblock)$/;"	f	file:
snd_pcm_hw_open	./src/pcm/pcm_hw.c	/^int snd_pcm_hw_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_hw_open_fd	./src/pcm/pcm_hw.c	/^int snd_pcm_hw_open_fd(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_hw_open_fd	./src/pcm/pcm_local.h	262;"	d
snd_pcm_hw_ops	./src/pcm/pcm_hw.c	/^static const snd_pcm_ops_t snd_pcm_hw_ops = {$/;"	v	file:
snd_pcm_hw_param_always_eq	./src/pcm/pcm_local.h	312;"	d
snd_pcm_hw_param_always_eq	./src/pcm/pcm_params.c	/^int snd_pcm_hw_param_always_eq(const snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_any	./src/pcm/pcm_local.h	320;"	d
snd_pcm_hw_param_any	./src/pcm/pcm_params.c	/^int snd_pcm_hw_param_any(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_dump	./src/pcm/pcm_params.c	/^void snd_pcm_hw_param_dump(const snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_empty	./src/pcm/pcm_local.h	310;"	d
snd_pcm_hw_param_empty	./src/pcm/pcm_params.c	/^int snd_pcm_hw_param_empty(const snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_get	./src/pcm/pcm_local.h	340;"	d
snd_pcm_hw_param_get	./src/pcm/pcm_params.c	/^int snd_pcm_hw_param_get(const snd_pcm_hw_params_t *params, snd_pcm_hw_param_t var,$/;"	f
snd_pcm_hw_param_get_interval	./src/pcm/pcm_local.h	318;"	d
snd_pcm_hw_param_get_interval	./src/pcm/pcm_params.c	/^const snd_interval_t *snd_pcm_hw_param_get_interval(const snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_get_mask	./src/pcm/pcm_local.h	316;"	d
snd_pcm_hw_param_get_mask	./src/pcm/pcm_params.c	/^const snd_mask_t *snd_pcm_hw_param_get_mask(const snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_get_max	./src/pcm/pcm_local.h	344;"	d
snd_pcm_hw_param_get_max	./src/pcm/pcm_params.c	/^int snd_pcm_hw_param_get_max(const snd_pcm_hw_params_t *params, snd_pcm_hw_param_t var,$/;"	f
snd_pcm_hw_param_get_min	./src/pcm/pcm_local.h	342;"	d
snd_pcm_hw_param_get_min	./src/pcm/pcm_params.c	/^int snd_pcm_hw_param_get_min(const snd_pcm_hw_params_t *params, snd_pcm_hw_param_t var,$/;"	f
snd_pcm_hw_param_name	./src/pcm/pcm_local.h	346;"	d
snd_pcm_hw_param_name	./src/pcm/pcm_params.c	/^const char *snd_pcm_hw_param_name(snd_pcm_hw_param_t param)$/;"	f
snd_pcm_hw_param_names	./src/pcm/pcm_params.c	/^static const char *const snd_pcm_hw_param_names[] = {$/;"	v	file:
snd_pcm_hw_param_never_eq	./src/pcm/pcm_local.h	314;"	d
snd_pcm_hw_param_never_eq	./src/pcm/pcm_params.c	/^int snd_pcm_hw_param_never_eq(const snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_refine_multiple	./src/pcm/pcm_local.h	308;"	d
snd_pcm_hw_param_refine_multiple	./src/pcm/pcm_params.c	/^int snd_pcm_hw_param_refine_multiple(snd_pcm_t *pcm,$/;"	f
snd_pcm_hw_param_refine_near	./src/pcm/pcm_local.h	306;"	d
snd_pcm_hw_param_refine_near	./src/pcm/pcm_params.c	/^int snd_pcm_hw_param_refine_near(snd_pcm_t *pcm,$/;"	f
snd_pcm_hw_param_set	./src/pcm/pcm_local.h	336;"	d
snd_pcm_hw_param_set	./src/pcm/pcm_params.c	/^int snd_pcm_hw_param_set(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_set_first	./src/pcm/pcm_local.h	324;"	d
snd_pcm_hw_param_set_first	./src/pcm/pcm_params.c	/^int snd_pcm_hw_param_set_first(snd_pcm_t *pcm, $/;"	f
snd_pcm_hw_param_set_integer	./src/pcm/pcm_local.h	322;"	d
snd_pcm_hw_param_set_integer	./src/pcm/pcm_params.c	/^int snd_pcm_hw_param_set_integer(snd_pcm_t *pcm, $/;"	f
snd_pcm_hw_param_set_last	./src/pcm/pcm_local.h	326;"	d
snd_pcm_hw_param_set_last	./src/pcm/pcm_params.c	/^int snd_pcm_hw_param_set_last(snd_pcm_t *pcm, $/;"	f
snd_pcm_hw_param_set_mask	./src/pcm/pcm_local.h	338;"	d
snd_pcm_hw_param_set_mask	./src/pcm/pcm_params.c	/^int snd_pcm_hw_param_set_mask(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_set_max	./src/pcm/pcm_local.h	332;"	d
snd_pcm_hw_param_set_max	./src/pcm/pcm_params.c	/^int snd_pcm_hw_param_set_max(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_set_min	./src/pcm/pcm_local.h	330;"	d
snd_pcm_hw_param_set_min	./src/pcm/pcm_params.c	/^int snd_pcm_hw_param_set_min(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_set_minmax	./src/pcm/pcm_local.h	334;"	d
snd_pcm_hw_param_set_minmax	./src/pcm/pcm_params.c	/^int snd_pcm_hw_param_set_minmax(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_set_near	./src/pcm/pcm_local.h	328;"	d
snd_pcm_hw_param_set_near	./src/pcm/pcm_params.c	/^int snd_pcm_hw_param_set_near(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_param_set_near_minmax	./src/pcm/pcm_params.c	/^static int snd_pcm_hw_param_set_near_minmax(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_hw_param_t	./src/pcm/pcm_local.h	/^typedef enum sndrv_pcm_hw_param snd_pcm_hw_param_t;$/;"	t	typeref:enum:sndrv_pcm_hw_param
snd_pcm_hw_params	./src/pcm/pcm.c	/^int snd_pcm_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_alloca	./include/pcm.h	572;"	d
snd_pcm_hw_params_any	./src/pcm/pcm.c	/^int snd_pcm_hw_params_any(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_can_disable_period_wakeup	./src/pcm/pcm.c	/^int snd_pcm_hw_params_can_disable_period_wakeup(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_can_mmap_sample_resolution	./src/pcm/pcm.c	/^int snd_pcm_hw_params_can_mmap_sample_resolution(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_can_overrange	./src/pcm/pcm.c	/^int snd_pcm_hw_params_can_overrange(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_can_pause	./src/pcm/pcm.c	/^int snd_pcm_hw_params_can_pause(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_can_resume	./src/pcm/pcm.c	/^int snd_pcm_hw_params_can_resume(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_can_sync_start	./src/pcm/pcm.c	/^int snd_pcm_hw_params_can_sync_start(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_choose	./src/pcm/pcm_params.c	/^static int snd_pcm_hw_params_choose(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_hw_params_copy	./src/pcm/pcm.c	/^void snd_pcm_hw_params_copy(snd_pcm_hw_params_t *dst, const snd_pcm_hw_params_t *src)$/;"	f
snd_pcm_hw_params_current	./src/pcm/pcm.c	/^int snd_pcm_hw_params_current(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_dump	./src/pcm/pcm.c	/^int snd_pcm_hw_params_dump(snd_pcm_hw_params_t *params, snd_output_t *out)$/;"	f
snd_pcm_hw_params_free	./src/pcm/pcm.c	/^void snd_pcm_hw_params_free(snd_pcm_hw_params_t *obj)$/;"	f
snd_pcm_hw_params_get_access	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_access)(const snd_pcm_hw_params_t *params, snd_pcm_access_t *access)$/;"	f
snd_pcm_hw_params_get_access_mask	./src/pcm/pcm.c	/^int snd_pcm_hw_params_get_access_mask(snd_pcm_hw_params_t *params, snd_pcm_access_mask_t *mask)$/;"	f
snd_pcm_hw_params_get_buffer_size	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_buffer_size)(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_hw_params_get_buffer_size_max	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_buffer_size_max)(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_hw_params_get_buffer_size_min	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_buffer_size_min)(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_hw_params_get_buffer_time	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_buffer_time)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_buffer_time_max	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_buffer_time_max)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_buffer_time_min	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_buffer_time_min)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_channels	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_channels)(const snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_get_channels_max	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_channels_max)(const snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_get_channels_min	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_channels_min)(const snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_get_export_buffer	./src/pcm/pcm.c	/^int snd_pcm_hw_params_get_export_buffer(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_get_fifo_size	./src/pcm/pcm.c	/^int snd_pcm_hw_params_get_fifo_size(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_get_format	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_format)(const snd_pcm_hw_params_t *params, snd_pcm_format_t *format)$/;"	f
snd_pcm_hw_params_get_format_mask	./src/pcm/pcm.c	/^void snd_pcm_hw_params_get_format_mask(snd_pcm_hw_params_t *params, snd_pcm_format_mask_t *mask)$/;"	f
snd_pcm_hw_params_get_min_align	./src/pcm/pcm.c	/^int snd_pcm_hw_params_get_min_align(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_hw_params_get_period_size	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_period_size)(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)$/;"	f
snd_pcm_hw_params_get_period_size_max	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_period_size_max)(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)$/;"	f
snd_pcm_hw_params_get_period_size_min	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_period_size_min)(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)$/;"	f
snd_pcm_hw_params_get_period_time	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_period_time)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_period_time_max	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_period_time_max)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_period_time_min	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_period_time_min)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_period_wakeup	./src/pcm/pcm.c	/^int snd_pcm_hw_params_get_period_wakeup(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_get_periods	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_periods)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_periods_max	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_periods_max)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_periods_min	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_periods_min)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_rate	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_rate)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_rate_max	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_rate_max)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_rate_min	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_rate_min)(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_get_rate_numden	./src/pcm/pcm.c	/^int snd_pcm_hw_params_get_rate_numden(const snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_params_get_rate_resample	./src/pcm/pcm.c	/^int snd_pcm_hw_params_get_rate_resample(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_get_sbits	./src/pcm/pcm.c	/^int snd_pcm_hw_params_get_sbits(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_get_subformat	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_subformat)(const snd_pcm_hw_params_t *params, snd_pcm_subformat_t *subformat)$/;"	f
snd_pcm_hw_params_get_subformat_mask	./src/pcm/pcm.c	/^void snd_pcm_hw_params_get_subformat_mask(snd_pcm_hw_params_t *params, snd_pcm_subformat_mask_t *mask)$/;"	f
snd_pcm_hw_params_get_tick_time	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_tick_time)(const snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int *val, int *dir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_params_get_tick_time_max	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_tick_time_max)(const snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int *val, int *dir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_params_get_tick_time_min	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_get_tick_time_min)(const snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int *val, int *dir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_params_is_batch	./src/pcm/pcm.c	/^int snd_pcm_hw_params_is_batch(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_is_block_transfer	./src/pcm/pcm.c	/^int snd_pcm_hw_params_is_block_transfer(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_is_double	./src/pcm/pcm.c	/^int snd_pcm_hw_params_is_double(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_is_half_duplex	./src/pcm/pcm.c	/^int snd_pcm_hw_params_is_half_duplex(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_is_joint_duplex	./src/pcm/pcm.c	/^int snd_pcm_hw_params_is_joint_duplex(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_is_monotonic	./src/pcm/pcm.c	/^int snd_pcm_hw_params_is_monotonic(const snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_malloc	./src/pcm/pcm.c	/^int snd_pcm_hw_params_malloc(snd_pcm_hw_params_t **ptr)$/;"	f
snd_pcm_hw_params_set_access	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_access(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t access)$/;"	f
snd_pcm_hw_params_set_access_first	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_access_first)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t *access)$/;"	f
snd_pcm_hw_params_set_access_last	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_access_last)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t *access)$/;"	f
snd_pcm_hw_params_set_access_mask	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_access_mask(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_mask_t *mask)$/;"	f
snd_pcm_hw_params_set_buffer_size	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_buffer_size(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val)$/;"	f
snd_pcm_hw_params_set_buffer_size_first	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_buffer_size_first)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_hw_params_set_buffer_size_last	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_buffer_size_last)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_hw_params_set_buffer_size_max	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_buffer_size_max(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_hw_params_set_buffer_size_min	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_buffer_size_min(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_hw_params_set_buffer_size_minmax	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_buffer_size_minmax(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *min, snd_pcm_uframes_t *max)$/;"	f
snd_pcm_hw_params_set_buffer_size_near	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_buffer_size_near)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_hw_params_set_buffer_time	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_buffer_time(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)$/;"	f
snd_pcm_hw_params_set_buffer_time_first	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_buffer_time_first)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_buffer_time_last	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_buffer_time_last)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_buffer_time_max	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_buffer_time_max(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_buffer_time_min	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_buffer_time_min(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_buffer_time_minmax	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_buffer_time_minmax(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)$/;"	f
snd_pcm_hw_params_set_buffer_time_near	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_buffer_time_near)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_channels	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_channels(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)$/;"	f
snd_pcm_hw_params_set_channels_first	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_channels_first)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_set_channels_last	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_channels_last)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_set_channels_max	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_channels_max(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_set_channels_min	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_channels_min(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_set_channels_minmax	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_channels_minmax(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, unsigned int *max)$/;"	f
snd_pcm_hw_params_set_channels_near	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_channels_near)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)$/;"	f
snd_pcm_hw_params_set_export_buffer	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_export_buffer(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)$/;"	f
snd_pcm_hw_params_set_format	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_format(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t format)$/;"	f
snd_pcm_hw_params_set_format_first	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_format_first)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t *format)$/;"	f
snd_pcm_hw_params_set_format_last	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_format_last)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t *format)$/;"	f
snd_pcm_hw_params_set_format_mask	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_format_mask(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_mask_t *mask)$/;"	f
snd_pcm_hw_params_set_period_size	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_period_size(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val, int dir)$/;"	f
snd_pcm_hw_params_set_period_size_first	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_period_size_first)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)$/;"	f
snd_pcm_hw_params_set_period_size_integer	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_period_size_integer(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_set_period_size_last	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_period_size_last)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)$/;"	f
snd_pcm_hw_params_set_period_size_max	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_period_size_max(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)$/;"	f
snd_pcm_hw_params_set_period_size_min	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_period_size_min(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)$/;"	f
snd_pcm_hw_params_set_period_size_minmax	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_period_size_minmax(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *min, int *mindir, snd_pcm_uframes_t *max, int *maxdir)$/;"	f
snd_pcm_hw_params_set_period_size_near	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_period_size_near)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)$/;"	f
snd_pcm_hw_params_set_period_time	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_period_time(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)$/;"	f
snd_pcm_hw_params_set_period_time_first	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_period_time_first)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_period_time_last	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_period_time_last)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_period_time_max	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_period_time_max(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_period_time_min	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_period_time_min(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_period_time_minmax	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_period_time_minmax(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)$/;"	f
snd_pcm_hw_params_set_period_time_near	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_period_time_near)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_period_wakeup	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_period_wakeup(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)$/;"	f
snd_pcm_hw_params_set_periods	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_periods(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)$/;"	f
snd_pcm_hw_params_set_periods_first	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_periods_first)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_periods_integer	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_periods_integer(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_params_set_periods_last	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_periods_last)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_periods_max	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_periods_max(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_periods_min	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_periods_min(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_periods_minmax	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_periods_minmax(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)$/;"	f
snd_pcm_hw_params_set_periods_near	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_periods_near)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_rate	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_rate(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)$/;"	f
snd_pcm_hw_params_set_rate_first	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_rate_first)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_rate_last	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_rate_last)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_rate_max	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_rate_max(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_rate_min	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_rate_min(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_rate_minmax	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_rate_minmax(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)$/;"	f
snd_pcm_hw_params_set_rate_near	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_rate_near)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)$/;"	f
snd_pcm_hw_params_set_rate_resample	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_rate_resample(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)$/;"	f
snd_pcm_hw_params_set_subformat	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_subformat(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t subformat)$/;"	f
snd_pcm_hw_params_set_subformat_first	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_subformat_first)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t *subformat)$/;"	f
snd_pcm_hw_params_set_subformat_last	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_subformat_last)(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t *subformat)$/;"	f
snd_pcm_hw_params_set_subformat_mask	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_subformat_mask(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_mask_t *mask)$/;"	f
snd_pcm_hw_params_set_tick_time	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_tick_time(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int val ATTRIBUTE_UNUSED, int dir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_params_set_tick_time_first	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_tick_time_first)(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int *val ATTRIBUTE_UNUSED, int *dir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_params_set_tick_time_last	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_tick_time_last)(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int *val ATTRIBUTE_UNUSED, int *dir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_params_set_tick_time_max	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_tick_time_max(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int *val ATTRIBUTE_UNUSED, int *dir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_params_set_tick_time_min	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_tick_time_min(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int *val ATTRIBUTE_UNUSED, int *dir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_params_set_tick_time_minmax	./src/pcm/pcm.c	/^int snd_pcm_hw_params_set_tick_time_minmax(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int *min ATTRIBUTE_UNUSED, int *mindir ATTRIBUTE_UNUSED, unsigned int *max ATTRIBUTE_UNUSED, int *maxdir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_params_set_tick_time_near	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_hw_params_set_tick_time_near)(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int *val ATTRIBUTE_UNUSED, int *dir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_params_sizeof	./src/pcm/pcm.c	/^size_t snd_pcm_hw_params_sizeof()$/;"	f
snd_pcm_hw_params_slave	./src/pcm/pcm_local.h	304;"	d
snd_pcm_hw_params_slave	./src/pcm/pcm_params.c	/^int snd_pcm_hw_params_slave(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_params_t	./include/pcm.h	/^typedef struct _snd_pcm_hw_params snd_pcm_hw_params_t;$/;"	t	typeref:struct:_snd_pcm_hw_params
snd_pcm_hw_params_test_access	./src/pcm/pcm.c	/^int snd_pcm_hw_params_test_access(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t access)$/;"	f
snd_pcm_hw_params_test_buffer_size	./src/pcm/pcm.c	/^int snd_pcm_hw_params_test_buffer_size(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val)$/;"	f
snd_pcm_hw_params_test_buffer_time	./src/pcm/pcm.c	/^int snd_pcm_hw_params_test_buffer_time(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)$/;"	f
snd_pcm_hw_params_test_channels	./src/pcm/pcm.c	/^int snd_pcm_hw_params_test_channels(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)$/;"	f
snd_pcm_hw_params_test_format	./src/pcm/pcm.c	/^int snd_pcm_hw_params_test_format(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t format)$/;"	f
snd_pcm_hw_params_test_period_size	./src/pcm/pcm.c	/^int snd_pcm_hw_params_test_period_size(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val, int dir)$/;"	f
snd_pcm_hw_params_test_period_time	./src/pcm/pcm.c	/^int snd_pcm_hw_params_test_period_time(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)$/;"	f
snd_pcm_hw_params_test_periods	./src/pcm/pcm.c	/^int snd_pcm_hw_params_test_periods(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)$/;"	f
snd_pcm_hw_params_test_rate	./src/pcm/pcm.c	/^int snd_pcm_hw_params_test_rate(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)$/;"	f
snd_pcm_hw_params_test_subformat	./src/pcm/pcm.c	/^int snd_pcm_hw_params_test_subformat(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t subformat)$/;"	f
snd_pcm_hw_params_test_tick_time	./src/pcm/pcm.c	/^int snd_pcm_hw_params_test_tick_time(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED, unsigned int val, int dir ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_hw_pause	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_pause(snd_pcm_t *pcm, int enable)$/;"	f	file:
snd_pcm_hw_poll_descriptors	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_poll_descriptors(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int space)$/;"	f	file:
snd_pcm_hw_poll_descriptors_count	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_poll_descriptors_count(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_hw_poll_revents	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_poll_revents(snd_pcm_t *pcm, struct pollfd *pfds, unsigned nfds, unsigned short *revents)$/;"	f	file:
snd_pcm_hw_prepare	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_readi	./src/pcm/pcm_hw.c	/^static snd_pcm_sframes_t snd_pcm_hw_readi(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_hw_readn	./src/pcm/pcm_hw.c	/^static snd_pcm_sframes_t snd_pcm_hw_readn(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_hw_refine	./src/pcm/pcm_params.c	/^int snd_pcm_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_refine_slave	./src/pcm/pcm_local.h	302;"	d
snd_pcm_hw_refine_slave	./src/pcm/pcm_params.c	/^int snd_pcm_hw_refine_slave(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f
snd_pcm_hw_refine_soft	./src/pcm/pcm_local.h	300;"	d
snd_pcm_hw_refine_soft	./src/pcm/pcm_params.c	/^int snd_pcm_hw_refine_soft(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params)$/;"	f
snd_pcm_hw_reset	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_resume	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_resume(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_rewind	./src/pcm/pcm_hw.c	/^static snd_pcm_sframes_t snd_pcm_hw_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_hw_rewindable	./src/pcm/pcm_hw.c	/^static snd_pcm_sframes_t snd_pcm_hw_rewindable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_rule_div	./src/pcm/pcm_params.c	/^static int snd_pcm_hw_rule_div(snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_hw_rule_format	./src/pcm/pcm_params.c	/^static int snd_pcm_hw_rule_format(snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_hw_rule_func_t	./src/pcm/pcm_params.c	/^typedef int (*snd_pcm_hw_rule_func_t)(snd_pcm_hw_params_t *params,$/;"	t	file:
snd_pcm_hw_rule_mul	./src/pcm/pcm_params.c	/^static int snd_pcm_hw_rule_mul(snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_hw_rule_muldivk	./src/pcm/pcm_params.c	/^static int snd_pcm_hw_rule_muldivk(snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_hw_rule_mulkdiv	./src/pcm/pcm_params.c	/^static int snd_pcm_hw_rule_mulkdiv(snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_hw_rule_sample_bits	./src/pcm/pcm_params.c	/^static int snd_pcm_hw_rule_sample_bits(snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_hw_rule_t	./src/pcm/pcm_params.c	/^typedef struct _snd_pcm_hw_rule snd_pcm_hw_rule_t;$/;"	t	typeref:struct:_snd_pcm_hw_rule	file:
snd_pcm_hw_start	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_state	./src/pcm/pcm_hw.c	/^static snd_pcm_state_t snd_pcm_hw_state(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_status	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_status(snd_pcm_t *pcm, snd_pcm_status_t * status)$/;"	f	file:
snd_pcm_hw_sw_params	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_sw_params(snd_pcm_t *pcm, snd_pcm_sw_params_t * params)$/;"	f	file:
snd_pcm_hw_t	./src/pcm/pcm_hw.c	/^} snd_pcm_hw_t;$/;"	t	typeref:struct:__anon107	file:
snd_pcm_hw_unlink	./src/pcm/pcm_hw.c	/^static int snd_pcm_hw_unlink(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_hw_writei	./src/pcm/pcm_hw.c	/^static snd_pcm_sframes_t snd_pcm_hw_writei(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_hw_writen	./src/pcm/pcm_hw.c	/^static snd_pcm_sframes_t snd_pcm_hw_writen(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_hwsync	./src/pcm/pcm.c	/^int snd_pcm_hwsync(snd_pcm_t *pcm)$/;"	f
snd_pcm_iec958	./src/pcm/pcm_iec958.c	/^struct snd_pcm_iec958 {$/;"	s	file:
snd_pcm_iec958_decode	./src/pcm/pcm_iec958.c	/^static void snd_pcm_iec958_decode(snd_pcm_iec958_t *iec,$/;"	f	file:
snd_pcm_iec958_dump	./src/pcm/pcm_iec958.c	/^static void snd_pcm_iec958_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_iec958_encode	./src/pcm/pcm_iec958.c	/^static void snd_pcm_iec958_encode(snd_pcm_iec958_t *iec,$/;"	f	file:
snd_pcm_iec958_hw_params	./src/pcm/pcm_iec958.c	/^static int snd_pcm_iec958_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_iec958_hw_refine	./src/pcm/pcm_iec958.c	/^static int snd_pcm_iec958_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_iec958_hw_refine_cchange	./src/pcm/pcm_iec958.c	/^static int snd_pcm_iec958_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_iec958_hw_refine_cprepare	./src/pcm/pcm_iec958.c	/^static int snd_pcm_iec958_hw_refine_cprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_iec958_hw_refine_schange	./src/pcm/pcm_iec958.c	/^static int snd_pcm_iec958_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_iec958_hw_refine_sprepare	./src/pcm/pcm_iec958.c	/^static int snd_pcm_iec958_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_iec958_init	./src/pcm/pcm_iec958.c	/^static int snd_pcm_iec958_init(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_iec958_open	./src/pcm/pcm_iec958.c	/^int snd_pcm_iec958_open(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat,$/;"	f
snd_pcm_iec958_ops	./src/pcm/pcm_iec958.c	/^static const snd_pcm_ops_t snd_pcm_iec958_ops = {$/;"	v	file:
snd_pcm_iec958_read_areas	./src/pcm/pcm_iec958.c	/^snd_pcm_iec958_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_iec958_t	./src/pcm/pcm_iec958.c	/^typedef struct snd_pcm_iec958 snd_pcm_iec958_t;$/;"	t	typeref:struct:snd_pcm_iec958	file:
snd_pcm_iec958_write_areas	./src/pcm/pcm_iec958.c	/^snd_pcm_iec958_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_info	./src/pcm/pcm.c	/^int snd_pcm_info(snd_pcm_t *pcm, snd_pcm_info_t *info)$/;"	f
snd_pcm_info_alloca	./include/pcm.h	492;"	d
snd_pcm_info_copy	./src/pcm/pcm.c	/^void snd_pcm_info_copy(snd_pcm_info_t *dst, const snd_pcm_info_t *src)$/;"	f
snd_pcm_info_free	./src/pcm/pcm.c	/^void snd_pcm_info_free(snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_card	./src/pcm/pcm.c	/^int snd_pcm_info_get_card(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_class	./src/pcm/pcm.c	/^snd_pcm_class_t snd_pcm_info_get_class(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_device	./src/pcm/pcm.c	/^unsigned int snd_pcm_info_get_device(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_id	./src/pcm/pcm.c	/^const char *snd_pcm_info_get_id(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_name	./src/pcm/pcm.c	/^const char *snd_pcm_info_get_name(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_stream	./src/pcm/pcm.c	/^snd_pcm_stream_t snd_pcm_info_get_stream(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_subclass	./src/pcm/pcm.c	/^snd_pcm_subclass_t snd_pcm_info_get_subclass(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_subdevice	./src/pcm/pcm.c	/^unsigned int snd_pcm_info_get_subdevice(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_subdevice_name	./src/pcm/pcm.c	/^const char *snd_pcm_info_get_subdevice_name(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_subdevices_avail	./src/pcm/pcm.c	/^unsigned int snd_pcm_info_get_subdevices_avail(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_subdevices_count	./src/pcm/pcm.c	/^unsigned int snd_pcm_info_get_subdevices_count(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_get_sync	./src/pcm/pcm.c	/^snd_pcm_sync_id_t snd_pcm_info_get_sync(const snd_pcm_info_t *obj)$/;"	f
snd_pcm_info_malloc	./src/pcm/pcm.c	/^int snd_pcm_info_malloc(snd_pcm_info_t **ptr)$/;"	f
snd_pcm_info_set_device	./src/pcm/pcm.c	/^void snd_pcm_info_set_device(snd_pcm_info_t *obj, unsigned int val)$/;"	f
snd_pcm_info_set_stream	./src/pcm/pcm.c	/^void snd_pcm_info_set_stream(snd_pcm_info_t *obj, snd_pcm_stream_t val)$/;"	f
snd_pcm_info_set_subdevice	./src/pcm/pcm.c	/^void snd_pcm_info_set_subdevice(snd_pcm_info_t *obj, unsigned int val)$/;"	f
snd_pcm_info_sizeof	./src/pcm/pcm.c	/^size_t snd_pcm_info_sizeof()$/;"	f
snd_pcm_info_t	./include/pcm.h	/^typedef struct _snd_pcm_info snd_pcm_info_t;$/;"	t	typeref:struct:_snd_pcm_info
snd_pcm_ioplug	./include/pcm_ioplug.h	/^struct snd_pcm_ioplug {$/;"	s
snd_pcm_ioplug_async	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_async(snd_pcm_t *pcm ATTRIBUTE_UNUSED,$/;"	f	file:
snd_pcm_ioplug_avail_update	./src/pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t snd_pcm_ioplug_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_callback	./include/pcm_ioplug.h	/^struct snd_pcm_ioplug_callback {$/;"	s
snd_pcm_ioplug_callback_t	./include/pcm_ioplug.h	/^typedef struct snd_pcm_ioplug_callback snd_pcm_ioplug_callback_t;$/;"	t	typeref:struct:snd_pcm_ioplug_callback
snd_pcm_ioplug_channel_info	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_channel_info(snd_pcm_t *pcm, snd_pcm_channel_info_t *info)$/;"	f	file:
snd_pcm_ioplug_close	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_create	./src/pcm/pcm_ioplug.c	/^int snd_pcm_ioplug_create(snd_pcm_ioplug_t *ioplug, const char *name,$/;"	f
snd_pcm_ioplug_delay	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_ioplug_delete	./src/pcm/pcm_ioplug.c	/^int snd_pcm_ioplug_delete(snd_pcm_ioplug_t *ioplug)$/;"	f
snd_pcm_ioplug_drain	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_drop	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_drop(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_dump	./src/pcm/pcm_ioplug.c	/^static void snd_pcm_ioplug_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_ioplug_fast_ops	./src/pcm/pcm_ioplug.c	/^static const snd_pcm_fast_ops_t snd_pcm_ioplug_fast_ops = {$/;"	v	file:
snd_pcm_ioplug_forward	./src/pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t snd_pcm_ioplug_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_ioplug_forwardable	./src/pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t snd_pcm_ioplug_forwardable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_hw_free	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_hw_params	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_ioplug_hw_ptr_update	./src/pcm/pcm_ioplug.c	/^static void snd_pcm_ioplug_hw_ptr_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_hw_refine	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_ioplug_hwsync	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_hwsync(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_info	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_info(snd_pcm_t *pcm, snd_pcm_info_t *info)$/;"	f	file:
snd_pcm_ioplug_mmap	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_mmap(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_ioplug_mmap_areas	./src/pcm/pcm_ioplug.c	/^const snd_pcm_channel_area_t *snd_pcm_ioplug_mmap_areas(snd_pcm_ioplug_t *ioplug)$/;"	f
snd_pcm_ioplug_mmap_commit	./src/pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t snd_pcm_ioplug_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_ioplug_munmap	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_munmap(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_ioplug_nonblock	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_nonblock(snd_pcm_t *pcm, int nonblock)$/;"	f	file:
snd_pcm_ioplug_ops	./src/pcm/pcm_ioplug.c	/^static const snd_pcm_ops_t snd_pcm_ioplug_ops = {$/;"	v	file:
snd_pcm_ioplug_params_reset	./src/pcm/pcm_ioplug.c	/^void snd_pcm_ioplug_params_reset(snd_pcm_ioplug_t *ioplug)$/;"	f
snd_pcm_ioplug_pause	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_pause(snd_pcm_t *pcm, int enable)$/;"	f	file:
snd_pcm_ioplug_poll_descriptors	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_poll_descriptors(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int space)$/;"	f	file:
snd_pcm_ioplug_poll_descriptors_count	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_poll_descriptors_count(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_poll_revents	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_poll_revents(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f	file:
snd_pcm_ioplug_prepare	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_priv	./src/pcm/pcm_ioplug.c	/^typedef struct snd_pcm_ioplug_priv {$/;"	s	file:
snd_pcm_ioplug_readi	./src/pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t snd_pcm_ioplug_readi(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_ioplug_readn	./src/pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t snd_pcm_ioplug_readn(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_ioplug_reinit_status	./src/pcm/pcm_ioplug.c	/^int snd_pcm_ioplug_reinit_status(snd_pcm_ioplug_t *ioplug)$/;"	f
snd_pcm_ioplug_reset	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_resume	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_resume(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_rewind	./src/pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t snd_pcm_ioplug_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_ioplug_rewindable	./src/pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t snd_pcm_ioplug_rewindable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_set_param_list	./src/pcm/pcm_ioplug.c	/^int snd_pcm_ioplug_set_param_list(snd_pcm_ioplug_t *ioplug, int type, unsigned int num_list, const unsigned int *list)$/;"	f
snd_pcm_ioplug_set_param_minmax	./src/pcm/pcm_ioplug.c	/^int snd_pcm_ioplug_set_param_minmax(snd_pcm_ioplug_t *ioplug, int type, unsigned int min, unsigned int max)$/;"	f
snd_pcm_ioplug_set_state	./src/pcm/pcm_ioplug.c	/^int snd_pcm_ioplug_set_state(snd_pcm_ioplug_t *ioplug, snd_pcm_state_t state)$/;"	f
snd_pcm_ioplug_start	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_state	./src/pcm/pcm_ioplug.c	/^static snd_pcm_state_t snd_pcm_ioplug_state(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ioplug_status	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_status(snd_pcm_t *pcm, snd_pcm_status_t * status)$/;"	f	file:
snd_pcm_ioplug_sw_params	./src/pcm/pcm_ioplug.c	/^static int snd_pcm_ioplug_sw_params(snd_pcm_t *pcm, snd_pcm_sw_params_t *params)$/;"	f	file:
snd_pcm_ioplug_t	./include/pcm_ioplug.h	/^typedef struct snd_pcm_ioplug snd_pcm_ioplug_t;$/;"	t	typeref:struct:snd_pcm_ioplug
snd_pcm_ioplug_writei	./src/pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t snd_pcm_ioplug_writei(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_ioplug_writen	./src/pcm/pcm_ioplug.c	/^static snd_pcm_sframes_t snd_pcm_ioplug_writen(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_ladspa_add_default_controls	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_add_default_controls(snd_pcm_ladspa_plugin_t *lplug,$/;"	f	file:
snd_pcm_ladspa_add_plugin	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_add_plugin(struct list_head *list,$/;"	f	file:
snd_pcm_ladspa_add_to_array	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_add_to_array(snd_pcm_ladspa_array_t *array,$/;"	f	file:
snd_pcm_ladspa_add_to_carray	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_add_to_carray(snd_pcm_ladspa_array_t *array,$/;"	f	file:
snd_pcm_ladspa_allocate_instances	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_allocate_instances(snd_pcm_t *pcm, snd_pcm_ladspa_t *ladspa)$/;"	f	file:
snd_pcm_ladspa_allocate_memory	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_allocate_memory(snd_pcm_t *pcm, snd_pcm_ladspa_t *ladspa)$/;"	f	file:
snd_pcm_ladspa_allocate_zero	./src/pcm/pcm_ladspa.c	/^static LADSPA_Data *snd_pcm_ladspa_allocate_zero(snd_pcm_ladspa_t *ladspa, unsigned int idx)$/;"	f	file:
snd_pcm_ladspa_array_t	./src/pcm/pcm_ladspa.c	/^} snd_pcm_ladspa_array_t;$/;"	t	typeref:struct:__anon114	file:
snd_pcm_ladspa_build_plugins	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_build_plugins(struct list_head *list,$/;"	f	file:
snd_pcm_ladspa_check_connect	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_check_connect(snd_pcm_ladspa_plugin_t *plugin,$/;"	f	file:
snd_pcm_ladspa_check_dir	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_check_dir(snd_pcm_ladspa_plugin_t * const plugin,$/;"	f	file:
snd_pcm_ladspa_check_file	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_check_file(snd_pcm_ladspa_plugin_t * const plugin,$/;"	f	file:
snd_pcm_ladspa_close	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ladspa_connect_controls	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_connect_controls(snd_pcm_ladspa_plugin_t *plugin,$/;"	f	file:
snd_pcm_ladspa_connect_plugin	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_connect_plugin(snd_pcm_ladspa_plugin_t *plugin,$/;"	f	file:
snd_pcm_ladspa_connect_plugin1	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_connect_plugin1(snd_pcm_ladspa_plugin_t *plugin,$/;"	f	file:
snd_pcm_ladspa_connect_plugin_duplicate	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_connect_plugin_duplicate(snd_pcm_ladspa_plugin_t *plugin,$/;"	f	file:
snd_pcm_ladspa_connect_plugin_duplicate1	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_connect_plugin_duplicate1(snd_pcm_ladspa_plugin_t *plugin,$/;"	f	file:
snd_pcm_ladspa_count_ports	./src/pcm/pcm_ladspa.c	/^static unsigned int snd_pcm_ladspa_count_ports(snd_pcm_ladspa_plugin_t *lplug,$/;"	f	file:
snd_pcm_ladspa_dump	./src/pcm/pcm_ladspa.c	/^static void snd_pcm_ladspa_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_ladspa_dump_array	./src/pcm/pcm_ladspa.c	/^static void snd_pcm_ladspa_dump_array(snd_output_t *out,$/;"	f	file:
snd_pcm_ladspa_dump_direction	./src/pcm/pcm_ladspa.c	/^static void snd_pcm_ladspa_dump_direction(snd_pcm_ladspa_plugin_t *plugin,$/;"	f	file:
snd_pcm_ladspa_eps_t	./src/pcm/pcm_ladspa.c	/^} snd_pcm_ladspa_eps_t;$/;"	t	typeref:struct:__anon115	file:
snd_pcm_ladspa_find_port	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_find_port(unsigned int *res,$/;"	f	file:
snd_pcm_ladspa_find_port_idx	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_find_port_idx(unsigned int *res,$/;"	f	file:
snd_pcm_ladspa_find_sport	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_find_sport(unsigned int *res,$/;"	f	file:
snd_pcm_ladspa_free	./src/pcm/pcm_ladspa.c	/^static void snd_pcm_ladspa_free(snd_pcm_ladspa_t *ladspa)$/;"	f	file:
snd_pcm_ladspa_free_eps	./src/pcm/pcm_ladspa.c	/^static void snd_pcm_ladspa_free_eps(snd_pcm_ladspa_eps_t *eps)$/;"	f	file:
snd_pcm_ladspa_free_instances	./src/pcm/pcm_ladspa.c	/^static void snd_pcm_ladspa_free_instances(snd_pcm_t *pcm, snd_pcm_ladspa_t *ladspa, int cleanup)$/;"	f	file:
snd_pcm_ladspa_free_io	./src/pcm/pcm_ladspa.c	/^static void snd_pcm_ladspa_free_io(snd_pcm_ladspa_plugin_io_t *io)$/;"	f	file:
snd_pcm_ladspa_free_plugins	./src/pcm/pcm_ladspa.c	/^static void snd_pcm_ladspa_free_plugins(struct list_head *plugins)$/;"	f	file:
snd_pcm_ladspa_get_default_cvalue	./src/pcm/pcm_ladspa.c	/^static void snd_pcm_ladspa_get_default_cvalue(const LADSPA_Descriptor * desc, unsigned int port, LADSPA_Data *val) $/;"	f	file:
snd_pcm_ladspa_hw_free	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ladspa_hw_params	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_ladspa_hw_refine	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_ladspa_hw_refine_cchange	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_ladspa_hw_refine_cprepare	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_hw_refine_cprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_ladspa_hw_refine_schange	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_ladspa_hw_refine_sprepare	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_hw_refine_sprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_ladspa_init	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_init(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_ladspa_instance	./src/pcm/pcm_ladspa.c	/^typedef struct snd_pcm_ladspa_instance {$/;"	s	file:
snd_pcm_ladspa_instance_t	./src/pcm/pcm_ladspa.c	/^} snd_pcm_ladspa_instance_t;$/;"	t	typeref:struct:snd_pcm_ladspa_instance	file:
snd_pcm_ladspa_look_for_plugin	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_look_for_plugin(snd_pcm_ladspa_plugin_t * const plugin,$/;"	f	file:
snd_pcm_ladspa_open	./src/pcm/pcm_ladspa.c	/^int snd_pcm_ladspa_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_ladspa_ops	./src/pcm/pcm_ladspa.c	/^static const snd_pcm_ops_t snd_pcm_ladspa_ops = {$/;"	v	file:
snd_pcm_ladspa_parse_bindings	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_parse_bindings(snd_pcm_ladspa_plugin_t *lplug,$/;"	f	file:
snd_pcm_ladspa_parse_controls	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_parse_controls(snd_pcm_ladspa_plugin_t *lplug,$/;"	f	file:
snd_pcm_ladspa_parse_ioconfig	./src/pcm/pcm_ladspa.c	/^static int snd_pcm_ladspa_parse_ioconfig(snd_pcm_ladspa_plugin_t *lplug,$/;"	f	file:
snd_pcm_ladspa_plugin_io_t	./src/pcm/pcm_ladspa.c	/^} snd_pcm_ladspa_plugin_io_t;$/;"	t	typeref:struct:__anon116	file:
snd_pcm_ladspa_plugin_t	./src/pcm/pcm_ladspa.c	/^} snd_pcm_ladspa_plugin_t;$/;"	t	typeref:struct:__anon117	file:
snd_pcm_ladspa_plugins_dump	./src/pcm/pcm_ladspa.c	/^static void snd_pcm_ladspa_plugins_dump(struct list_head *list, snd_output_t *out)$/;"	f	file:
snd_pcm_ladspa_policy_t	./src/pcm/pcm_ladspa.c	/^} snd_pcm_ladspa_policy_t;$/;"	t	typeref:enum:_snd_pcm_ladspa_policy	file:
snd_pcm_ladspa_read_areas	./src/pcm/pcm_ladspa.c	/^snd_pcm_ladspa_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_ladspa_t	./src/pcm/pcm_ladspa.c	/^} snd_pcm_ladspa_t;$/;"	t	typeref:struct:__anon113	file:
snd_pcm_ladspa_write_areas	./src/pcm/pcm_ladspa.c	/^snd_pcm_ladspa_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_lfloat_convert_float_integer	./src/pcm/pcm_lfloat.c	/^void snd_pcm_lfloat_convert_float_integer(const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset,$/;"	f
snd_pcm_lfloat_convert_integer_float	./src/pcm/pcm_lfloat.c	/^void snd_pcm_lfloat_convert_integer_float(const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset,$/;"	f
snd_pcm_lfloat_dump	./src/pcm/pcm_lfloat.c	/^static void snd_pcm_lfloat_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_lfloat_get_s32_index	./src/pcm/pcm_lfloat.c	/^int snd_pcm_lfloat_get_s32_index(snd_pcm_format_t format)$/;"	f
snd_pcm_lfloat_hw_params	./src/pcm/pcm_lfloat.c	/^static int snd_pcm_lfloat_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_lfloat_hw_refine	./src/pcm/pcm_lfloat.c	/^static int snd_pcm_lfloat_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_lfloat_hw_refine_cchange	./src/pcm/pcm_lfloat.c	/^static int snd_pcm_lfloat_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_lfloat_hw_refine_cprepare	./src/pcm/pcm_lfloat.c	/^static int snd_pcm_lfloat_hw_refine_cprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_lfloat_hw_refine_schange	./src/pcm/pcm_lfloat.c	/^static int snd_pcm_lfloat_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_lfloat_hw_refine_sprepare	./src/pcm/pcm_lfloat.c	/^static int snd_pcm_lfloat_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_lfloat_open	./src/pcm/pcm_lfloat.c	/^int snd_pcm_lfloat_open(snd_pcm_t **pcmp ATTRIBUTE_UNUSED,$/;"	f
snd_pcm_lfloat_open	./src/pcm/pcm_lfloat.c	/^int snd_pcm_lfloat_open(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat, snd_pcm_t *slave, int close_slave)$/;"	f
snd_pcm_lfloat_ops	./src/pcm/pcm_lfloat.c	/^static const snd_pcm_ops_t snd_pcm_lfloat_ops = {$/;"	v	file:
snd_pcm_lfloat_put_s32_index	./src/pcm/pcm_lfloat.c	/^int snd_pcm_lfloat_put_s32_index(snd_pcm_format_t format)$/;"	f
snd_pcm_lfloat_read_areas	./src/pcm/pcm_lfloat.c	/^snd_pcm_lfloat_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_lfloat_t	./src/pcm/pcm_lfloat.c	/^} snd_pcm_lfloat_t;$/;"	t	typeref:struct:__anon112	file:
snd_pcm_lfloat_write_areas	./src/pcm/pcm_lfloat.c	/^snd_pcm_lfloat_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_linear_convert	./src/pcm/pcm_linear.c	/^void snd_pcm_linear_convert(const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset,$/;"	f
snd_pcm_linear_convert	./src/pcm/pcm_plugin.h	86;"	d
snd_pcm_linear_convert_index	./src/pcm/pcm_linear.c	/^int snd_pcm_linear_convert_index(snd_pcm_format_t src_format,$/;"	f
snd_pcm_linear_convert_index	./src/pcm/pcm_plugin.h	85;"	d
snd_pcm_linear_dump	./src/pcm/pcm_linear.c	/^static void snd_pcm_linear_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_linear_get32_index	./src/pcm/pcm_linear.c	/^int snd_pcm_linear_get32_index(snd_pcm_format_t src_format, snd_pcm_format_t dst_format)$/;"	f
snd_pcm_linear_get32_index	./src/pcm/pcm_plugin.h	83;"	d
snd_pcm_linear_get_index	./src/pcm/pcm_linear.c	/^int snd_pcm_linear_get_index(snd_pcm_format_t src_format, snd_pcm_format_t dst_format)$/;"	f
snd_pcm_linear_get_index	./src/pcm/pcm_plugin.h	81;"	d
snd_pcm_linear_getput	./src/pcm/pcm_linear.c	/^void snd_pcm_linear_getput(const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset,$/;"	f
snd_pcm_linear_getput	./src/pcm/pcm_plugin.h	87;"	d
snd_pcm_linear_hw_params	./src/pcm/pcm_linear.c	/^static int snd_pcm_linear_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_linear_hw_refine	./src/pcm/pcm_linear.c	/^static int snd_pcm_linear_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_linear_hw_refine_cchange	./src/pcm/pcm_linear.c	/^static int snd_pcm_linear_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_linear_hw_refine_cprepare	./src/pcm/pcm_linear.c	/^static int snd_pcm_linear_hw_refine_cprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_linear_hw_refine_schange	./src/pcm/pcm_linear.c	/^static int snd_pcm_linear_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_linear_hw_refine_sprepare	./src/pcm/pcm_linear.c	/^static int snd_pcm_linear_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_linear_open	./src/pcm/pcm_linear.c	/^int snd_pcm_linear_open(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat, snd_pcm_t *slave, int close_slave)$/;"	f
snd_pcm_linear_ops	./src/pcm/pcm_linear.c	/^static const snd_pcm_ops_t snd_pcm_linear_ops = {$/;"	v	file:
snd_pcm_linear_put32_index	./src/pcm/pcm_linear.c	/^int snd_pcm_linear_put32_index(snd_pcm_format_t src_format, snd_pcm_format_t dst_format)$/;"	f
snd_pcm_linear_put32_index	./src/pcm/pcm_plugin.h	84;"	d
snd_pcm_linear_put_index	./src/pcm/pcm_linear.c	/^int snd_pcm_linear_put_index(snd_pcm_format_t src_format, snd_pcm_format_t dst_format)$/;"	f
snd_pcm_linear_put_index	./src/pcm/pcm_plugin.h	82;"	d
snd_pcm_linear_read_areas	./src/pcm/pcm_linear.c	/^snd_pcm_linear_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_linear_t	./src/pcm/pcm_linear.c	/^} snd_pcm_linear_t;$/;"	t	typeref:struct:__anon105	file:
snd_pcm_linear_write_areas	./src/pcm/pcm_linear.c	/^snd_pcm_linear_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_link	./src/pcm/pcm.c	/^int snd_pcm_link(snd_pcm_t *pcm1, snd_pcm_t *pcm2)$/;"	f
snd_pcm_link_appl_ptr	./src/pcm/pcm.c	/^void snd_pcm_link_appl_ptr(snd_pcm_t *pcm, snd_pcm_t *slave)$/;"	f
snd_pcm_link_appl_ptr	./src/pcm/pcm_local.h	274;"	d
snd_pcm_link_hw_ptr	./src/pcm/pcm.c	/^void snd_pcm_link_hw_ptr(snd_pcm_t *pcm, snd_pcm_t *slave)$/;"	f
snd_pcm_link_hw_ptr	./src/pcm/pcm_local.h	272;"	d
snd_pcm_link_ptr	./src/pcm/pcm.c	/^static void snd_pcm_link_ptr(snd_pcm_t *pcm, snd_pcm_rbptr_t *pcm_rbptr,$/;"	f	file:
snd_pcm_meter_add_frames	./src/pcm/pcm_meter.c	/^static void snd_pcm_meter_add_frames(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_meter_add_scope	./src/pcm/pcm_meter.c	/^int snd_pcm_meter_add_scope(snd_pcm_t *pcm, snd_pcm_scope_t *scope)$/;"	f
snd_pcm_meter_add_scope_conf	./src/pcm/pcm_meter.c	/^static int snd_pcm_meter_add_scope_conf(snd_pcm_t *pcm, const char *name,$/;"	f	file:
snd_pcm_meter_avail_update	./src/pcm/pcm_meter.c	/^static snd_pcm_sframes_t snd_pcm_meter_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_meter_close	./src/pcm/pcm_meter.c	/^static int snd_pcm_meter_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_meter_dump	./src/pcm/pcm_meter.c	/^static void snd_pcm_meter_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_meter_fast_ops	./src/pcm/pcm_meter.c	/^static const snd_pcm_fast_ops_t snd_pcm_meter_fast_ops = {$/;"	v	file:
snd_pcm_meter_forward	./src/pcm/pcm_meter.c	/^static snd_pcm_sframes_t snd_pcm_meter_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_meter_get_boundary	./src/pcm/pcm_meter.c	/^snd_pcm_uframes_t snd_pcm_meter_get_boundary(snd_pcm_t *pcm)$/;"	f
snd_pcm_meter_get_bufsize	./src/pcm/pcm_meter.c	/^snd_pcm_uframes_t snd_pcm_meter_get_bufsize(snd_pcm_t *pcm)$/;"	f
snd_pcm_meter_get_channels	./src/pcm/pcm_meter.c	/^unsigned int snd_pcm_meter_get_channels(snd_pcm_t *pcm)$/;"	f
snd_pcm_meter_get_now	./src/pcm/pcm_meter.c	/^snd_pcm_uframes_t snd_pcm_meter_get_now(snd_pcm_t *pcm)$/;"	f
snd_pcm_meter_get_rate	./src/pcm/pcm_meter.c	/^unsigned int snd_pcm_meter_get_rate(snd_pcm_t *pcm)$/;"	f
snd_pcm_meter_hw_free	./src/pcm/pcm_meter.c	/^static int snd_pcm_meter_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_meter_hw_params	./src/pcm/pcm_meter.c	/^static int snd_pcm_meter_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_meter_hw_params_slave	./src/pcm/pcm_meter.c	/^static int snd_pcm_meter_hw_params_slave(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_meter_hw_refine	./src/pcm/pcm_meter.c	/^static int snd_pcm_meter_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_meter_hw_refine_cchange	./src/pcm/pcm_meter.c	/^static int snd_pcm_meter_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_meter_hw_refine_cprepare	./src/pcm/pcm_meter.c	/^static int snd_pcm_meter_hw_refine_cprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_meter_hw_refine_schange	./src/pcm/pcm_meter.c	/^static int snd_pcm_meter_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_meter_hw_refine_slave	./src/pcm/pcm_meter.c	/^static int snd_pcm_meter_hw_refine_slave(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_meter_hw_refine_sprepare	./src/pcm/pcm_meter.c	/^static int snd_pcm_meter_hw_refine_sprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_meter_mmap_commit	./src/pcm/pcm_meter.c	/^static snd_pcm_sframes_t snd_pcm_meter_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_meter_open	./src/pcm/pcm_meter.c	/^int snd_pcm_meter_open(snd_pcm_t **pcmp, const char *name, unsigned int frequency,$/;"	f
snd_pcm_meter_ops	./src/pcm/pcm_meter.c	/^static const snd_pcm_ops_t snd_pcm_meter_ops = {$/;"	v	file:
snd_pcm_meter_prepare	./src/pcm/pcm_meter.c	/^static int snd_pcm_meter_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_meter_reset	./src/pcm/pcm_meter.c	/^static int snd_pcm_meter_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_meter_rewind	./src/pcm/pcm_meter.c	/^static snd_pcm_sframes_t snd_pcm_meter_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_meter_search_scope	./src/pcm/pcm_meter.c	/^snd_pcm_scope_t *snd_pcm_meter_search_scope(snd_pcm_t *pcm, const char *name)$/;"	f
snd_pcm_meter_start	./src/pcm/pcm_meter.c	/^static int snd_pcm_meter_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_meter_t	./src/pcm/pcm_meter.c	/^} snd_pcm_meter_t;$/;"	t	typeref:struct:_snd_pcm_meter	file:
snd_pcm_meter_thread	./src/pcm/pcm_meter.c	/^static void *snd_pcm_meter_thread(void *data)$/;"	f	file:
snd_pcm_meter_update_main	./src/pcm/pcm_meter.c	/^static void snd_pcm_meter_update_main(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_meter_update_scope	./src/pcm/pcm_meter.c	/^static int snd_pcm_meter_update_scope(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_mmap	./src/pcm/pcm_mmap.c	/^int snd_pcm_mmap(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_appl_backward	./src/pcm/pcm_local.h	282;"	d
snd_pcm_mmap_appl_backward	./src/pcm/pcm_mmap.c	/^void snd_pcm_mmap_appl_backward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f
snd_pcm_mmap_appl_forward	./src/pcm/pcm_local.h	284;"	d
snd_pcm_mmap_appl_forward	./src/pcm/pcm_mmap.c	/^void snd_pcm_mmap_appl_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f
snd_pcm_mmap_appl_ptr	./src/pcm/pcm_local.h	280;"	d
snd_pcm_mmap_areas	./src/pcm/pcm_local.h	/^static inline const snd_pcm_channel_area_t *snd_pcm_mmap_areas(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_avail	./src/pcm/pcm_local.h	/^static inline snd_pcm_uframes_t snd_pcm_mmap_avail(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_begin	./src/pcm/pcm.c	/^int snd_pcm_mmap_begin(snd_pcm_t *pcm,$/;"	f
snd_pcm_mmap_capture_avail	./src/pcm/pcm_local.h	/^static inline snd_pcm_uframes_t snd_pcm_mmap_capture_avail(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_capture_delay	./src/pcm/pcm_local.h	/^static inline snd_pcm_uframes_t snd_pcm_mmap_capture_delay(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_capture_hw_avail	./src/pcm/pcm_local.h	/^static inline snd_pcm_sframes_t snd_pcm_mmap_capture_hw_avail(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_commit	./src/pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_mmap_commit(snd_pcm_t *pcm,$/;"	f
snd_pcm_mmap_delay	./src/pcm/pcm_local.h	/^static inline snd_pcm_sframes_t snd_pcm_mmap_delay(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_emul_avail_update	./src/pcm/pcm_mmap_emul.c	/^static snd_pcm_sframes_t snd_pcm_mmap_emul_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_mmap_emul_dump	./src/pcm/pcm_mmap_emul.c	/^static void snd_pcm_mmap_emul_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_mmap_emul_fast_ops	./src/pcm/pcm_mmap_emul.c	/^static const snd_pcm_fast_ops_t snd_pcm_mmap_emul_fast_ops = {$/;"	v	file:
snd_pcm_mmap_emul_forward	./src/pcm/pcm_mmap_emul.c	/^snd_pcm_mmap_emul_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_mmap_emul_hw_params	./src/pcm/pcm_mmap_emul.c	/^static int snd_pcm_mmap_emul_hw_params(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_mmap_emul_hw_refine	./src/pcm/pcm_mmap_emul.c	/^static int snd_pcm_mmap_emul_hw_refine(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_mmap_emul_mmap_commit	./src/pcm/pcm_mmap_emul.c	/^snd_pcm_mmap_emul_mmap_commit(snd_pcm_t *pcm, snd_pcm_uframes_t offset,$/;"	f	file:
snd_pcm_mmap_emul_ops	./src/pcm/pcm_mmap_emul.c	/^static const snd_pcm_ops_t snd_pcm_mmap_emul_ops = {$/;"	v	file:
snd_pcm_mmap_emul_prepare	./src/pcm/pcm_mmap_emul.c	/^static int snd_pcm_mmap_emul_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_mmap_emul_reset	./src/pcm/pcm_mmap_emul.c	/^static int snd_pcm_mmap_emul_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_mmap_emul_rewind	./src/pcm/pcm_mmap_emul.c	/^snd_pcm_mmap_emul_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_mmap_emul_sw_params	./src/pcm/pcm_mmap_emul.c	/^static int snd_pcm_mmap_emul_sw_params(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_mmap_hw_avail	./src/pcm/pcm_local.h	/^static inline snd_pcm_sframes_t snd_pcm_mmap_hw_avail(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_hw_backward	./src/pcm/pcm_local.h	286;"	d
snd_pcm_mmap_hw_backward	./src/pcm/pcm_mmap.c	/^void snd_pcm_mmap_hw_backward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f
snd_pcm_mmap_hw_forward	./src/pcm/pcm_local.h	288;"	d
snd_pcm_mmap_hw_forward	./src/pcm/pcm_mmap.c	/^void snd_pcm_mmap_hw_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f
snd_pcm_mmap_hw_offset	./src/pcm/pcm_local.h	/^static inline snd_pcm_uframes_t snd_pcm_mmap_hw_offset(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_offset	./src/pcm/pcm_local.h	/^static inline snd_pcm_uframes_t snd_pcm_mmap_offset(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_playback_avail	./src/pcm/pcm_local.h	/^static inline snd_pcm_uframes_t snd_pcm_mmap_playback_avail(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_playback_delay	./src/pcm/pcm_local.h	/^static inline snd_pcm_uframes_t snd_pcm_mmap_playback_delay(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_playback_hw_avail	./src/pcm/pcm_local.h	/^static inline snd_pcm_sframes_t snd_pcm_mmap_playback_hw_avail(snd_pcm_t *pcm)$/;"	f
snd_pcm_mmap_read_areas	./src/pcm/pcm_mmap.c	/^static snd_pcm_sframes_t snd_pcm_mmap_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_mmap_readi	./src/pcm/pcm_mmap.c	/^snd_pcm_sframes_t snd_pcm_mmap_readi(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)$/;"	f
snd_pcm_mmap_readn	./src/pcm/pcm_mmap.c	/^snd_pcm_sframes_t snd_pcm_mmap_readn(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f
snd_pcm_mmap_write_areas	./src/pcm/pcm_mmap.c	/^static snd_pcm_sframes_t snd_pcm_mmap_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_mmap_writei	./src/pcm/pcm_mmap.c	/^snd_pcm_sframes_t snd_pcm_mmap_writei(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)$/;"	f
snd_pcm_mmap_writen	./src/pcm/pcm_mmap.c	/^snd_pcm_sframes_t snd_pcm_mmap_writen(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f
snd_pcm_mulaw_decode	./src/pcm/pcm_mulaw.c	/^void snd_pcm_mulaw_decode(const snd_pcm_channel_area_t *dst_areas,$/;"	f
snd_pcm_mulaw_decode	./src/pcm/pcm_plugin.h	90;"	d
snd_pcm_mulaw_dump	./src/pcm/pcm_mulaw.c	/^static void snd_pcm_mulaw_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_mulaw_encode	./src/pcm/pcm_mulaw.c	/^void snd_pcm_mulaw_encode(const snd_pcm_channel_area_t *dst_areas,$/;"	f
snd_pcm_mulaw_encode	./src/pcm/pcm_plugin.h	91;"	d
snd_pcm_mulaw_hw_params	./src/pcm/pcm_mulaw.c	/^static int snd_pcm_mulaw_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_mulaw_hw_refine	./src/pcm/pcm_mulaw.c	/^static int snd_pcm_mulaw_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_mulaw_hw_refine_cchange	./src/pcm/pcm_mulaw.c	/^static int snd_pcm_mulaw_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_mulaw_hw_refine_cprepare	./src/pcm/pcm_mulaw.c	/^static int snd_pcm_mulaw_hw_refine_cprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_mulaw_hw_refine_schange	./src/pcm/pcm_mulaw.c	/^static int snd_pcm_mulaw_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_mulaw_hw_refine_sprepare	./src/pcm/pcm_mulaw.c	/^static int snd_pcm_mulaw_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_mulaw_open	./src/pcm/pcm_mulaw.c	/^int snd_pcm_mulaw_open(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat, snd_pcm_t *slave, int close_slave)$/;"	f
snd_pcm_mulaw_ops	./src/pcm/pcm_mulaw.c	/^static const snd_pcm_ops_t snd_pcm_mulaw_ops = {$/;"	v	file:
snd_pcm_mulaw_read_areas	./src/pcm/pcm_mulaw.c	/^snd_pcm_mulaw_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_mulaw_t	./src/pcm/pcm_mulaw.c	/^} snd_pcm_mulaw_t;$/;"	t	typeref:struct:__anon147	file:
snd_pcm_mulaw_write_areas	./src/pcm/pcm_mulaw.c	/^snd_pcm_mulaw_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_multi_async	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_async(snd_pcm_t *pcm, int sig, pid_t pid)$/;"	f	file:
snd_pcm_multi_avail_update	./src/pcm/pcm_multi.c	/^static snd_pcm_sframes_t snd_pcm_multi_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_channel_info	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_channel_info(snd_pcm_t *pcm, snd_pcm_channel_info_t *info)$/;"	f	file:
snd_pcm_multi_channel_t	./src/pcm/pcm_multi.c	/^} snd_pcm_multi_channel_t;$/;"	t	typeref:struct:__anon149	file:
snd_pcm_multi_close	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_delay	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_multi_drain	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_drop	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_drop(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_dump	./src/pcm/pcm_multi.c	/^static void snd_pcm_multi_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_multi_fast_ops	./src/pcm/pcm_multi.c	/^static const snd_pcm_fast_ops_t snd_pcm_multi_fast_ops = {$/;"	v	file:
snd_pcm_multi_forward	./src/pcm/pcm_multi.c	/^static snd_pcm_sframes_t snd_pcm_multi_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_multi_htimestamp	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_htimestamp(snd_pcm_t *pcm, snd_pcm_uframes_t *avail,$/;"	f	file:
snd_pcm_multi_hw_free	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_hw_params	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_multi_hw_params_slave	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_hw_params_slave(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_multi_hw_refine	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_multi_hw_refine_cchange	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED,$/;"	f	file:
snd_pcm_multi_hw_refine_cprepare	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_hw_refine_cprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_multi_hw_refine_schange	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED,$/;"	f	file:
snd_pcm_multi_hw_refine_slave	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_hw_refine_slave(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_multi_hw_refine_sprepare	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_hw_refine_sprepare(snd_pcm_t *pcm, unsigned int slave_idx,$/;"	f	file:
snd_pcm_multi_hwsync	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_hwsync(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_info	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_info(snd_pcm_t *pcm, snd_pcm_info_t *info)$/;"	f	file:
snd_pcm_multi_link	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_link(snd_pcm_t *pcm1, snd_pcm_t *pcm2)$/;"	f	file:
snd_pcm_multi_link_slaves	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_link_slaves(snd_pcm_t *pcm, snd_pcm_t *master)$/;"	f	file:
snd_pcm_multi_mmap	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_mmap(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_mmap_commit	./src/pcm/pcm_multi.c	/^static snd_pcm_sframes_t snd_pcm_multi_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_multi_munmap	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_munmap(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_nonblock	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_nonblock(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int nonblock ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_multi_open	./src/pcm/pcm_multi.c	/^int snd_pcm_multi_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_multi_ops	./src/pcm/pcm_multi.c	/^static const snd_pcm_ops_t snd_pcm_multi_ops = {$/;"	v	file:
snd_pcm_multi_pause	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_pause(snd_pcm_t *pcm, int enable)$/;"	f	file:
snd_pcm_multi_poll_descriptors	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_poll_descriptors(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int space)$/;"	f	file:
snd_pcm_multi_poll_descriptors_count	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_poll_descriptors_count(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_poll_revents	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_poll_revents(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f	file:
snd_pcm_multi_prepare	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_reset	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_resume	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_resume(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_rewind	./src/pcm/pcm_multi.c	/^static snd_pcm_sframes_t snd_pcm_multi_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_multi_slave_t	./src/pcm/pcm_multi.c	/^} snd_pcm_multi_slave_t;$/;"	t	typeref:struct:__anon148	file:
snd_pcm_multi_start	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_state	./src/pcm/pcm_multi.c	/^static snd_pcm_state_t snd_pcm_multi_state(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_multi_status	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_status(snd_pcm_t *pcm, snd_pcm_status_t *status)$/;"	f	file:
snd_pcm_multi_sw_params	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_sw_params(snd_pcm_t *pcm, snd_pcm_sw_params_t *params)$/;"	f	file:
snd_pcm_multi_t	./src/pcm/pcm_multi.c	/^} snd_pcm_multi_t;$/;"	t	typeref:struct:__anon150	file:
snd_pcm_multi_unlink	./src/pcm/pcm_multi.c	/^static int snd_pcm_multi_unlink(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_munmap	./src/pcm/pcm_mmap.c	/^int snd_pcm_munmap(snd_pcm_t *pcm)$/;"	f
snd_pcm_name	./src/pcm/pcm.c	/^const char *snd_pcm_name(snd_pcm_t *pcm)$/;"	f
snd_pcm_new	./src/pcm/pcm.c	/^int snd_pcm_new(snd_pcm_t **pcmp, snd_pcm_type_t type, const char *name,$/;"	f
snd_pcm_new	./src/pcm/pcm_local.h	250;"	d
snd_pcm_nonblock	./src/pcm/pcm.c	/^int snd_pcm_nonblock(snd_pcm_t *pcm, int nonblock)$/;"	f
snd_pcm_null_async	./src/pcm/pcm_null.c	/^static int snd_pcm_null_async(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int sig ATTRIBUTE_UNUSED, pid_t pid ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_null_avail_update	./src/pcm/pcm_null.c	/^static snd_pcm_sframes_t snd_pcm_null_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_null_close	./src/pcm/pcm_null.c	/^static int snd_pcm_null_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_null_delay	./src/pcm/pcm_null.c	/^static int snd_pcm_null_delay(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_null_drain	./src/pcm/pcm_null.c	/^static int snd_pcm_null_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_null_drop	./src/pcm/pcm_null.c	/^static int snd_pcm_null_drop(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_null_dump	./src/pcm/pcm_null.c	/^static void snd_pcm_null_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_null_fast_ops	./src/pcm/pcm_null.c	/^static const snd_pcm_fast_ops_t snd_pcm_null_fast_ops = {$/;"	v	file:
snd_pcm_null_forward	./src/pcm/pcm_null.c	/^static snd_pcm_sframes_t snd_pcm_null_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_null_hw_free	./src/pcm/pcm_null.c	/^static int snd_pcm_null_hw_free(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_null_hw_params	./src/pcm/pcm_null.c	/^static int snd_pcm_null_hw_params(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t * params ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_null_hw_refine	./src/pcm/pcm_null.c	/^static int snd_pcm_null_hw_refine(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_null_hwsync	./src/pcm/pcm_null.c	/^static int snd_pcm_null_hwsync(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_null_info	./src/pcm/pcm_null.c	/^static int snd_pcm_null_info(snd_pcm_t *pcm, snd_pcm_info_t * info)$/;"	f	file:
snd_pcm_null_mmap_commit	./src/pcm/pcm_null.c	/^static snd_pcm_sframes_t snd_pcm_null_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_null_nonblock	./src/pcm/pcm_null.c	/^static int snd_pcm_null_nonblock(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int nonblock ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_null_open	./src/pcm/pcm_null.c	/^int snd_pcm_null_open(snd_pcm_t **pcmp, const char *name, snd_pcm_stream_t stream, int mode)$/;"	f
snd_pcm_null_ops	./src/pcm/pcm_null.c	/^static const snd_pcm_ops_t snd_pcm_null_ops = {$/;"	v	file:
snd_pcm_null_pause	./src/pcm/pcm_null.c	/^static int snd_pcm_null_pause(snd_pcm_t *pcm, int enable)$/;"	f	file:
snd_pcm_null_prepare	./src/pcm/pcm_null.c	/^static int snd_pcm_null_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_null_readi	./src/pcm/pcm_null.c	/^static snd_pcm_sframes_t snd_pcm_null_readi(snd_pcm_t *pcm, void *buffer ATTRIBUTE_UNUSED, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_null_readn	./src/pcm/pcm_null.c	/^static snd_pcm_sframes_t snd_pcm_null_readn(snd_pcm_t *pcm, void **bufs ATTRIBUTE_UNUSED, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_null_reset	./src/pcm/pcm_null.c	/^static int snd_pcm_null_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_null_resume	./src/pcm/pcm_null.c	/^static int snd_pcm_null_resume(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_null_rewind	./src/pcm/pcm_null.c	/^static snd_pcm_sframes_t snd_pcm_null_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_null_start	./src/pcm/pcm_null.c	/^static int snd_pcm_null_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_null_state	./src/pcm/pcm_null.c	/^static snd_pcm_state_t snd_pcm_null_state(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_null_status	./src/pcm/pcm_null.c	/^static int snd_pcm_null_status(snd_pcm_t *pcm, snd_pcm_status_t * status)$/;"	f	file:
snd_pcm_null_sw_params	./src/pcm/pcm_null.c	/^static int snd_pcm_null_sw_params(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t * params ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_null_t	./src/pcm/pcm_null.c	/^} snd_pcm_null_t;$/;"	t	typeref:struct:__anon132	file:
snd_pcm_null_writei	./src/pcm/pcm_null.c	/^static snd_pcm_sframes_t snd_pcm_null_writei(snd_pcm_t *pcm, const void *buffer ATTRIBUTE_UNUSED, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_null_writen	./src/pcm/pcm_null.c	/^static snd_pcm_sframes_t snd_pcm_null_writen(snd_pcm_t *pcm, void **bufs ATTRIBUTE_UNUSED, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_null_xfer_areas	./src/pcm/pcm_null.c	/^static snd_pcm_sframes_t snd_pcm_null_xfer_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_open	./src/pcm/pcm.c	/^int snd_pcm_open(snd_pcm_t **pcmp, const char *name, $/;"	f
snd_pcm_open_conf	./src/pcm/pcm.c	/^static int snd_pcm_open_conf(snd_pcm_t **pcmp, const char *name,$/;"	f	file:
snd_pcm_open_lconf	./src/pcm/pcm.c	/^int snd_pcm_open_lconf(snd_pcm_t **pcmp, const char *name, $/;"	f
snd_pcm_open_named_slave	./src/pcm/pcm.c	/^int snd_pcm_open_named_slave(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_open_named_slave	./src/pcm/pcm_local.h	258;"	d
snd_pcm_open_noupdate	./src/pcm/pcm.c	/^static int snd_pcm_open_noupdate(snd_pcm_t **pcmp, snd_config_t *root,$/;"	f	file:
snd_pcm_open_objects	./src/pcm/pcm_symbols.c	/^static const char **snd_pcm_open_objects[] = {$/;"	v	file:
snd_pcm_open_slave	./src/pcm/pcm_local.h	/^snd_pcm_open_slave(snd_pcm_t **pcmp, snd_config_t *root,$/;"	f
snd_pcm_open_symbols	./src/pcm/pcm_symbols.c	/^void *snd_pcm_open_symbols(void)$/;"	f
snd_pcm_ops_t	./src/pcm/pcm_local.h	/^} snd_pcm_ops_t;$/;"	t	typeref:struct:__anon137
snd_pcm_parse_control_id	./src/pcm/pcm_misc.c	/^int snd_pcm_parse_control_id(snd_config_t *conf, snd_ctl_elem_id_t *ctl_id, int *cardp,$/;"	f
snd_pcm_pause	./src/pcm/pcm.c	/^int snd_pcm_pause(snd_pcm_t *pcm, int enable)$/;"	f
snd_pcm_plug_change_access	./src/pcm/pcm_plug.c	/^static int snd_pcm_plug_change_access(snd_pcm_t *pcm, snd_pcm_t **new, snd_pcm_plug_params_t *clt, snd_pcm_plug_params_t *slv)$/;"	f	file:
snd_pcm_plug_change_channels	./src/pcm/pcm_plug.c	/^static int snd_pcm_plug_change_channels(snd_pcm_t *pcm, snd_pcm_t **new, snd_pcm_plug_params_t *clt, snd_pcm_plug_params_t *slv)$/;"	f	file:
snd_pcm_plug_change_format	./src/pcm/pcm_plug.c	/^static int snd_pcm_plug_change_format(snd_pcm_t *pcm, snd_pcm_t **new, snd_pcm_plug_params_t *clt, snd_pcm_plug_params_t *slv)$/;"	f	file:
snd_pcm_plug_change_mmap	./src/pcm/pcm_plug.c	/^static int snd_pcm_plug_change_mmap(snd_pcm_t *pcm, snd_pcm_t **new,$/;"	f	file:
snd_pcm_plug_change_rate	./src/pcm/pcm_plug.c	/^static int snd_pcm_plug_change_rate(snd_pcm_t *pcm, snd_pcm_t **new, snd_pcm_plug_params_t *clt, snd_pcm_plug_params_t *slv)$/;"	f	file:
snd_pcm_plug_clear	./src/pcm/pcm_plug.c	/^static void snd_pcm_plug_clear(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_plug_close	./src/pcm/pcm_plug.c	/^static int snd_pcm_plug_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_plug_dump	./src/pcm/pcm_plug.c	/^static void snd_pcm_plug_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_plug_hw_free	./src/pcm/pcm_plug.c	/^static int snd_pcm_plug_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_plug_hw_params	./src/pcm/pcm_plug.c	/^static int snd_pcm_plug_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_plug_hw_refine	./src/pcm/pcm_plug.c	/^static int snd_pcm_plug_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_plug_hw_refine_cchange	./src/pcm/pcm_plug.c	/^static int snd_pcm_plug_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED,$/;"	f	file:
snd_pcm_plug_hw_refine_cprepare	./src/pcm/pcm_plug.c	/^static int snd_pcm_plug_hw_refine_cprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_plug_hw_refine_schange	./src/pcm/pcm_plug.c	/^static int snd_pcm_plug_hw_refine_schange(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_plug_hw_refine_slave	./src/pcm/pcm_plug.c	/^static int snd_pcm_plug_hw_refine_slave(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_plug_hw_refine_sprepare	./src/pcm/pcm_plug.c	/^static int snd_pcm_plug_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_plug_info	./src/pcm/pcm_plug.c	/^static int snd_pcm_plug_info(snd_pcm_t *pcm, snd_pcm_info_t *info)$/;"	f	file:
snd_pcm_plug_insert_plugins	./src/pcm/pcm_plug.c	/^static int snd_pcm_plug_insert_plugins(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_plug_open	./src/pcm/pcm_plug.c	/^int snd_pcm_plug_open(snd_pcm_t **pcmp,$/;"	f
snd_pcm_plug_ops	./src/pcm/pcm_plug.c	/^static const snd_pcm_ops_t snd_pcm_plug_ops = {$/;"	v	file:
snd_pcm_plug_params_t	./src/pcm/pcm_plug.c	/^} snd_pcm_plug_params_t;$/;"	t	typeref:struct:__anon146	file:
snd_pcm_plug_route_policy	./src/pcm/pcm_plug.c	/^enum snd_pcm_plug_route_policy {$/;"	g	file:
snd_pcm_plug_slave_format	./src/pcm/pcm_plug.c	/^static snd_pcm_format_t snd_pcm_plug_slave_format(snd_pcm_format_t format, const snd_pcm_format_mask_t *format_mask)$/;"	f	file:
snd_pcm_plug_t	./src/pcm/pcm_plug.c	/^} snd_pcm_plug_t;$/;"	t	typeref:struct:__anon145	file:
snd_pcm_plugin_avail_update	./src/pcm/pcm_plugin.c	/^static snd_pcm_sframes_t snd_pcm_plugin_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_plugin_delay	./src/pcm/pcm_plugin.c	/^static int snd_pcm_plugin_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_plugin_fast_ops	./src/pcm/pcm_plugin.c	/^const snd_pcm_fast_ops_t snd_pcm_plugin_fast_ops = {$/;"	v
snd_pcm_plugin_fast_ops	./src/pcm/pcm_plugin.h	55;"	d
snd_pcm_plugin_forward	./src/pcm/pcm_plugin.c	/^static snd_pcm_sframes_t snd_pcm_plugin_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_plugin_forwardable	./src/pcm/pcm_plugin.c	/^static snd_pcm_sframes_t snd_pcm_plugin_forwardable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_plugin_init	./src/pcm/pcm_plugin.c	/^void snd_pcm_plugin_init(snd_pcm_plugin_t *plugin)$/;"	f
snd_pcm_plugin_init	./src/pcm/pcm_plugin.h	53;"	d
snd_pcm_plugin_mmap_commit	./src/pcm/pcm_plugin.c	/^snd_pcm_plugin_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_plugin_prepare	./src/pcm/pcm_plugin.c	/^static int snd_pcm_plugin_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_plugin_read_areas	./src/pcm/pcm_plugin.c	/^static snd_pcm_sframes_t snd_pcm_plugin_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_plugin_readi	./src/pcm/pcm_plugin.c	/^snd_pcm_plugin_readi(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_plugin_readn	./src/pcm/pcm_plugin.c	/^snd_pcm_plugin_readn(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_plugin_reset	./src/pcm/pcm_plugin.c	/^static int snd_pcm_plugin_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_plugin_rewind	./src/pcm/pcm_plugin.c	/^static snd_pcm_sframes_t snd_pcm_plugin_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_plugin_rewindable	./src/pcm/pcm_plugin.c	/^static snd_pcm_sframes_t snd_pcm_plugin_rewindable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_plugin_status	./src/pcm/pcm_plugin.c	/^static int snd_pcm_plugin_status(snd_pcm_t *pcm, snd_pcm_status_t * status)$/;"	f	file:
snd_pcm_plugin_t	./src/pcm/pcm_plugin.h	/^} snd_pcm_plugin_t;	$/;"	t	typeref:struct:__anon106
snd_pcm_plugin_undo_read	./src/pcm/pcm_plugin.c	/^snd_pcm_plugin_undo_read(snd_pcm_t *pcm ATTRIBUTE_UNUSED,$/;"	f	file:
snd_pcm_plugin_undo_read_generic	./src/pcm/pcm_plugin.c	/^snd_pcm_plugin_undo_read_generic(snd_pcm_t *pcm ATTRIBUTE_UNUSED,$/;"	f
snd_pcm_plugin_undo_read_generic	./src/pcm/pcm_plugin.h	57;"	d
snd_pcm_plugin_undo_write	./src/pcm/pcm_plugin.c	/^snd_pcm_plugin_undo_write(snd_pcm_t *pcm ATTRIBUTE_UNUSED,$/;"	f	file:
snd_pcm_plugin_undo_write_generic	./src/pcm/pcm_plugin.c	/^snd_pcm_plugin_undo_write_generic(snd_pcm_t *pcm ATTRIBUTE_UNUSED,$/;"	f
snd_pcm_plugin_undo_write_generic	./src/pcm/pcm_plugin.h	59;"	d
snd_pcm_plugin_write_areas	./src/pcm/pcm_plugin.c	/^static snd_pcm_sframes_t snd_pcm_plugin_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_plugin_writei	./src/pcm/pcm_plugin.c	/^snd_pcm_plugin_writei(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_plugin_writen	./src/pcm/pcm_plugin.c	/^snd_pcm_plugin_writen(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f	file:
snd_pcm_poll_descriptors	./src/pcm/pcm.c	/^int snd_pcm_poll_descriptors(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int space)$/;"	f
snd_pcm_poll_descriptors_count	./src/pcm/pcm.c	/^int snd_pcm_poll_descriptors_count(snd_pcm_t *pcm)$/;"	f
snd_pcm_poll_descriptors_revents	./src/pcm/pcm.c	/^int snd_pcm_poll_descriptors_revents(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f
snd_pcm_prepare	./src/pcm/pcm.c	/^int snd_pcm_prepare(snd_pcm_t *pcm)$/;"	f
snd_pcm_rate_avail_update	./src/pcm/pcm_rate.c	/^static snd_pcm_sframes_t snd_pcm_rate_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_close	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_commit_area	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_commit_area(snd_pcm_t *pcm, snd_pcm_rate_t *rate,$/;"	f	file:
snd_pcm_rate_commit_next_period	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_commit_next_period(snd_pcm_t *pcm, snd_pcm_uframes_t appl_offset)$/;"	f	file:
snd_pcm_rate_delay	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_rate_drain	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_dump	./src/pcm/pcm_rate.c	/^static void snd_pcm_rate_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_rate_fast_ops	./src/pcm/pcm_rate.c	/^static const snd_pcm_fast_ops_t snd_pcm_rate_fast_ops = {$/;"	v	file:
snd_pcm_rate_forward	./src/pcm/pcm_rate.c	/^static snd_pcm_sframes_t snd_pcm_rate_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_rate_get_default_converter	./src/pcm/pcm_local.h	266;"	d
snd_pcm_rate_get_default_converter	./src/pcm/pcm_rate.c	/^const snd_config_t *snd_pcm_rate_get_default_converter(snd_config_t *root)$/;"	f
snd_pcm_rate_grab_next_period	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_grab_next_period(snd_pcm_t *pcm, snd_pcm_uframes_t hw_offset)$/;"	f	file:
snd_pcm_rate_htimestamp	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_htimestamp(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_rate_hw_free	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_hw_params	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_rate_hw_refine	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_hw_refine(snd_pcm_t *pcm, $/;"	f	file:
snd_pcm_rate_hw_refine_cchange	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_hw_refine_cchange(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_rate_hw_refine_cprepare	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_hw_refine_cprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_rate_hw_refine_schange	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_hw_refine_schange(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_rate_hw_refine_sprepare	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_rate_hwsync	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_hwsync(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_info	./include/pcm_rate.h	/^typedef struct snd_pcm_rate_info {$/;"	s
snd_pcm_rate_info_t	./include/pcm_rate.h	/^} snd_pcm_rate_info_t;$/;"	t	typeref:struct:snd_pcm_rate_info
snd_pcm_rate_init	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_init(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_mmap_commit	./src/pcm/pcm_rate.c	/^static snd_pcm_sframes_t snd_pcm_rate_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_rate_move_applptr	./src/pcm/pcm_rate.c	/^static inline snd_pcm_sframes_t snd_pcm_rate_move_applptr(snd_pcm_t *pcm, snd_pcm_sframes_t frames)$/;"	f	file:
snd_pcm_rate_old_ops	./include/pcm_rate.h	/^typedef struct snd_pcm_rate_old_ops {$/;"	s
snd_pcm_rate_old_ops_t	./include/pcm_rate.h	/^} snd_pcm_rate_old_ops_t;$/;"	t	typeref:struct:snd_pcm_rate_old_ops
snd_pcm_rate_open	./src/pcm/pcm_rate.c	/^int snd_pcm_rate_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_rate_open_func_t	./include/pcm_rate.h	/^typedef int (*snd_pcm_rate_open_func_t)(unsigned int version, void **objp,$/;"	t
snd_pcm_rate_ops	./include/pcm_rate.h	/^typedef struct snd_pcm_rate_ops {$/;"	s
snd_pcm_rate_ops	./src/pcm/pcm_rate.c	/^static const snd_pcm_ops_t snd_pcm_rate_ops = {$/;"	v	file:
snd_pcm_rate_ops_t	./include/pcm_rate.h	/^} snd_pcm_rate_ops_t;$/;"	t	typeref:struct:snd_pcm_rate_ops
snd_pcm_rate_poll_revents	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_poll_revents(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f	file:
snd_pcm_rate_prepare	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_read_areas1	./src/pcm/pcm_rate.c	/^snd_pcm_rate_read_areas1(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_rate_reset	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_rewind	./src/pcm/pcm_rate.c	/^static snd_pcm_sframes_t snd_pcm_rate_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_rate_side_info	./include/pcm_rate.h	/^typedef struct snd_pcm_rate_side_info {$/;"	s
snd_pcm_rate_side_info_t	./include/pcm_rate.h	/^} snd_pcm_rate_side_info_t;$/;"	t	typeref:struct:snd_pcm_rate_side_info
snd_pcm_rate_start	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_state	./src/pcm/pcm_rate.c	/^static snd_pcm_state_t snd_pcm_rate_state(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_status	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_status(snd_pcm_t *pcm, snd_pcm_status_t * status)$/;"	f	file:
snd_pcm_rate_sw_params	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_sw_params(snd_pcm_t *pcm, snd_pcm_sw_params_t * params)$/;"	f	file:
snd_pcm_rate_sync_hwptr	./src/pcm/pcm_rate.c	/^static inline void snd_pcm_rate_sync_hwptr(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_rate_sync_playback_area	./src/pcm/pcm_rate.c	/^static int snd_pcm_rate_sync_playback_area(snd_pcm_t *pcm, snd_pcm_uframes_t appl_ptr)$/;"	f	file:
snd_pcm_rate_t	./src/pcm/pcm_rate.c	/^typedef struct _snd_pcm_rate snd_pcm_rate_t;$/;"	t	typeref:struct:_snd_pcm_rate	file:
snd_pcm_rate_write_areas1	./src/pcm/pcm_rate.c	/^snd_pcm_rate_write_areas1(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_rbptr_t	./src/pcm/pcm_local.h	/^} snd_pcm_rbptr_t;$/;"	t	typeref:struct:_snd_pcm_rbptr
snd_pcm_read_areas	./src/pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_read_areas(snd_pcm_t *pcm, const snd_pcm_channel_area_t *areas,$/;"	f
snd_pcm_read_areas	./src/pcm/pcm_local.h	290;"	d
snd_pcm_read_mmap	./src/pcm/pcm_local.h	294;"	d
snd_pcm_read_mmap	./src/pcm/pcm_mmap.c	/^snd_pcm_sframes_t snd_pcm_read_mmap(snd_pcm_t *pcm, snd_pcm_uframes_t offset,$/;"	f
snd_pcm_readi	./src/pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_readi(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)$/;"	f
snd_pcm_readn	./src/pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_readn(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f
snd_pcm_recover	./src/pcm/pcm.c	/^int snd_pcm_recover(snd_pcm_t *pcm, int err, int silent)$/;"	f
snd_pcm_reset	./src/pcm/pcm.c	/^int snd_pcm_reset(snd_pcm_t *pcm)$/;"	f
snd_pcm_resume	./src/pcm/pcm.c	/^int snd_pcm_resume(snd_pcm_t *pcm)$/;"	f
snd_pcm_rewind	./src/pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f
snd_pcm_rewindable	./src/pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_rewindable(snd_pcm_t *pcm)$/;"	f
snd_pcm_route_close	./src/pcm/pcm_route.c	/^static int snd_pcm_route_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_route_convert	./src/pcm/pcm_route.c	/^static void snd_pcm_route_convert(const snd_pcm_channel_area_t *dst_areas,$/;"	f	file:
snd_pcm_route_convert1_many	./src/pcm/pcm_route.c	/^static void snd_pcm_route_convert1_many(const snd_pcm_channel_area_t *dst_area,$/;"	f	file:
snd_pcm_route_convert1_one	./src/pcm/pcm_route.c	/^static void snd_pcm_route_convert1_one(const snd_pcm_channel_area_t *dst_area,$/;"	f	file:
snd_pcm_route_convert1_one_getput	./src/pcm/pcm_route.c	/^static void snd_pcm_route_convert1_one_getput(const snd_pcm_channel_area_t *dst_area,$/;"	f	file:
snd_pcm_route_convert1_zero	./src/pcm/pcm_route.c	/^static void snd_pcm_route_convert1_zero(const snd_pcm_channel_area_t *dst_area,$/;"	f	file:
snd_pcm_route_determine_ttable	./src/pcm/pcm_route.c	/^int snd_pcm_route_determine_ttable(snd_config_t *tt,$/;"	f
snd_pcm_route_dump	./src/pcm/pcm_route.c	/^static void snd_pcm_route_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_route_hw_params	./src/pcm/pcm_route.c	/^static int snd_pcm_route_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_route_hw_refine	./src/pcm/pcm_route.c	/^static int snd_pcm_route_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_route_hw_refine_cchange	./src/pcm/pcm_route.c	/^static int snd_pcm_route_hw_refine_cchange(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_route_hw_refine_cprepare	./src/pcm/pcm_route.c	/^static int snd_pcm_route_hw_refine_cprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_route_hw_refine_schange	./src/pcm/pcm_route.c	/^static int snd_pcm_route_hw_refine_schange(snd_pcm_t *pcm, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_route_hw_refine_sprepare	./src/pcm/pcm_route.c	/^static int snd_pcm_route_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_route_load_ttable	./src/pcm/pcm_route.c	/^int snd_pcm_route_load_ttable(snd_config_t *tt, snd_pcm_route_ttable_entry_t *ttable,$/;"	f
snd_pcm_route_open	./src/pcm/pcm_route.c	/^int snd_pcm_route_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_route_ops	./src/pcm/pcm_route.c	/^static const snd_pcm_ops_t snd_pcm_route_ops = {$/;"	v	file:
snd_pcm_route_params_t	./src/pcm/pcm_route.c	/^} snd_pcm_route_params_t;$/;"	t	typeref:struct:__anon141	file:
snd_pcm_route_read_areas	./src/pcm/pcm_route.c	/^snd_pcm_route_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_route_t	./src/pcm/pcm_route.c	/^} snd_pcm_route_t;$/;"	t	typeref:struct:__anon144	file:
snd_pcm_route_ttable_dst	./src/pcm/pcm_route.c	/^struct snd_pcm_route_ttable_dst {$/;"	s	file:
snd_pcm_route_ttable_dst_t	./src/pcm/pcm_route.c	/^typedef struct snd_pcm_route_ttable_dst snd_pcm_route_ttable_dst_t;$/;"	t	typeref:struct:snd_pcm_route_ttable_dst	file:
snd_pcm_route_ttable_entry_t	./include/pcm_plugin.h	/^typedef float snd_pcm_route_ttable_entry_t;$/;"	t
snd_pcm_route_ttable_entry_t	./include/pcm_plugin.h	/^typedef int snd_pcm_route_ttable_entry_t;$/;"	t
snd_pcm_route_ttable_src_t	./src/pcm/pcm_route.c	/^} snd_pcm_route_ttable_src_t;$/;"	t	typeref:struct:__anon140	file:
snd_pcm_route_write_areas	./src/pcm/pcm_route.c	/^snd_pcm_route_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_samples_to_bytes	./src/pcm/pcm.c	/^ssize_t snd_pcm_samples_to_bytes(snd_pcm_t *pcm, long samples)$/;"	f
snd_pcm_scope_disable	./src/pcm/pcm_meter.c	/^static int snd_pcm_scope_disable(snd_pcm_scope_t *scope)$/;"	f	file:
snd_pcm_scope_enable	./src/pcm/pcm_meter.c	/^static int snd_pcm_scope_enable(snd_pcm_scope_t *scope)$/;"	f	file:
snd_pcm_scope_get_callback_private	./src/pcm/pcm_meter.c	/^void *snd_pcm_scope_get_callback_private(snd_pcm_scope_t *scope)$/;"	f
snd_pcm_scope_get_name	./src/pcm/pcm_meter.c	/^const char *snd_pcm_scope_get_name(snd_pcm_scope_t *scope)$/;"	f
snd_pcm_scope_level_channel_t	./src/pcm/scopes/level.c	/^} snd_pcm_scope_level_channel_t;$/;"	t	typeref:struct:_snd_pcm_scope_level_channel	file:
snd_pcm_scope_level_open	./src/pcm/scopes/level.c	/^int snd_pcm_scope_level_open(snd_pcm_t *pcm, const char *name,$/;"	f
snd_pcm_scope_level_t	./src/pcm/scopes/level.c	/^} snd_pcm_scope_level_t;$/;"	t	typeref:struct:_snd_pcm_scope_level	file:
snd_pcm_scope_malloc	./src/pcm/pcm_meter.c	/^int snd_pcm_scope_malloc(snd_pcm_scope_t **ptr)$/;"	f
snd_pcm_scope_ops_t	./include/pcm.h	/^} snd_pcm_scope_ops_t;$/;"	t	typeref:struct:_snd_pcm_scope_ops
snd_pcm_scope_remove	./src/pcm/pcm_meter.c	/^static int snd_pcm_scope_remove(snd_pcm_scope_t *scope)$/;"	f	file:
snd_pcm_scope_s16_get_channel_buffer	./src/pcm/pcm_meter.c	/^int16_t *snd_pcm_scope_s16_get_channel_buffer(snd_pcm_scope_t *scope,$/;"	f
snd_pcm_scope_s16_open	./src/pcm/pcm_meter.c	/^int snd_pcm_scope_s16_open(snd_pcm_t *pcm, const char *name,$/;"	f
snd_pcm_scope_s16_t	./src/pcm/pcm_meter.c	/^} snd_pcm_scope_s16_t;$/;"	t	typeref:struct:_snd_pcm_scope_s16	file:
snd_pcm_scope_set_callback_private	./src/pcm/pcm_meter.c	/^void snd_pcm_scope_set_callback_private(snd_pcm_scope_t *scope, void *val)$/;"	f
snd_pcm_scope_set_name	./src/pcm/pcm_meter.c	/^void snd_pcm_scope_set_name(snd_pcm_scope_t *scope, const char *val)$/;"	f
snd_pcm_scope_set_ops	./src/pcm/pcm_meter.c	/^void snd_pcm_scope_set_ops(snd_pcm_scope_t *scope, const snd_pcm_scope_ops_t *val)$/;"	f
snd_pcm_scope_t	./include/pcm.h	/^typedef struct _snd_pcm_scope snd_pcm_scope_t;$/;"	t	typeref:struct:_snd_pcm_scope
snd_pcm_set_appl_ptr	./src/pcm/pcm.c	/^void snd_pcm_set_appl_ptr(snd_pcm_t *pcm, volatile snd_pcm_uframes_t *appl_ptr, int fd, off_t offset)$/;"	f
snd_pcm_set_appl_ptr	./src/pcm/pcm_local.h	270;"	d
snd_pcm_set_hw_ptr	./src/pcm/pcm.c	/^void snd_pcm_set_hw_ptr(snd_pcm_t *pcm, volatile snd_pcm_uframes_t *hw_ptr, int fd, off_t offset)$/;"	f
snd_pcm_set_hw_ptr	./src/pcm/pcm_local.h	268;"	d
snd_pcm_set_params	./src/pcm/pcm.c	/^int snd_pcm_set_params(snd_pcm_t *pcm,$/;"	f
snd_pcm_set_ptr	./src/pcm/pcm.c	/^static void snd_pcm_set_ptr(snd_pcm_t *pcm, snd_pcm_rbptr_t *rbptr,$/;"	f	file:
snd_pcm_sframes_t	./include/pcm.h	/^typedef long snd_pcm_sframes_t;$/;"	t
snd_pcm_share_async	./src/pcm/pcm_share.c	/^static int snd_pcm_share_async(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int sig ATTRIBUTE_UNUSED, pid_t pid ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_share_avail_update	./src/pcm/pcm_share.c	/^static snd_pcm_sframes_t snd_pcm_share_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_channel_info	./src/pcm/pcm_share.c	/^static int snd_pcm_share_channel_info(snd_pcm_t *pcm, snd_pcm_channel_info_t *info)$/;"	f	file:
snd_pcm_share_close	./src/pcm/pcm_share.c	/^static int snd_pcm_share_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_delay	./src/pcm/pcm_share.c	/^static int snd_pcm_share_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_share_drain	./src/pcm/pcm_share.c	/^static int snd_pcm_share_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_drop	./src/pcm/pcm_share.c	/^static int snd_pcm_share_drop(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_dump	./src/pcm/pcm_share.c	/^static void snd_pcm_share_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_share_fast_ops	./src/pcm/pcm_share.c	/^static const snd_pcm_fast_ops_t snd_pcm_share_fast_ops = {$/;"	v	file:
snd_pcm_share_forward	./src/pcm/pcm_share.c	/^static snd_pcm_sframes_t snd_pcm_share_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_share_forwardable	./src/pcm/pcm_share.c	/^static snd_pcm_sframes_t snd_pcm_share_forwardable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_htimestamp	./src/pcm/pcm_share.c	/^static int snd_pcm_share_htimestamp(snd_pcm_t *pcm, snd_pcm_uframes_t *avail,$/;"	f	file:
snd_pcm_share_hw_free	./src/pcm/pcm_share.c	/^static int snd_pcm_share_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_hw_params	./src/pcm/pcm_share.c	/^static int snd_pcm_share_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_share_hw_params_slave	./src/pcm/pcm_share.c	/^static int snd_pcm_share_hw_params_slave(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_share_hw_refine	./src/pcm/pcm_share.c	/^static int snd_pcm_share_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_share_hw_refine_cchange	./src/pcm/pcm_share.c	/^static int snd_pcm_share_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_share_hw_refine_cprepare	./src/pcm/pcm_share.c	/^static int snd_pcm_share_hw_refine_cprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_share_hw_refine_schange	./src/pcm/pcm_share.c	/^static int snd_pcm_share_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_share_hw_refine_slave	./src/pcm/pcm_share.c	/^static int snd_pcm_share_hw_refine_slave(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_share_hw_refine_sprepare	./src/pcm/pcm_share.c	/^static int snd_pcm_share_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_share_hwsync	./src/pcm/pcm_share.c	/^static int snd_pcm_share_hwsync(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_info	./src/pcm/pcm_share.c	/^static int snd_pcm_share_info(snd_pcm_t *pcm, snd_pcm_info_t *info)$/;"	f	file:
snd_pcm_share_mmap	./src/pcm/pcm_share.c	/^static int snd_pcm_share_mmap(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_share_mmap_commit	./src/pcm/pcm_share.c	/^static snd_pcm_sframes_t snd_pcm_share_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_share_munmap	./src/pcm/pcm_share.c	/^static int snd_pcm_share_munmap(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_share_nonblock	./src/pcm/pcm_share.c	/^static int snd_pcm_share_nonblock(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int nonblock ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_share_open	./src/pcm/pcm_share.c	/^int snd_pcm_share_open(snd_pcm_t **pcmp, const char *name, const char *sname,$/;"	f
snd_pcm_share_ops	./src/pcm/pcm_share.c	/^static const snd_pcm_ops_t snd_pcm_share_ops = {$/;"	v	file:
snd_pcm_share_pause	./src/pcm/pcm_share.c	/^static int snd_pcm_share_pause(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int enable ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_share_prepare	./src/pcm/pcm_share.c	/^static int snd_pcm_share_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_reset	./src/pcm/pcm_share.c	/^static int snd_pcm_share_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_resume	./src/pcm/pcm_share.c	/^static int snd_pcm_share_resume(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_share_rewind	./src/pcm/pcm_share.c	/^static snd_pcm_sframes_t snd_pcm_share_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_share_rewindable	./src/pcm/pcm_share.c	/^static snd_pcm_sframes_t snd_pcm_share_rewindable(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_slave_avail	./src/pcm/pcm_share.c	/^static snd_pcm_uframes_t snd_pcm_share_slave_avail(snd_pcm_share_slave_t *slave)$/;"	f	file:
snd_pcm_share_slave_t	./src/pcm/pcm_share.c	/^} snd_pcm_share_slave_t;$/;"	t	typeref:struct:__anon118	file:
snd_pcm_share_slaves_mutex	./src/pcm/pcm_share.c	/^static pthread_mutex_t snd_pcm_share_slaves_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
snd_pcm_share_start	./src/pcm/pcm_share.c	/^static int snd_pcm_share_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_state	./src/pcm/pcm_share.c	/^static snd_pcm_state_t snd_pcm_share_state(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_share_status	./src/pcm/pcm_share.c	/^static int snd_pcm_share_status(snd_pcm_t *pcm, snd_pcm_status_t *status)$/;"	f	file:
snd_pcm_share_sw_params	./src/pcm/pcm_share.c	/^static int snd_pcm_share_sw_params(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t *params ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_share_t	./src/pcm/pcm_share.c	/^} snd_pcm_share_t;$/;"	t	typeref:struct:__anon119	file:
snd_pcm_share_thread	./src/pcm/pcm_share.c	/^static void *snd_pcm_share_thread(void *data)$/;"	f	file:
snd_pcm_shm_action	./src/pcm/pcm_shm.c	/^static long snd_pcm_shm_action(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_action_fd	./src/pcm/pcm_shm.c	/^static long snd_pcm_shm_action_fd(snd_pcm_t *pcm, int *fd)$/;"	f	file:
snd_pcm_shm_action_fd0	./src/pcm/pcm_shm.c	/^static long snd_pcm_shm_action_fd0(snd_pcm_t *pcm, int *fd)$/;"	f	file:
snd_pcm_shm_async	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_async(snd_pcm_t *pcm, int sig, pid_t pid)$/;"	f	file:
snd_pcm_shm_avail_update	./src/pcm/pcm_shm.c	/^static snd_pcm_sframes_t snd_pcm_shm_avail_update(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_channel_info	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_channel_info(snd_pcm_t *pcm, snd_pcm_channel_info_t * info)$/;"	f	file:
snd_pcm_shm_close	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_ctrl_t	./include/aserver.h	/^} snd_pcm_shm_ctrl_t;$/;"	t	typeref:struct:__anon53
snd_pcm_shm_delay	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_delay(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)$/;"	f	file:
snd_pcm_shm_drain	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_drain(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_drop	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_drop(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_dump	./src/pcm/pcm_shm.c	/^static void snd_pcm_shm_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_shm_fast_ops	./src/pcm/pcm_shm.c	/^static const snd_pcm_fast_ops_t snd_pcm_shm_fast_ops = {$/;"	v	file:
snd_pcm_shm_forward	./src/pcm/pcm_shm.c	/^static snd_pcm_sframes_t snd_pcm_shm_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_shm_forwardable	./src/pcm/pcm_shm.c	/^static snd_pcm_sframes_t snd_pcm_shm_forwardable(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_shm_htimestamp	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_htimestamp(snd_pcm_t *pcm ATTRIBUTE_UNUSED,$/;"	f	file:
snd_pcm_shm_hw_free	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_hw_free(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_hw_params	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_shm_hw_params_slave	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_hw_params_slave(snd_pcm_t *pcm, $/;"	f	file:
snd_pcm_shm_hw_refine	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_shm_hw_refine_cchange	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_hw_refine_cchange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_shm_hw_refine_cprepare	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_hw_refine_cprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_shm_hw_refine_schange	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_hw_refine_schange(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *params,$/;"	f	file:
snd_pcm_shm_hw_refine_slave	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_hw_refine_slave(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_shm_hw_refine_sprepare	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_hw_refine_sprepare(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_shm_hwsync	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_hwsync(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_info	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_info(snd_pcm_t *pcm, snd_pcm_info_t * info)$/;"	f	file:
snd_pcm_shm_mmap	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_mmap(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_shm_mmap_commit	./src/pcm/pcm_shm.c	/^static snd_pcm_sframes_t snd_pcm_shm_mmap_commit(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_shm_munmap	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_munmap(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_new_rbptr	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_new_rbptr(snd_pcm_t *pcm, snd_pcm_shm_t *shm,$/;"	f	file:
snd_pcm_shm_nonblock	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_nonblock(snd_pcm_t *pcm ATTRIBUTE_UNUSED, int nonblock ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_shm_open	./src/pcm/pcm_shm.c	/^int snd_pcm_shm_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_shm_ops	./src/pcm/pcm_shm.c	/^static const snd_pcm_ops_t snd_pcm_shm_ops = {$/;"	v	file:
snd_pcm_shm_pause	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_pause(snd_pcm_t *pcm, int enable)$/;"	f	file:
snd_pcm_shm_poll_descriptor	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_poll_descriptor(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_prepare	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_prepare(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_rbptr_t	./include/aserver.h	/^} snd_pcm_shm_rbptr_t;$/;"	t	typeref:struct:__anon52
snd_pcm_shm_reset	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_reset(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_resume	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_resume(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_rewind	./src/pcm/pcm_shm.c	/^static snd_pcm_sframes_t snd_pcm_shm_rewind(snd_pcm_t *pcm, snd_pcm_uframes_t frames)$/;"	f	file:
snd_pcm_shm_rewindable	./src/pcm/pcm_shm.c	/^static snd_pcm_sframes_t snd_pcm_shm_rewindable(snd_pcm_t *pcm ATTRIBUTE_UNUSED)$/;"	f	file:
snd_pcm_shm_start	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_start(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_state	./src/pcm/pcm_shm.c	/^static snd_pcm_state_t snd_pcm_shm_state(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_shm_status	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_status(snd_pcm_t *pcm, snd_pcm_status_t * status)$/;"	f	file:
snd_pcm_shm_sw_params	./src/pcm/pcm_shm.c	/^static int snd_pcm_shm_sw_params(snd_pcm_t *pcm, snd_pcm_sw_params_t * params)$/;"	f	file:
snd_pcm_shm_t	./src/pcm/pcm_shm.c	/^} snd_pcm_shm_t;$/;"	t	typeref:struct:__anon108	file:
snd_pcm_slave_conf	./src/pcm/pcm.c	/^int snd_pcm_slave_conf(snd_config_t *root, snd_config_t *conf,$/;"	f
snd_pcm_slave_xfer_areas_func_t	./src/pcm/pcm_plugin.h	/^typedef snd_pcm_uframes_t (*snd_pcm_slave_xfer_areas_func_t)$/;"	t
snd_pcm_slave_xfer_areas_undo_func_t	./src/pcm/pcm_plugin.h	/^typedef snd_pcm_sframes_t (*snd_pcm_slave_xfer_areas_undo_func_t)$/;"	t
snd_pcm_softvol_close	./src/pcm/pcm_softvol.c	/^static int snd_pcm_softvol_close(snd_pcm_t *pcm)$/;"	f	file:
snd_pcm_softvol_dump	./src/pcm/pcm_softvol.c	/^static void snd_pcm_softvol_dump(snd_pcm_t *pcm, snd_output_t *out)$/;"	f	file:
snd_pcm_softvol_hw_params	./src/pcm/pcm_softvol.c	/^static int snd_pcm_softvol_hw_params(snd_pcm_t *pcm, snd_pcm_hw_params_t * params)$/;"	f	file:
snd_pcm_softvol_hw_refine	./src/pcm/pcm_softvol.c	/^static int snd_pcm_softvol_hw_refine(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:
snd_pcm_softvol_hw_refine_cchange	./src/pcm/pcm_softvol.c	/^static int snd_pcm_softvol_hw_refine_cchange(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_softvol_hw_refine_cprepare	./src/pcm/pcm_softvol.c	/^static int snd_pcm_softvol_hw_refine_cprepare(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_softvol_hw_refine_schange	./src/pcm/pcm_softvol.c	/^static int snd_pcm_softvol_hw_refine_schange(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_softvol_hw_refine_sprepare	./src/pcm/pcm_softvol.c	/^static int snd_pcm_softvol_hw_refine_sprepare(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)$/;"	f	file:
snd_pcm_softvol_open	./src/pcm/pcm_softvol.c	/^int snd_pcm_softvol_open(snd_pcm_t **pcmp, const char *name,$/;"	f
snd_pcm_softvol_ops	./src/pcm/pcm_softvol.c	/^static const snd_pcm_ops_t snd_pcm_softvol_ops = {$/;"	v	file:
snd_pcm_softvol_read_areas	./src/pcm/pcm_softvol.c	/^snd_pcm_softvol_read_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_softvol_t	./src/pcm/pcm_softvol.c	/^} snd_pcm_softvol_t;$/;"	t	typeref:struct:__anon109	file:
snd_pcm_softvol_write_areas	./src/pcm/pcm_softvol.c	/^snd_pcm_softvol_write_areas(snd_pcm_t *pcm,$/;"	f	file:
snd_pcm_start	./src/pcm/pcm.c	/^int snd_pcm_start(snd_pcm_t *pcm)$/;"	f
snd_pcm_start_mode_name	./src/pcm/pcm.c	/^const char *snd_pcm_start_mode_name(snd_pcm_start_t mode)$/;"	f
snd_pcm_start_mode_names	./src/pcm/pcm.c	/^static const char *const snd_pcm_start_mode_names[] = {$/;"	v	file:
snd_pcm_start_t	./include/pcm.h	/^} snd_pcm_start_t;$/;"	t	typeref:enum:_snd_pcm_start
snd_pcm_state	./src/pcm/pcm.c	/^snd_pcm_state_t snd_pcm_state(snd_pcm_t *pcm)$/;"	f
snd_pcm_state_name	./src/pcm/pcm.c	/^const char *snd_pcm_state_name(snd_pcm_state_t state)$/;"	f
snd_pcm_state_names	./src/pcm/pcm.c	/^static const char *const snd_pcm_state_names[] = {$/;"	v	file:
snd_pcm_state_t	./include/pcm.h	/^} snd_pcm_state_t;$/;"	t	typeref:enum:_snd_pcm_state
snd_pcm_status	./src/pcm/pcm.c	/^int snd_pcm_status(snd_pcm_t *pcm, snd_pcm_status_t *status)$/;"	f
snd_pcm_status_alloca	./include/pcm.h	834;"	d
snd_pcm_status_copy	./src/pcm/pcm.c	/^void snd_pcm_status_copy(snd_pcm_status_t *dst, const snd_pcm_status_t *src)$/;"	f
snd_pcm_status_dump	./src/pcm/pcm.c	/^int snd_pcm_status_dump(snd_pcm_status_t *status, snd_output_t *out)$/;"	f
snd_pcm_status_free	./src/pcm/pcm.c	/^void snd_pcm_status_free(snd_pcm_status_t *obj)$/;"	f
snd_pcm_status_get_avail	./src/pcm/pcm.c	/^snd_pcm_uframes_t snd_pcm_status_get_avail(const snd_pcm_status_t *obj)$/;"	f
snd_pcm_status_get_avail_max	./src/pcm/pcm.c	/^snd_pcm_uframes_t snd_pcm_status_get_avail_max(const snd_pcm_status_t *obj)$/;"	f
snd_pcm_status_get_delay	./src/pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_status_get_delay(const snd_pcm_status_t *obj)$/;"	f
snd_pcm_status_get_htstamp	./src/pcm/pcm.c	/^void INTERNAL(snd_pcm_status_get_htstamp)(const snd_pcm_status_t *obj, snd_htimestamp_t *ptr)$/;"	f
snd_pcm_status_get_overrange	./src/pcm/pcm.c	/^snd_pcm_uframes_t snd_pcm_status_get_overrange(const snd_pcm_status_t *obj)$/;"	f
snd_pcm_status_get_state	./src/pcm/pcm.c	/^snd_pcm_state_t snd_pcm_status_get_state(const snd_pcm_status_t *obj)$/;"	f
snd_pcm_status_get_trigger_htstamp	./src/pcm/pcm.c	/^void INTERNAL(snd_pcm_status_get_trigger_htstamp)(const snd_pcm_status_t *obj, snd_htimestamp_t *ptr)$/;"	f
snd_pcm_status_get_trigger_tstamp	./src/pcm/pcm.c	/^void snd_pcm_status_get_trigger_tstamp(const snd_pcm_status_t *obj, snd_timestamp_t *ptr)$/;"	f
snd_pcm_status_get_tstamp	./src/pcm/pcm.c	/^void snd_pcm_status_get_tstamp(const snd_pcm_status_t *obj, snd_timestamp_t *ptr)$/;"	f
snd_pcm_status_malloc	./src/pcm/pcm.c	/^int snd_pcm_status_malloc(snd_pcm_status_t **ptr)$/;"	f
snd_pcm_status_sizeof	./src/pcm/pcm.c	/^size_t snd_pcm_status_sizeof()$/;"	f
snd_pcm_status_t	./include/pcm.h	/^ typedef struct _snd_pcm_status snd_pcm_status_t;$/;"	t	typeref:struct:_snd_pcm_status
snd_pcm_stream	./src/pcm/pcm.c	/^snd_pcm_stream_t snd_pcm_stream(snd_pcm_t *pcm)$/;"	f
snd_pcm_stream_name	./src/pcm/pcm.c	/^const char *snd_pcm_stream_name(snd_pcm_stream_t stream)$/;"	f
snd_pcm_stream_names	./src/pcm/pcm.c	/^static const char *const snd_pcm_stream_names[] = {$/;"	v	file:
snd_pcm_stream_t	./include/pcm.h	/^} snd_pcm_stream_t;$/;"	t	typeref:enum:_snd_pcm_stream
snd_pcm_subclass_t	./include/pcm.h	/^} snd_pcm_subclass_t;$/;"	t	typeref:enum:_snd_pcm_subclass
snd_pcm_subformat_description	./src/pcm/pcm.c	/^const char *snd_pcm_subformat_description(snd_pcm_subformat_t subformat)$/;"	f
snd_pcm_subformat_descriptions	./src/pcm/pcm.c	/^static const char *const snd_pcm_subformat_descriptions[] = {$/;"	v	file:
snd_pcm_subformat_mask_alloca	./include/pcm.h	809;"	d
snd_pcm_subformat_mask_any	./src/pcm/pcm.c	/^void snd_pcm_subformat_mask_any(snd_pcm_subformat_mask_t *mask)$/;"	f
snd_pcm_subformat_mask_copy	./src/pcm/pcm.c	/^void snd_pcm_subformat_mask_copy(snd_pcm_subformat_mask_t *dst, const snd_pcm_subformat_mask_t *src)$/;"	f
snd_pcm_subformat_mask_empty	./src/pcm/pcm.c	/^int snd_pcm_subformat_mask_empty(const snd_pcm_subformat_mask_t *mask)$/;"	f
snd_pcm_subformat_mask_free	./src/pcm/pcm.c	/^void snd_pcm_subformat_mask_free(snd_pcm_subformat_mask_t *obj)$/;"	f
snd_pcm_subformat_mask_malloc	./src/pcm/pcm.c	/^int snd_pcm_subformat_mask_malloc(snd_pcm_subformat_mask_t **ptr)$/;"	f
snd_pcm_subformat_mask_none	./src/pcm/pcm.c	/^void snd_pcm_subformat_mask_none(snd_pcm_subformat_mask_t *mask)$/;"	f
snd_pcm_subformat_mask_reset	./src/pcm/pcm.c	/^void snd_pcm_subformat_mask_reset(snd_pcm_subformat_mask_t *mask, snd_pcm_subformat_t val)$/;"	f
snd_pcm_subformat_mask_set	./src/pcm/pcm.c	/^void snd_pcm_subformat_mask_set(snd_pcm_subformat_mask_t *mask, snd_pcm_subformat_t val)$/;"	f
snd_pcm_subformat_mask_sizeof	./src/pcm/pcm.c	/^size_t snd_pcm_subformat_mask_sizeof()$/;"	f
snd_pcm_subformat_mask_t	./include/pcm.h	/^typedef struct _snd_pcm_subformat_mask snd_pcm_subformat_mask_t;$/;"	t	typeref:struct:_snd_pcm_subformat_mask
snd_pcm_subformat_mask_test	./src/pcm/pcm.c	/^int snd_pcm_subformat_mask_test(const snd_pcm_subformat_mask_t *mask, snd_pcm_subformat_t val)$/;"	f
snd_pcm_subformat_name	./src/pcm/pcm.c	/^const char *snd_pcm_subformat_name(snd_pcm_subformat_t subformat)$/;"	f
snd_pcm_subformat_names	./src/pcm/pcm.c	/^static const char *const snd_pcm_subformat_names[] = {$/;"	v	file:
snd_pcm_subformat_t	./include/pcm.h	/^} snd_pcm_subformat_t;$/;"	t	typeref:enum:_snd_pcm_subformat
snd_pcm_sw_params	./src/pcm/pcm.c	/^int snd_pcm_sw_params(snd_pcm_t *pcm, snd_pcm_sw_params_t *params)$/;"	f
snd_pcm_sw_params_alloca	./include/pcm.h	713;"	d
snd_pcm_sw_params_copy	./src/pcm/pcm.c	/^void snd_pcm_sw_params_copy(snd_pcm_sw_params_t *dst, const snd_pcm_sw_params_t *src)$/;"	f
snd_pcm_sw_params_current	./src/pcm/pcm.c	/^int snd_pcm_sw_params_current(snd_pcm_t *pcm, snd_pcm_sw_params_t *params)$/;"	f
snd_pcm_sw_params_default	./src/pcm/pcm_params.c	/^static int snd_pcm_sw_params_default(snd_pcm_t *pcm, snd_pcm_sw_params_t *params)$/;"	f	file:
snd_pcm_sw_params_dump	./src/pcm/pcm.c	/^int snd_pcm_sw_params_dump(snd_pcm_sw_params_t *params, snd_output_t *out)$/;"	f
snd_pcm_sw_params_free	./src/pcm/pcm.c	/^void snd_pcm_sw_params_free(snd_pcm_sw_params_t *obj)$/;"	f
snd_pcm_sw_params_get_avail_min	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_sw_params_get_avail_min)(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_sw_params_get_boundary	./src/pcm/pcm.c	/^int snd_pcm_sw_params_get_boundary(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_sw_params_get_period_event	./src/pcm/pcm.c	/^int snd_pcm_sw_params_get_period_event(const snd_pcm_sw_params_t *params, int *val)$/;"	f
snd_pcm_sw_params_get_silence_size	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_sw_params_get_silence_size)(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_sw_params_get_silence_threshold	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_sw_params_get_silence_threshold)(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_sw_params_get_sleep_min	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_sw_params_get_sleep_min)(const snd_pcm_sw_params_t *params ATTRIBUTE_UNUSED, unsigned int *val)$/;"	f
snd_pcm_sw_params_get_start_mode	./src/pcm/pcm.c	/^snd_pcm_start_t snd_pcm_sw_params_get_start_mode(const snd_pcm_sw_params_t *params)$/;"	f
snd_pcm_sw_params_get_start_threshold	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_sw_params_get_start_threshold)(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_sw_params_get_stop_threshold	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_sw_params_get_stop_threshold)(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_sw_params_get_tstamp_mode	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_sw_params_get_tstamp_mode)(const snd_pcm_sw_params_t *params, snd_pcm_tstamp_t *val)$/;"	f
snd_pcm_sw_params_get_xfer_align	./src/pcm/pcm.c	/^int INTERNAL(snd_pcm_sw_params_get_xfer_align)(const snd_pcm_sw_params_t *params ATTRIBUTE_UNUSED, snd_pcm_uframes_t *val)$/;"	f
snd_pcm_sw_params_get_xrun_mode	./src/pcm/pcm.c	/^snd_pcm_xrun_t snd_pcm_sw_params_get_xrun_mode(const snd_pcm_sw_params_t *params)$/;"	f
snd_pcm_sw_params_malloc	./src/pcm/pcm.c	/^int snd_pcm_sw_params_malloc(snd_pcm_sw_params_t **ptr)$/;"	f
snd_pcm_sw_params_set_avail_min	./src/pcm/pcm.c	/^int snd_pcm_sw_params_set_avail_min(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)$/;"	f
snd_pcm_sw_params_set_period_event	./src/pcm/pcm.c	/^int snd_pcm_sw_params_set_period_event(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, int val)$/;"	f
snd_pcm_sw_params_set_silence_size	./src/pcm/pcm.c	/^int snd_pcm_sw_params_set_silence_size(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)$/;"	f
snd_pcm_sw_params_set_silence_threshold	./src/pcm/pcm.c	/^int snd_pcm_sw_params_set_silence_threshold(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)$/;"	f
snd_pcm_sw_params_set_sleep_min	./src/pcm/pcm.c	/^int snd_pcm_sw_params_set_sleep_min(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t *params ATTRIBUTE_UNUSED, unsigned int val ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_sw_params_set_start_mode	./src/pcm/pcm.c	/^int snd_pcm_sw_params_set_start_mode(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_start_t val)$/;"	f
snd_pcm_sw_params_set_start_threshold	./src/pcm/pcm.c	/^int snd_pcm_sw_params_set_start_threshold(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)$/;"	f
snd_pcm_sw_params_set_stop_threshold	./src/pcm/pcm.c	/^int snd_pcm_sw_params_set_stop_threshold(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)$/;"	f
snd_pcm_sw_params_set_tstamp_mode	./src/pcm/pcm.c	/^int snd_pcm_sw_params_set_tstamp_mode(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t *params, snd_pcm_tstamp_t val)$/;"	f
snd_pcm_sw_params_set_xfer_align	./src/pcm/pcm.c	/^int snd_pcm_sw_params_set_xfer_align(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t *params ATTRIBUTE_UNUSED, snd_pcm_uframes_t val ATTRIBUTE_UNUSED)$/;"	f
snd_pcm_sw_params_set_xrun_mode	./src/pcm/pcm.c	/^int snd_pcm_sw_params_set_xrun_mode(snd_pcm_t *pcm ATTRIBUTE_UNUSED, snd_pcm_sw_params_t *params, snd_pcm_xrun_t val)$/;"	f
snd_pcm_sw_params_sizeof	./src/pcm/pcm.c	/^size_t snd_pcm_sw_params_sizeof()$/;"	f
snd_pcm_sw_params_t	./include/pcm.h	/^typedef struct _snd_pcm_sw_params snd_pcm_sw_params_t;$/;"	t	typeref:struct:_snd_pcm_sw_params
snd_pcm_sync_id_t	./include/pcm.h	/^} snd_pcm_sync_id_t;$/;"	t	typeref:union:_snd_pcm_sync_id
snd_pcm_t	./include/pcm.h	/^typedef struct _snd_pcm snd_pcm_t;$/;"	t	typeref:struct:_snd_pcm
snd_pcm_tstamp_mode_name	./src/pcm/pcm.c	/^const char *snd_pcm_tstamp_mode_name(snd_pcm_tstamp_t mode)$/;"	f
snd_pcm_tstamp_mode_names	./src/pcm/pcm.c	/^static const char *const snd_pcm_tstamp_mode_names[] = {$/;"	v	file:
snd_pcm_tstamp_t	./include/pcm.h	/^} snd_pcm_tstamp_t;$/;"	t	typeref:enum:_snd_pcm_tstamp
snd_pcm_type	./src/pcm/pcm.c	/^snd_pcm_type_t snd_pcm_type(snd_pcm_t *pcm)$/;"	f
snd_pcm_type_name	./src/pcm/pcm.c	/^const char *INTERNAL(snd_pcm_type_name)(snd_pcm_type_t type)$/;"	f
snd_pcm_type_names	./src/pcm/pcm.c	/^static const char *const snd_pcm_type_names[] = {$/;"	v	file:
snd_pcm_type_t	./include/pcm.h	/^typedef enum _snd_pcm_type snd_pcm_type_t;$/;"	t	typeref:enum:_snd_pcm_type
snd_pcm_uframes_t	./include/pcm.h	/^typedef unsigned long snd_pcm_uframes_t;$/;"	t
snd_pcm_unlink	./src/pcm/pcm.c	/^int snd_pcm_unlink(snd_pcm_t *pcm)$/;"	f
snd_pcm_unlink_appl_ptr	./src/pcm/pcm.c	/^void snd_pcm_unlink_appl_ptr(snd_pcm_t *pcm, snd_pcm_t *slave)$/;"	f
snd_pcm_unlink_appl_ptr	./src/pcm/pcm_local.h	278;"	d
snd_pcm_unlink_hw_ptr	./src/pcm/pcm.c	/^void snd_pcm_unlink_hw_ptr(snd_pcm_t *pcm, snd_pcm_t *slave)$/;"	f
snd_pcm_unlink_hw_ptr	./src/pcm/pcm_local.h	276;"	d
snd_pcm_unlink_ptr	./src/pcm/pcm.c	/^static void snd_pcm_unlink_ptr(snd_pcm_t *pcm, snd_pcm_rbptr_t *pcm_rbptr,$/;"	f	file:
snd_pcm_wait	./src/pcm/pcm.c	/^int snd_pcm_wait(snd_pcm_t *pcm, int timeout)$/;"	f
snd_pcm_wait_nocheck	./src/pcm/pcm.c	/^int snd_pcm_wait_nocheck(snd_pcm_t *pcm, int timeout)$/;"	f
snd_pcm_wait_nocheck	./src/pcm/pcm_local.h	264;"	d
snd_pcm_write_areas	./src/pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_write_areas(snd_pcm_t *pcm, const snd_pcm_channel_area_t *areas,$/;"	f
snd_pcm_write_areas	./src/pcm/pcm_local.h	292;"	d
snd_pcm_write_mmap	./src/pcm/pcm_local.h	296;"	d
snd_pcm_write_mmap	./src/pcm/pcm_mmap.c	/^snd_pcm_sframes_t snd_pcm_write_mmap(snd_pcm_t *pcm, snd_pcm_uframes_t offset,$/;"	f
snd_pcm_writei	./src/pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_writei(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)$/;"	f
snd_pcm_writen	./src/pcm/pcm.c	/^snd_pcm_sframes_t snd_pcm_writen(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)$/;"	f
snd_pcm_xfer_areas_func_t	./src/pcm/pcm_local.h	/^typedef snd_pcm_sframes_t (*snd_pcm_xfer_areas_func_t)(snd_pcm_t *pcm, $/;"	t
snd_pcm_xrun_mode_name	./src/pcm/pcm.c	/^const char *snd_pcm_xrun_mode_name(snd_pcm_xrun_t mode)$/;"	f
snd_pcm_xrun_mode_names	./src/pcm/pcm.c	/^static const char *const snd_pcm_xrun_mode_names[] = {$/;"	v	file:
snd_pcm_xrun_t	./include/pcm.h	/^} snd_pcm_xrun_t;$/;"	t	typeref:enum:_snd_pcm_xrun
snd_rawmidi_close	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_close(snd_rawmidi_t *rawmidi)$/;"	f
snd_rawmidi_conf_generic_id	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_conf_generic_id(const char *id)$/;"	f
snd_rawmidi_drain	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_drain(snd_rawmidi_t *rawmidi)$/;"	f
snd_rawmidi_drop	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_drop(snd_rawmidi_t *rawmidi)$/;"	f
snd_rawmidi_hw_close	./src/rawmidi/rawmidi_hw.c	/^static int snd_rawmidi_hw_close(snd_rawmidi_t *rmidi)$/;"	f	file:
snd_rawmidi_hw_drain	./src/rawmidi/rawmidi_hw.c	/^static int snd_rawmidi_hw_drain(snd_rawmidi_t *rmidi)$/;"	f	file:
snd_rawmidi_hw_drop	./src/rawmidi/rawmidi_hw.c	/^static int snd_rawmidi_hw_drop(snd_rawmidi_t *rmidi)$/;"	f	file:
snd_rawmidi_hw_info	./src/rawmidi/rawmidi_hw.c	/^static int snd_rawmidi_hw_info(snd_rawmidi_t *rmidi, snd_rawmidi_info_t * info)$/;"	f	file:
snd_rawmidi_hw_nonblock	./src/rawmidi/rawmidi_hw.c	/^static int snd_rawmidi_hw_nonblock(snd_rawmidi_t *rmidi, int nonblock)$/;"	f	file:
snd_rawmidi_hw_open	./src/rawmidi/rawmidi_hw.c	/^int snd_rawmidi_hw_open(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp,$/;"	f
snd_rawmidi_hw_ops	./src/rawmidi/rawmidi_hw.c	/^static const snd_rawmidi_ops_t snd_rawmidi_hw_ops = {$/;"	v	file:
snd_rawmidi_hw_params	./src/rawmidi/rawmidi_hw.c	/^static int snd_rawmidi_hw_params(snd_rawmidi_t *rmidi, snd_rawmidi_params_t * params)$/;"	f	file:
snd_rawmidi_hw_read	./src/rawmidi/rawmidi_hw.c	/^static ssize_t snd_rawmidi_hw_read(snd_rawmidi_t *rmidi, void *buffer, size_t size)$/;"	f	file:
snd_rawmidi_hw_status	./src/rawmidi/rawmidi_hw.c	/^static int snd_rawmidi_hw_status(snd_rawmidi_t *rmidi, snd_rawmidi_status_t * status)$/;"	f	file:
snd_rawmidi_hw_t	./src/rawmidi/rawmidi_hw.c	/^} snd_rawmidi_hw_t;$/;"	t	typeref:struct:__anon100	file:
snd_rawmidi_hw_write	./src/rawmidi/rawmidi_hw.c	/^static ssize_t snd_rawmidi_hw_write(snd_rawmidi_t *rmidi, const void *buffer, size_t size)$/;"	f	file:
snd_rawmidi_info	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_info(snd_rawmidi_t *rawmidi, snd_rawmidi_info_t * info)$/;"	f
snd_rawmidi_info_alloca	./include/rawmidi.h	96;"	d
snd_rawmidi_info_copy	./src/rawmidi/rawmidi.c	/^void snd_rawmidi_info_copy(snd_rawmidi_info_t *dst, const snd_rawmidi_info_t *src)$/;"	f
snd_rawmidi_info_free	./src/rawmidi/rawmidi.c	/^void snd_rawmidi_info_free(snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_get_card	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_info_get_card(const snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_get_device	./src/rawmidi/rawmidi.c	/^unsigned int snd_rawmidi_info_get_device(const snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_get_flags	./src/rawmidi/rawmidi.c	/^unsigned int snd_rawmidi_info_get_flags(const snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_get_id	./src/rawmidi/rawmidi.c	/^const char *snd_rawmidi_info_get_id(const snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_get_name	./src/rawmidi/rawmidi.c	/^const char *snd_rawmidi_info_get_name(const snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_get_stream	./src/rawmidi/rawmidi.c	/^snd_rawmidi_stream_t snd_rawmidi_info_get_stream(const snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_get_subdevice	./src/rawmidi/rawmidi.c	/^unsigned int snd_rawmidi_info_get_subdevice(const snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_get_subdevice_name	./src/rawmidi/rawmidi.c	/^const char *snd_rawmidi_info_get_subdevice_name(const snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_get_subdevices_avail	./src/rawmidi/rawmidi.c	/^unsigned int snd_rawmidi_info_get_subdevices_avail(const snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_get_subdevices_count	./src/rawmidi/rawmidi.c	/^unsigned int snd_rawmidi_info_get_subdevices_count(const snd_rawmidi_info_t *info)$/;"	f
snd_rawmidi_info_malloc	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_info_malloc(snd_rawmidi_info_t **info)$/;"	f
snd_rawmidi_info_set_device	./src/rawmidi/rawmidi.c	/^void snd_rawmidi_info_set_device(snd_rawmidi_info_t *info, unsigned int val)$/;"	f
snd_rawmidi_info_set_stream	./src/rawmidi/rawmidi.c	/^void snd_rawmidi_info_set_stream(snd_rawmidi_info_t *info, snd_rawmidi_stream_t val)$/;"	f
snd_rawmidi_info_set_subdevice	./src/rawmidi/rawmidi.c	/^void snd_rawmidi_info_set_subdevice(snd_rawmidi_info_t *info, unsigned int val)$/;"	f
snd_rawmidi_info_sizeof	./src/rawmidi/rawmidi.c	/^size_t snd_rawmidi_info_sizeof()$/;"	f
snd_rawmidi_info_t	./include/rawmidi.h	/^typedef struct _snd_rawmidi_info snd_rawmidi_info_t;$/;"	t	typeref:struct:_snd_rawmidi_info
snd_rawmidi_name	./src/rawmidi/rawmidi.c	/^const char *snd_rawmidi_name(snd_rawmidi_t *rawmidi)$/;"	f
snd_rawmidi_nonblock	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_nonblock(snd_rawmidi_t *rawmidi, int nonblock)$/;"	f
snd_rawmidi_open	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_open(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp,$/;"	f
snd_rawmidi_open_conf	./src/rawmidi/rawmidi.c	/^static int snd_rawmidi_open_conf(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp,$/;"	f	file:
snd_rawmidi_open_lconf	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_open_lconf(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp,$/;"	f
snd_rawmidi_open_noupdate	./src/rawmidi/rawmidi.c	/^static int snd_rawmidi_open_noupdate(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp,$/;"	f	file:
snd_rawmidi_open_objects	./src/rawmidi/rawmidi_symbols.c	/^static const char **snd_rawmidi_open_objects[] = {$/;"	v	file:
snd_rawmidi_open_symbols	./src/rawmidi/rawmidi_symbols.c	/^void *snd_rawmidi_open_symbols(void)$/;"	f
snd_rawmidi_ops_t	./src/rawmidi/rawmidi_local.h	/^} snd_rawmidi_ops_t;$/;"	t	typeref:struct:__anon99
snd_rawmidi_params	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_params(snd_rawmidi_t *rawmidi, snd_rawmidi_params_t * params)$/;"	f
snd_rawmidi_params_alloca	./include/rawmidi.h	119;"	d
snd_rawmidi_params_copy	./src/rawmidi/rawmidi.c	/^void snd_rawmidi_params_copy(snd_rawmidi_params_t *dst, const snd_rawmidi_params_t *src)$/;"	f
snd_rawmidi_params_current	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_params_current(snd_rawmidi_t *rawmidi, snd_rawmidi_params_t *params)$/;"	f
snd_rawmidi_params_default	./src/rawmidi/rawmidi.c	/^static int snd_rawmidi_params_default(snd_rawmidi_t *rawmidi, snd_rawmidi_params_t *params)$/;"	f	file:
snd_rawmidi_params_free	./src/rawmidi/rawmidi.c	/^void snd_rawmidi_params_free(snd_rawmidi_params_t *params)$/;"	f
snd_rawmidi_params_get_avail_min	./src/rawmidi/rawmidi.c	/^size_t snd_rawmidi_params_get_avail_min(const snd_rawmidi_params_t *params)$/;"	f
snd_rawmidi_params_get_buffer_size	./src/rawmidi/rawmidi.c	/^size_t snd_rawmidi_params_get_buffer_size(const snd_rawmidi_params_t *params)$/;"	f
snd_rawmidi_params_get_no_active_sensing	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_params_get_no_active_sensing(const snd_rawmidi_params_t *params)$/;"	f
snd_rawmidi_params_malloc	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_params_malloc(snd_rawmidi_params_t **params)$/;"	f
snd_rawmidi_params_set_avail_min	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_params_set_avail_min(snd_rawmidi_t *rawmidi ATTRIBUTE_UNUSED, snd_rawmidi_params_t *params, size_t val)$/;"	f
snd_rawmidi_params_set_buffer_size	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_params_set_buffer_size(snd_rawmidi_t *rawmidi ATTRIBUTE_UNUSED, snd_rawmidi_params_t *params, size_t val)$/;"	f
snd_rawmidi_params_set_no_active_sensing	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_params_set_no_active_sensing(snd_rawmidi_t *rawmidi ATTRIBUTE_UNUSED, snd_rawmidi_params_t *params, int val)$/;"	f
snd_rawmidi_params_sizeof	./src/rawmidi/rawmidi.c	/^size_t snd_rawmidi_params_sizeof()$/;"	f
snd_rawmidi_params_t	./include/rawmidi.h	/^typedef struct _snd_rawmidi_params snd_rawmidi_params_t;$/;"	t	typeref:struct:_snd_rawmidi_params
snd_rawmidi_poll_descriptors	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_poll_descriptors(snd_rawmidi_t *rawmidi, struct pollfd *pfds, unsigned int space)$/;"	f
snd_rawmidi_poll_descriptors_count	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_poll_descriptors_count(snd_rawmidi_t *rawmidi)$/;"	f
snd_rawmidi_poll_descriptors_revents	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_poll_descriptors_revents(snd_rawmidi_t *rawmidi, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f
snd_rawmidi_read	./src/rawmidi/rawmidi.c	/^ssize_t snd_rawmidi_read(snd_rawmidi_t *rawmidi, void *buffer, size_t size)$/;"	f
snd_rawmidi_status	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_status(snd_rawmidi_t *rawmidi, snd_rawmidi_status_t * status)$/;"	f
snd_rawmidi_status_alloca	./include/rawmidi.h	136;"	d
snd_rawmidi_status_copy	./src/rawmidi/rawmidi.c	/^void snd_rawmidi_status_copy(snd_rawmidi_status_t *dst, const snd_rawmidi_status_t *src)$/;"	f
snd_rawmidi_status_free	./src/rawmidi/rawmidi.c	/^void snd_rawmidi_status_free(snd_rawmidi_status_t *status)$/;"	f
snd_rawmidi_status_get_avail	./src/rawmidi/rawmidi.c	/^size_t snd_rawmidi_status_get_avail(const snd_rawmidi_status_t *status)$/;"	f
snd_rawmidi_status_get_tstamp	./src/rawmidi/rawmidi.c	/^void snd_rawmidi_status_get_tstamp(const snd_rawmidi_status_t *status, snd_htimestamp_t *tstamp)$/;"	f
snd_rawmidi_status_get_xruns	./src/rawmidi/rawmidi.c	/^size_t snd_rawmidi_status_get_xruns(const snd_rawmidi_status_t *status)$/;"	f
snd_rawmidi_status_malloc	./src/rawmidi/rawmidi.c	/^int snd_rawmidi_status_malloc(snd_rawmidi_status_t **ptr)$/;"	f
snd_rawmidi_status_sizeof	./src/rawmidi/rawmidi.c	/^size_t snd_rawmidi_status_sizeof()$/;"	f
snd_rawmidi_status_t	./include/rawmidi.h	/^typedef struct _snd_rawmidi_status snd_rawmidi_status_t;$/;"	t	typeref:struct:_snd_rawmidi_status
snd_rawmidi_stream	./src/rawmidi/rawmidi.c	/^snd_rawmidi_stream_t snd_rawmidi_stream(snd_rawmidi_t *rawmidi)$/;"	f
snd_rawmidi_stream_t	./include/rawmidi.h	/^} snd_rawmidi_stream_t;$/;"	t	typeref:enum:_snd_rawmidi_stream
snd_rawmidi_t	./include/rawmidi.h	/^typedef struct _snd_rawmidi snd_rawmidi_t;$/;"	t	typeref:struct:_snd_rawmidi
snd_rawmidi_type	./src/rawmidi/rawmidi.c	/^snd_rawmidi_type_t snd_rawmidi_type(snd_rawmidi_t *rawmidi)$/;"	f
snd_rawmidi_type_t	./include/rawmidi.h	/^} snd_rawmidi_type_t;$/;"	t	typeref:enum:_snd_rawmidi_type
snd_rawmidi_virtual_close	./src/rawmidi/rawmidi_virt.c	/^static int snd_rawmidi_virtual_close(snd_rawmidi_t *rmidi)$/;"	f	file:
snd_rawmidi_virtual_drain	./src/rawmidi/rawmidi_virt.c	/^static int snd_rawmidi_virtual_drain(snd_rawmidi_t *rmidi)$/;"	f	file:
snd_rawmidi_virtual_drop	./src/rawmidi/rawmidi_virt.c	/^static int snd_rawmidi_virtual_drop(snd_rawmidi_t *rmidi)$/;"	f	file:
snd_rawmidi_virtual_info	./src/rawmidi/rawmidi_virt.c	/^static int snd_rawmidi_virtual_info(snd_rawmidi_t *rmidi, snd_rawmidi_info_t * info)$/;"	f	file:
snd_rawmidi_virtual_input_params	./src/rawmidi/rawmidi_virt.c	/^static int snd_rawmidi_virtual_input_params(snd_rawmidi_virtual_t *virt, snd_rawmidi_params_t *params)$/;"	f	file:
snd_rawmidi_virtual_nonblock	./src/rawmidi/rawmidi_virt.c	/^static int snd_rawmidi_virtual_nonblock(snd_rawmidi_t *rmidi, int nonblock)$/;"	f	file:
snd_rawmidi_virtual_open	./src/rawmidi/rawmidi_virt.c	/^int snd_rawmidi_virtual_open(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp,$/;"	f
snd_rawmidi_virtual_ops	./src/rawmidi/rawmidi_virt.c	/^static const snd_rawmidi_ops_t snd_rawmidi_virtual_ops = {$/;"	v	file:
snd_rawmidi_virtual_output_params	./src/rawmidi/rawmidi_virt.c	/^static int snd_rawmidi_virtual_output_params(snd_rawmidi_virtual_t *virt, snd_rawmidi_params_t *params)$/;"	f	file:
snd_rawmidi_virtual_params	./src/rawmidi/rawmidi_virt.c	/^static int snd_rawmidi_virtual_params(snd_rawmidi_t *rmidi, snd_rawmidi_params_t * params)$/;"	f	file:
snd_rawmidi_virtual_read	./src/rawmidi/rawmidi_virt.c	/^static ssize_t snd_rawmidi_virtual_read(snd_rawmidi_t *rmidi, void *buffer, size_t size)$/;"	f	file:
snd_rawmidi_virtual_status	./src/rawmidi/rawmidi_virt.c	/^static int snd_rawmidi_virtual_status(snd_rawmidi_t *rmidi, snd_rawmidi_status_t * status)$/;"	f	file:
snd_rawmidi_virtual_t	./src/rawmidi/rawmidi_virt.c	/^} snd_rawmidi_virtual_t;$/;"	t	typeref:struct:__anon101	file:
snd_rawmidi_virtual_write	./src/rawmidi/rawmidi_virt.c	/^static ssize_t snd_rawmidi_virtual_write(snd_rawmidi_t *rmidi, const void *buffer, size_t size)$/;"	f	file:
snd_rawmidi_write	./src/rawmidi/rawmidi.c	/^ssize_t snd_rawmidi_write(snd_rawmidi_t *rawmidi, const void *buffer, size_t size)$/;"	f
snd_receive_fd	./src/socket.c	/^int snd_receive_fd(int sock, void *data, size_t len, int *fd)$/;"	f
snd_sb_csp_info	./include/sound/sb16_csp.h	/^typedef struct snd_sb_csp_info {$/;"	s
snd_sb_csp_info_t	./include/sound/sb16_csp.h	/^} snd_sb_csp_info_t;$/;"	t	typeref:struct:snd_sb_csp_info
snd_sb_csp_mc_header	./include/sound/sb16_csp.h	/^typedef struct snd_sb_csp_mc_header {$/;"	s
snd_sb_csp_mc_header_t	./include/sound/sb16_csp.h	/^} snd_sb_csp_mc_header_t;$/;"	t	typeref:struct:snd_sb_csp_mc_header
snd_sb_csp_microcode	./include/sound/sb16_csp.h	/^typedef struct snd_sb_csp_microcode {$/;"	s
snd_sb_csp_microcode_t	./include/sound/sb16_csp.h	/^} snd_sb_csp_microcode_t;$/;"	t	typeref:struct:snd_sb_csp_microcode
snd_sb_csp_start	./include/sound/sb16_csp.h	/^typedef struct snd_sb_csp_start {$/;"	s
snd_sb_csp_start_t	./include/sound/sb16_csp.h	/^} snd_sb_csp_start_t;$/;"	t	typeref:struct:snd_sb_csp_start
snd_sctl_build	./src/control/setup.c	/^int snd_sctl_build(snd_sctl_t **sctl, snd_ctl_t *handle, snd_config_t *conf, snd_config_t *private_data, int mode)$/;"	f
snd_sctl_elem_t	./src/control/setup.c	/^} snd_sctl_elem_t;$/;"	t	typeref:struct:__anon96	file:
snd_sctl_free	./src/control/setup.c	/^int snd_sctl_free(snd_sctl_t *sctl)$/;"	f
snd_sctl_install	./src/control/setup.c	/^int snd_sctl_install(snd_sctl_t *h)$/;"	f
snd_sctl_remove	./src/control/setup.c	/^int snd_sctl_remove(snd_sctl_t *h)$/;"	f
snd_sctl_t	./include/control.h	/^typedef struct _snd_sctl snd_sctl_t;$/;"	t	typeref:struct:_snd_sctl
snd_send_fd	./src/socket.c	/^int snd_send_fd(int sock, void *data, size_t len, int fd)$/;"	f
snd_seq_addr	./include/seq_event.h	/^typedef struct snd_seq_addr {$/;"	s
snd_seq_addr_t	./include/seq_event.h	/^} snd_seq_addr_t;$/;"	t	typeref:struct:snd_seq_addr
snd_seq_alloc_named_queue	./src/seq/seq.c	/^int snd_seq_alloc_named_queue(snd_seq_t *seq, const char *name)$/;"	f
snd_seq_alloc_queue	./src/seq/seq.c	/^int snd_seq_alloc_queue(snd_seq_t *seq)$/;"	f
snd_seq_change_bit	./src/seq/seq.c	/^int snd_seq_change_bit(int nr, void *array)$/;"	f
snd_seq_change_queue_tempo	./include/seqmid.h	324;"	d
snd_seq_client_id	./src/seq/seq.c	/^int snd_seq_client_id(snd_seq_t *seq)$/;"	f
snd_seq_client_info_alloca	./include/seq.h	135;"	d
snd_seq_client_info_copy	./src/seq/seq.c	/^void snd_seq_client_info_copy(snd_seq_client_info_t *dst, const snd_seq_client_info_t *src)$/;"	f
snd_seq_client_info_event_filter_add	./src/seq/seq.c	/^void snd_seq_client_info_event_filter_add(snd_seq_client_info_t *info, int event_type)$/;"	f
snd_seq_client_info_event_filter_check	./src/seq/seq.c	/^int snd_seq_client_info_event_filter_check(snd_seq_client_info_t *info, int event_type)$/;"	f
snd_seq_client_info_event_filter_clear	./src/seq/seq.c	/^void snd_seq_client_info_event_filter_clear(snd_seq_client_info_t *info)$/;"	f
snd_seq_client_info_event_filter_del	./src/seq/seq.c	/^void snd_seq_client_info_event_filter_del(snd_seq_client_info_t *info, int event_type)$/;"	f
snd_seq_client_info_free	./src/seq/seq.c	/^void snd_seq_client_info_free(snd_seq_client_info_t *obj)$/;"	f
snd_seq_client_info_get_broadcast_filter	./src/seq/seq.c	/^int snd_seq_client_info_get_broadcast_filter(const snd_seq_client_info_t *info)$/;"	f
snd_seq_client_info_get_client	./src/seq/seq.c	/^int snd_seq_client_info_get_client(const snd_seq_client_info_t *info)$/;"	f
snd_seq_client_info_get_error_bounce	./src/seq/seq.c	/^int snd_seq_client_info_get_error_bounce(const snd_seq_client_info_t *info)$/;"	f
snd_seq_client_info_get_event_filter	./src/seq/seq.c	/^const unsigned char *snd_seq_client_info_get_event_filter(const snd_seq_client_info_t *info)$/;"	f
snd_seq_client_info_get_event_lost	./src/seq/seq.c	/^int snd_seq_client_info_get_event_lost(const snd_seq_client_info_t *info)$/;"	f
snd_seq_client_info_get_name	./src/seq/seq.c	/^const char *snd_seq_client_info_get_name(snd_seq_client_info_t *info)$/;"	f
snd_seq_client_info_get_num_ports	./src/seq/seq.c	/^int snd_seq_client_info_get_num_ports(const snd_seq_client_info_t *info)$/;"	f
snd_seq_client_info_get_type	./src/seq/seq.c	/^snd_seq_client_type_t snd_seq_client_info_get_type(const snd_seq_client_info_t *info)$/;"	f
snd_seq_client_info_malloc	./src/seq/seq.c	/^int snd_seq_client_info_malloc(snd_seq_client_info_t **ptr)$/;"	f
snd_seq_client_info_set_broadcast_filter	./src/seq/seq.c	/^void snd_seq_client_info_set_broadcast_filter(snd_seq_client_info_t *info, int val)$/;"	f
snd_seq_client_info_set_client	./src/seq/seq.c	/^void snd_seq_client_info_set_client(snd_seq_client_info_t *info, int client)$/;"	f
snd_seq_client_info_set_error_bounce	./src/seq/seq.c	/^void snd_seq_client_info_set_error_bounce(snd_seq_client_info_t *info, int val)$/;"	f
snd_seq_client_info_set_event_filter	./src/seq/seq.c	/^void snd_seq_client_info_set_event_filter(snd_seq_client_info_t *info, unsigned char *filter)$/;"	f
snd_seq_client_info_set_name	./src/seq/seq.c	/^void snd_seq_client_info_set_name(snd_seq_client_info_t *info, const char *name)$/;"	f
snd_seq_client_info_sizeof	./src/seq/seq.c	/^size_t snd_seq_client_info_sizeof()$/;"	f
snd_seq_client_info_t	./include/seq.h	/^typedef struct _snd_seq_client_info snd_seq_client_info_t;$/;"	t	typeref:struct:_snd_seq_client_info
snd_seq_client_pool_alloca	./include/seq.h	174;"	d
snd_seq_client_pool_copy	./src/seq/seq.c	/^void snd_seq_client_pool_copy(snd_seq_client_pool_t *dst, const snd_seq_client_pool_t *src)$/;"	f
snd_seq_client_pool_free	./src/seq/seq.c	/^void snd_seq_client_pool_free(snd_seq_client_pool_t *obj)$/;"	f
snd_seq_client_pool_get_client	./src/seq/seq.c	/^int snd_seq_client_pool_get_client(const snd_seq_client_pool_t *info)$/;"	f
snd_seq_client_pool_get_input_free	./src/seq/seq.c	/^size_t snd_seq_client_pool_get_input_free(const snd_seq_client_pool_t *info)$/;"	f
snd_seq_client_pool_get_input_pool	./src/seq/seq.c	/^size_t snd_seq_client_pool_get_input_pool(const snd_seq_client_pool_t *info)$/;"	f
snd_seq_client_pool_get_output_free	./src/seq/seq.c	/^size_t snd_seq_client_pool_get_output_free(const snd_seq_client_pool_t *info)$/;"	f
snd_seq_client_pool_get_output_pool	./src/seq/seq.c	/^size_t snd_seq_client_pool_get_output_pool(const snd_seq_client_pool_t *info)$/;"	f
snd_seq_client_pool_get_output_room	./src/seq/seq.c	/^size_t snd_seq_client_pool_get_output_room(const snd_seq_client_pool_t *info)$/;"	f
snd_seq_client_pool_malloc	./src/seq/seq.c	/^int snd_seq_client_pool_malloc(snd_seq_client_pool_t **ptr)$/;"	f
snd_seq_client_pool_set_input_pool	./src/seq/seq.c	/^void snd_seq_client_pool_set_input_pool(snd_seq_client_pool_t *info, size_t size)$/;"	f
snd_seq_client_pool_set_output_pool	./src/seq/seq.c	/^void snd_seq_client_pool_set_output_pool(snd_seq_client_pool_t *info, size_t size)$/;"	f
snd_seq_client_pool_set_output_room	./src/seq/seq.c	/^void snd_seq_client_pool_set_output_room(snd_seq_client_pool_t *info, size_t size)$/;"	f
snd_seq_client_pool_sizeof	./src/seq/seq.c	/^size_t snd_seq_client_pool_sizeof()$/;"	f
snd_seq_client_pool_t	./include/seq.h	/^typedef struct _snd_seq_client_pool snd_seq_client_pool_t;$/;"	t	typeref:struct:_snd_seq_client_pool
snd_seq_client_type	./include/seq.h	/^typedef enum snd_seq_client_type {$/;"	g
snd_seq_client_type_t	./include/seq.h	/^} snd_seq_client_type_t;$/;"	t	typeref:enum:snd_seq_client_type
snd_seq_close	./src/seq/seq.c	/^int snd_seq_close(snd_seq_t *seq)$/;"	f
snd_seq_compare_real_time	./src/seq/seq.c	/^static inline int snd_seq_compare_real_time(snd_seq_real_time_t *a, snd_seq_real_time_t *b)$/;"	f	file:
snd_seq_compare_tick_time	./src/seq/seq.c	/^static inline int snd_seq_compare_tick_time(snd_seq_tick_time_t *a, snd_seq_tick_time_t *b)$/;"	f	file:
snd_seq_connect	./include/seq_event.h	/^typedef struct snd_seq_connect {$/;"	s
snd_seq_connect_from	./src/seq/seqmid.c	/^int snd_seq_connect_from(snd_seq_t *seq, int myport, int src_client, int src_port)$/;"	f
snd_seq_connect_t	./include/seq_event.h	/^} snd_seq_connect_t;$/;"	t	typeref:struct:snd_seq_connect
snd_seq_connect_to	./src/seq/seqmid.c	/^int snd_seq_connect_to(snd_seq_t *seq, int myport, int dest_client, int dest_port)$/;"	f
snd_seq_continue_queue	./include/seqmid.h	314;"	d
snd_seq_control_queue	./src/seq/seqmid.c	/^int snd_seq_control_queue(snd_seq_t *seq, int q, int type, int value, snd_seq_event_t *ev)$/;"	f
snd_seq_create_event	./src/seq/seq.c	/^snd_seq_event_t *snd_seq_create_event(void)$/;"	f
snd_seq_create_port	./src/seq/seq.c	/^int snd_seq_create_port(snd_seq_t *seq, snd_seq_port_info_t * port)$/;"	f
snd_seq_create_queue	./src/seq/seq.c	/^int snd_seq_create_queue(snd_seq_t *seq, snd_seq_queue_info_t *info)$/;"	f
snd_seq_create_simple_port	./src/seq/seqmid.c	/^int snd_seq_create_simple_port(snd_seq_t *seq, const char *name,$/;"	f
snd_seq_delete_port	./src/seq/seq.c	/^int snd_seq_delete_port(snd_seq_t *seq, int port)$/;"	f
snd_seq_delete_simple_port	./src/seq/seqmid.c	/^int snd_seq_delete_simple_port(snd_seq_t *seq, int port)$/;"	f
snd_seq_disconnect_from	./src/seq/seqmid.c	/^int snd_seq_disconnect_from(snd_seq_t *seq, int myport, int src_client, int src_port)$/;"	f
snd_seq_disconnect_to	./src/seq/seqmid.c	/^int snd_seq_disconnect_to(snd_seq_t *seq, int myport, int dest_client, int dest_port)$/;"	f
snd_seq_drain_output	./src/seq/seq.c	/^int snd_seq_drain_output(snd_seq_t *seq)$/;"	f
snd_seq_drop_input	./src/seq/seq.c	/^int snd_seq_drop_input(snd_seq_t *seq)$/;"	f
snd_seq_drop_input_buffer	./src/seq/seq.c	/^int snd_seq_drop_input_buffer(snd_seq_t *seq)$/;"	f
snd_seq_drop_output	./src/seq/seq.c	/^int snd_seq_drop_output(snd_seq_t *seq)$/;"	f
snd_seq_drop_output_buffer	./src/seq/seq.c	/^int snd_seq_drop_output_buffer(snd_seq_t *seq)$/;"	f
snd_seq_ev_clear	./include/seqmid.h	48;"	d
snd_seq_ev_ctrl	./include/seq_event.h	/^typedef struct snd_seq_ev_ctrl {$/;"	s
snd_seq_ev_ctrl_t	./include/seq_event.h	/^} snd_seq_ev_ctrl_t;$/;"	t	typeref:struct:snd_seq_ev_ctrl
snd_seq_ev_ext	./include/seq_event.h	/^typedef struct snd_seq_ev_ext {$/;"	s
snd_seq_ev_ext_t	./include/seq_event.h	/^} __attribute__((packed)) snd_seq_ev_ext_t;$/;"	t	typeref:struct:snd_seq_ev_ext
snd_seq_ev_is_abstime	./include/seq.h	720;"	d
snd_seq_ev_is_channel_type	./include/seq.h	652;"	d
snd_seq_ev_is_control_type	./include/seq.h	649;"	d
snd_seq_ev_is_direct	./include/seq.h	727;"	d
snd_seq_ev_is_fixed	./include/seq.h	697;"	d
snd_seq_ev_is_fixed_type	./include/seq.h	674;"	d
snd_seq_ev_is_instr_type	./include/seq.h	671;"	d
snd_seq_ev_is_message_type	./include/seq.h	659;"	d
snd_seq_ev_is_note_type	./include/seq.h	646;"	d
snd_seq_ev_is_prior	./include/seq.h	690;"	d
snd_seq_ev_is_queue_type	./include/seq.h	656;"	d
snd_seq_ev_is_real	./include/seq.h	713;"	d
snd_seq_ev_is_reltime	./include/seq.h	723;"	d
snd_seq_ev_is_reserved	./include/seq.h	683;"	d
snd_seq_ev_is_result_type	./include/seq.h	643;"	d
snd_seq_ev_is_sample_type	./include/seq.h	665;"	d
snd_seq_ev_is_subscribe_type	./include/seq.h	662;"	d
snd_seq_ev_is_tick	./include/seq.h	710;"	d
snd_seq_ev_is_user_type	./include/seq.h	668;"	d
snd_seq_ev_is_variable	./include/seq.h	700;"	d
snd_seq_ev_is_variable_type	./include/seq.h	677;"	d
snd_seq_ev_is_varusr	./include/seq.h	703;"	d
snd_seq_ev_is_varusr_type	./include/seq.h	680;"	d
snd_seq_ev_length_type	./include/seq.h	694;"	d
snd_seq_ev_note	./include/seq_event.h	/^typedef struct snd_seq_ev_note {$/;"	s
snd_seq_ev_note_t	./include/seq_event.h	/^} snd_seq_ev_note_t;$/;"	t	typeref:struct:snd_seq_ev_note
snd_seq_ev_queue_control	./include/seq_event.h	/^typedef struct snd_seq_ev_queue_control {$/;"	s
snd_seq_ev_queue_control_t	./include/seq_event.h	/^} snd_seq_ev_queue_control_t;$/;"	t	typeref:struct:snd_seq_ev_queue_control
snd_seq_ev_raw32	./include/seq_event.h	/^typedef struct snd_seq_ev_raw32 {$/;"	s
snd_seq_ev_raw32_t	./include/seq_event.h	/^} snd_seq_ev_raw32_t;$/;"	t	typeref:struct:snd_seq_ev_raw32
snd_seq_ev_raw8	./include/seq_event.h	/^typedef struct snd_seq_ev_raw8 {$/;"	s
snd_seq_ev_raw8_t	./include/seq_event.h	/^} snd_seq_ev_raw8_t;$/;"	t	typeref:struct:snd_seq_ev_raw8
snd_seq_ev_schedule_real	./include/seqmid.h	151;"	d
snd_seq_ev_schedule_tick	./include/seqmid.h	132;"	d
snd_seq_ev_set_broadcast	./include/seqmid.h	94;"	d
snd_seq_ev_set_chanpress	./include/seqmid.h	465;"	d
snd_seq_ev_set_controller	./include/seqmid.h	428;"	d
snd_seq_ev_set_dest	./include/seqmid.h	71;"	d
snd_seq_ev_set_direct	./include/seqmid.h	117;"	d
snd_seq_ev_set_fixed	./include/seqmid.h	175;"	d
snd_seq_ev_set_keypress	./include/seqmid.h	414;"	d
snd_seq_ev_set_note	./include/seqmid.h	371;"	d
snd_seq_ev_set_noteoff	./include/seqmid.h	400;"	d
snd_seq_ev_set_noteon	./include/seqmid.h	386;"	d
snd_seq_ev_set_pgmchange	./include/seqmid.h	441;"	d
snd_seq_ev_set_pitchbend	./include/seqmid.h	453;"	d
snd_seq_ev_set_priority	./include/seqmid.h	163;"	d
snd_seq_ev_set_queue_continue	./include/seqmid.h	251;"	d
snd_seq_ev_set_queue_control	./include/seqmid.h	218;"	d
snd_seq_ev_set_queue_pos_real	./include/seqmid.h	269;"	d
snd_seq_ev_set_queue_pos_tick	./include/seqmid.h	281;"	d
snd_seq_ev_set_queue_start	./include/seqmid.h	231;"	d
snd_seq_ev_set_queue_stop	./include/seqmid.h	241;"	d
snd_seq_ev_set_queue_tempo	./include/seqmid.h	260;"	d
snd_seq_ev_set_source	./include/seqmid.h	105;"	d
snd_seq_ev_set_subs	./include/seqmid.h	82;"	d
snd_seq_ev_set_sysex	./include/seqmid.h	479;"	d
snd_seq_ev_set_tag	./include/seqmid.h	58;"	d
snd_seq_ev_set_variable	./include/seqmid.h	189;"	d
snd_seq_ev_set_varusr	./include/seqmid.h	205;"	d
snd_seq_ev_timemode_type	./include/seq.h	717;"	d
snd_seq_ev_timestamp_type	./include/seq.h	707;"	d
snd_seq_event	./include/seq_event.h	/^typedef struct snd_seq_event {$/;"	s
snd_seq_event_input	./src/seq/seq.c	/^int snd_seq_event_input(snd_seq_t *seq, snd_seq_event_t **ev)$/;"	f
snd_seq_event_input_feed	./src/seq/seq.c	/^static int snd_seq_event_input_feed(snd_seq_t *seq, int timeout)$/;"	f	file:
snd_seq_event_input_pending	./src/seq/seq.c	/^int snd_seq_event_input_pending(snd_seq_t *seq, int fetch_sequencer)$/;"	f
snd_seq_event_length	./src/seq/seq.c	/^ssize_t snd_seq_event_length(snd_seq_event_t *ev)$/;"	f
snd_seq_event_output	./src/seq/seq.c	/^int snd_seq_event_output(snd_seq_t *seq, snd_seq_event_t *ev)$/;"	f
snd_seq_event_output_buffer	./src/seq/seq.c	/^int snd_seq_event_output_buffer(snd_seq_t *seq, snd_seq_event_t *ev)$/;"	f
snd_seq_event_output_direct	./src/seq/seq.c	/^int snd_seq_event_output_direct(snd_seq_t *seq, snd_seq_event_t *ev)$/;"	f
snd_seq_event_output_pending	./src/seq/seq.c	/^int snd_seq_event_output_pending(snd_seq_t *seq)$/;"	f
snd_seq_event_read_buffer	./src/seq/seq.c	/^static ssize_t snd_seq_event_read_buffer(snd_seq_t *seq)$/;"	f	file:
snd_seq_event_retrieve_buffer	./src/seq/seq.c	/^static int snd_seq_event_retrieve_buffer(snd_seq_t *seq, snd_seq_event_t **retp)$/;"	f	file:
snd_seq_event_t	./include/seq_event.h	/^} snd_seq_event_t;$/;"	t	typeref:struct:snd_seq_event
snd_seq_event_type	./include/seq_event.h	/^enum snd_seq_event_type {$/;"	g
snd_seq_event_type_t	./include/seq_event.h	/^typedef unsigned char snd_seq_event_type_t;$/;"	t
snd_seq_event_types	./src/seq/seq_event.c	/^const unsigned int snd_seq_event_types[256] = {$/;"	v
snd_seq_extract_output	./src/seq/seq.c	/^int snd_seq_extract_output(snd_seq_t *seq, snd_seq_event_t **ev_res)$/;"	f
snd_seq_free_event	./src/seq/seq.c	/^int snd_seq_free_event(snd_seq_event_t *ev ATTRIBUTE_UNUSED)$/;"	f
snd_seq_free_queue	./src/seq/seq.c	/^int snd_seq_free_queue(snd_seq_t *seq, int q)$/;"	f
snd_seq_get_any_client_info	./src/seq/seq.c	/^int snd_seq_get_any_client_info(snd_seq_t *seq, int client, snd_seq_client_info_t *info)$/;"	f
snd_seq_get_any_port_info	./src/seq/seq.c	/^int snd_seq_get_any_port_info(snd_seq_t *seq, int client, int port, snd_seq_port_info_t * info)$/;"	f
snd_seq_get_bit	./src/seq/seq.c	/^int snd_seq_get_bit(int nr, void *array)$/;"	f
snd_seq_get_client_info	./src/seq/seq.c	/^int snd_seq_get_client_info(snd_seq_t *seq, snd_seq_client_info_t *info)$/;"	f
snd_seq_get_client_pool	./src/seq/seq.c	/^int snd_seq_get_client_pool(snd_seq_t *seq, snd_seq_client_pool_t *info)$/;"	f
snd_seq_get_input_buffer_size	./src/seq/seq.c	/^size_t snd_seq_get_input_buffer_size(snd_seq_t *seq)$/;"	f
snd_seq_get_output_buffer_size	./src/seq/seq.c	/^size_t snd_seq_get_output_buffer_size(snd_seq_t *seq)$/;"	f
snd_seq_get_port_info	./src/seq/seq.c	/^int snd_seq_get_port_info(snd_seq_t *seq, int port, snd_seq_port_info_t * info)$/;"	f
snd_seq_get_port_subscription	./src/seq/seq.c	/^int snd_seq_get_port_subscription(snd_seq_t *seq, snd_seq_port_subscribe_t * sub)$/;"	f
snd_seq_get_queue_info	./src/seq/seq.c	/^int snd_seq_get_queue_info(snd_seq_t *seq, int q, snd_seq_queue_info_t *info)$/;"	f
snd_seq_get_queue_status	./src/seq/seq.c	/^int snd_seq_get_queue_status(snd_seq_t *seq, int q, snd_seq_queue_status_t * status)$/;"	f
snd_seq_get_queue_tempo	./src/seq/seq.c	/^int snd_seq_get_queue_tempo(snd_seq_t *seq, int q, snd_seq_queue_tempo_t * tempo)$/;"	f
snd_seq_get_queue_timer	./src/seq/seq.c	/^int snd_seq_get_queue_timer(snd_seq_t *seq, int q, snd_seq_queue_timer_t * timer)$/;"	f
snd_seq_get_queue_usage	./src/seq/seq.c	/^int snd_seq_get_queue_usage(snd_seq_t *seq, int q)$/;"	f
snd_seq_hw_client_id	./src/seq/seq_hw.c	/^static int snd_seq_hw_client_id(snd_seq_t *seq)$/;"	f	file:
snd_seq_hw_close	./src/seq/seq_hw.c	/^static int snd_seq_hw_close(snd_seq_t *seq)$/;"	f	file:
snd_seq_hw_create_port	./src/seq/seq_hw.c	/^static int snd_seq_hw_create_port(snd_seq_t *seq, snd_seq_port_info_t * port)$/;"	f	file:
snd_seq_hw_create_queue	./src/seq/seq_hw.c	/^static int snd_seq_hw_create_queue(snd_seq_t *seq, snd_seq_queue_info_t *info)$/;"	f	file:
snd_seq_hw_delete_port	./src/seq/seq_hw.c	/^static int snd_seq_hw_delete_port(snd_seq_t *seq, snd_seq_port_info_t * port)$/;"	f	file:
snd_seq_hw_delete_queue	./src/seq/seq_hw.c	/^static int snd_seq_hw_delete_queue(snd_seq_t *seq, snd_seq_queue_info_t *info)$/;"	f	file:
snd_seq_hw_get_client_info	./src/seq/seq_hw.c	/^static int snd_seq_hw_get_client_info(snd_seq_t *seq, snd_seq_client_info_t * info)$/;"	f	file:
snd_seq_hw_get_client_pool	./src/seq/seq_hw.c	/^static int snd_seq_hw_get_client_pool(snd_seq_t *seq, snd_seq_client_pool_t *info)$/;"	f	file:
snd_seq_hw_get_named_queue	./src/seq/seq_hw.c	/^static int snd_seq_hw_get_named_queue(snd_seq_t *seq, snd_seq_queue_info_t *info)$/;"	f	file:
snd_seq_hw_get_port_info	./src/seq/seq_hw.c	/^static int snd_seq_hw_get_port_info(snd_seq_t *seq, snd_seq_port_info_t * info)$/;"	f	file:
snd_seq_hw_get_port_subscription	./src/seq/seq_hw.c	/^static int snd_seq_hw_get_port_subscription(snd_seq_t *seq, snd_seq_port_subscribe_t * sub)$/;"	f	file:
snd_seq_hw_get_queue_client	./src/seq/seq_hw.c	/^static int snd_seq_hw_get_queue_client(snd_seq_t *seq, snd_seq_queue_client_t * info)$/;"	f	file:
snd_seq_hw_get_queue_info	./src/seq/seq_hw.c	/^static int snd_seq_hw_get_queue_info(snd_seq_t *seq, snd_seq_queue_info_t *info)$/;"	f	file:
snd_seq_hw_get_queue_status	./src/seq/seq_hw.c	/^static int snd_seq_hw_get_queue_status(snd_seq_t *seq, snd_seq_queue_status_t * status)$/;"	f	file:
snd_seq_hw_get_queue_tempo	./src/seq/seq_hw.c	/^static int snd_seq_hw_get_queue_tempo(snd_seq_t *seq, snd_seq_queue_tempo_t * tempo)$/;"	f	file:
snd_seq_hw_get_queue_timer	./src/seq/seq_hw.c	/^static int snd_seq_hw_get_queue_timer(snd_seq_t *seq, snd_seq_queue_timer_t * timer)$/;"	f	file:
snd_seq_hw_nonblock	./src/seq/seq_hw.c	/^static int snd_seq_hw_nonblock(snd_seq_t *seq, int nonblock)$/;"	f	file:
snd_seq_hw_open	./src/seq/seq_hw.c	/^int snd_seq_hw_open(snd_seq_t **handle, const char *name, int streams, int mode)$/;"	f
snd_seq_hw_ops	./src/seq/seq_hw.c	/^static const snd_seq_ops_t snd_seq_hw_ops = {$/;"	v	file:
snd_seq_hw_query_next_client	./src/seq/seq_hw.c	/^static int snd_seq_hw_query_next_client(snd_seq_t *seq, snd_seq_client_info_t *info)$/;"	f	file:
snd_seq_hw_query_next_port	./src/seq/seq_hw.c	/^static int snd_seq_hw_query_next_port(snd_seq_t *seq, snd_seq_port_info_t *info)$/;"	f	file:
snd_seq_hw_query_port_subscribers	./src/seq/seq_hw.c	/^static int snd_seq_hw_query_port_subscribers(snd_seq_t *seq, snd_seq_query_subscribe_t * subs)$/;"	f	file:
snd_seq_hw_read	./src/seq/seq_hw.c	/^static ssize_t snd_seq_hw_read(snd_seq_t *seq, void *buf, size_t len)$/;"	f	file:
snd_seq_hw_remove_events	./src/seq/seq_hw.c	/^static int snd_seq_hw_remove_events(snd_seq_t *seq, snd_seq_remove_events_t *rmp)$/;"	f	file:
snd_seq_hw_set_client_info	./src/seq/seq_hw.c	/^static int snd_seq_hw_set_client_info(snd_seq_t *seq, snd_seq_client_info_t * info)$/;"	f	file:
snd_seq_hw_set_client_pool	./src/seq/seq_hw.c	/^static int snd_seq_hw_set_client_pool(snd_seq_t *seq, snd_seq_client_pool_t *info)$/;"	f	file:
snd_seq_hw_set_port_info	./src/seq/seq_hw.c	/^static int snd_seq_hw_set_port_info(snd_seq_t *seq, snd_seq_port_info_t * info)$/;"	f	file:
snd_seq_hw_set_queue_client	./src/seq/seq_hw.c	/^static int snd_seq_hw_set_queue_client(snd_seq_t *seq, snd_seq_queue_client_t * info)$/;"	f	file:
snd_seq_hw_set_queue_info	./src/seq/seq_hw.c	/^static int snd_seq_hw_set_queue_info(snd_seq_t *seq, snd_seq_queue_info_t *info)$/;"	f	file:
snd_seq_hw_set_queue_tempo	./src/seq/seq_hw.c	/^static int snd_seq_hw_set_queue_tempo(snd_seq_t *seq, snd_seq_queue_tempo_t * tempo)$/;"	f	file:
snd_seq_hw_set_queue_timer	./src/seq/seq_hw.c	/^static int snd_seq_hw_set_queue_timer(snd_seq_t *seq, snd_seq_queue_timer_t * timer)$/;"	f	file:
snd_seq_hw_subscribe_port	./src/seq/seq_hw.c	/^static int snd_seq_hw_subscribe_port(snd_seq_t *seq, snd_seq_port_subscribe_t * sub)$/;"	f	file:
snd_seq_hw_system_info	./src/seq/seq_hw.c	/^static int snd_seq_hw_system_info(snd_seq_t *seq, snd_seq_system_info_t * info)$/;"	f	file:
snd_seq_hw_t	./src/seq/seq_hw.c	/^} snd_seq_hw_t;$/;"	t	typeref:struct:__anon98	file:
snd_seq_hw_unsubscribe_port	./src/seq/seq_hw.c	/^static int snd_seq_hw_unsubscribe_port(snd_seq_t *seq, snd_seq_port_subscribe_t * sub)$/;"	f	file:
snd_seq_hw_write	./src/seq/seq_hw.c	/^static ssize_t snd_seq_hw_write(snd_seq_t *seq, void *buf, size_t len)$/;"	f	file:
snd_seq_name	./src/seq/seq.c	/^const char *snd_seq_name(snd_seq_t *seq)$/;"	f
snd_seq_nonblock	./src/seq/seq.c	/^int snd_seq_nonblock(snd_seq_t *seq, int nonblock)$/;"	f
snd_seq_open	./src/seq/seq.c	/^int snd_seq_open(snd_seq_t **seqp, const char *name, $/;"	f
snd_seq_open_conf	./src/seq/seq.c	/^static int snd_seq_open_conf(snd_seq_t **seqp, const char *name,$/;"	f	file:
snd_seq_open_lconf	./src/seq/seq.c	/^int snd_seq_open_lconf(snd_seq_t **seqp, const char *name, $/;"	f
snd_seq_open_noupdate	./src/seq/seq.c	/^static int snd_seq_open_noupdate(snd_seq_t **seqp, snd_config_t *root,$/;"	f	file:
snd_seq_open_objects	./src/seq/seq_symbols.c	/^static const char **snd_seq_open_objects[] = {$/;"	v	file:
snd_seq_open_symbols	./src/seq/seq_symbols.c	/^void *snd_seq_open_symbols(void)$/;"	f
snd_seq_ops_t	./src/seq/seq_local.h	/^} snd_seq_ops_t;$/;"	t	typeref:struct:__anon97
snd_seq_parse_address	./src/seq/seqmid.c	/^int snd_seq_parse_address(snd_seq_t *seq, snd_seq_addr_t *addr, const char *arg)$/;"	f
snd_seq_poll_descriptors	./src/seq/seq.c	/^int snd_seq_poll_descriptors(snd_seq_t *seq, struct pollfd *pfds, unsigned int space, short events)$/;"	f
snd_seq_poll_descriptors_count	./src/seq/seq.c	/^int snd_seq_poll_descriptors_count(snd_seq_t *seq, short events)$/;"	f
snd_seq_poll_descriptors_revents	./src/seq/seq.c	/^int snd_seq_poll_descriptors_revents(snd_seq_t *seq, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f
snd_seq_port_info_alloca	./include/seq.h	263;"	d
snd_seq_port_info_copy	./src/seq/seq.c	/^void snd_seq_port_info_copy(snd_seq_port_info_t *dst, const snd_seq_port_info_t *src)$/;"	f
snd_seq_port_info_free	./src/seq/seq.c	/^void snd_seq_port_info_free(snd_seq_port_info_t *obj)$/;"	f
snd_seq_port_info_get_addr	./src/seq/seq.c	/^const snd_seq_addr_t *snd_seq_port_info_get_addr(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_capability	./src/seq/seq.c	/^unsigned int snd_seq_port_info_get_capability(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_client	./src/seq/seq.c	/^int snd_seq_port_info_get_client(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_midi_channels	./src/seq/seq.c	/^int snd_seq_port_info_get_midi_channels(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_midi_voices	./src/seq/seq.c	/^int snd_seq_port_info_get_midi_voices(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_name	./src/seq/seq.c	/^const char *snd_seq_port_info_get_name(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_port	./src/seq/seq.c	/^int snd_seq_port_info_get_port(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_port_specified	./src/seq/seq.c	/^int snd_seq_port_info_get_port_specified(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_read_use	./src/seq/seq.c	/^int snd_seq_port_info_get_read_use(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_synth_voices	./src/seq/seq.c	/^int snd_seq_port_info_get_synth_voices(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_timestamp_queue	./src/seq/seq.c	/^int snd_seq_port_info_get_timestamp_queue(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_timestamp_real	./src/seq/seq.c	/^int snd_seq_port_info_get_timestamp_real(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_timestamping	./src/seq/seq.c	/^int snd_seq_port_info_get_timestamping(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_type	./src/seq/seq.c	/^unsigned int snd_seq_port_info_get_type(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_get_write_use	./src/seq/seq.c	/^int snd_seq_port_info_get_write_use(const snd_seq_port_info_t *info)$/;"	f
snd_seq_port_info_malloc	./src/seq/seq.c	/^int snd_seq_port_info_malloc(snd_seq_port_info_t **ptr)$/;"	f
snd_seq_port_info_set_addr	./src/seq/seq.c	/^void snd_seq_port_info_set_addr(snd_seq_port_info_t *info, const snd_seq_addr_t *addr)$/;"	f
snd_seq_port_info_set_capability	./src/seq/seq.c	/^void snd_seq_port_info_set_capability(snd_seq_port_info_t *info, unsigned int capability)$/;"	f
snd_seq_port_info_set_client	./src/seq/seq.c	/^void snd_seq_port_info_set_client(snd_seq_port_info_t *info, int client)$/;"	f
snd_seq_port_info_set_midi_channels	./src/seq/seq.c	/^void snd_seq_port_info_set_midi_channels(snd_seq_port_info_t *info, int channels)$/;"	f
snd_seq_port_info_set_midi_voices	./src/seq/seq.c	/^void snd_seq_port_info_set_midi_voices(snd_seq_port_info_t *info, int voices)$/;"	f
snd_seq_port_info_set_name	./src/seq/seq.c	/^void snd_seq_port_info_set_name(snd_seq_port_info_t *info, const char *name)$/;"	f
snd_seq_port_info_set_port	./src/seq/seq.c	/^void snd_seq_port_info_set_port(snd_seq_port_info_t *info, int port)$/;"	f
snd_seq_port_info_set_port_specified	./src/seq/seq.c	/^void snd_seq_port_info_set_port_specified(snd_seq_port_info_t *info, int val)$/;"	f
snd_seq_port_info_set_synth_voices	./src/seq/seq.c	/^void snd_seq_port_info_set_synth_voices(snd_seq_port_info_t *info, int voices)$/;"	f
snd_seq_port_info_set_timestamp_queue	./src/seq/seq.c	/^void snd_seq_port_info_set_timestamp_queue(snd_seq_port_info_t *info, int queue)$/;"	f
snd_seq_port_info_set_timestamp_real	./src/seq/seq.c	/^void snd_seq_port_info_set_timestamp_real(snd_seq_port_info_t *info, int enable)$/;"	f
snd_seq_port_info_set_timestamping	./src/seq/seq.c	/^void snd_seq_port_info_set_timestamping(snd_seq_port_info_t *info, int enable)$/;"	f
snd_seq_port_info_set_type	./src/seq/seq.c	/^void snd_seq_port_info_set_type(snd_seq_port_info_t *info, unsigned int type)$/;"	f
snd_seq_port_info_sizeof	./src/seq/seq.c	/^size_t snd_seq_port_info_sizeof()$/;"	f
snd_seq_port_info_t	./include/seq.h	/^typedef struct _snd_seq_port_info snd_seq_port_info_t;$/;"	t	typeref:struct:_snd_seq_port_info
snd_seq_port_subscribe_alloca	./include/seq.h	321;"	d
snd_seq_port_subscribe_copy	./src/seq/seq.c	/^void snd_seq_port_subscribe_copy(snd_seq_port_subscribe_t *dst, const snd_seq_port_subscribe_t *src)$/;"	f
snd_seq_port_subscribe_free	./src/seq/seq.c	/^void snd_seq_port_subscribe_free(snd_seq_port_subscribe_t *obj)$/;"	f
snd_seq_port_subscribe_get_dest	./src/seq/seq.c	/^const snd_seq_addr_t *snd_seq_port_subscribe_get_dest(const snd_seq_port_subscribe_t *info)$/;"	f
snd_seq_port_subscribe_get_exclusive	./src/seq/seq.c	/^int snd_seq_port_subscribe_get_exclusive(const snd_seq_port_subscribe_t *info)$/;"	f
snd_seq_port_subscribe_get_queue	./src/seq/seq.c	/^int snd_seq_port_subscribe_get_queue(const snd_seq_port_subscribe_t *info)$/;"	f
snd_seq_port_subscribe_get_sender	./src/seq/seq.c	/^const snd_seq_addr_t *snd_seq_port_subscribe_get_sender(const snd_seq_port_subscribe_t *info)$/;"	f
snd_seq_port_subscribe_get_time_real	./src/seq/seq.c	/^int snd_seq_port_subscribe_get_time_real(const snd_seq_port_subscribe_t *info)$/;"	f
snd_seq_port_subscribe_get_time_update	./src/seq/seq.c	/^int snd_seq_port_subscribe_get_time_update(const snd_seq_port_subscribe_t *info)$/;"	f
snd_seq_port_subscribe_malloc	./src/seq/seq.c	/^int snd_seq_port_subscribe_malloc(snd_seq_port_subscribe_t **ptr)$/;"	f
snd_seq_port_subscribe_set_dest	./src/seq/seq.c	/^void snd_seq_port_subscribe_set_dest(snd_seq_port_subscribe_t *info, const snd_seq_addr_t *addr)$/;"	f
snd_seq_port_subscribe_set_exclusive	./src/seq/seq.c	/^void snd_seq_port_subscribe_set_exclusive(snd_seq_port_subscribe_t *info, int val)$/;"	f
snd_seq_port_subscribe_set_queue	./src/seq/seq.c	/^void snd_seq_port_subscribe_set_queue(snd_seq_port_subscribe_t *info, int q)$/;"	f
snd_seq_port_subscribe_set_sender	./src/seq/seq.c	/^void snd_seq_port_subscribe_set_sender(snd_seq_port_subscribe_t *info, const snd_seq_addr_t *addr)$/;"	f
snd_seq_port_subscribe_set_time_real	./src/seq/seq.c	/^void snd_seq_port_subscribe_set_time_real(snd_seq_port_subscribe_t *info, int val)$/;"	f
snd_seq_port_subscribe_set_time_update	./src/seq/seq.c	/^void snd_seq_port_subscribe_set_time_update(snd_seq_port_subscribe_t *info, int val)$/;"	f
snd_seq_port_subscribe_sizeof	./src/seq/seq.c	/^size_t snd_seq_port_subscribe_sizeof()$/;"	f
snd_seq_port_subscribe_t	./include/seq.h	/^typedef struct _snd_seq_port_subscribe snd_seq_port_subscribe_t;$/;"	t	typeref:struct:_snd_seq_port_subscribe
snd_seq_query_named_queue	./src/seq/seq.c	/^int snd_seq_query_named_queue(snd_seq_t *seq, const char *name)$/;"	f
snd_seq_query_next_client	./src/seq/seq.c	/^int snd_seq_query_next_client(snd_seq_t *seq, snd_seq_client_info_t *info)$/;"	f
snd_seq_query_next_port	./src/seq/seq.c	/^int snd_seq_query_next_port(snd_seq_t *seq, snd_seq_port_info_t *info)$/;"	f
snd_seq_query_port_subscribers	./src/seq/seq.c	/^int snd_seq_query_port_subscribers(snd_seq_t *seq, snd_seq_query_subscribe_t * subs)$/;"	f
snd_seq_query_subs_type_t	./include/seq.h	/^} snd_seq_query_subs_type_t;$/;"	t	typeref:enum:__anon47
snd_seq_query_subscribe_alloca	./include/seq.h	359;"	d
snd_seq_query_subscribe_copy	./src/seq/seq.c	/^void snd_seq_query_subscribe_copy(snd_seq_query_subscribe_t *dst, const snd_seq_query_subscribe_t *src)$/;"	f
snd_seq_query_subscribe_free	./src/seq/seq.c	/^void snd_seq_query_subscribe_free(snd_seq_query_subscribe_t *obj)$/;"	f
snd_seq_query_subscribe_get_addr	./src/seq/seq.c	/^const snd_seq_addr_t *snd_seq_query_subscribe_get_addr(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_get_client	./src/seq/seq.c	/^int snd_seq_query_subscribe_get_client(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_get_exclusive	./src/seq/seq.c	/^int snd_seq_query_subscribe_get_exclusive(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_get_index	./src/seq/seq.c	/^int snd_seq_query_subscribe_get_index(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_get_num_subs	./src/seq/seq.c	/^int snd_seq_query_subscribe_get_num_subs(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_get_port	./src/seq/seq.c	/^int snd_seq_query_subscribe_get_port(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_get_queue	./src/seq/seq.c	/^int snd_seq_query_subscribe_get_queue(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_get_root	./src/seq/seq.c	/^const snd_seq_addr_t *snd_seq_query_subscribe_get_root(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_get_time_real	./src/seq/seq.c	/^int snd_seq_query_subscribe_get_time_real(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_get_time_update	./src/seq/seq.c	/^int snd_seq_query_subscribe_get_time_update(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_get_type	./src/seq/seq.c	/^snd_seq_query_subs_type_t snd_seq_query_subscribe_get_type(const snd_seq_query_subscribe_t *info)$/;"	f
snd_seq_query_subscribe_malloc	./src/seq/seq.c	/^int snd_seq_query_subscribe_malloc(snd_seq_query_subscribe_t **ptr)$/;"	f
snd_seq_query_subscribe_set_client	./src/seq/seq.c	/^void snd_seq_query_subscribe_set_client(snd_seq_query_subscribe_t *info, int client)$/;"	f
snd_seq_query_subscribe_set_index	./src/seq/seq.c	/^void snd_seq_query_subscribe_set_index(snd_seq_query_subscribe_t *info, int index)$/;"	f
snd_seq_query_subscribe_set_port	./src/seq/seq.c	/^void snd_seq_query_subscribe_set_port(snd_seq_query_subscribe_t *info, int port)$/;"	f
snd_seq_query_subscribe_set_root	./src/seq/seq.c	/^void snd_seq_query_subscribe_set_root(snd_seq_query_subscribe_t *info, const snd_seq_addr_t *addr)$/;"	f
snd_seq_query_subscribe_set_type	./src/seq/seq.c	/^void snd_seq_query_subscribe_set_type(snd_seq_query_subscribe_t *info, snd_seq_query_subs_type_t type)$/;"	f
snd_seq_query_subscribe_sizeof	./src/seq/seq.c	/^size_t snd_seq_query_subscribe_sizeof()$/;"	f
snd_seq_query_subscribe_t	./include/seq.h	/^typedef struct _snd_seq_query_subscribe snd_seq_query_subscribe_t;$/;"	t	typeref:struct:_snd_seq_query_subscribe
snd_seq_queue_client_t	./src/seq/seq_local.h	/^typedef struct sndrv_seq_queue_client snd_seq_queue_client_t;$/;"	t	typeref:struct:sndrv_seq_queue_client
snd_seq_queue_info_alloca	./include/seq.h	409;"	d
snd_seq_queue_info_copy	./src/seq/seq.c	/^void snd_seq_queue_info_copy(snd_seq_queue_info_t *dst, const snd_seq_queue_info_t *src)$/;"	f
snd_seq_queue_info_free	./src/seq/seq.c	/^void snd_seq_queue_info_free(snd_seq_queue_info_t *obj)$/;"	f
snd_seq_queue_info_get_flags	./src/seq/seq.c	/^unsigned int snd_seq_queue_info_get_flags(const snd_seq_queue_info_t *info)$/;"	f
snd_seq_queue_info_get_locked	./src/seq/seq.c	/^int snd_seq_queue_info_get_locked(const snd_seq_queue_info_t *info)$/;"	f
snd_seq_queue_info_get_name	./src/seq/seq.c	/^const char *snd_seq_queue_info_get_name(const snd_seq_queue_info_t *info)$/;"	f
snd_seq_queue_info_get_owner	./src/seq/seq.c	/^int snd_seq_queue_info_get_owner(const snd_seq_queue_info_t *info)$/;"	f
snd_seq_queue_info_get_queue	./src/seq/seq.c	/^int snd_seq_queue_info_get_queue(const snd_seq_queue_info_t *info)$/;"	f
snd_seq_queue_info_malloc	./src/seq/seq.c	/^int snd_seq_queue_info_malloc(snd_seq_queue_info_t **ptr)$/;"	f
snd_seq_queue_info_set_flags	./src/seq/seq.c	/^void snd_seq_queue_info_set_flags(snd_seq_queue_info_t *info, unsigned int flags)$/;"	f
snd_seq_queue_info_set_locked	./src/seq/seq.c	/^void snd_seq_queue_info_set_locked(snd_seq_queue_info_t *info, int locked)$/;"	f
snd_seq_queue_info_set_name	./src/seq/seq.c	/^void snd_seq_queue_info_set_name(snd_seq_queue_info_t *info, const char *name)$/;"	f
snd_seq_queue_info_set_owner	./src/seq/seq.c	/^void snd_seq_queue_info_set_owner(snd_seq_queue_info_t *info, int owner)$/;"	f
snd_seq_queue_info_sizeof	./src/seq/seq.c	/^size_t snd_seq_queue_info_sizeof()$/;"	f
snd_seq_queue_info_t	./include/seq.h	/^typedef struct _snd_seq_queue_info snd_seq_queue_info_t;$/;"	t	typeref:struct:_snd_seq_queue_info
snd_seq_queue_skew	./include/seq_event.h	/^typedef struct snd_seq_queue_skew {$/;"	s
snd_seq_queue_skew_t	./include/seq_event.h	/^} snd_seq_queue_skew_t;$/;"	t	typeref:struct:snd_seq_queue_skew
snd_seq_queue_status_alloca	./include/seq.h	441;"	d
snd_seq_queue_status_copy	./src/seq/seq.c	/^void snd_seq_queue_status_copy(snd_seq_queue_status_t *dst, const snd_seq_queue_status_t *src)$/;"	f
snd_seq_queue_status_free	./src/seq/seq.c	/^void snd_seq_queue_status_free(snd_seq_queue_status_t *obj)$/;"	f
snd_seq_queue_status_get_events	./src/seq/seq.c	/^int snd_seq_queue_status_get_events(const snd_seq_queue_status_t *info)$/;"	f
snd_seq_queue_status_get_queue	./src/seq/seq.c	/^int snd_seq_queue_status_get_queue(const snd_seq_queue_status_t *info)$/;"	f
snd_seq_queue_status_get_real_time	./src/seq/seq.c	/^const snd_seq_real_time_t *snd_seq_queue_status_get_real_time(const snd_seq_queue_status_t *info)$/;"	f
snd_seq_queue_status_get_status	./src/seq/seq.c	/^unsigned int snd_seq_queue_status_get_status(const snd_seq_queue_status_t *info)$/;"	f
snd_seq_queue_status_get_tick_time	./src/seq/seq.c	/^snd_seq_tick_time_t snd_seq_queue_status_get_tick_time(const snd_seq_queue_status_t *info)$/;"	f
snd_seq_queue_status_malloc	./src/seq/seq.c	/^int snd_seq_queue_status_malloc(snd_seq_queue_status_t **ptr)$/;"	f
snd_seq_queue_status_sizeof	./src/seq/seq.c	/^size_t snd_seq_queue_status_sizeof()$/;"	f
snd_seq_queue_status_t	./include/seq.h	/^typedef struct _snd_seq_queue_status snd_seq_queue_status_t;$/;"	t	typeref:struct:_snd_seq_queue_status
snd_seq_queue_tempo_alloca	./include/seq.h	459;"	d
snd_seq_queue_tempo_copy	./src/seq/seq.c	/^void snd_seq_queue_tempo_copy(snd_seq_queue_tempo_t *dst, const snd_seq_queue_tempo_t *src)$/;"	f
snd_seq_queue_tempo_free	./src/seq/seq.c	/^void snd_seq_queue_tempo_free(snd_seq_queue_tempo_t *obj)$/;"	f
snd_seq_queue_tempo_get_ppq	./src/seq/seq.c	/^int snd_seq_queue_tempo_get_ppq(const snd_seq_queue_tempo_t *info)$/;"	f
snd_seq_queue_tempo_get_queue	./src/seq/seq.c	/^int snd_seq_queue_tempo_get_queue(const snd_seq_queue_tempo_t *info)$/;"	f
snd_seq_queue_tempo_get_skew	./src/seq/seq.c	/^unsigned int snd_seq_queue_tempo_get_skew(const snd_seq_queue_tempo_t *info)$/;"	f
snd_seq_queue_tempo_get_skew_base	./src/seq/seq.c	/^unsigned int snd_seq_queue_tempo_get_skew_base(const snd_seq_queue_tempo_t *info)$/;"	f
snd_seq_queue_tempo_get_tempo	./src/seq/seq.c	/^unsigned int snd_seq_queue_tempo_get_tempo(const snd_seq_queue_tempo_t *info)$/;"	f
snd_seq_queue_tempo_malloc	./src/seq/seq.c	/^int snd_seq_queue_tempo_malloc(snd_seq_queue_tempo_t **ptr)$/;"	f
snd_seq_queue_tempo_set_ppq	./src/seq/seq.c	/^void snd_seq_queue_tempo_set_ppq(snd_seq_queue_tempo_t *info, int ppq)$/;"	f
snd_seq_queue_tempo_set_skew	./src/seq/seq.c	/^void snd_seq_queue_tempo_set_skew(snd_seq_queue_tempo_t *info, unsigned int skew)$/;"	f
snd_seq_queue_tempo_set_skew_base	./src/seq/seq.c	/^void snd_seq_queue_tempo_set_skew_base(snd_seq_queue_tempo_t *info, unsigned int base)$/;"	f
snd_seq_queue_tempo_set_tempo	./src/seq/seq.c	/^void snd_seq_queue_tempo_set_tempo(snd_seq_queue_tempo_t *info, unsigned int tempo)$/;"	f
snd_seq_queue_tempo_sizeof	./src/seq/seq.c	/^size_t snd_seq_queue_tempo_sizeof()$/;"	f
snd_seq_queue_tempo_t	./include/seq.h	/^typedef struct _snd_seq_queue_tempo snd_seq_queue_tempo_t;$/;"	t	typeref:struct:_snd_seq_queue_tempo
snd_seq_queue_timer_alloca	./include/seq.h	490;"	d
snd_seq_queue_timer_copy	./src/seq/seq.c	/^void snd_seq_queue_timer_copy(snd_seq_queue_timer_t *dst, const snd_seq_queue_timer_t *src)$/;"	f
snd_seq_queue_timer_free	./src/seq/seq.c	/^void snd_seq_queue_timer_free(snd_seq_queue_timer_t *obj)$/;"	f
snd_seq_queue_timer_get_id	./src/seq/seq.c	/^const snd_timer_id_t *snd_seq_queue_timer_get_id(const snd_seq_queue_timer_t *info)$/;"	f
snd_seq_queue_timer_get_queue	./src/seq/seq.c	/^int snd_seq_queue_timer_get_queue(const snd_seq_queue_timer_t *info)$/;"	f
snd_seq_queue_timer_get_resolution	./src/seq/seq.c	/^unsigned int snd_seq_queue_timer_get_resolution(const snd_seq_queue_timer_t *info)$/;"	f
snd_seq_queue_timer_get_type	./src/seq/seq.c	/^snd_seq_queue_timer_type_t snd_seq_queue_timer_get_type(const snd_seq_queue_timer_t *info)$/;"	f
snd_seq_queue_timer_malloc	./src/seq/seq.c	/^int snd_seq_queue_timer_malloc(snd_seq_queue_timer_t **ptr)$/;"	f
snd_seq_queue_timer_set_id	./src/seq/seq.c	/^void snd_seq_queue_timer_set_id(snd_seq_queue_timer_t *info, const snd_timer_id_t *id)$/;"	f
snd_seq_queue_timer_set_resolution	./src/seq/seq.c	/^void snd_seq_queue_timer_set_resolution(snd_seq_queue_timer_t *info, unsigned int resolution)$/;"	f
snd_seq_queue_timer_set_type	./src/seq/seq.c	/^void snd_seq_queue_timer_set_type(snd_seq_queue_timer_t *info, snd_seq_queue_timer_type_t type)$/;"	f
snd_seq_queue_timer_sizeof	./src/seq/seq.c	/^size_t snd_seq_queue_timer_sizeof()$/;"	f
snd_seq_queue_timer_t	./include/seq.h	/^typedef struct _snd_seq_queue_timer snd_seq_queue_timer_t;$/;"	t	typeref:struct:_snd_seq_queue_timer
snd_seq_queue_timer_type_t	./include/seq.h	/^} snd_seq_queue_timer_type_t;$/;"	t	typeref:enum:__anon48
snd_seq_real_time	./include/seq_event.h	/^typedef struct snd_seq_real_time {$/;"	s
snd_seq_real_time_t	./include/seq_event.h	/^} snd_seq_real_time_t;$/;"	t	typeref:struct:snd_seq_real_time
snd_seq_remove_events	./src/seq/seq.c	/^int snd_seq_remove_events(snd_seq_t *seq, snd_seq_remove_events_t *rmp)$/;"	f
snd_seq_remove_events_alloca	./include/seq.h	549;"	d
snd_seq_remove_events_copy	./src/seq/seq.c	/^void snd_seq_remove_events_copy(snd_seq_remove_events_t *dst, const snd_seq_remove_events_t *src)$/;"	f
snd_seq_remove_events_free	./src/seq/seq.c	/^void snd_seq_remove_events_free(snd_seq_remove_events_t *obj)$/;"	f
snd_seq_remove_events_get_channel	./src/seq/seq.c	/^int snd_seq_remove_events_get_channel(const snd_seq_remove_events_t *info)$/;"	f
snd_seq_remove_events_get_condition	./src/seq/seq.c	/^unsigned int snd_seq_remove_events_get_condition(const snd_seq_remove_events_t *info)$/;"	f
snd_seq_remove_events_get_dest	./src/seq/seq.c	/^const snd_seq_addr_t *snd_seq_remove_events_get_dest(const snd_seq_remove_events_t *info)$/;"	f
snd_seq_remove_events_get_event_type	./src/seq/seq.c	/^int snd_seq_remove_events_get_event_type(const snd_seq_remove_events_t *info)$/;"	f
snd_seq_remove_events_get_queue	./src/seq/seq.c	/^int snd_seq_remove_events_get_queue(const snd_seq_remove_events_t *info)$/;"	f
snd_seq_remove_events_get_tag	./src/seq/seq.c	/^int snd_seq_remove_events_get_tag(const snd_seq_remove_events_t *info)$/;"	f
snd_seq_remove_events_get_time	./src/seq/seq.c	/^const snd_seq_timestamp_t *snd_seq_remove_events_get_time(const snd_seq_remove_events_t *info)$/;"	f
snd_seq_remove_events_malloc	./src/seq/seq.c	/^int snd_seq_remove_events_malloc(snd_seq_remove_events_t **ptr)$/;"	f
snd_seq_remove_events_set_channel	./src/seq/seq.c	/^void snd_seq_remove_events_set_channel(snd_seq_remove_events_t *info, int channel)$/;"	f
snd_seq_remove_events_set_condition	./src/seq/seq.c	/^void snd_seq_remove_events_set_condition(snd_seq_remove_events_t *info, unsigned int flags)$/;"	f
snd_seq_remove_events_set_dest	./src/seq/seq.c	/^void snd_seq_remove_events_set_dest(snd_seq_remove_events_t *info, const snd_seq_addr_t *addr)$/;"	f
snd_seq_remove_events_set_event_type	./src/seq/seq.c	/^void snd_seq_remove_events_set_event_type(snd_seq_remove_events_t *info, int type)$/;"	f
snd_seq_remove_events_set_queue	./src/seq/seq.c	/^void snd_seq_remove_events_set_queue(snd_seq_remove_events_t *info, int queue)$/;"	f
snd_seq_remove_events_set_tag	./src/seq/seq.c	/^void snd_seq_remove_events_set_tag(snd_seq_remove_events_t *info, int tag)$/;"	f
snd_seq_remove_events_set_time	./src/seq/seq.c	/^void snd_seq_remove_events_set_time(snd_seq_remove_events_t *info, const snd_seq_timestamp_t *time)$/;"	f
snd_seq_remove_events_sizeof	./src/seq/seq.c	/^size_t snd_seq_remove_events_sizeof()$/;"	f
snd_seq_remove_events_t	./include/seq.h	/^typedef struct _snd_seq_remove_events snd_seq_remove_events_t;$/;"	t	typeref:struct:_snd_seq_remove_events
snd_seq_reset_pool_input	./src/seq/seqmid.c	/^int snd_seq_reset_pool_input(snd_seq_t *seq)$/;"	f
snd_seq_reset_pool_output	./src/seq/seqmid.c	/^int snd_seq_reset_pool_output(snd_seq_t *seq)$/;"	f
snd_seq_result	./include/seq_event.h	/^typedef struct snd_seq_result {$/;"	s
snd_seq_result_t	./include/seq_event.h	/^} snd_seq_result_t;$/;"	t	typeref:struct:snd_seq_result
snd_seq_set_bit	./src/seq/seq.c	/^void snd_seq_set_bit(int nr, void *array)$/;"	f
snd_seq_set_client_event_filter	./src/seq/seqmid.c	/^int snd_seq_set_client_event_filter(snd_seq_t *seq, int event_type)$/;"	f
snd_seq_set_client_info	./src/seq/seq.c	/^int snd_seq_set_client_info(snd_seq_t *seq, snd_seq_client_info_t *info)$/;"	f
snd_seq_set_client_name	./src/seq/seqmid.c	/^int snd_seq_set_client_name(snd_seq_t *seq, const char *name)$/;"	f
snd_seq_set_client_pool	./src/seq/seq.c	/^int snd_seq_set_client_pool(snd_seq_t *seq, snd_seq_client_pool_t *info)$/;"	f
snd_seq_set_client_pool_input	./src/seq/seqmid.c	/^int snd_seq_set_client_pool_input(snd_seq_t *seq, size_t size)$/;"	f
snd_seq_set_client_pool_output	./src/seq/seqmid.c	/^int snd_seq_set_client_pool_output(snd_seq_t *seq, size_t size)$/;"	f
snd_seq_set_client_pool_output_room	./src/seq/seqmid.c	/^int snd_seq_set_client_pool_output_room(snd_seq_t *seq, size_t size)$/;"	f
snd_seq_set_input_buffer_size	./src/seq/seq.c	/^int snd_seq_set_input_buffer_size(snd_seq_t *seq, size_t size)$/;"	f
snd_seq_set_output_buffer_size	./src/seq/seq.c	/^int snd_seq_set_output_buffer_size(snd_seq_t *seq, size_t size)$/;"	f
snd_seq_set_port_info	./src/seq/seq.c	/^int snd_seq_set_port_info(snd_seq_t *seq, int port, snd_seq_port_info_t * info)$/;"	f
snd_seq_set_queue_info	./src/seq/seq.c	/^int snd_seq_set_queue_info(snd_seq_t *seq, int q, snd_seq_queue_info_t *info)$/;"	f
snd_seq_set_queue_tempo	./src/seq/seq.c	/^int snd_seq_set_queue_tempo(snd_seq_t *seq, int q, snd_seq_queue_tempo_t * tempo)$/;"	f
snd_seq_set_queue_timer	./src/seq/seq.c	/^int snd_seq_set_queue_timer(snd_seq_t *seq, int q, snd_seq_queue_timer_t * timer)$/;"	f
snd_seq_set_queue_usage	./src/seq/seq.c	/^int snd_seq_set_queue_usage(snd_seq_t *seq, int q, int used)$/;"	f
snd_seq_start_queue	./include/seqmid.h	296;"	d
snd_seq_stop_queue	./include/seqmid.h	305;"	d
snd_seq_subscribe_port	./src/seq/seq.c	/^int snd_seq_subscribe_port(snd_seq_t *seq, snd_seq_port_subscribe_t * sub)$/;"	f
snd_seq_sync_output_queue	./src/seq/seqmid.c	/^int snd_seq_sync_output_queue(snd_seq_t *seq)$/;"	f
snd_seq_system_info	./src/seq/seq.c	/^int snd_seq_system_info(snd_seq_t *seq, snd_seq_system_info_t * info)$/;"	f
snd_seq_system_info_alloca	./include/seq.h	99;"	d
snd_seq_system_info_copy	./src/seq/seq.c	/^void snd_seq_system_info_copy(snd_seq_system_info_t *dst, const snd_seq_system_info_t *src)$/;"	f
snd_seq_system_info_free	./src/seq/seq.c	/^void snd_seq_system_info_free(snd_seq_system_info_t *obj)$/;"	f
snd_seq_system_info_get_channels	./src/seq/seq.c	/^int snd_seq_system_info_get_channels(const snd_seq_system_info_t *info)$/;"	f
snd_seq_system_info_get_clients	./src/seq/seq.c	/^int snd_seq_system_info_get_clients(const snd_seq_system_info_t *info)$/;"	f
snd_seq_system_info_get_cur_clients	./src/seq/seq.c	/^int snd_seq_system_info_get_cur_clients(const snd_seq_system_info_t *info)$/;"	f
snd_seq_system_info_get_cur_queues	./src/seq/seq.c	/^int snd_seq_system_info_get_cur_queues(const snd_seq_system_info_t *info)$/;"	f
snd_seq_system_info_get_ports	./src/seq/seq.c	/^int snd_seq_system_info_get_ports(const snd_seq_system_info_t *info)$/;"	f
snd_seq_system_info_get_queues	./src/seq/seq.c	/^int snd_seq_system_info_get_queues(const snd_seq_system_info_t *info)$/;"	f
snd_seq_system_info_malloc	./src/seq/seq.c	/^int snd_seq_system_info_malloc(snd_seq_system_info_t **ptr)$/;"	f
snd_seq_system_info_sizeof	./src/seq/seq.c	/^size_t snd_seq_system_info_sizeof()$/;"	f
snd_seq_system_info_t	./include/seq.h	/^typedef struct _snd_seq_system_info snd_seq_system_info_t;$/;"	t	typeref:struct:_snd_seq_system_info
snd_seq_t	./include/seq.h	/^typedef struct _snd_seq snd_seq_t;$/;"	t	typeref:struct:_snd_seq
snd_seq_tick_time_t	./include/seq_event.h	/^typedef unsigned int snd_seq_tick_time_t;$/;"	t
snd_seq_timestamp	./include/seq_event.h	/^typedef union snd_seq_timestamp {$/;"	u
snd_seq_timestamp_t	./include/seq_event.h	/^} snd_seq_timestamp_t;$/;"	t	typeref:union:snd_seq_timestamp
snd_seq_type	./src/seq/seq.c	/^snd_seq_type_t snd_seq_type(snd_seq_t *seq)$/;"	f
snd_seq_type_check	./include/seq.h	640;"	d
snd_seq_type_t	./include/seq.h	/^} snd_seq_type_t;$/;"	t	typeref:enum:_snd_seq_type
snd_seq_unset_bit	./src/seq/seq.c	/^void snd_seq_unset_bit(int nr, void *array)$/;"	f
snd_seq_unsubscribe_port	./src/seq/seq.c	/^int snd_seq_unsubscribe_port(snd_seq_t *seq, snd_seq_port_subscribe_t * sub)$/;"	f
snd_set_mode_t	./include/local.h	/^} snd_set_mode_t;$/;"	t	typeref:enum:_snd_set_mode
snd_shm_area	./src/shmarea.c	/^struct snd_shm_area {$/;"	s	file:
snd_shm_area_create	./src/shmarea.c	/^struct snd_shm_area *snd_shm_area_create(int shmid, void *ptr)$/;"	f
snd_shm_area_destroy	./src/shmarea.c	/^int snd_shm_area_destroy(struct snd_shm_area *area)$/;"	f
snd_shm_area_destructor	./src/shmarea.c	/^void snd_shm_area_destructor(void)$/;"	f
snd_shm_area_share	./src/shmarea.c	/^struct snd_shm_area *snd_shm_area_share(struct snd_shm_area *area)$/;"	f
snd_spcm_duplex_type_t	./include/pcm.h	/^} snd_spcm_duplex_type_t;$/;"	t	typeref:enum:_snd_spcm_duplex_type
snd_spcm_init	./src/pcm/pcm_simple.c	/^int snd_spcm_init(snd_pcm_t *pcm,$/;"	f
snd_spcm_init_duplex	./src/pcm/pcm_simple.c	/^int snd_spcm_init_duplex(snd_pcm_t *playback_pcm,$/;"	f
snd_spcm_init_get_params	./src/pcm/pcm_simple.c	/^int snd_spcm_init_get_params(snd_pcm_t *pcm,$/;"	f
snd_spcm_latency_t	./include/pcm.h	/^} snd_spcm_latency_t;$/;"	t	typeref:enum:_snd_spcm_latency
snd_spcm_xrun_type_t	./include/pcm.h	/^} snd_spcm_xrun_type_t;$/;"	t	typeref:enum:_snd_spcm_xrun_type
snd_str_p_t	./src/alisp/alisp_snd.c	/^typedef char * (*snd_str_p_t)(void *rctl);$/;"	t	file:
snd_strerror	./src/error.c	/^const char *snd_strerror(int errnum)$/;"	f
snd_timer_async	./src/timer/timer.c	/^int snd_timer_async(snd_timer_t *timer, int sig, pid_t pid)$/;"	f
snd_timer_class_t	./include/timer.h	/^} snd_timer_class_t;$/;"	t	typeref:enum:_snd_timer_class
snd_timer_close	./src/timer/timer.c	/^int snd_timer_close(snd_timer_t *timer)$/;"	f
snd_timer_continue	./src/timer/timer.c	/^int snd_timer_continue(snd_timer_t *timer)$/;"	f
snd_timer_event_t	./include/timer.h	/^} snd_timer_event_t;$/;"	t	typeref:enum:_snd_timer_event
snd_timer_ginfo_alloca	./include/timer.h	187;"	d
snd_timer_ginfo_copy	./src/timer/timer_query.c	/^void snd_timer_ginfo_copy(snd_timer_ginfo_t *dst, const snd_timer_ginfo_t *src)$/;"	f
snd_timer_ginfo_free	./src/timer/timer_query.c	/^void snd_timer_ginfo_free(snd_timer_ginfo_t *info)$/;"	f
snd_timer_ginfo_get_card	./src/timer/timer_query.c	/^int snd_timer_ginfo_get_card(snd_timer_ginfo_t *obj)$/;"	f
snd_timer_ginfo_get_clients	./src/timer/timer_query.c	/^unsigned int snd_timer_ginfo_get_clients(snd_timer_ginfo_t *obj)$/;"	f
snd_timer_ginfo_get_flags	./src/timer/timer_query.c	/^unsigned int snd_timer_ginfo_get_flags(snd_timer_ginfo_t *obj)$/;"	f
snd_timer_ginfo_get_id	./src/timer/timer_query.c	/^char *snd_timer_ginfo_get_id(snd_timer_ginfo_t *obj)$/;"	f
snd_timer_ginfo_get_name	./src/timer/timer_query.c	/^char *snd_timer_ginfo_get_name(snd_timer_ginfo_t *obj)$/;"	f
snd_timer_ginfo_get_resolution	./src/timer/timer_query.c	/^unsigned long snd_timer_ginfo_get_resolution(snd_timer_ginfo_t *obj)$/;"	f
snd_timer_ginfo_get_resolution_max	./src/timer/timer_query.c	/^unsigned long snd_timer_ginfo_get_resolution_max(snd_timer_ginfo_t *obj)$/;"	f
snd_timer_ginfo_get_resolution_min	./src/timer/timer_query.c	/^unsigned long snd_timer_ginfo_get_resolution_min(snd_timer_ginfo_t *obj)$/;"	f
snd_timer_ginfo_get_tid	./src/timer/timer_query.c	/^snd_timer_id_t *snd_timer_ginfo_get_tid(snd_timer_ginfo_t *obj)$/;"	f
snd_timer_ginfo_malloc	./src/timer/timer_query.c	/^int snd_timer_ginfo_malloc(snd_timer_ginfo_t **info)$/;"	f
snd_timer_ginfo_set_tid	./src/timer/timer_query.c	/^int snd_timer_ginfo_set_tid(snd_timer_ginfo_t *obj, snd_timer_id_t *tid)$/;"	f
snd_timer_ginfo_sizeof	./src/timer/timer_query.c	/^size_t snd_timer_ginfo_sizeof(void)$/;"	f
snd_timer_ginfo_t	./include/timer.h	/^typedef struct _snd_timer_ginfo snd_timer_ginfo_t;$/;"	t	typeref:struct:_snd_timer_ginfo
snd_timer_gparams_t	./include/timer.h	/^typedef struct _snd_timer_gparams snd_timer_gparams_t;$/;"	t	typeref:struct:_snd_timer_gparams
snd_timer_gstatus_t	./include/timer.h	/^typedef struct _snd_timer_gstatus snd_timer_gstatus_t;$/;"	t	typeref:struct:_snd_timer_gstatus
snd_timer_hw_async	./src/timer/timer_hw.c	/^static int snd_timer_hw_async(snd_timer_t *timer, int sig, pid_t pid)$/;"	f	file:
snd_timer_hw_close	./src/timer/timer_hw.c	/^static int snd_timer_hw_close(snd_timer_t *handle)$/;"	f	file:
snd_timer_hw_continue	./src/timer/timer_hw.c	/^static int snd_timer_hw_continue(snd_timer_t *handle)$/;"	f	file:
snd_timer_hw_info	./src/timer/timer_hw.c	/^static int snd_timer_hw_info(snd_timer_t *handle, snd_timer_info_t * info)$/;"	f	file:
snd_timer_hw_nonblock	./src/timer/timer_hw.c	/^static int snd_timer_hw_nonblock(snd_timer_t *timer, int nonblock)$/;"	f	file:
snd_timer_hw_open	./src/timer/timer_hw.c	/^int snd_timer_hw_open(snd_timer_t **handle, const char *name, int dev_class, int dev_sclass, int card, int device, int subdevice, int mode)$/;"	f
snd_timer_hw_ops	./src/timer/timer_hw.c	/^static const snd_timer_ops_t snd_timer_hw_ops = {$/;"	v	file:
snd_timer_hw_params	./src/timer/timer_hw.c	/^static int snd_timer_hw_params(snd_timer_t *handle, snd_timer_params_t * params)$/;"	f	file:
snd_timer_hw_read	./src/timer/timer_hw.c	/^static ssize_t snd_timer_hw_read(snd_timer_t *handle, void *buffer, size_t size)$/;"	f	file:
snd_timer_hw_start	./src/timer/timer_hw.c	/^static int snd_timer_hw_start(snd_timer_t *handle)$/;"	f	file:
snd_timer_hw_status	./src/timer/timer_hw.c	/^static int snd_timer_hw_status(snd_timer_t *handle, snd_timer_status_t * status)$/;"	f	file:
snd_timer_hw_stop	./src/timer/timer_hw.c	/^static int snd_timer_hw_stop(snd_timer_t *handle)$/;"	f	file:
snd_timer_id_alloca	./include/timer.h	169;"	d
snd_timer_id_copy	./src/timer/timer_query.c	/^void snd_timer_id_copy(snd_timer_id_t *dst, const snd_timer_id_t *src)$/;"	f
snd_timer_id_free	./src/timer/timer_query.c	/^void snd_timer_id_free(snd_timer_id_t *info)$/;"	f
snd_timer_id_get_card	./src/timer/timer_query.c	/^int snd_timer_id_get_card(snd_timer_id_t * tid)$/;"	f
snd_timer_id_get_class	./src/timer/timer_query.c	/^int snd_timer_id_get_class(snd_timer_id_t * tid)$/;"	f
snd_timer_id_get_device	./src/timer/timer_query.c	/^int snd_timer_id_get_device(snd_timer_id_t * tid)$/;"	f
snd_timer_id_get_sclass	./src/timer/timer_query.c	/^int snd_timer_id_get_sclass(snd_timer_id_t * tid)$/;"	f
snd_timer_id_get_subdevice	./src/timer/timer_query.c	/^int snd_timer_id_get_subdevice(snd_timer_id_t * tid)$/;"	f
snd_timer_id_malloc	./src/timer/timer_query.c	/^int snd_timer_id_malloc(snd_timer_id_t **info)$/;"	f
snd_timer_id_set_card	./src/timer/timer_query.c	/^void snd_timer_id_set_card(snd_timer_id_t * tid, int card)$/;"	f
snd_timer_id_set_class	./src/timer/timer_query.c	/^void snd_timer_id_set_class(snd_timer_id_t * tid, int dev_class)$/;"	f
snd_timer_id_set_device	./src/timer/timer_query.c	/^void snd_timer_id_set_device(snd_timer_id_t * tid, int device)$/;"	f
snd_timer_id_set_sclass	./src/timer/timer_query.c	/^void snd_timer_id_set_sclass(snd_timer_id_t * tid, int dev_sclass)$/;"	f
snd_timer_id_set_subdevice	./src/timer/timer_query.c	/^void snd_timer_id_set_subdevice(snd_timer_id_t * tid, int subdevice)$/;"	f
snd_timer_id_sizeof	./src/timer/timer_query.c	/^size_t snd_timer_id_sizeof()$/;"	f
snd_timer_id_t	./include/timer.h	/^typedef struct _snd_timer_id snd_timer_id_t;$/;"	t	typeref:struct:_snd_timer_id
snd_timer_info	./src/timer/timer.c	/^int snd_timer_info(snd_timer_t *timer, snd_timer_info_t * info)$/;"	f
snd_timer_info_alloca	./include/timer.h	205;"	d
snd_timer_info_copy	./src/timer/timer.c	/^void snd_timer_info_copy(snd_timer_info_t *dst, const snd_timer_info_t *src)$/;"	f
snd_timer_info_free	./src/timer/timer.c	/^void snd_timer_info_free(snd_timer_info_t *info)$/;"	f
snd_timer_info_get_card	./src/timer/timer.c	/^int snd_timer_info_get_card(snd_timer_info_t * info)$/;"	f
snd_timer_info_get_id	./src/timer/timer.c	/^const char *snd_timer_info_get_id(snd_timer_info_t * info)$/;"	f
snd_timer_info_get_name	./src/timer/timer.c	/^const char *snd_timer_info_get_name(snd_timer_info_t * info)$/;"	f
snd_timer_info_get_resolution	./src/timer/timer.c	/^long snd_timer_info_get_resolution(snd_timer_info_t * info)$/;"	f
snd_timer_info_get_ticks	./src/timer/timer.c	/^long snd_timer_info_get_ticks(snd_timer_info_t * info)$/;"	f
snd_timer_info_is_slave	./src/timer/timer.c	/^int snd_timer_info_is_slave(snd_timer_info_t * info)$/;"	f
snd_timer_info_malloc	./src/timer/timer.c	/^int snd_timer_info_malloc(snd_timer_info_t **info)$/;"	f
snd_timer_info_sizeof	./src/timer/timer.c	/^size_t snd_timer_info_sizeof()$/;"	f
snd_timer_info_t	./include/timer.h	/^typedef struct _snd_timer_info snd_timer_info_t;$/;"	t	typeref:struct:_snd_timer_info
snd_timer_name	./src/timer/timer.c	/^const char *snd_timer_name(snd_timer_t *timer)$/;"	f
snd_timer_nonblock	./src/timer/timer.c	/^int snd_timer_nonblock(snd_timer_t *timer, int nonblock)$/;"	f
snd_timer_open	./src/timer/timer.c	/^int snd_timer_open(snd_timer_t **timer, const char *name, int mode)$/;"	f
snd_timer_open_conf	./src/timer/timer.c	/^static int snd_timer_open_conf(snd_timer_t **timer,$/;"	f	file:
snd_timer_open_lconf	./src/timer/timer.c	/^int snd_timer_open_lconf(snd_timer_t **timer, const char *name,$/;"	f
snd_timer_open_noupdate	./src/timer/timer.c	/^static int snd_timer_open_noupdate(snd_timer_t **timer, snd_config_t *root, const char *name, int mode)$/;"	f	file:
snd_timer_open_objects	./src/timer/timer_symbols.c	/^static const char **snd_timer_open_objects[] = {$/;"	v	file:
snd_timer_open_symbols	./src/timer/timer_symbols.c	/^void *snd_timer_open_symbols(void)$/;"	f
snd_timer_ops_t	./src/timer/timer_local.h	/^} snd_timer_ops_t;$/;"	t	typeref:struct:__anon88
snd_timer_params	./src/timer/timer.c	/^int snd_timer_params(snd_timer_t *timer, snd_timer_params_t * params)$/;"	f
snd_timer_params_alloca	./include/timer.h	218;"	d
snd_timer_params_copy	./src/timer/timer.c	/^void snd_timer_params_copy(snd_timer_params_t *dst, const snd_timer_params_t *src)$/;"	f
snd_timer_params_free	./src/timer/timer.c	/^void snd_timer_params_free(snd_timer_params_t *params)$/;"	f
snd_timer_params_get_auto_start	./src/timer/timer.c	/^int snd_timer_params_get_auto_start(snd_timer_params_t * params)$/;"	f
snd_timer_params_get_early_event	./src/timer/timer.c	/^int snd_timer_params_get_early_event(snd_timer_params_t * params)$/;"	f
snd_timer_params_get_exclusive	./src/timer/timer.c	/^int INTERNAL(snd_timer_params_get_exclusive)(snd_timer_params_t * params)$/;"	f
snd_timer_params_get_filter	./src/timer/timer.c	/^unsigned int INTERNAL(snd_timer_params_get_filter)(snd_timer_params_t * params)$/;"	f
snd_timer_params_get_queue_size	./src/timer/timer.c	/^long snd_timer_params_get_queue_size(snd_timer_params_t * params)$/;"	f
snd_timer_params_get_ticks	./src/timer/timer.c	/^long snd_timer_params_get_ticks(snd_timer_params_t * params)$/;"	f
snd_timer_params_malloc	./src/timer/timer.c	/^int snd_timer_params_malloc(snd_timer_params_t **params)$/;"	f
snd_timer_params_set_auto_start	./src/timer/timer.c	/^int snd_timer_params_set_auto_start(snd_timer_params_t * params, int auto_start)$/;"	f
snd_timer_params_set_early_event	./src/timer/timer.c	/^int snd_timer_params_set_early_event(snd_timer_params_t * params, int early_event)$/;"	f
snd_timer_params_set_exclusive	./src/timer/timer.c	/^int INTERNAL(snd_timer_params_set_exclusive)(snd_timer_params_t * params, int exclusive)$/;"	f
snd_timer_params_set_filter	./src/timer/timer.c	/^void INTERNAL(snd_timer_params_set_filter)(snd_timer_params_t * params, unsigned int filter)$/;"	f
snd_timer_params_set_queue_size	./src/timer/timer.c	/^void snd_timer_params_set_queue_size(snd_timer_params_t * params, long queue_size)$/;"	f
snd_timer_params_set_ticks	./src/timer/timer.c	/^void snd_timer_params_set_ticks(snd_timer_params_t * params, long ticks)$/;"	f
snd_timer_params_sizeof	./src/timer/timer.c	/^size_t snd_timer_params_sizeof()$/;"	f
snd_timer_params_t	./include/timer.h	/^typedef struct _snd_timer_params snd_timer_params_t;$/;"	t	typeref:struct:_snd_timer_params
snd_timer_poll_descriptors	./src/timer/timer.c	/^int snd_timer_poll_descriptors(snd_timer_t *timer, struct pollfd *pfds, unsigned int space)$/;"	f
snd_timer_poll_descriptors_count	./src/timer/timer.c	/^int snd_timer_poll_descriptors_count(snd_timer_t *timer)$/;"	f
snd_timer_poll_descriptors_revents	./src/timer/timer.c	/^int snd_timer_poll_descriptors_revents(snd_timer_t *timer, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)$/;"	f
snd_timer_query_close	./src/timer/timer_query.c	/^int snd_timer_query_close(snd_timer_query_t *timer)$/;"	f
snd_timer_query_hw_close	./src/timer/timer_query_hw.c	/^static int snd_timer_query_hw_close(snd_timer_query_t *handle)$/;"	f	file:
snd_timer_query_hw_info	./src/timer/timer_query_hw.c	/^static int snd_timer_query_hw_info(snd_timer_query_t *handle, snd_timer_ginfo_t *info)$/;"	f	file:
snd_timer_query_hw_next_device	./src/timer/timer_query_hw.c	/^static int snd_timer_query_hw_next_device(snd_timer_query_t *handle, snd_timer_id_t * tid)$/;"	f	file:
snd_timer_query_hw_open	./src/timer/timer_query_hw.c	/^int snd_timer_query_hw_open(snd_timer_query_t **handle, const char *name, int mode)$/;"	f
snd_timer_query_hw_ops	./src/timer/timer_query_hw.c	/^static const snd_timer_query_ops_t snd_timer_query_hw_ops = {$/;"	v	file:
snd_timer_query_hw_params	./src/timer/timer_query_hw.c	/^static int snd_timer_query_hw_params(snd_timer_query_t *handle, snd_timer_gparams_t *params)$/;"	f	file:
snd_timer_query_hw_status	./src/timer/timer_query_hw.c	/^static int snd_timer_query_hw_status(snd_timer_query_t *handle, snd_timer_gstatus_t *status)$/;"	f	file:
snd_timer_query_info	./src/timer/timer_query.c	/^int INTERNAL(snd_timer_query_info)(snd_timer_query_t *timer, snd_timer_ginfo_t *info)$/;"	f
snd_timer_query_next_device	./src/timer/timer_query.c	/^int snd_timer_query_next_device(snd_timer_query_t *timer, snd_timer_id_t *tid)$/;"	f
snd_timer_query_open	./src/timer/timer_query.c	/^int snd_timer_query_open(snd_timer_query_t **timer, const char *name, int mode)$/;"	f
snd_timer_query_open_conf	./src/timer/timer_query.c	/^static int snd_timer_query_open_conf(snd_timer_query_t **timer,$/;"	f	file:
snd_timer_query_open_lconf	./src/timer/timer_query.c	/^int snd_timer_query_open_lconf(snd_timer_query_t **timer, const char *name,$/;"	f
snd_timer_query_open_noupdate	./src/timer/timer_query.c	/^static int snd_timer_query_open_noupdate(snd_timer_query_t **timer, snd_config_t *root, const char *name, int mode)$/;"	f	file:
snd_timer_query_open_objects	./src/timer/timer_symbols.c	/^static const char **snd_timer_query_open_objects[] = {$/;"	v	file:
snd_timer_query_open_symbols	./src/timer/timer_symbols.c	/^void *snd_timer_query_open_symbols(void)$/;"	f
snd_timer_query_ops_t	./src/timer/timer_local.h	/^} snd_timer_query_ops_t;$/;"	t	typeref:struct:__anon89
snd_timer_query_params	./src/timer/timer_query.c	/^int INTERNAL(snd_timer_query_params)(snd_timer_query_t *timer, snd_timer_gparams_t *params)$/;"	f
snd_timer_query_status	./src/timer/timer_query.c	/^int INTERNAL(snd_timer_query_status)(snd_timer_query_t *timer, snd_timer_gstatus_t *status)$/;"	f
snd_timer_query_t	./include/timer.h	/^typedef struct _snd_timer_query snd_timer_query_t;$/;"	t	typeref:struct:_snd_timer_query
snd_timer_read	./src/timer/timer.c	/^ssize_t snd_timer_read(snd_timer_t *timer, void *buffer, size_t size)$/;"	f
snd_timer_read_t	./include/timer.h	/^} snd_timer_read_t;$/;"	t	typeref:struct:_snd_timer_read
snd_timer_slave_class_t	./include/timer.h	/^} snd_timer_slave_class_t;$/;"	t	typeref:enum:_snd_timer_slave_class
snd_timer_start	./src/timer/timer.c	/^int snd_timer_start(snd_timer_t *timer)$/;"	f
snd_timer_status	./src/timer/timer.c	/^int snd_timer_status(snd_timer_t *timer, snd_timer_status_t * status)$/;"	f
snd_timer_status_alloca	./include/timer.h	238;"	d
snd_timer_status_copy	./src/timer/timer.c	/^void snd_timer_status_copy(snd_timer_status_t *dst, const snd_timer_status_t *src)$/;"	f
snd_timer_status_free	./src/timer/timer.c	/^void snd_timer_status_free(snd_timer_status_t *status)$/;"	f
snd_timer_status_get_lost	./src/timer/timer.c	/^long snd_timer_status_get_lost(snd_timer_status_t * status)$/;"	f
snd_timer_status_get_overrun	./src/timer/timer.c	/^long snd_timer_status_get_overrun(snd_timer_status_t * status)$/;"	f
snd_timer_status_get_queue	./src/timer/timer.c	/^long snd_timer_status_get_queue(snd_timer_status_t * status)$/;"	f
snd_timer_status_get_resolution	./src/timer/timer.c	/^long snd_timer_status_get_resolution(snd_timer_status_t * status)$/;"	f
snd_timer_status_get_timestamp	./src/timer/timer.c	/^snd_htimestamp_t snd_timer_status_get_timestamp(snd_timer_status_t * status)$/;"	f
snd_timer_status_malloc	./src/timer/timer.c	/^int snd_timer_status_malloc(snd_timer_status_t **status)$/;"	f
snd_timer_status_sizeof	./src/timer/timer.c	/^size_t snd_timer_status_sizeof()$/;"	f
snd_timer_status_t	./include/timer.h	/^typedef struct _snd_timer_status snd_timer_status_t;$/;"	t	typeref:struct:_snd_timer_status
snd_timer_stop	./src/timer/timer.c	/^int snd_timer_stop(snd_timer_t *timer)$/;"	f
snd_timer_t	./include/timer.h	/^typedef struct _snd_timer snd_timer_t;$/;"	t	typeref:struct:_snd_timer
snd_timer_tread_t	./include/timer.h	/^} snd_timer_tread_t;$/;"	t	typeref:struct:_snd_timer_tread
snd_timer_type	./src/timer/timer.c	/^snd_timer_type_t snd_timer_type(snd_timer_t *timer)$/;"	f
snd_timer_type_t	./include/timer.h	/^} snd_timer_type_t;$/;"	t	typeref:enum:_snd_timer_type
snd_timestamp_t	./include/global.h	/^typedef struct timeval snd_timestamp_t;$/;"	t	typeref:struct:timeval
snd_tlv_convert_from_dB	./src/control/tlv.c	/^int snd_tlv_convert_from_dB(unsigned int *tlv, long rangemin, long rangemax,$/;"	f
snd_tlv_convert_to_dB	./src/control/tlv.c	/^int snd_tlv_convert_to_dB(unsigned int *tlv, long rangemin, long rangemax,$/;"	f
snd_tlv_get_dB_range	./src/control/tlv.c	/^int snd_tlv_get_dB_range(unsigned int *tlv, long rangemin, long rangemax,$/;"	f
snd_tlv_parse_dB_info	./src/control/tlv.c	/^int snd_tlv_parse_dB_info(unsigned int *tlv,$/;"	f
snd_tmp_double	./src/pcm/pcm_local.h	/^typedef union snd_tmp_double {$/;"	u
snd_tmp_double_t	./src/pcm/pcm_local.h	/^} snd_tmp_double_t;$/;"	t	typeref:union:snd_tmp_double
snd_tmp_float	./src/pcm/pcm_local.h	/^typedef union snd_tmp_float {$/;"	u
snd_tmp_float_t	./src/pcm/pcm_local.h	/^} snd_tmp_float_t;$/;"	t	typeref:union:snd_tmp_float
snd_transport_type_t	./include/aserver.h	/^} snd_transport_type_t;$/;"	t	typeref:enum:_snd_transport_type
snd_use_case_card_list	./include/use-case.h	/^static inline int snd_use_case_card_list(const char **list[])$/;"	f
snd_use_case_free_list	./src/ucm/main.c	/^int snd_use_case_free_list(const char *list[], int items)$/;"	f
snd_use_case_get	./src/ucm/main.c	/^int snd_use_case_get(snd_use_case_mgr_t *uc_mgr,$/;"	f
snd_use_case_get_list	./src/ucm/main.c	/^int snd_use_case_get_list(snd_use_case_mgr_t *uc_mgr,$/;"	f
snd_use_case_geti	./src/ucm/main.c	/^int snd_use_case_geti(snd_use_case_mgr_t *uc_mgr,$/;"	f
snd_use_case_identifier	./src/ucm/main.c	/^char *snd_use_case_identifier(const char *fmt, ...)$/;"	f
snd_use_case_mgr	./src/ucm/ucm_local.h	/^struct snd_use_case_mgr {$/;"	s
snd_use_case_mgr_close	./src/ucm/main.c	/^int snd_use_case_mgr_close(snd_use_case_mgr_t *uc_mgr)$/;"	f
snd_use_case_mgr_open	./src/ucm/main.c	/^int snd_use_case_mgr_open(snd_use_case_mgr_t **mgr,$/;"	f
snd_use_case_mgr_reload	./src/ucm/main.c	/^int snd_use_case_mgr_reload(snd_use_case_mgr_t *uc_mgr)$/;"	f
snd_use_case_mgr_reset	./src/ucm/main.c	/^int snd_use_case_mgr_reset(snd_use_case_mgr_t *uc_mgr)$/;"	f
snd_use_case_mgr_t	./include/use-case.h	/^typedef struct snd_use_case_mgr snd_use_case_mgr_t;$/;"	t	typeref:struct:snd_use_case_mgr
snd_use_case_set	./src/ucm/main.c	/^int snd_use_case_set(snd_use_case_mgr_t *uc_mgr,$/;"	f
snd_use_case_verb_list	./include/use-case.h	/^static inline int snd_use_case_verb_list(snd_use_case_mgr_t *uc_mgr,$/;"	f
snd_user_file	./src/userfile.c	/^int snd_user_file(const char *file, char **result)$/;"	f
sndrv_aes_iec958	./include/sound/asound.h	/^struct sndrv_aes_iec958 {$/;"	s
sndrv_ctl_card_info	./include/sound/asound.h	/^struct sndrv_ctl_card_info {$/;"	s
sndrv_ctl_elem_id	./include/sound/asound.h	/^struct sndrv_ctl_elem_id {$/;"	s
sndrv_ctl_elem_iface	./include/sound/asound.h	/^enum sndrv_ctl_elem_iface {$/;"	g
sndrv_ctl_elem_info	./include/sound/asound.h	/^struct sndrv_ctl_elem_info {$/;"	s
sndrv_ctl_elem_list	./include/sound/asound.h	/^struct sndrv_ctl_elem_list {$/;"	s
sndrv_ctl_elem_type	./include/sound/asound.h	/^enum sndrv_ctl_elem_type {$/;"	g
sndrv_ctl_elem_value	./include/sound/asound.h	/^struct sndrv_ctl_elem_value {$/;"	s
sndrv_ctl_event	./include/sound/asound.h	/^struct sndrv_ctl_event {$/;"	s
sndrv_ctl_event_type	./include/sound/asound.h	/^enum sndrv_ctl_event_type {$/;"	g
sndrv_ctl_tlv	./include/sound/asound.h	/^struct sndrv_ctl_tlv {$/;"	s
sndrv_hwdep_dsp_image	./include/sound/asound.h	/^struct sndrv_hwdep_dsp_image {$/;"	s
sndrv_hwdep_dsp_status	./include/sound/asound.h	/^struct sndrv_hwdep_dsp_status {$/;"	s
sndrv_hwdep_iface	./include/sound/asound.h	/^enum sndrv_hwdep_iface {$/;"	g
sndrv_hwdep_info	./include/sound/asound.h	/^struct sndrv_hwdep_info {$/;"	s
sndrv_interval	./include/sound/asound.h	/^struct sndrv_interval {$/;"	s
sndrv_mask	./include/sound/asound.h	/^struct sndrv_mask {$/;"	s
sndrv_pcm_access	./include/sound/asound.h	/^enum sndrv_pcm_access {$/;"	g
sndrv_pcm_channel_info	./include/sound/asound.h	/^struct sndrv_pcm_channel_info {$/;"	s
sndrv_pcm_class	./include/sound/asound.h	/^enum sndrv_pcm_class {$/;"	g
sndrv_pcm_format	./include/sound/asound.h	/^enum sndrv_pcm_format {$/;"	g
sndrv_pcm_hw_param	./include/sound/asound.h	/^enum sndrv_pcm_hw_param {$/;"	g
sndrv_pcm_hw_params	./include/sound/asound.h	/^struct sndrv_pcm_hw_params {$/;"	s
sndrv_pcm_hw_params_old	./src/pcm/pcm_hw.c	/^struct sndrv_pcm_hw_params_old {$/;"	s	file:
sndrv_pcm_info	./include/sound/asound.h	/^struct sndrv_pcm_info {$/;"	s
sndrv_pcm_mmap_control	./include/sound/asound.h	/^struct sndrv_pcm_mmap_control {$/;"	s
sndrv_pcm_mmap_status	./include/sound/asound.h	/^struct sndrv_pcm_mmap_status {$/;"	s
sndrv_pcm_sframes_t	./include/sound/asound.h	/^typedef long sndrv_pcm_sframes_t;$/;"	t
sndrv_pcm_state	./include/sound/asound.h	/^enum sndrv_pcm_state {$/;"	g
sndrv_pcm_status	./include/sound/asound.h	/^struct sndrv_pcm_status {$/;"	s
sndrv_pcm_stream	./include/sound/asound.h	/^enum sndrv_pcm_stream {$/;"	g
sndrv_pcm_subclass	./include/sound/asound.h	/^enum sndrv_pcm_subclass {$/;"	g
sndrv_pcm_subformat	./include/sound/asound.h	/^enum sndrv_pcm_subformat {$/;"	g
sndrv_pcm_sw_params	./include/sound/asound.h	/^struct sndrv_pcm_sw_params {$/;"	s
sndrv_pcm_sync_id	./include/sound/asound.h	/^union sndrv_pcm_sync_id {$/;"	u
sndrv_pcm_sync_ptr	./include/sound/asound.h	/^struct sndrv_pcm_sync_ptr {$/;"	s
sndrv_pcm_tstamp	./include/sound/asound.h	/^enum sndrv_pcm_tstamp {$/;"	g
sndrv_pcm_uframes_t	./include/sound/asound.h	/^typedef unsigned long sndrv_pcm_uframes_t;$/;"	t
sndrv_rawmidi_info	./include/sound/asound.h	/^struct sndrv_rawmidi_info {$/;"	s
sndrv_rawmidi_params	./include/sound/asound.h	/^struct sndrv_rawmidi_params {$/;"	s
sndrv_rawmidi_status	./include/sound/asound.h	/^struct sndrv_rawmidi_status {$/;"	s
sndrv_rawmidi_stream	./include/sound/asound.h	/^enum sndrv_rawmidi_stream {$/;"	g
sndrv_seq_addr	./include/local.h	80;"	d
sndrv_seq_addr	./include/sound/asequencer.h	/^struct sndrv_seq_addr {$/;"	s
sndrv_seq_client_info	./include/sound/asequencer.h	/^struct sndrv_seq_client_info {$/;"	s
sndrv_seq_client_pool	./include/sound/asequencer.h	/^struct sndrv_seq_client_pool {$/;"	s
sndrv_seq_client_type	./include/sound/asequencer.h	/^enum sndrv_seq_client_type {$/;"	g
sndrv_seq_connect	./include/sound/asequencer.h	/^struct sndrv_seq_connect {$/;"	s
sndrv_seq_ev_ctrl	./include/sound/asequencer.h	/^struct sndrv_seq_ev_ctrl {$/;"	s
sndrv_seq_ev_ext	./include/sound/asequencer.h	/^struct sndrv_seq_ev_ext {$/;"	s
sndrv_seq_ev_is_abstime	./include/sound/asequencer.h	364;"	d
sndrv_seq_ev_is_channel_type	./include/sound/asequencer.h	322;"	d
sndrv_seq_ev_is_control_type	./include/sound/asequencer.h	326;"	d
sndrv_seq_ev_is_direct	./include/sound/asequencer.h	343;"	d
sndrv_seq_ev_is_fixed	./include/sound/asequencer.h	353;"	d
sndrv_seq_ev_is_fixed_type	./include/sound/asequencer.h	336;"	d
sndrv_seq_ev_is_message_type	./include/sound/asequencer.h	330;"	d
sndrv_seq_ev_is_note_type	./include/sound/asequencer.h	324;"	d
sndrv_seq_ev_is_prior	./include/sound/asequencer.h	349;"	d
sndrv_seq_ev_is_queue_type	./include/sound/asequencer.h	328;"	d
sndrv_seq_ev_is_real	./include/sound/asequencer.h	360;"	d
sndrv_seq_ev_is_reltime	./include/sound/asequencer.h	365;"	d
sndrv_seq_ev_is_reserved	./include/sound/asequencer.h	340;"	d
sndrv_seq_ev_is_result_type	./include/sound/asequencer.h	320;"	d
sndrv_seq_ev_is_sample_type	./include/sound/asequencer.h	332;"	d
sndrv_seq_ev_is_tick	./include/sound/asequencer.h	359;"	d
sndrv_seq_ev_is_user_type	./include/sound/asequencer.h	334;"	d
sndrv_seq_ev_is_variable	./include/sound/asequencer.h	354;"	d
sndrv_seq_ev_is_variable_type	./include/sound/asequencer.h	338;"	d
sndrv_seq_ev_is_varusr	./include/sound/asequencer.h	355;"	d
sndrv_seq_ev_length_type	./include/sound/asequencer.h	352;"	d
sndrv_seq_ev_note	./include/sound/asequencer.h	/^struct sndrv_seq_ev_note {$/;"	s
sndrv_seq_ev_queue_control	./include/sound/asequencer.h	/^struct sndrv_seq_ev_queue_control {$/;"	s
sndrv_seq_ev_quote	./include/sound/asequencer.h	/^struct sndrv_seq_ev_quote {$/;"	s
sndrv_seq_ev_raw32	./include/sound/asequencer.h	/^struct sndrv_seq_ev_raw32 {$/;"	s
sndrv_seq_ev_raw8	./include/sound/asequencer.h	/^struct sndrv_seq_ev_raw8 {$/;"	s
sndrv_seq_ev_timemode_type	./include/sound/asequencer.h	363;"	d
sndrv_seq_ev_timestamp_type	./include/sound/asequencer.h	358;"	d
sndrv_seq_event	./include/local.h	84;"	d
sndrv_seq_event	./include/sound/asequencer.h	/^struct sndrv_seq_event {$/;"	s
sndrv_seq_event_bounce	./include/sound/asequencer.h	/^struct sndrv_seq_event_bounce {$/;"	s
sndrv_seq_event_bounce_ext_data	./include/sound/asequencer.h	314;"	d
sndrv_seq_event_type_t	./include/sound/asequencer.h	/^typedef unsigned char sndrv_seq_event_type_t;$/;"	t
sndrv_seq_port_info	./include/sound/asequencer.h	/^struct sndrv_seq_port_info {$/;"	s
sndrv_seq_port_subscribe	./include/sound/asequencer.h	/^struct sndrv_seq_port_subscribe {$/;"	s
sndrv_seq_query_subs	./include/sound/asequencer.h	/^struct sndrv_seq_query_subs {$/;"	s
sndrv_seq_queue_client	./include/sound/asequencer.h	/^struct sndrv_seq_queue_client {$/;"	s
sndrv_seq_queue_info	./include/sound/asequencer.h	/^struct sndrv_seq_queue_info {$/;"	s
sndrv_seq_queue_skew	./include/sound/asequencer.h	/^struct sndrv_seq_queue_skew {$/;"	s
sndrv_seq_queue_status	./include/sound/asequencer.h	/^struct sndrv_seq_queue_status {$/;"	s
sndrv_seq_queue_sync_port	./include/sound/asequencer.h	368;"	d
sndrv_seq_queue_tempo	./include/sound/asequencer.h	/^struct sndrv_seq_queue_tempo {$/;"	s
sndrv_seq_queue_timer	./include/sound/asequencer.h	/^struct sndrv_seq_queue_timer {$/;"	s
sndrv_seq_real_time	./include/local.h	82;"	d
sndrv_seq_real_time	./include/sound/asequencer.h	/^struct sndrv_seq_real_time {$/;"	s
sndrv_seq_remove_events	./include/sound/asequencer.h	/^struct sndrv_seq_remove_events {$/;"	s
sndrv_seq_result	./include/sound/asequencer.h	/^struct sndrv_seq_result {$/;"	s
sndrv_seq_running_info	./include/sound/asequencer.h	/^struct sndrv_seq_running_info {$/;"	s
sndrv_seq_system_info	./include/sound/asequencer.h	/^struct sndrv_seq_system_info {$/;"	s
sndrv_seq_tick_time_t	./include/local.h	81;"	d
sndrv_seq_tick_time_t	./include/sound/asequencer.h	/^typedef unsigned int sndrv_seq_tick_time_t;	\/* midi ticks *\/$/;"	t
sndrv_seq_timestamp	./include/local.h	83;"	d
sndrv_seq_timestamp	./include/sound/asequencer.h	/^union sndrv_seq_timestamp {$/;"	u
sndrv_timer_class	./include/sound/asound.h	/^enum sndrv_timer_class {$/;"	g
sndrv_timer_event	./include/sound/asound.h	/^enum sndrv_timer_event {$/;"	g
sndrv_timer_ginfo	./include/sound/asound.h	/^struct sndrv_timer_ginfo {$/;"	s
sndrv_timer_gparams	./include/sound/asound.h	/^struct sndrv_timer_gparams {$/;"	s
sndrv_timer_gstatus	./include/sound/asound.h	/^struct sndrv_timer_gstatus {$/;"	s
sndrv_timer_id	./include/sound/asound.h	/^struct sndrv_timer_id {$/;"	s
sndrv_timer_info	./include/sound/asound.h	/^struct sndrv_timer_info {$/;"	s
sndrv_timer_params	./include/sound/asound.h	/^struct sndrv_timer_params {$/;"	s
sndrv_timer_read	./include/sound/asound.h	/^struct sndrv_timer_read {$/;"	s
sndrv_timer_select	./include/sound/asound.h	/^struct sndrv_timer_select {$/;"	s
sndrv_timer_slave_class	./include/sound/asound.h	/^enum sndrv_timer_slave_class {$/;"	g
sndrv_timer_status	./include/sound/asound.h	/^struct sndrv_timer_status {$/;"	s
sndrv_timer_tread	./include/sound/asound.h	/^struct sndrv_timer_tread {$/;"	s
sndrv_xferi	./include/sound/asound.h	/^struct sndrv_xferi {$/;"	s
sndrv_xfern	./include/sound/asound.h	/^struct sndrv_xfern {$/;"	s
sndrv_xferv	./include/sound/asound.h	/^struct sndrv_xferv {$/;"	s
snoop_areas	./src/pcm/pcm_dsnoop.c	/^static void snoop_areas(snd_pcm_direct_t *dsnoop,$/;"	f	file:
snoop_timestamp	./src/pcm/pcm_dsnoop.c	/^static int snoop_timestamp(snd_pcm_t *pcm)$/;"	f	file:
socket	./src/control/control_shm.c	/^	int socket;$/;"	m	struct:__anon94	file:
socket	./src/pcm/pcm_shm.c	/^	int socket;$/;"	m	struct:__anon108	file:
socket_name	./src/pcm/pcm_direct.h	/^	char socket_name[256];			\/* name of communication socket *\/$/;"	m	struct:__anon123
soft_pedal	./test/midifile.h	68;"	d
softvol_convert_mono_vol	./src/pcm/pcm_softvol.c	/^static void softvol_convert_mono_vol(snd_pcm_softvol_t *svol,$/;"	f	file:
softvol_convert_stereo_vol	./src/pcm/pcm_softvol.c	/^static void softvol_convert_stereo_vol(snd_pcm_softvol_t *svol,$/;"	f	file:
softvol_free	./src/pcm/pcm_softvol.c	/^static void softvol_free(snd_pcm_softvol_t *svol)$/;"	f	file:
softvol_load_control	./src/pcm/pcm_softvol.c	/^static int softvol_load_control(snd_pcm_t *pcm, snd_pcm_softvol_t *svol,$/;"	f	file:
songpos_decode	./src/seq/seq_midi_event.c	/^static void songpos_decode(const snd_seq_event_t *ev, unsigned char *buf)$/;"	f	file:
songpos_event	./src/seq/seq_midi_event.c	/^static void songpos_event(snd_midi_event_t *dev, snd_seq_event_t *ev)$/;"	f	file:
sops	./modules/mixer/simple/sbase.h	/^	struct sm_elem_ops *sops;$/;"	m	struct:melem_sids	typeref:struct:melem_sids::sm_elem_ops
source	./include/seq_event.h	/^	snd_seq_addr_t source;		\/**< source address *\/$/;"	m	struct:snd_seq_event
source	./include/sound/asequencer.h	/^	struct sndrv_seq_addr source;	\/* source address *\/$/;"	m	struct:sndrv_seq_event	typeref:struct:sndrv_seq_event::sndrv_seq_addr
space	./include/sound/asound.h	/^	unsigned int space;		\/* W: count of element IDs to get *\/$/;"	m	struct:sndrv_ctl_elem_list
sparams	./src/pcm/pcm_extplug.c	/^	struct snd_ext_parm sparams[SND_PCM_EXTPLUG_HW_PARAMS];$/;"	m	struct:snd_pcm_extplug_priv	typeref:struct:snd_pcm_extplug_priv::snd_ext_parm	file:
spcm	./src/pcm/pcm_direct.h	/^	snd_pcm_t *spcm; 		\/* slave PCM handle *\/$/;"	m	struct:snd_pcm_direct
spdif_emphasis	./include/sound/hdsp.h	/^	unsigned char spdif_emphasis;$/;"	m	struct:_snd_hdsp_config_info
spdif_in	./include/sound/hdsp.h	/^	unsigned char spdif_in;$/;"	m	struct:_snd_hdsp_config_info
spdif_nonaudio	./include/sound/hdsp.h	/^	unsigned char spdif_nonaudio;$/;"	m	struct:_snd_hdsp_config_info
spdif_out	./include/sound/hdsp.h	/^	unsigned char spdif_out;$/;"	m	struct:_snd_hdsp_config_info
spdif_professional	./include/sound/hdsp.h	/^	unsigned char spdif_professional;$/;"	m	struct:_snd_hdsp_config_info
spdif_sample_rate	./include/sound/hdsp.h	/^	unsigned int spdif_sample_rate;$/;"	m	struct:_snd_hdsp_config_info
spdif_sync_check	./include/sound/hdsp.h	/^	unsigned char spdif_sync_check;$/;"	m	struct:_snd_hdsp_config_info
speed	./include/sound/hdspm.h	/^	uint8_t speed; \/* enum {ss, ds, qs} *\/$/;"	m	struct:hdspm_peak_rms
srate	./src/pcm/pcm_plug.c	/^	int srate;$/;"	m	struct:__anon145	file:
srate	./src/pcm/pcm_rate.c	/^	unsigned int srate;$/;"	m	struct:_snd_pcm_rate	file:
src_buf	./src/pcm/pcm_rate.c	/^	int16_t *src_buf;$/;"	m	struct:_snd_pcm_rate	file:
src_size	./src/pcm/pcm_route.c	/^	unsigned int src_size;$/;"	m	struct:__anon141	file:
srcs	./src/pcm/pcm_route.c	/^	snd_pcm_route_ttable_src_t* srcs;$/;"	m	struct:snd_pcm_route_ttable_dst	file:
ss	./include/sound/hdspm.h	/^	ss,$/;"	e	enum:hdspm_speed
sscape_bootblock	./include/sound/sscape_ioctl.h	/^struct sscape_bootblock$/;"	s
sscape_microcode	./include/sound/sscape_ioctl.h	/^struct sscape_microcode$/;"	s
start	./include/pcm.h	/^	void (*start)(snd_pcm_scope_t *scope);$/;"	m	struct:_snd_pcm_scope_ops
start	./include/pcm_ioplug.h	/^	int (*start)(snd_pcm_ioplug_t *io);$/;"	m	struct:snd_pcm_ioplug_callback
start	./src/pcm/pcm_local.h	/^	int (*start)(snd_pcm_t *pcm);$/;"	m	struct:__anon138
start_pending	./src/pcm/pcm_rate.c	/^	int start_pending; \/* start is triggered but not commited to slave *\/$/;"	m	struct:_snd_pcm_rate	file:
start_threshold	./include/sound/asound.h	/^	sndrv_pcm_uframes_t start_threshold;	\/* min hw_avail frames for automatic start *\/$/;"	m	struct:sndrv_pcm_sw_params
start_threshold	./src/pcm/pcm_direct.h	/^		unsigned int start_threshold;	$/;"	m	struct:__anon123::__anon125
start_threshold	./src/pcm/pcm_local.h	/^	snd_pcm_uframes_t start_threshold;$/;"	m	struct:_snd_pcm
start_threshold	./src/pcm/pcm_mmap_emul.c	/^	snd_pcm_uframes_t start_threshold;$/;"	m	struct:__anon139	file:
state	./include/pcm_ioplug.h	/^	snd_pcm_state_t state;		\/**< current PCM state; read-only *\/$/;"	m	struct:snd_pcm_ioplug
state	./include/sound/asound.h	/^	int state;			\/* RO: state - SNDRV_PCM_STATE_XXXX *\/$/;"	m	struct:sndrv_pcm_mmap_status
state	./include/sound/asound.h	/^	int state;			\/* stream state *\/$/;"	m	struct:sndrv_pcm_status
state	./include/sound/sb16_csp.h	/^	unsigned short state;		\/* state bits *\/$/;"	m	struct:snd_sb_csp_info
state	./src/pcm/pcm_direct.h	/^	snd_pcm_state_t state;$/;"	m	struct:snd_pcm_direct
state	./src/pcm/pcm_local.h	/^	snd_pcm_state_t (*state)(snd_pcm_t *pcm);$/;"	m	struct:__anon138
state	./src/pcm/pcm_null.c	/^	snd_pcm_state_t state;$/;"	m	struct:__anon132	file:
state	./src/pcm/pcm_share.c	/^	snd_pcm_state_t state;$/;"	m	struct:__anon119	file:
states	./src/pcm/pcm_adpcm.c	/^	snd_pcm_adpcm_state_t *states;$/;"	m	struct:__anon104	file:
status	./include/aserver.h	/^		snd_pcm_status_t status;$/;"	m	union:__anon53::__anon54
status	./include/control.h	/^	unsigned char status[24];	\/**< AES\/IEC958 channel status bits *\/$/;"	m	struct:snd_aes_iec958
status	./include/sound/asound.h	/^		struct sndrv_pcm_mmap_status status;$/;"	m	union:sndrv_pcm_sync_ptr::__anon23	typeref:struct:sndrv_pcm_sync_ptr::__anon23::sndrv_pcm_mmap_status
status	./include/sound/asound.h	/^	unsigned char status[24];	\/* AES\/IEC958 channel status bits *\/$/;"	m	struct:sndrv_aes_iec958
status	./src/pcm/pcm_iec958.c	/^	unsigned char status[24];$/;"	m	struct:snd_pcm_iec958	file:
status	./src/pcm/pcm_local.h	/^	int (*status)(snd_pcm_t *pcm, snd_pcm_status_t *status);$/;"	m	struct:__anon138
status	./src/rawmidi/rawmidi_local.h	/^	int (*status)(snd_rawmidi_t *rawmidi, snd_rawmidi_status_t *status);$/;"	m	struct:__anon99
status	./src/timer/timer_local.h	/^	int (*status)(snd_timer_query_t *timer, snd_timer_gstatus_t *info);$/;"	m	struct:__anon89
status	./src/timer/timer_local.h	/^	int (*status)(snd_timer_t *timer, snd_timer_status_t *status);$/;"	m	struct:__anon88
status2	./include/sound/hdspm.h	/^	int status2;$/;"	m	struct:hdspm_peak_rms
status_event	./src/seq/seq_midi_event.c	/^} status_event[] = {$/;"	v	typeref:struct:status_event_list_t	file:
status_event_list_t	./src/seq/seq_midi_event.c	/^static const struct status_event_list_t {$/;"	s	file:
step	./include/pcm.h	/^	unsigned int step;$/;"	m	struct:_snd_pcm_channel_area
step	./include/sound/asound.h	/^			long long step;		\/* R: step (0 variable) *\/$/;"	m	struct:sndrv_ctl_elem_info::__anon29::__anon31
step	./include/sound/asound.h	/^			long step;		\/* R: step (0 variable) *\/$/;"	m	struct:sndrv_ctl_elem_info::__anon29::__anon30
step	./include/sound/asound.h	/^	unsigned int step;		\/* samples distance in bits *\/$/;"	m	struct:sndrv_pcm_channel_info
step	./src/pcm/pcm_local.h	/^	unsigned int step;		\/* samples distance in bits *\/$/;"	m	struct:_snd_pcm_channel_info
step_idx	./src/pcm/pcm_plugin.h	/^	int step_idx;		\/* Previous StepSize lookup index *\/$/;"	m	struct:_snd_pcm_adpcm_state
stop	./include/pcm.h	/^	void (*stop)(snd_pcm_scope_t *scope);$/;"	m	struct:_snd_pcm_scope_ops
stop	./include/pcm_ioplug.h	/^	int (*stop)(snd_pcm_ioplug_t *io);$/;"	m	struct:snd_pcm_ioplug_callback
stop	./test/midiloop.c	/^int stop = 0;$/;"	v
stop	./test/rawmidi.c	/^int stop=0;$/;"	v
stop_threshold	./include/sound/asound.h	/^	sndrv_pcm_uframes_t stop_threshold;	\/* min avail frames for automatic stop *\/$/;"	m	struct:sndrv_pcm_sw_params
stop_threshold	./src/pcm/pcm_direct.h	/^		unsigned int stop_threshold;	$/;"	m	struct:__anon123::__anon125
stop_threshold	./src/pcm/pcm_local.h	/^	snd_pcm_uframes_t stop_threshold;$/;"	m	struct:_snd_pcm
stopped_areas	./src/pcm/pcm_local.h	/^	snd_pcm_channel_area_t *stopped_areas;$/;"	m	struct:_snd_pcm
str	./src/mixer/simple_none.c	/^	} str[2];$/;"	m	struct:_selem_none	typeref:struct:_selem_none::selem_str	file:
stream	./aserver/aserver.c	/^	int stream;$/;"	m	struct:client	file:
stream	./include/aserver.h	/^	unsigned char stream;$/;"	m	struct:__anon67
stream	./include/pcm_extplug.h	/^	snd_pcm_stream_t stream;$/;"	m	struct:snd_pcm_extplug
stream	./include/pcm_ioplug.h	/^	snd_pcm_stream_t stream;	\/**< stream direcion; read-only *\/	$/;"	m	struct:snd_pcm_ioplug
stream	./include/sound/asound.h	/^	int stream;			\/* RO\/WR (control): stream number *\/$/;"	m	struct:sndrv_pcm_info
stream	./include/sound/asound.h	/^	int stream;			\/* WR: stream *\/$/;"	m	struct:sndrv_rawmidi_info
stream	./include/sound/asound.h	/^	int stream;$/;"	m	struct:sndrv_rawmidi_params
stream	./include/sound/asound.h	/^	int stream;$/;"	m	struct:sndrv_rawmidi_status
stream	./src/control/namehint.c	/^	int stream;$/;"	m	struct:hint_list	file:
stream	./src/pcm/pcm_local.h	/^	snd_pcm_stream_t stream;$/;"	m	struct:_snd_pcm
stream	./src/rawmidi/rawmidi_local.h	/^	snd_rawmidi_stream_t stream;$/;"	m	struct:_snd_rawmidi
streams	./src/seq/seq_local.h	/^	int streams;$/;"	m	struct:_snd_seq
string	./src/conf.c	/^		char *string;$/;"	m	union:_snd_config::__anon85	file:
string_print	./src/conf.c	/^static void string_print(char *str, int id, snd_output_t *out)$/;"	f	file:
sub	./src/pcm/interval.c	/^static inline unsigned int sub(unsigned int a, unsigned int b)$/;"	f	file:
subcode	./include/control.h	/^	unsigned char subcode[147];	\/**< AES\/IEC958 subcode bits *\/$/;"	m	struct:snd_aes_iec958
subcode	./include/sound/asound.h	/^	unsigned char subcode[147];	\/* AES\/IEC958 subcode bits *\/$/;"	m	struct:sndrv_aes_iec958
subdevice	./include/sound/asound.h	/^	int subdevice;$/;"	m	struct:sndrv_timer_id
subdevice	./include/sound/asound.h	/^	unsigned int subdevice;		\/* RO\/WR (control): subdevice number *\/$/;"	m	struct:sndrv_pcm_info
subdevice	./include/sound/asound.h	/^	unsigned int subdevice;		\/* RO\/WR (control): subdevice number *\/$/;"	m	struct:sndrv_rawmidi_info
subdevice	./include/sound/asound.h	/^	unsigned int subdevice;		\/* subdevice (substream) number *\/$/;"	m	struct:sndrv_ctl_elem_id
subdevice	./include/sound/emu10k1.h	/^	unsigned int subdevice;		\/* subdevice (substream) number *\/$/;"	m	struct:__anon16
subdevice	./src/pcm/pcm_hw.c	/^	int card, device, subdevice;$/;"	m	struct:__anon107	file:
subdevice	./src/rawmidi/rawmidi_hw.c	/^	int card, device, subdevice;$/;"	m	struct:__anon100	file:
subdevices_avail	./include/sound/asound.h	/^	unsigned int subdevices_avail;$/;"	m	struct:sndrv_pcm_info
subdevices_avail	./include/sound/asound.h	/^	unsigned int subdevices_avail;$/;"	m	struct:sndrv_rawmidi_info
subdevices_count	./include/sound/asound.h	/^	unsigned int subdevices_count;$/;"	m	struct:sndrv_pcm_info
subdevices_count	./include/sound/asound.h	/^	unsigned int subdevices_count;$/;"	m	struct:sndrv_rawmidi_info
subformat	./include/pcm_extplug.h	/^	snd_pcm_subformat_t subformat;$/;"	m	struct:snd_pcm_extplug
subformat	./src/pcm/pcm_direct.h	/^		snd_pcm_subformat_t subformat;$/;"	m	struct:__anon123::__anon125
subformat	./src/pcm/pcm_local.h	/^	snd_pcm_subformat_t subformat;	\/* subformat *\/$/;"	m	struct:_snd_pcm
subname	./include/sound/asound.h	/^	unsigned char subname[32];	\/* name of active or selected subdevice *\/$/;"	m	struct:sndrv_rawmidi_info
subname	./include/sound/asound.h	/^	unsigned char subname[32];	\/* subdevice name *\/$/;"	m	struct:sndrv_pcm_info
subscribe_events	./include/aserver.h	/^		int subscribe_events;$/;"	m	union:__anon64::__anon65
subscribe_events	./include/control_external.h	/^	void (*subscribe_events)(snd_ctl_ext_t *ext, int subscribe);$/;"	m	struct:snd_ctl_ext_callback
subscribe_events	./src/control/control_local.h	/^	int (*subscribe_events)(snd_ctl_t *handle, int subscribe);$/;"	m	struct:_snd_ctl_ops
subscribe_port	./src/seq/seq_local.h	/^	int (*subscribe_port)(snd_seq_t *seq, snd_seq_port_subscribe_t * sub);$/;"	m	struct:__anon97
subscribed	./include/control_external.h	/^	int subscribed;			\/**< events subscribed; read-only *\/$/;"	m	struct:snd_ctl_ext
subset_of	./test/lsb/config.c	/^static int subset_of(snd_config_t *c1, snd_config_t *c2)$/;"	f	file:
substream	./include/sound/emu10k1.h	/^	unsigned int substream;		\/* substream number *\/$/;"	m	struct:__anon20
suf	./src/mixer/simple_none.c	/^static const struct suf {$/;"	s	file:
suffix	./src/mixer/simple_none.c	/^	const char *suffix;$/;"	m	struct:suf	file:
suffixes	./src/mixer/simple_none.c	/^} suffixes[] = {$/;"	v	typeref:struct:suf	file:
sum_buffer	./src/pcm/pcm_direct.h	/^			signed int *sum_buffer;		\/* shared sum buffer *\/$/;"	m	struct:snd_pcm_direct::__anon128::__anon129
sum_idx	./src/pcm/pcm_route.c	/^	enum {UINT32=0, UINT64=1, FLOAT=2} sum_idx;$/;"	m	struct:__anon141	typeref:enum:__anon141::__anon142	file:
sum_t	./src/pcm/pcm_route.c	/^} sum_t;$/;"	t	typeref:union:__anon143	file:
suspended_state	./include/sound/asound.h	/^	int suspended_state;		\/* RO: suspended stream state *\/$/;"	m	struct:sndrv_pcm_mmap_status
suspended_state	./include/sound/asound.h	/^	int suspended_state;		\/* suspended stream state *\/$/;"	m	struct:sndrv_pcm_status
sustain	./include/sound/asound_fm.h	/^	unsigned char sustain;		\/* 4 bits: sustain level *\/$/;"	m	struct:snd_dm_fm_voice
sustenuto	./test/midifile.h	67;"	d
sw	./src/mixer/simple_none.c	/^		unsigned int sw;$/;"	m	struct:_selem_none::selem_str	file:
sw_params	./include/aserver.h	/^		snd_pcm_sw_params_t sw_params;$/;"	m	union:__anon53::__anon54
sw_params	./include/pcm_ioplug.h	/^	int (*sw_params)(snd_pcm_ioplug_t *io, snd_pcm_sw_params_t *params);$/;"	m	struct:snd_pcm_ioplug_callback
sw_params	./src/pcm/pcm_local.h	/^	int (*sw_params)(snd_pcm_t *pcm, snd_pcm_sw_params_t *params);$/;"	m	struct:__anon137
sw_params	./src/pcm/pcm_rate.c	/^	snd_pcm_sw_params_t sw_params;$/;"	m	struct:_snd_pcm_rate	file:
sw_params	./src/pcm/pcm_share.c	/^	snd_pcm_sw_params_t sw_params;$/;"	m	struct:__anon118	file:
switch_device	./src/ucm/main.c	/^static int switch_device(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
switch_modifier	./src/ucm/main.c	/^static int switch_modifier(snd_use_case_mgr_t *uc_mgr,$/;"	f	file:
sx24	./src/pcm/plugin_ops.h	/^static inline u_int32_t sx24(u_int32_t x)$/;"	f
sx24s	./src/pcm/plugin_ops.h	/^static inline u_int32_t sx24s(u_int32_t x)$/;"	f
symbol_version	./include/alsa-symbols.h	33;"	d
symbol_version	./include/alsa-symbols.h	40;"	d
sync	./include/sound/asound.h	/^	union sndrv_pcm_sync_id sync;	\/* hardware synchronization ID *\/$/;"	m	struct:sndrv_pcm_info	typeref:union:sndrv_pcm_info::sndrv_pcm_sync_id
sync_in	./include/sound/hdspm.h	/^			uint8_t sync_in; \/* enum hdspm_sync *\/$/;"	m	struct:hdspm_status::__anon8::__anon9
sync_madi	./include/sound/hdspm.h	/^			uint8_t sync_madi; \/* enum hdspm_sync *\/$/;"	m	struct:hdspm_status::__anon8::__anon9
sync_ptr	./src/pcm/pcm_direct.h	/^	int (*sync_ptr)(snd_pcm_t *pcm);$/;"	m	struct:snd_pcm_direct
sync_ptr	./src/pcm/pcm_hw.c	/^	struct sndrv_pcm_sync_ptr *sync_ptr;$/;"	m	struct:__anon107	typeref:struct:__anon107::sndrv_pcm_sync_ptr	file:
sync_ptr	./src/pcm/pcm_hw.c	/^static inline int sync_ptr(snd_pcm_hw_t *hw, unsigned int flags)$/;"	f	file:
sync_ptr1	./src/pcm/pcm_hw.c	/^static int sync_ptr1(snd_pcm_hw_t *hw, unsigned int flags)$/;"	f	file:
sync_ptr_ioctl	./src/pcm/pcm_hw.c	/^	int sync_ptr_ioctl;$/;"	m	struct:__anon107	file:
sync_slave_read	./src/pcm/pcm_mmap_emul.c	/^sync_slave_read(snd_pcm_t *pcm)$/;"	f	file:
sync_slave_write	./src/pcm/pcm_mmap_emul.c	/^sync_slave_write(snd_pcm_t *pcm)$/;"	f	file:
sync_tco	./include/sound/hdspm.h	/^			uint8_t sync_tco; \/* enum hdspm_sync *\/$/;"	m	struct:hdspm_status::__anon8::__anon9
sync_wc	./include/sound/hdspm.h	/^			uint8_t sync_wc; \/* enum hdspm_sync *\/$/;"	m	struct:hdspm_status::__anon8::__anon9
syncsource_madi	./include/sound/hdspm.h	/^	syncsource_madi = 1,$/;"	e	enum:hdspm_syncsource
syncsource_none	./include/sound/hdspm.h	/^	syncsource_none = 4$/;"	e	enum:hdspm_syncsource
syncsource_sync	./include/sound/hdspm.h	/^	syncsource_sync = 3,$/;"	e	enum:hdspm_syncsource
syncsource_tco	./include/sound/hdspm.h	/^	syncsource_tco = 2,$/;"	e	enum:hdspm_syncsource
syncsource_wc	./include/sound/hdspm.h	/^	syncsource_wc = 0,$/;"	e	enum:hdspm_syncsource
synth_voices	./include/sound/asequencer.h	/^	int synth_voices;		\/* voices per SYNTH port *\/$/;"	m	struct:sndrv_seq_port_info
sysex	./test/midifile.c	/^sysex ()$/;"	f	file:
system_clock_mode	./include/sound/hdsp.h	/^	unsigned char system_clock_mode;$/;"	m	struct:_snd_hdsp_config_info
system_clock_mode	./include/sound/hdspm.h	/^	unsigned char system_clock_mode;$/;"	m	struct:hdspm_config
system_exclusive	./test/midifile.c	55;"	d	file:
system_exclusive	./test/midifile.h	61;"	d
system_info	./src/seq/seq_local.h	/^	int (*system_info)(snd_seq_t *seq, snd_seq_system_info_t * info);$/;"	m	struct:__anon97
system_info	./test/seq.c	/^void system_info(snd_seq_t *handle)$/;"	f
system_sample_rate	./include/sound/hdsp.h	/^	unsigned int system_sample_rate;$/;"	m	struct:_snd_hdsp_config_info
system_sample_rate	./include/sound/hdspm.h	/^	unsigned int system_sample_rate;$/;"	m	struct:hdspm_config
table	./include/search.h	/^    struct _ENTRY *table;$/;"	m	struct:hsearch_data	typeref:struct:hsearch_data::_ENTRY
tag	./include/seq_event.h	/^	unsigned char tag;		\/**< tag *\/$/;"	m	struct:snd_seq_event
tag	./include/sound/asequencer.h	/^	char  tag;	\/* Tag for REMOVE_TAG *\/$/;"	m	struct:sndrv_seq_remove_events
tag	./include/sound/asequencer.h	/^	char tag;$/;"	m	struct:sndrv_seq_event
tempo	./include/sound/asequencer.h	/^	unsigned int tempo;		\/* current tempo, us\/tick *\/$/;"	m	struct:sndrv_seq_queue_tempo
tempo_change_time	./test/midifile.c	/^static unsigned long tempo_change_time = 0;$/;"	v	file:
tempo_history	./test/midifile.c	/^static unsigned long tempo_history[MAX_HISTORY];$/;"	v	file:
tempo_history_count	./test/midifile.c	/^static int tempo_history_count = 0;$/;"	v	file:
tempo_history_time	./test/midifile.c	/^static unsigned long tempo_history_time[MAX_HISTORY];$/;"	v	file:
test_add	./test/lsb/config.c	/^static void test_add(void)$/;"	f	file:
test_copy	./test/lsb/config.c	/^static void test_copy(void)$/;"	f	file:
test_decode	./test/lsb/midi_event.c	/^static void test_decode(void)$/;"	f	file:
test_delete	./test/lsb/config.c	/^static void test_delete(void)$/;"	f	file:
test_encode	./test/lsb/midi_event.c	/^static void test_encode(void)$/;"	f	file:
test_encode_byte	./test/lsb/midi_event.c	/^static void test_encode_byte(void)$/;"	f	file:
test_for_each	./test/lsb/config.c	/^static void test_for_each(void)$/;"	f	file:
test_get_ascii	./test/lsb/config.c	/^static void test_get_ascii(void)$/;"	f	file:
test_get_id	./test/lsb/config.c	/^static void test_get_id(void)$/;"	f	file:
test_get_integer	./test/lsb/config.c	485;"	d	file:
test_get_integer64	./test/lsb/config.c	486;"	d	file:
test_get_string	./test/lsb/config.c	487;"	d	file:
test_get_type	./test/lsb/config.c	/^static void test_get_type(void)$/;"	f	file:
test_imake_integer	./test/lsb/config.c	/^static void test_imake_integer(void)$/;"	f	file:
test_imake_integer64	./test/lsb/config.c	/^static void test_imake_integer64(void)$/;"	f	file:
test_imake_string	./test/lsb/config.c	/^static void test_imake_string(void)$/;"	f	file:
test_init	./test/lsb/midi_event.c	/^static void test_init(void)$/;"	f	file:
test_iterators	./test/lsb/config.c	/^static void test_iterators(void)$/;"	f	file:
test_load	./test/lsb/config.c	/^static void test_load(void)$/;"	f	file:
test_make_compound	./test/lsb/config.c	/^static void test_make_compound(void)$/;"	f	file:
test_make_integer	./test/lsb/config.c	/^static void test_make_integer(void)$/;"	f	file:
test_make_integer64	./test/lsb/config.c	/^static void test_make_integer64(void)$/;"	f	file:
test_make_string	./test/lsb/config.c	/^static void test_make_string(void)$/;"	f	file:
test_reset_decode	./test/lsb/midi_event.c	/^static void test_reset_decode(void)$/;"	f	file:
test_reset_encode	./test/lsb/midi_event.c	/^static void test_reset_encode(void)$/;"	f	file:
test_save	./test/lsb/config.c	/^static void test_save(void)$/;"	f	file:
test_search	./test/lsb/config.c	/^static void test_search(void)$/;"	f	file:
test_searchv	./test/lsb/config.c	/^static void test_searchv(void)$/;"	f	file:
test_set_ascii	./test/lsb/config.c	/^static void test_set_ascii(void)$/;"	f	file:
test_set_integer	./test/lsb/config.c	/^static void test_set_integer(void)$/;"	f	file:
test_set_integer64	./test/lsb/config.c	/^static void test_set_integer64(void)$/;"	f	file:
test_set_string	./test/lsb/config.c	/^static void test_set_string(void)$/;"	f	file:
test_top	./test/lsb/config.c	/^static void test_top(void)$/;"	f	file:
test_update	./test/lsb/config.c	/^static void test_update(void)$/;"	f	file:
text_event	./test/midifile.h	95;"	d
thistoken	./src/alisp/alisp_local.h	/^	int thistoken;$/;"	m	struct:alisp_instance
thread	./src/pcm/pcm_meter.c	/^	pthread_t thread;$/;"	m	struct:_snd_pcm_meter	file:
thread	./src/pcm/pcm_share.c	/^	pthread_t thread;$/;"	m	struct:__anon118	file:
tick	./include/seq_event.h	/^	snd_seq_tick_time_t tick;	\/**< tick-time *\/$/;"	m	union:snd_seq_timestamp
tick	./include/sound/asequencer.h	/^	sndrv_seq_tick_time_t tick;	\/* current tick *\/$/;"	m	struct:sndrv_seq_queue_status
tick	./include/sound/asequencer.h	/^	sndrv_seq_tick_time_t tick;$/;"	m	union:sndrv_seq_timestamp
tick2time	./test/playmidi1.c	/^static void tick2time(snd_seq_real_time_t * tm, int tick)$/;"	f	file:
tick2time_dbl	./test/playmidi1.c	/^static inline double tick2time_dbl(int tick)$/;"	f	file:
tick_offset	./test/playmidi1.c	/^static int tick_offset = 0;$/;"	v	file:
ticks	./include/sound/asound.h	/^	unsigned int ticks;		\/* requested resolution in ticks *\/$/;"	m	struct:sndrv_timer_params
ticks	./include/sound/asound.h	/^	unsigned int ticks;$/;"	m	struct:sndrv_timer_read
ticks	./include/timer.h	/^        unsigned int ticks;		\/**< count of happened ticks *\/$/;"	m	struct:_snd_timer_read
tid	./include/sound/asound.h	/^	struct sndrv_timer_id tid;	\/* requested timer ID *\/$/;"	m	struct:sndrv_timer_ginfo	typeref:struct:sndrv_timer_ginfo::sndrv_timer_id
tid	./include/sound/asound.h	/^	struct sndrv_timer_id tid;	\/* requested timer ID *\/$/;"	m	struct:sndrv_timer_gparams	typeref:struct:sndrv_timer_gparams::sndrv_timer_id
tid	./include/sound/asound.h	/^	struct sndrv_timer_id tid;	\/* requested timer ID *\/$/;"	m	struct:sndrv_timer_gstatus	typeref:struct:sndrv_timer_gstatus::sndrv_timer_id
time	./include/seq_event.h	/^		snd_seq_timestamp_t time;	\/**< time *\/$/;"	m	union:snd_seq_ev_queue_control::__anon45
time	./include/seq_event.h	/^		snd_seq_timestamp_t time;	\/**< timestamp *\/$/;"	m	union:snd_seq_event::__anon46
time	./include/seq_event.h	/^	snd_seq_timestamp_t time;	\/**< schedule time *\/$/;"	m	struct:snd_seq_event
time	./include/seq_event.h	/^	struct snd_seq_real_time time;	\/**< real-time *\/$/;"	m	union:snd_seq_timestamp	typeref:struct:snd_seq_timestamp::snd_seq_real_time
time	./include/sound/asequencer.h	/^		union sndrv_seq_timestamp time;	\/* time *\/$/;"	m	union:sndrv_seq_ev_queue_control::__anon10	typeref:union:sndrv_seq_ev_queue_control::__anon10::sndrv_seq_timestamp
time	./include/sound/asequencer.h	/^		union sndrv_seq_timestamp time;$/;"	m	union:sndrv_seq_event::__anon11	typeref:union:sndrv_seq_event::__anon11::sndrv_seq_timestamp
time	./include/sound/asequencer.h	/^	struct sndrv_seq_real_time time; \/* current time *\/$/;"	m	struct:sndrv_seq_queue_status	typeref:struct:sndrv_seq_queue_status::sndrv_seq_real_time
time	./include/sound/asequencer.h	/^	struct sndrv_seq_real_time time;$/;"	m	union:sndrv_seq_timestamp	typeref:struct:sndrv_seq_timestamp::sndrv_seq_real_time
time	./include/sound/asequencer.h	/^	union sndrv_seq_timestamp time;	\/* schedule time *\/$/;"	m	struct:sndrv_seq_event	typeref:union:sndrv_seq_event::sndrv_seq_timestamp
time	./include/sound/asequencer.h	/^	union sndrv_seq_timestamp time;$/;"	m	struct:sndrv_seq_remove_events	typeref:union:sndrv_seq_remove_events::sndrv_seq_timestamp
time_queue	./include/sound/asequencer.h	/^	unsigned char time_queue;	\/* queue # for timestamping *\/$/;"	m	struct:sndrv_seq_port_info
time_signature	./test/midifile.h	106;"	d
timediff	./test/latency.c	/^long timediff(snd_timestamp_t t1, snd_timestamp_t t2)$/;"	f
timediff	./test/midiloop.c	/^long long timediff(struct timeval t1, struct timeval t2)$/;"	f
timer	./include/local.h	/^		snd_timer_t *timer;$/;"	m	union:_snd_async_handler::__anon82
timer	./src/pcm/pcm_direct.h	/^	snd_timer_t *timer; 		\/* timer used as poll_fd *\/$/;"	m	struct:snd_pcm_direct
timer_events	./src/pcm/pcm_direct.h	/^	unsigned int timer_events;$/;"	m	struct:snd_pcm_direct
timer_fd	./src/pcm/pcm_direct.h	/^	struct pollfd timer_fd;$/;"	m	struct:snd_pcm_direct	typeref:struct:snd_pcm_direct::pollfd
timer_need_poll	./src/pcm/pcm_direct.h	/^	int timer_need_poll: 1;$/;"	m	struct:snd_pcm_direct
timespec	./include/global.h	/^struct timespec {$/;"	s
timeval	./include/global.h	/^struct timeval {$/;"	s
tlv	./include/sound/asound.h	/^        unsigned int tlv[0];    \/* first TLV *\/$/;"	m	struct:sndrv_ctl_tlv
tlv	./include/sound/emu10k1.h	/^	unsigned int *tlv;$/;"	m	struct:__anon17
tlv	./src/control/tlv.c	/^	unsigned int *tlv;$/;"	m	struct:tlv_info	file:
tlv_info	./src/control/tlv.c	/^struct tlv_info {$/;"	s	file:
tmpbuf	./src/conf.c	/^	char tmpbuf[LOCAL_STR_BUFSIZE];$/;"	m	struct:local_string	file:
tmpbuf	./src/seq/seq_local.h	/^	snd_seq_event_t *tmpbuf;	\/* temporary event for extracted event *\/$/;"	m	struct:_snd_seq
tmpbufsize	./src/seq/seq_local.h	/^	size_t tmpbufsize;		\/* size of errbuf *\/$/;"	m	struct:_snd_seq
to16bit	./test/midifile.c	/^to16bit (c1, c2)$/;"	f	file:
to32bit	./test/midifile.c	/^to32bit (int c1, int c2, int c3, int c4)$/;"	f	file:
to_user	./src/mixer/simple_none.c	/^static long to_user(selem_none_t *s, int dir, selem_ctl_t *c, long value)$/;"	f	file:
token_buffer	./src/alisp/alisp_local.h	/^	char *token_buffer;$/;"	m	struct:alisp_instance
token_buffer_max	./src/alisp/alisp_local.h	/^	int token_buffer_max;$/;"	m	struct:alisp_instance
tomtom	./include/sound/asound_fm.h	/^	unsigned char tomtom;$/;"	m	struct:snd_dm_fm_params
top	./src/pcm/scopes/level.c	/^	int top;$/;"	m	struct:_snd_pcm_scope_level	file:
tram_addr_map	./include/sound/emu10k1.h	/^	uint32_t *tram_addr_map;	\/* map initializers *\/$/;"	m	struct:__anon18
tram_data_map	./include/sound/emu10k1.h	/^	uint32_t *tram_data_map;	\/* data initializers *\/$/;"	m	struct:__anon18
tram_start	./include/sound/emu10k1.h	/^	unsigned int tram_start;	\/* ring buffer position in TRAM (in samples) *\/$/;"	m	struct:__anon20
tram_valid	./include/sound/emu10k1.h	/^	unsigned long tram_valid[0x100\/(sizeof(unsigned long)*8)]; \/* bitmask of valid initializers *\/$/;"	m	struct:__anon18
transfer	./include/pcm_extplug.h	/^	snd_pcm_sframes_t (*transfer)(snd_pcm_extplug_t *ext,$/;"	m	struct:snd_pcm_extplug_callback
transfer	./include/pcm_ioplug.h	/^	snd_pcm_sframes_t (*transfer)(snd_pcm_ioplug_t *io,$/;"	m	struct:snd_pcm_ioplug_callback
transfer_loop	./test/pcm.c	/^	int (*transfer_loop)(snd_pcm_t *handle,$/;"	m	struct:transfer_method	file:
transfer_method	./test/pcm.c	/^struct transfer_method {$/;"	s	file:
transfer_methods	./test/pcm.c	/^static struct transfer_method transfer_methods[] = {$/;"	v	typeref:struct:transfer_method	file:
transition_list	./src/ucm/ucm_local.h	/^	struct list_head transition_list;$/;"	m	struct:transition_sequence	typeref:struct:transition_sequence::list_head
transition_list	./src/ucm/ucm_local.h	/^	struct list_head transition_list;$/;"	m	struct:use_case_device	typeref:struct:use_case_device::list_head
transition_list	./src/ucm/ucm_local.h	/^	struct list_head transition_list;$/;"	m	struct:use_case_modifier	typeref:struct:use_case_modifier::list_head
transition_list	./src/ucm/ucm_local.h	/^	struct list_head transition_list;$/;"	m	struct:use_case_verb	typeref:struct:use_case_verb::list_head
transition_sequence	./src/ucm/ucm_local.h	/^struct transition_sequence {$/;"	s
translation	./include/sound/emu10k1.h	/^	unsigned int translation;	\/* translation type (EMU10K1_GPR_TRANSLATION*) *\/$/;"	m	struct:__anon17
transport	./aserver/aserver.c	/^	} transport;$/;"	m	struct:client	typeref:union:client::__anon5	file:
transport_ops_t	./aserver/aserver.c	/^} transport_ops_t;$/;"	t	typeref:struct:__anon1	file:
transport_type	./aserver/aserver.c	/^	int transport_type;$/;"	m	struct:client	file:
transport_type	./include/aserver.h	/^	unsigned char transport_type;$/;"	m	struct:__anon67
tread	./src/pcm/pcm_direct.h	/^	int tread: 1;$/;"	m	struct:snd_pcm_direct
tremolo_depth	./test/midifile.h	76;"	d
trigger_tstamp	./include/sound/asound.h	/^	struct timespec trigger_tstamp;	\/* time when stream was started\/stopped\/paused *\/$/;"	m	struct:sndrv_pcm_status	typeref:struct:sndrv_pcm_status::timespec
trigger_tstamp	./src/pcm/pcm_direct.h	/^	snd_htimestamp_t trigger_tstamp;$/;"	m	struct:snd_pcm_direct
trigger_tstamp	./src/pcm/pcm_ioplug.c	/^	snd_htimestamp_t trigger_tstamp;$/;"	m	struct:snd_pcm_ioplug_priv	file:
trigger_tstamp	./src/pcm/pcm_null.c	/^	snd_htimestamp_t trigger_tstamp;$/;"	m	struct:__anon132	file:
trigger_tstamp	./src/pcm/pcm_rate.c	/^	snd_htimestamp_t trigger_tstamp;$/;"	m	struct:_snd_pcm_rate	file:
trigger_tstamp	./src/pcm/pcm_share.c	/^	snd_htimestamp_t trigger_tstamp;$/;"	m	struct:__anon119	file:
trunc	./src/pcm/pcm_file.c	/^	int trunc;$/;"	m	struct:__anon121	file:
try_config	./src/control/namehint.c	/^static int try_config(struct hint_list *list,$/;"	f	file:
try_open	./src/mixer/simple_abst.c	/^static int try_open(snd_mixer_class_t *class, const char *lib)$/;"	f	file:
try_open_full	./src/mixer/simple_abst.c	/^static int try_open_full(snd_mixer_class_t *class, snd_mixer_t *mixer,$/;"	f	file:
tstamp	./include/sound/asound.h	/^	struct timespec tstamp;		\/* Timestamp *\/$/;"	m	struct:sndrv_pcm_mmap_status	typeref:struct:sndrv_pcm_mmap_status::timespec
tstamp	./include/sound/asound.h	/^	struct timespec tstamp;		\/* Timestamp *\/$/;"	m	struct:sndrv_rawmidi_status	typeref:struct:sndrv_rawmidi_status::timespec
tstamp	./include/sound/asound.h	/^	struct timespec tstamp;		\/* Timestamp - last update *\/$/;"	m	struct:sndrv_timer_status	typeref:struct:sndrv_timer_status::timespec
tstamp	./include/sound/asound.h	/^	struct timespec tstamp;		\/* reference timestamp *\/$/;"	m	struct:sndrv_pcm_status	typeref:struct:sndrv_pcm_status::timespec
tstamp	./include/sound/asound.h	/^	struct timespec tstamp;$/;"	m	struct:sndrv_ctl_elem_value	typeref:struct:sndrv_ctl_elem_value::timespec
tstamp	./include/sound/asound.h	/^	struct timespec tstamp;$/;"	m	struct:sndrv_timer_tread	typeref:struct:sndrv_timer_tread::timespec
tstamp	./include/timer.h	/^	snd_htimestamp_t tstamp;	\/**< Time stamp of each event *\/$/;"	m	struct:_snd_timer_tread
tstamp_mode	./include/sound/asound.h	/^	int tstamp_mode;			\/* timestamp mode *\/$/;"	m	struct:sndrv_pcm_sw_params
tstamp_mode	./src/pcm/pcm_direct.h	/^		snd_pcm_tstamp_t tstamp_mode;$/;"	m	struct:__anon123::__anon125
tstamp_mode	./src/pcm/pcm_local.h	/^	snd_pcm_tstamp_t tstamp_mode;	\/* timestamp mode *\/$/;"	m	struct:_snd_pcm
tt_cused	./src/pcm/pcm_plug.c	/^	unsigned int tt_ssize, tt_cused, tt_sused;$/;"	m	struct:__anon145	file:
tt_ssize	./src/pcm/pcm_plug.c	/^	unsigned int tt_ssize, tt_cused, tt_sused;$/;"	m	struct:__anon145	file:
tt_sused	./src/pcm/pcm_plug.c	/^	unsigned int tt_ssize, tt_cused, tt_sused;$/;"	m	struct:__anon145	file:
ttable	./src/pcm/pcm_plug.c	/^	snd_pcm_route_ttable_entry_t *ttable;$/;"	m	struct:__anon145	file:
ttable_last	./src/pcm/pcm_plug.c	/^	int ttable_ok, ttable_last;$/;"	m	struct:__anon145	file:
ttable_ok	./src/pcm/pcm_plug.c	/^	int ttable_ok, ttable_last;$/;"	m	struct:__anon145	file:
tv_nsec	./include/global.h	/^	long		tv_nsec;	\/* nanoseconds *\/$/;"	m	struct:timespec
tv_nsec	./include/seq_event.h	/^	unsigned int tv_nsec;		\/**< nanoseconds *\/$/;"	m	struct:snd_seq_real_time
tv_nsec	./include/sound/asequencer.h	/^	unsigned int tv_nsec;	\/* nanoseconds *\/$/;"	m	struct:sndrv_seq_real_time
tv_sec	./include/global.h	/^	time_t		tv_sec;		\/* seconds *\/$/;"	m	struct:timespec
tv_sec	./include/global.h	/^	time_t		tv_sec;		\/* seconds *\/$/;"	m	struct:timeval
tv_sec	./include/seq_event.h	/^	unsigned int tv_sec;		\/**< seconds *\/$/;"	m	struct:snd_seq_real_time
tv_sec	./include/sound/asequencer.h	/^	unsigned int tv_sec;	\/* seconds *\/$/;"	m	struct:sndrv_seq_real_time
tv_usec	./include/global.h	/^	long		tv_usec;	\/* microseconds *\/$/;"	m	struct:timeval
two_param_ctrl_event	./src/seq/seq_midi_event.c	/^static void two_param_ctrl_event(snd_midi_event_t *dev, snd_seq_event_t *ev)$/;"	f	file:
two_param_decode	./src/seq/seq_midi_event.c	/^static void two_param_decode(const snd_seq_event_t *ev, unsigned char *buf)$/;"	f	file:
type	./include/local.h	/^	} type;$/;"	m	struct:_snd_async_handler	typeref:enum:_snd_async_handler::__anon81
type	./include/seq_event.h	/^	snd_seq_event_type_t type;	\/**< event type *\/$/;"	m	struct:snd_seq_event
type	./include/sound/asequencer.h	/^	int  type;	\/* For REMOVE_EVENT_TYPE *\/$/;"	m	struct:sndrv_seq_remove_events
type	./include/sound/asequencer.h	/^	int type;			\/* client type *\/$/;"	m	struct:sndrv_seq_client_info
type	./include/sound/asequencer.h	/^	int type;			\/* source timer type *\/$/;"	m	struct:sndrv_seq_queue_timer
type	./include/sound/asequencer.h	/^	int type;		\/* READ or WRITE *\/$/;"	m	struct:sndrv_seq_query_subs
type	./include/sound/asequencer.h	/^	sndrv_seq_event_type_t type;	\/* event type *\/$/;"	m	struct:sndrv_seq_event
type	./include/sound/asequencer.h	/^	unsigned int type;		\/* port type bits *\/$/;"	m	struct:sndrv_seq_port_info
type	./include/sound/asound.h	/^	int type;				\/* event type - SNDRV_CTL_EVENT_* *\/$/;"	m	struct:sndrv_ctl_event
type	./include/sound/asound.h	/^	int type;			\/* R: value type - SNDRV_CTL_ELEM_TYPE_* *\/$/;"	m	struct:sndrv_ctl_elem_info
type	./src/conf.c	/^	snd_config_type_t type;$/;"	m	struct:_snd_config	file:
type	./src/control/control_local.h	/^	snd_ctl_type_t type;$/;"	m	struct:_snd_ctl
type	./src/hwdep/hwdep_local.h	/^	snd_hwdep_type_t type;$/;"	m	struct:_snd_hwdep
type	./src/input.c	/^	snd_input_type_t type;$/;"	m	struct:_snd_input	file:
type	./src/mixer/mixer_local.h	/^	snd_mixer_elem_type_t type;$/;"	m	struct:_snd_mixer_elem
type	./src/mixer/simple_none.c	/^	selem_ctl_type_t type;$/;"	m	struct:suf	file:
type	./src/mixer/simple_none.c	/^	snd_ctl_elem_type_t type;$/;"	m	struct:_selem_ctl	file:
type	./src/output.c	/^	snd_output_type_t type;$/;"	m	struct:_snd_output	file:
type	./src/pcm/pcm_direct.h	/^	snd_pcm_type_t type;			\/* PCM type (currently only hw) *\/$/;"	m	struct:__anon123
type	./src/pcm/pcm_direct.h	/^	snd_pcm_type_t type;		\/* type (dmix, dsnoop, dshare) *\/$/;"	m	struct:snd_pcm_direct
type	./src/pcm/pcm_local.h	/^	enum { SND_PCM_AREA_SHM, SND_PCM_AREA_MMAP, SND_PCM_AREA_LOCAL } type;$/;"	m	struct:_snd_pcm_channel_info	typeref:enum:_snd_pcm_channel_info::__anon133
type	./src/pcm/pcm_local.h	/^	snd_pcm_type_t type;$/;"	m	struct:_snd_pcm
type	./src/rawmidi/rawmidi_local.h	/^	snd_rawmidi_type_t type;$/;"	m	struct:_snd_rawmidi
type	./src/seq/seq_local.h	/^	snd_seq_type_t type;$/;"	m	struct:_snd_seq
type	./src/seq/seq_midi_event.c	/^	int type;	\/* current event type *\/$/;"	m	struct:snd_midi_event	file:
type	./src/timer/timer_local.h	/^	snd_timer_type_t type;$/;"	m	struct:_snd_timer
type	./src/timer/timer_local.h	/^	snd_timer_type_t type;$/;"	m	struct:_snd_timer_query
type	./src/ucm/ucm_local.h	/^	unsigned int type;$/;"	m	struct:sequence_element
type_refs	./src/alisp/alisp_local.h	/^	unsigned int	type_refs;	\/* type and count of references *\/$/;"	m	struct:alisp_object
u	./include/aserver.h	/^	} u;$/;"	m	struct:__anon53	typeref:union:__anon53::__anon54
u	./include/aserver.h	/^	} u;$/;"	m	struct:__anon64	typeref:union:__anon64::__anon65
u	./include/local.h	/^	} u;$/;"	m	struct:_snd_async_handler	typeref:union:_snd_async_handler::__anon82
u	./include/sound/asequencer.h	/^	} u;$/;"	m	struct:sndrv_seq_queue_timer	typeref:union:sndrv_seq_queue_timer::__anon12
u	./src/conf.c	/^	} u;$/;"	m	struct:_snd_config	typeref:union:_snd_config::__anon85	file:
u	./src/pcm/pcm_direct.h	/^	} u;$/;"	m	struct:__anon123	typeref:union:__anon123::__anon126
u	./src/pcm/pcm_direct.h	/^	} u;$/;"	m	struct:snd_pcm_direct	typeref:union:snd_pcm_direct::__anon128
u	./src/pcm/pcm_local.h	/^	} u;$/;"	m	struct:_snd_pcm_channel_info	typeref:union:_snd_pcm_channel_info::__anon134
uc_dbg	./src/ucm/ucm_local.h	194;"	d
uc_dbg	./src/ucm/ucm_local.h	196;"	d
uc_error	./src/ucm/ucm_local.h	191;"	d
uc_mgr_config_load	./src/ucm/utils.c	/^int uc_mgr_config_load(const char *file, snd_config_t **cfg)$/;"	f
uc_mgr_error	./src/ucm/utils.c	/^void uc_mgr_error(const char *fmt,...)$/;"	f
uc_mgr_free	./src/ucm/utils.c	/^void uc_mgr_free(snd_use_case_mgr_t *uc_mgr)$/;"	f
uc_mgr_free_dev_list	./src/ucm/utils.c	/^void uc_mgr_free_dev_list(struct list_head *base)$/;"	f
uc_mgr_free_device	./src/ucm/utils.c	/^void uc_mgr_free_device(struct list_head *base)$/;"	f
uc_mgr_free_modifier	./src/ucm/utils.c	/^void uc_mgr_free_modifier(struct list_head *base)$/;"	f
uc_mgr_free_sequence	./src/ucm/utils.c	/^void uc_mgr_free_sequence(struct list_head *base)$/;"	f
uc_mgr_free_sequence_element	./src/ucm/utils.c	/^void uc_mgr_free_sequence_element(struct sequence_element *seq)$/;"	f
uc_mgr_free_transition	./src/ucm/utils.c	/^void uc_mgr_free_transition(struct list_head *base)$/;"	f
uc_mgr_free_transition_element	./src/ucm/utils.c	/^void uc_mgr_free_transition_element(struct transition_sequence *tseq)$/;"	f
uc_mgr_free_value	./src/ucm/utils.c	/^void uc_mgr_free_value(struct list_head *base)$/;"	f
uc_mgr_free_verb	./src/ucm/utils.c	/^void uc_mgr_free_verb(snd_use_case_mgr_t *uc_mgr)$/;"	f
uc_mgr_import_master_config	./src/ucm/parser.c	/^int uc_mgr_import_master_config(snd_use_case_mgr_t *uc_mgr)$/;"	f
uc_mgr_scan_master_configs	./src/ucm/parser.c	/^int uc_mgr_scan_master_configs(const char **_list[])$/;"	f
uc_mgr_stdout	./src/ucm/utils.c	/^void uc_mgr_stdout(const char *fmt,...)$/;"	f
ucm_value	./src/ucm/ucm_local.h	/^struct ucm_value {$/;"	s
ulaw_to_s16	./src/pcm/pcm_mulaw.c	/^static int ulaw_to_s16(unsigned char u_val)$/;"	f	file:
undo_read	./src/pcm/pcm_plugin.h	/^	snd_pcm_slave_xfer_areas_undo_func_t undo_read;$/;"	m	struct:__anon106
undo_write	./src/pcm/pcm_plugin.h	/^	snd_pcm_slave_xfer_areas_undo_func_t undo_write;$/;"	m	struct:__anon106
unget	./src/conf.c	/^	int unget;$/;"	m	struct:__anon87	file:
unget_char	./src/conf.c	/^static void unget_char(int c, input_t *input)$/;"	f	file:
ungetch	./src/input.c	/^	int (*ungetch)(snd_input_t *input, int c);$/;"	m	struct:_snd_input_ops	file:
unlink	./src/pcm/pcm_local.h	/^	int (*unlink)(snd_pcm_t *pcm);$/;"	m	struct:__anon138
unset_object	./src/alisp/alisp.c	/^static struct alisp_object * unset_object(struct alisp_instance *instance, struct alisp_object * name)$/;"	f	file:
unsubscribe_port	./src/seq/seq_local.h	/^	int (*unsubscribe_port)(snd_seq_t *seq, snd_seq_port_subscribe_t * sub);$/;"	m	struct:__anon97
unused	./include/seq_event.h	/^	unsigned char unused[3];		\/**< reserved *\/$/;"	m	struct:snd_seq_ev_queue_control
unused	./include/seq_event.h	/^	unsigned char unused[3];	\/**< reserved *\/$/;"	m	struct:snd_seq_ev_ctrl
unused1	./include/sound/asequencer.h	/^	unsigned char unused1, unused2, unused3;	\/* pad *\/$/;"	m	struct:sndrv_seq_ev_ctrl
unused2	./include/sound/asequencer.h	/^	unsigned char unused1, unused2, unused3;	\/* pad *\/$/;"	m	struct:sndrv_seq_ev_ctrl
unused3	./include/sound/asequencer.h	/^	unsigned char unused1, unused2, unused3;	\/* pad *\/$/;"	m	struct:sndrv_seq_ev_ctrl
update	./include/pcm.h	/^	void (*update)(snd_pcm_scope_t *scope);$/;"	m	struct:_snd_pcm_scope_ops
update_mutex	./src/pcm/pcm_meter.c	/^	pthread_mutex_t update_mutex;$/;"	m	struct:_snd_pcm_meter	file:
update_ranges	./modules/mixer/simple/sbase.c	/^static void update_ranges(struct selem_base *s)$/;"	f	file:
update_tstamp	./src/pcm/pcm_direct.h	/^	snd_htimestamp_t update_tstamp;$/;"	m	struct:snd_pcm_direct
upperbyte	./test/midifile.c	59;"	d	file:
upperbyte	./test/midifile.h	131;"	d
usage	./alsalisp/alsalisp.c	/^static void usage(void)$/;"	f	file:
usage	./aserver/aserver.c	/^static void usage(void)$/;"	f	file:
usage	./test/midiloop.c	/^static void usage(void)$/;"	f	file:
usage	./test/playmidi1.c	/^static void usage(void)$/;"	f	file:
usage	./test/rawmidi.c	/^static void usage(void)$/;"	f	file:
use_blocking_mode	./test/playmidi1.c	/^static int use_blocking_mode = 1;$/;"	v	file:
use_case_device	./src/ucm/ucm_local.h	/^struct use_case_device {$/;"	s
use_case_modifier	./src/ucm/ucm_local.h	/^struct use_case_modifier {$/;"	s
use_case_verb	./src/ucm/ucm_local.h	/^struct use_case_verb {$/;"	s
use_default_symbol_version	./include/alsa-symbols.h	49;"	d
use_default_symbol_version	./include/alsa-symbols.h	54;"	d
use_default_symbol_version	./include/alsa-symbols.h	61;"	d
use_default_symbol_version	./include/alsa-symbols.h	65;"	d
use_getput	./src/pcm/pcm_linear.c	/^	unsigned int use_getput;$/;"	m	struct:__anon105	file:
use_getput	./src/pcm/pcm_route.c	/^	int use_getput;$/;"	m	struct:__anon141	file:
use_mmap	./include/aserver.h	/^			char use_mmap;$/;"	m	struct:__anon53::__anon54::__anon63
use_mmap	./include/aserver.h	/^	int use_mmap;$/;"	m	struct:__anon52
use_old_hw_params_ioctl	./src/pcm/pcm_hw.c	/^static int use_old_hw_params_ioctl(int fd, unsigned int cmd, snd_pcm_hw_params_t *params)$/;"	f	file:
use_poll	./test/latency.c	/^int use_poll = 0;$/;"	v
use_realtime	./test/playmidi1.c	/^static int use_realtime = 0;$/;"	v	file:
use_server	./src/pcm/pcm_direct.h	/^	int use_server;$/;"	m	struct:__anon123
use_symbol_version	./include/alsa-symbols.h	47;"	d
use_symbol_version	./include/alsa-symbols.h	52;"	d
used	./include/sound/asequencer.h	/^	int used;		\/* queue is used with this client$/;"	m	struct:sndrv_seq_queue_client
used	./include/sound/asound.h	/^	unsigned int used;		\/* R: count of element IDs set *\/$/;"	m	struct:sndrv_ctl_elem_list
used	./src/compat/hsearch_r.c	/^  unsigned int used;$/;"	m	struct:_ENTRY	file:
used_objs	./src/alisp/alisp_local.h	/^	long used_objs;$/;"	m	struct:alisp_instance
used_objs_list	./src/alisp/alisp_local.h	/^	struct list_head used_objs_list[ALISP_OBJ_PAIR_HASH_SIZE][ALISP_OBJ_LAST_SEARCH + 1];$/;"	m	struct:alisp_instance	typeref:struct:alisp_instance::list_head
val	./include/sound/asound.h	/^	unsigned int val;$/;"	m	struct:sndrv_timer_tread
val	./include/timer.h	/^	unsigned int val;		\/**< Event value *\/$/;"	m	struct:_snd_timer_tread
val	./src/control/setup.c	/^	snd_ctl_elem_value_t *val;$/;"	m	struct:__anon96	file:
val	./src/pcm/pcm_direct.c	/^	int              val;    \/* Value for SETVAL *\/$/;"	m	union:semun	file:
val_compar	./src/pcm/pcm_extplug.c	/^static int val_compar(const void *ap, const void *bp)$/;"	f	file:
val_seg	./src/pcm/pcm_alaw.c	/^static inline int val_seg(int val)$/;"	f	file:
val_seg	./src/pcm/pcm_mulaw.c	/^static inline int val_seg(int val)$/;"	f	file:
val_t	./src/pcm/pcm_softvol.c	/^} val_t;$/;"	t	typeref:union:__anon110	file:
value	./include/seq_event.h	/^		signed int value;		\/**< affected value (e.g. tempo) *\/$/;"	m	union:snd_seq_ev_queue_control::__anon45
value	./include/seq_event.h	/^	signed int value;		\/**< control value *\/$/;"	m	struct:snd_seq_ev_ctrl
value	./include/seq_event.h	/^	unsigned int value;	\/**< skew value *\/$/;"	m	struct:snd_seq_queue_skew
value	./include/sound/asequencer.h	/^		signed int value;		\/* affected value (e.g. tempo) *\/$/;"	m	union:sndrv_seq_ev_queue_control::__anon10
value	./include/sound/asequencer.h	/^	signed int value;$/;"	m	struct:sndrv_seq_ev_ctrl
value	./include/sound/asequencer.h	/^	unsigned int value;$/;"	m	struct:sndrv_seq_queue_skew
value	./include/sound/asequencer.h	/^	unsigned short value;		\/* optional data *\/$/;"	m	struct:sndrv_seq_ev_quote
value	./include/sound/asound.h	/^			long long value[64];$/;"	m	union:sndrv_ctl_elem_value::__anon34::__anon36
value	./include/sound/asound.h	/^			long value[128];$/;"	m	union:sndrv_ctl_elem_value::__anon34::__anon35
value	./include/sound/asound.h	/^	} value;$/;"	m	struct:sndrv_ctl_elem_info	typeref:union:sndrv_ctl_elem_info::__anon29
value	./include/sound/asound.h	/^        } value;                \/* RO *\/$/;"	m	struct:sndrv_ctl_elem_value	typeref:union:sndrv_ctl_elem_value::__anon34
value	./include/sound/emu10k1.h	/^	unsigned int value[32];		\/* initial values *\/$/;"	m	struct:__anon17
value	./src/alisp/alisp_local.h	/^	} value;$/;"	m	struct:alisp_object	typeref:union:alisp_object::__anon92
value	./src/alisp/alisp_local.h	/^ 	struct alisp_object *value;$/;"	m	struct:alisp_object_pair	typeref:struct:alisp_object_pair::alisp_object
value	./src/ucm/main.c	/^        char *value;$/;"	m	struct:myvalue	file:
value_list	./src/ucm/ucm_local.h	/^	struct list_head value_list;$/;"	m	struct:snd_use_case_mgr	typeref:struct:snd_use_case_mgr::list_head
value_list	./src/ucm/ucm_local.h	/^	struct list_head value_list;$/;"	m	struct:use_case_device	typeref:struct:use_case_device::list_head
value_list	./src/ucm/ucm_local.h	/^	struct list_head value_list;$/;"	m	struct:use_case_modifier	typeref:struct:use_case_modifier::list_head
value_list	./src/ucm/ucm_local.h	/^	struct list_head value_list;$/;"	m	struct:use_case_verb	typeref:struct:use_case_verb::list_head
value_ptr	./include/sound/asound.h	/^			long *value_ptr;	\/* obsolete *\/$/;"	m	union:sndrv_ctl_elem_value::__anon34::__anon35
value_ptr	./include/sound/asound.h	/^			long long *value_ptr;	\/* obsolete *\/$/;"	m	union:sndrv_ctl_elem_value::__anon34::__anon36
values	./src/mixer/simple_none.c	/^	unsigned int values;$/;"	m	struct:_selem_ctl	file:
var	./src/pcm/pcm_params.c	/^	int var;$/;"	m	struct:_snd_pcm_hw_rule	file:
vcount	./include/sound/emu10k1.h	/^	unsigned int vcount;		\/* visible count *\/$/;"	m	struct:__anon17
vector	./include/sound/asound.h	/^	const struct iovec *vector;$/;"	m	struct:sndrv_xferv	typeref:struct:sndrv_xferv::iovec
velocity	./include/seq_event.h	/^	unsigned char velocity;		\/**< velocity *\/$/;"	m	struct:snd_seq_ev_note
velocity	./include/sound/asequencer.h	/^	unsigned char velocity;$/;"	m	struct:sndrv_seq_ev_note
ver	./include/mixer.h	/^	int ver;$/;"	m	struct:snd_mixer_selem_regopt
verb_list	./src/ucm/ucm_local.h	/^	struct list_head verb_list;$/;"	m	struct:snd_use_case_mgr	typeref:struct:snd_use_case_mgr::list_head
verbose	./alsalisp/alsalisp.c	/^static int verbose = 0;$/;"	v	file:
verbose	./include/alisp.h	/^	int verbose: 1,$/;"	m	struct:alisp_cfg
verbose	./src/alisp/alisp_local.h	/^	int verbose: 1,$/;"	m	struct:alisp_instance
verbose	./test/pcm.c	/^static int verbose = 0;					\/* verbose flag *\/$/;"	v	file:
verbose	./test/playmidi1.c	/^static int verbose = 0;$/;"	v	file:
verbose	./test/seq.c	/^int verbose = 0;$/;"	v
version	./include/control_external.h	/^	unsigned int version;$/;"	m	struct:snd_ctl_ext
version	./include/pcm_extplug.h	/^	unsigned int version;$/;"	m	struct:snd_pcm_extplug
version	./include/pcm_ioplug.h	/^	unsigned int version;$/;"	m	struct:snd_pcm_ioplug
version	./include/pcm_rate.h	/^	unsigned int version;$/;"	m	struct:snd_pcm_rate_ops
version	./include/sound/asound.h	/^	unsigned int version;		\/* R: driver-specific version *\/$/;"	m	struct:sndrv_hwdep_dsp_status
version	./include/sound/sb16_csp.h	/^	unsigned short version;		\/* version id: 0x10 - 0x1f *\/$/;"	m	struct:snd_sb_csp_info
version	./include/sound/sscape_ioctl.h	/^  unsigned version;$/;"	m	struct:sscape_bootblock
version	./src/pcm/pcm_hw.c	/^	int version;$/;"	m	struct:__anon107	file:
version	./src/timer/timer_local.h	/^	unsigned int version;$/;"	m	struct:_snd_timer
vib_depth	./include/sound/asound_fm.h	/^	unsigned char vib_depth;	\/* vibrato depth (1=hi) *\/$/;"	m	struct:snd_dm_fm_params
vibrato	./include/sound/asound_fm.h	/^	unsigned char vibrato;		\/* vibrato effect *\/$/;"	m	struct:snd_dm_fm_voice
voice	./include/sound/asound_fm.h	/^	unsigned char voice;		\/* FM voice (0 to 17) *\/$/;"	m	struct:snd_dm_fm_voice
voice	./include/sound/asound_fm.h	/^	unsigned char voice;	\/* 0-17 voice channel *\/$/;"	m	struct:snd_dm_fm_note
voices	./include/sound/asequencer.h	/^	unsigned int voices;		\/* number of voices to be allocated (0 = don't care) *\/$/;"	m	struct:sndrv_seq_port_subscribe
vol	./modules/mixer/simple/sbase.h	/^		long vol[MAX_CHANNEL];$/;"	m	struct:selem_base::__anon84
vol	./src/mixer/simple_none.c	/^		long vol[32];$/;"	m	struct:_selem_none::selem_str	file:
volume	./include/sound/asound_fm.h	/^	unsigned char volume;		\/* 6 bits: volume *\/$/;"	m	struct:snd_dm_fm_voice
vout	./include/alisp.h	/^	snd_output_t *vout;	\/* verbose output *\/$/;"	m	struct:alisp_cfg
vout	./src/alisp/alisp_local.h	/^	snd_output_t *vout;	\/* verbose output *\/$/;"	m	struct:alisp_instance
wait_for_event	./test/playmidi1.c	/^static snd_seq_event_t *wait_for_event(void)$/;"	f	file:
wait_for_poll	./test/pcm.c	/^static int wait_for_poll(snd_pcm_t *handle, struct pollfd *ufds, unsigned int count)$/;"	f	file:
wait_start	./test/playmidi1.c	/^static void wait_start(void)$/;"	f	file:
waiter	./aserver/aserver.c	/^struct waiter {$/;"	s	file:
waiter_handler_t	./aserver/aserver.c	/^typedef int (*waiter_handler_t)(waiter_t *waiter, unsigned short events);$/;"	t	file:
waiter_t	./aserver/aserver.c	/^typedef struct waiter waiter_t;$/;"	t	typeref:struct:waiter	file:
waiters	./aserver/aserver.c	/^waiter_t *waiters;$/;"	v
warning	./alsalisp/alsalisp.c	/^static int warning = 0;$/;"	v	file:
warning	./include/alisp.h	/^	    warning: 1,$/;"	m	struct:alisp_cfg
warning	./src/alisp/alisp_local.h	/^	    warning: 1,$/;"	m	struct:alisp_instance
watom	./src/pcm/pcm_plugin.h	/^	snd_atomic_write_t watom;$/;"	m	struct:__anon106
watom	./src/pcm/pcm_rate.c	/^	snd_atomic_write_t watom;$/;"	m	struct:_snd_pcm_rate	file:
wav_fmt	./src/pcm/pcm_file.c	/^struct wav_fmt {$/;"	s	file:
wav_header	./src/pcm/pcm_file.c	/^	struct wav_fmt wav_header;$/;"	m	struct:__anon121	typeref:struct:__anon121::wav_fmt	file:
waveform	./include/sound/asound_fm.h	/^	unsigned char waveform;		\/* 3 bits: waveform shape *\/$/;"	m	struct:snd_dm_fm_voice
wbuf	./src/pcm/pcm_file.c	/^	char *wbuf;$/;"	m	struct:__anon121	file:
wbuf_areas	./src/pcm/pcm_file.c	/^	snd_pcm_channel_area_t *wbuf_areas;$/;"	m	struct:__anon121	file:
wbuf_size	./src/pcm/pcm_file.c	/^	snd_pcm_uframes_t wbuf_size;$/;"	m	struct:__anon121	file:
wbuf_size_bytes	./src/pcm/pcm_file.c	/^	size_t wbuf_size_bytes;$/;"	m	struct:__anon121	file:
wbuf_used_bytes	./src/pcm/pcm_file.c	/^	size_t wbuf_used_bytes;$/;"	m	struct:__anon121	file:
weight	./modules/mixer/simple/sbase.h	/^	unsigned short weight;$/;"	m	struct:melem_sids
win	./src/pcm/scopes/level.c	/^	WINDOW *win;$/;"	m	struct:_snd_pcm_scope_level	file:
wmb	./include/iatomic.h	1007;"	d
wmb	./include/iatomic.h	1076;"	d
wmb	./include/iatomic.h	1099;"	d
wmb	./include/iatomic.h	1124;"	d
wmb	./include/iatomic.h	212;"	d
wmb	./include/iatomic.h	216;"	d
wmb	./include/iatomic.h	371;"	d
wmb	./include/iatomic.h	490;"	d
wmb	./include/iatomic.h	679;"	d
wmb	./include/iatomic.h	887;"	d
wordclock_sync_check	./include/sound/hdsp.h	/^	unsigned char wordclock_sync_check;$/;"	m	struct:_snd_hdsp_config_info
wordclock_sync_check	./include/sound/hdspm.h	/^	unsigned char wordclock_sync_check;$/;"	m	struct:hdspm_config
wout	./include/alisp.h	/^	snd_output_t *wout;	\/* warning output *\/$/;"	m	struct:alisp_cfg
wout	./src/alisp/alisp_local.h	/^	snd_output_t *wout;	\/* warning output *\/$/;"	m	struct:alisp_instance
write	./include/iatomic.h	/^	volatile const snd_atomic_write_t *write;$/;"	m	struct:__anon79
write	./src/hwdep/hwdep_local.h	/^	ssize_t (*write)(snd_hwdep_t *hwdep, const void *buffer, size_t size);$/;"	m	struct:__anon91
write	./src/pcm/pcm_plugin.h	/^	snd_pcm_slave_xfer_areas_func_t write;$/;"	m	struct:__anon106
write	./src/rawmidi/rawmidi_local.h	/^	ssize_t (*write)(snd_rawmidi_t *rawmidi, const void *buffer, size_t size);$/;"	m	struct:__anon99
write	./src/seq/seq_local.h	/^	ssize_t (*write)(snd_seq_t *seq, void *buf, size_t len);$/;"	m	struct:__anon97
write16bit	./test/midifile.c	/^write16bit (data)$/;"	f
write32bit	./test/midifile.c	/^write32bit (data)$/;"	f
write_and_poll_loop	./test/pcm.c	/^static int write_and_poll_loop(snd_pcm_t *handle,$/;"	f	file:
write_bytes	./include/control_external.h	/^	int (*write_bytes)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, unsigned char *data,$/;"	m	struct:snd_ctl_ext_callback
write_enumerated	./include/control_external.h	/^	int (*write_enumerated)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, unsigned int *items);$/;"	m	struct:snd_ctl_ext_callback
write_ev	./test/playmidi1.c	/^static void write_ev(snd_seq_event_t *ev)$/;"	f	file:
write_iec958	./include/control_external.h	/^	int (*write_iec958)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, snd_aes_iec958_t *iec958);$/;"	m	struct:snd_ctl_ext_callback
write_integer	./include/control_external.h	/^	int (*write_integer)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, long *value);$/;"	m	struct:snd_ctl_ext_callback
write_integer64	./include/control_external.h	/^	int (*write_integer64)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, int64_t *value);$/;"	m	struct:snd_ctl_ext_callback
write_loop	./test/pcm.c	/^static int write_loop(snd_pcm_t *handle,$/;"	f	file:
write_use	./include/sound/asequencer.h	/^	int write_use;			\/* R\/O: subscribers for input (to this port) *\/$/;"	m	struct:sndrv_seq_port_info
write_wav_header	./src/pcm/pcm_file.c	/^static int write_wav_header(snd_pcm_t *pcm)$/;"	f	file:
writebuf	./test/latency.c	/^long writebuf(snd_pcm_t *handle, char *buf, long len, size_t *frames)$/;"	f
writei	./src/pcm/pcm_local.h	/^	snd_pcm_sframes_t (*writei)(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size);$/;"	m	struct:__anon138
writen	./src/pcm/pcm_local.h	/^	snd_pcm_sframes_t (*writen)(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size);$/;"	m	struct:__anon138
writepattern	./test/midiloop.c	/^int writepattern(snd_rawmidi_t *handle_out, unsigned char *obuf)$/;"	f
x	./test/latency.c	/^float lfo,dlfo,fs,fc,BW,C,D,a0,a1,a2,b1,b2,*x[3],*y[3];$/;"	v
x86_64_dmix_supported_format	./src/pcm/pcm_dmix_x86_64.c	61;"	d	file:
xfer_align	./include/sound/asound.h	/^	sndrv_pcm_uframes_t xfer_align;		\/* xfer size need to be a multiple *\/$/;"	m	struct:sndrv_pcm_sw_params
xfer_align	./src/pcm/pcm_direct.h	/^		unsigned int xfer_align; \/* not used *\/$/;"	m	struct:__anon123::__anon125
xfunc	./src/alisp/alisp_snd.c	/^	void * xfunc;$/;"	m	struct:acall_table	file:
xgetc	./src/alisp/alisp.c	/^static int xgetc(struct alisp_instance *instance)$/;"	f	file:
xlr_breakout_cable	./include/sound/hdsp.h	/^	unsigned char xlr_breakout_cable;$/;"	m	struct:_snd_hdsp_config_info
xrun_recovery	./test/pcm.c	/^static int xrun_recovery(snd_pcm_t *handle, int err)$/;"	f	file:
xruns	./include/sound/asound.h	/^	size_t xruns;			\/* count of overruns since last status (in bytes) *\/$/;"	m	struct:sndrv_rawmidi_status
xungetc	./src/alisp/alisp.c	/^static inline void xungetc(struct alisp_instance *instance, int c)$/;"	f	file:
y	./test/latency.c	/^float lfo,dlfo,fs,fc,BW,C,D,a0,a1,a2,b1,b2,*x[3],*y[3];$/;"	v
zero	./src/pcm/pcm_ladspa.c	/^	LADSPA_Data *zero[2];			\/* zero input or dummy output *\/$/;"	m	struct:__anon113	file:
zero_dB_val	./src/pcm/pcm_softvol.c	/^	unsigned int zero_dB_val; \/* index at 0 dB *\/$/;"	m	struct:__anon109	file:
zero_handler	./src/control/namehint.c	/^static void zero_handler(const char *file ATTRIBUTE_UNUSED,$/;"	f	file:
